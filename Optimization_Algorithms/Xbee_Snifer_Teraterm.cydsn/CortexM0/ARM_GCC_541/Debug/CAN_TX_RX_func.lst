ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CAN_TX_RX_func.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CAN_SendMsg,"ax",%progbits
  20              		.align	2
  21              		.global	CAN_SendMsg
  22              		.code	16
  23              		.thumb_func
  24              		.type	CAN_SendMsg, %function
  25              	CAN_SendMsg:
  26              	.LFB1:
  27              		.file 1 "CAN_TX_RX_func.c"
   1:CAN_TX_RX_func.c **** /*******************************************************************************
   2:CAN_TX_RX_func.c **** * File Name: CAN_TX_RX_func.c
   3:CAN_TX_RX_func.c **** * Version 3.0
   4:CAN_TX_RX_func.c **** *
   5:CAN_TX_RX_func.c **** * Description:
   6:CAN_TX_RX_func.c **** *  There are functions process "Full" Receive and Transmit mailboxes:
   7:CAN_TX_RX_func.c **** *     - CAN_SendMsg0-7();
   8:CAN_TX_RX_func.c **** *     - CAN_ReceiveMsg0-15();
   9:CAN_TX_RX_func.c **** *  Transmission of message, and receive routine for "Basic" mailboxes:
  10:CAN_TX_RX_func.c **** *     - CAN_SendMsg();
  11:CAN_TX_RX_func.c **** *     - CAN_TxCancel();
  12:CAN_TX_RX_func.c **** *     - CAN_ReceiveMsg();
  13:CAN_TX_RX_func.c **** *
  14:CAN_TX_RX_func.c **** *  Note:
  15:CAN_TX_RX_func.c **** *   None
  16:CAN_TX_RX_func.c **** *
  17:CAN_TX_RX_func.c **** ********************************************************************************
  18:CAN_TX_RX_func.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  19:CAN_TX_RX_func.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:CAN_TX_RX_func.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:CAN_TX_RX_func.c **** * the software package with which this file was provided.
  22:CAN_TX_RX_func.c **** *******************************************************************************/
  23:CAN_TX_RX_func.c **** 
  24:CAN_TX_RX_func.c **** #include "CAN.h"
  25:CAN_TX_RX_func.c **** #include "cyapicallbacks.h"
  26:CAN_TX_RX_func.c **** 
  27:CAN_TX_RX_func.c **** /* `#START TX_RX_FUNCTION` */
  28:CAN_TX_RX_func.c **** extern uint8 dato_enviado[8];
  29:CAN_TX_RX_func.c **** extern uint8 dato_enviado_1[8];
  30:CAN_TX_RX_func.c **** extern uint8 mailbox0[8];
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 2


  31:CAN_TX_RX_func.c **** extern uint8 mailbox1[8];
  32:CAN_TX_RX_func.c **** extern uint8 mailbox2[8];
  33:CAN_TX_RX_func.c **** extern uint8 mailbox3[8];
  34:CAN_TX_RX_func.c **** extern uint8 mailbox4[8];
  35:CAN_TX_RX_func.c **** /* `#END` */
  36:CAN_TX_RX_func.c **** 
  37:CAN_TX_RX_func.c **** 
  38:CAN_TX_RX_func.c **** /*******************************************************************************
  39:CAN_TX_RX_func.c **** * FUNCTION NAME:   CAN_SendMsg
  40:CAN_TX_RX_func.c **** ********************************************************************************
  41:CAN_TX_RX_func.c **** *
  42:CAN_TX_RX_func.c **** * Summary:
  43:CAN_TX_RX_func.c **** *  This function is Send Message from one of Basic mailboxes. The function loops
  44:CAN_TX_RX_func.c **** *  through the transmit message buffer designed as Basic CAN mailboxes for the
  45:CAN_TX_RX_func.c **** *  first free available and sends from it. The number of retries is limited.
  46:CAN_TX_RX_func.c **** *
  47:CAN_TX_RX_func.c **** * Parameters:
  48:CAN_TX_RX_func.c **** *  message: The pointer to a structure that contains all required data to send
  49:CAN_TX_RX_func.c **** *           messages.
  50:CAN_TX_RX_func.c **** *
  51:CAN_TX_RX_func.c **** * Return:
  52:CAN_TX_RX_func.c **** *  Indication if message has been sent.
  53:CAN_TX_RX_func.c **** *   Define                             Description
  54:CAN_TX_RX_func.c **** *    CYRET_SUCCESS                      The function passed successfully
  55:CAN_TX_RX_func.c **** *    CAN_FAIL              The function failed
  56:CAN_TX_RX_func.c **** *
  57:CAN_TX_RX_func.c **** *******************************************************************************/
  58:CAN_TX_RX_func.c **** uint8 CAN_SendMsg(const CAN_TX_MSG *message) 
  59:CAN_TX_RX_func.c **** {
  28              		.loc 1 59 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  34              		.cfi_def_cfa_offset 24
  35              		.cfi_offset 3, -24
  36              		.cfi_offset 4, -20
  37              		.cfi_offset 5, -16
  38              		.cfi_offset 6, -12
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 4F46     		mov	r7, r9
  42 0004 4646     		mov	r6, r8
  43 0006 C0B4     		push	{r6, r7}
  44              		.cfi_def_cfa_offset 32
  45              		.cfi_offset 8, -32
  46              		.cfi_offset 9, -28
  47 0008 0600     		movs	r6, r0
  48              	.LVL1:
  60:CAN_TX_RX_func.c ****     uint8 i, j, shift;
  61:CAN_TX_RX_func.c ****     uint8 retry = 0u;
  62:CAN_TX_RX_func.c ****     uint8 result = CAN_FAIL;
  49              		.loc 1 62 0
  50 000a 0120     		movs	r0, #1
  51              	.LVL2:
  61:CAN_TX_RX_func.c ****     uint8 result = CAN_FAIL;
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 3


  52              		.loc 1 61 0
  53 000c 0023     		movs	r3, #0
  54 000e 9846     		mov	r8, r3
  63:CAN_TX_RX_func.c ****     uint32 regTemp;
  64:CAN_TX_RX_func.c **** 
  65:CAN_TX_RX_func.c ****     while (retry < CAN_RETRY_NUMBER)
  55              		.loc 1 65 0
  56 0010 93E0     		b	.L2
  57              	.LVL3:
  58              	.L18:
  66:CAN_TX_RX_func.c ****     {
  67:CAN_TX_RX_func.c ****         shift = 1u;    /* Start from first mailbox */
  68:CAN_TX_RX_func.c ****         for (i = 0u; i < CAN_NUMBER_OF_TX_MAILBOXES; i++)
  69:CAN_TX_RX_func.c ****         {
  70:CAN_TX_RX_func.c ****             /* Find Basic TX mailboxes */
  71:CAN_TX_RX_func.c ****             if ((CAN_TX_MAILBOX_TYPE & shift) == 0u)
  59              		.loc 1 71 0
  60 0012 AB07     		lsls	r3, r5, #30
  61 0014 7FD1     		bne	.L3
  72:CAN_TX_RX_func.c ****             {
  73:CAN_TX_RX_func.c ****                 /* Find free mailbox */
  74:CAN_TX_RX_func.c ****                 #if (CY_PSOC3 || CY_PSOC5)
  75:CAN_TX_RX_func.c ****                     if ((CAN_BUF_SR_REG.byte[2] & shift) == 0u)
  76:CAN_TX_RX_func.c ****                 #else  /* CY_PSOC4 */
  77:CAN_TX_RX_func.c ****                     if ((CAN_BUF_SR_REG &
  62              		.loc 1 77 0
  63 0016 4C4B     		ldr	r3, .L23
  64 0018 1B68     		ldr	r3, [r3]
  78:CAN_TX_RX_func.c ****                         (uint32) ((uint32) shift << CAN_TWO_BYTE_OFFSET)) == 0u)
  65              		.loc 1 78 0
  66 001a 2A04     		lsls	r2, r5, #16
  77:CAN_TX_RX_func.c ****                         (uint32) ((uint32) shift << CAN_TWO_BYTE_OFFSET)) == 0u)
  67              		.loc 1 77 0
  68 001c 1A42     		tst	r2, r3
  69 001e 7AD1     		bne	.L3
  70              	.LVL4:
  79:CAN_TX_RX_func.c ****                 #endif /* CY_PSOC3 || CY_PSOC5 */
  80:CAN_TX_RX_func.c ****                     {
  81:CAN_TX_RX_func.c ****                         regTemp = 0u;
  82:CAN_TX_RX_func.c **** 
  83:CAN_TX_RX_func.c ****                         /* Set message parameters */
  84:CAN_TX_RX_func.c ****                         if (message->rtr != CAN_STANDARD_MESSAGE)
  71              		.loc 1 84 0
  72 0020 3379     		ldrb	r3, [r6, #4]
  73 0022 002B     		cmp	r3, #0
  74 0024 01D1     		bne	.L21
  81:CAN_TX_RX_func.c **** 
  75              		.loc 1 81 0
  76 0026 0027     		movs	r7, #0
  77 0028 01E0     		b	.L4
  78              	.L21:
  85:CAN_TX_RX_func.c ****                         {
  86:CAN_TX_RX_func.c ****                             regTemp = CAN_TX_RTR_MASK;    /* RTR message Enable */
  79              		.loc 1 86 0
  80 002a 8027     		movs	r7, #128
  81 002c BF03     		lsls	r7, r7, #14
  82              	.L4:
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 4


  83              	.LVL5:
  87:CAN_TX_RX_func.c ****                         }
  88:CAN_TX_RX_func.c **** 
  89:CAN_TX_RX_func.c ****                         if (message->ide == CAN_STANDARD_MESSAGE)
  84              		.loc 1 89 0
  85 002e 7379     		ldrb	r3, [r6, #5]
  86 0030 002B     		cmp	r3, #0
  87 0032 07D1     		bne	.L5
  90:CAN_TX_RX_func.c ****                         {
  91:CAN_TX_RX_func.c ****                             CAN_SET_TX_ID_STANDARD_MSG(i, message->id);
  88              		.loc 1 91 0
  89 0034 2301     		lsls	r3, r4, #4
  90 0036 454A     		ldr	r2, .L23+4
  91 0038 9446     		mov	ip, r2
  92 003a 6344     		add	r3, r3, ip
  93 003c 3268     		ldr	r2, [r6]
  94 003e 5205     		lsls	r2, r2, #21
  95 0040 5A60     		str	r2, [r3, #4]
  96 0042 09E0     		b	.L6
  97              	.L5:
  92:CAN_TX_RX_func.c ****                         }
  93:CAN_TX_RX_func.c ****                         else
  94:CAN_TX_RX_func.c ****                         {
  95:CAN_TX_RX_func.c ****                             regTemp |= CAN_TX_IDE_MASK;
  98              		.loc 1 95 0
  99 0044 8023     		movs	r3, #128
 100 0046 5B03     		lsls	r3, r3, #13
 101 0048 1F43     		orrs	r7, r3
 102              	.LVL6:
  96:CAN_TX_RX_func.c ****                             CAN_SET_TX_ID_EXTENDED_MSG(i, message->id);
 103              		.loc 1 96 0
 104 004a 2301     		lsls	r3, r4, #4
 105 004c 3F4A     		ldr	r2, .L23+4
 106 004e 9446     		mov	ip, r2
 107 0050 6344     		add	r3, r3, ip
 108 0052 3268     		ldr	r2, [r6]
 109 0054 D200     		lsls	r2, r2, #3
 110 0056 5A60     		str	r2, [r3, #4]
 111              	.L6:
  97:CAN_TX_RX_func.c ****                         }
  98:CAN_TX_RX_func.c **** 
  99:CAN_TX_RX_func.c ****                         if (message->dlc < CAN_TX_DLC_MAX_VALUE)
 112              		.loc 1 99 0
 113 0058 B379     		ldrb	r3, [r6, #6]
 114 005a 072B     		cmp	r3, #7
 115 005c 03D8     		bhi	.L7
 100:CAN_TX_RX_func.c ****                         {
 101:CAN_TX_RX_func.c ****                             regTemp |= ((uint32) message->dlc) << CAN_TWO_BYTE_OFFSET;
 116              		.loc 1 101 0
 117 005e 1B04     		lsls	r3, r3, #16
 118 0060 1F43     		orrs	r7, r3
 119              	.LVL7:
 120 0062 B946     		mov	r9, r7
 121              	.LVL8:
 122 0064 03E0     		b	.L8
 123              	.L7:
 102:CAN_TX_RX_func.c ****                         }
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 5


 103:CAN_TX_RX_func.c ****                         else
 104:CAN_TX_RX_func.c ****                         {
 105:CAN_TX_RX_func.c ****                             regTemp |= CAN_TX_DLC_UPPER_VALUE;
 124              		.loc 1 105 0
 125 0066 8023     		movs	r3, #128
 126 0068 1B03     		lsls	r3, r3, #12
 127 006a 1F43     		orrs	r7, r3
 128              	.LVL9:
 129 006c B946     		mov	r9, r7
 130              	.LVL10:
 131              	.L8:
 106:CAN_TX_RX_func.c ****                         }
 107:CAN_TX_RX_func.c **** 
 108:CAN_TX_RX_func.c ****                         if (message->irq != CAN_TRANSMIT_INT_DISABLE)
 132              		.loc 1 108 0
 133 006e F379     		ldrb	r3, [r6, #7]
 134 0070 002B     		cmp	r3, #0
 135 0072 03D0     		beq	.L9
 109:CAN_TX_RX_func.c ****                         {
 110:CAN_TX_RX_func.c ****                             regTemp |= CAN_TX_INT_ENABLE_MASK;    /* Transmit Interrupt Enable */
 136              		.loc 1 110 0
 137 0074 0423     		movs	r3, #4
 138 0076 4A46     		mov	r2, r9
 139 0078 1A43     		orrs	r2, r3
 140 007a 9146     		mov	r9, r2
 141              	.LVL11:
 142              	.L9:
 111:CAN_TX_RX_func.c ****                         }
 112:CAN_TX_RX_func.c **** 
 113:CAN_TX_RX_func.c ****                         for (j = 0u; (j < message->dlc) && (j < CAN_TX_DLC_MAX_VALUE); j++)
 143              		.loc 1 113 0
 144 007c 0023     		movs	r3, #0
 145 007e 2AE0     		b	.L10
 146              	.LVL12:
 147              	.L14:
 114:CAN_TX_RX_func.c ****                         {
 115:CAN_TX_RX_func.c ****                             #if (CY_PSOC3 || CY_PSOC5)
 116:CAN_TX_RX_func.c ****                                 CAN_TX_DATA_BYTE(i, j) = message->msg->byte[j];
 117:CAN_TX_RX_func.c ****                             #else /* CY_PSOC4 */
 118:CAN_TX_RX_func.c ****                                 CAN_TX_DATA_BYTE(i, j, message->msg->byte[j]);
 148              		.loc 1 118 0
 149 0080 032B     		cmp	r3, #3
 150 0082 13D9     		bls	.L11
 151              		.loc 1 118 0 is_stmt 0 discriminator 1
 152 0084 2001     		lsls	r0, r4, #4
 153 0086 324A     		ldr	r2, .L23+8
 154 0088 9446     		mov	ip, r2
 155 008a 6044     		add	r0, r0, ip
 156 008c 0268     		ldr	r2, [r0]
 157 008e 9446     		mov	ip, r2
 158 0090 5907     		lsls	r1, r3, #29
 159 0092 CA1A     		subs	r2, r1, r3
 160 0094 D100     		lsls	r1, r2, #3
 161 0096 3831     		adds	r1, r1, #56
 162 0098 FF22     		movs	r2, #255
 163 009a 8A40     		lsls	r2, r2, r1
 164 009c 6746     		mov	r7, ip
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 6


 165 009e 9743     		bics	r7, r2
 166 00a0 F268     		ldr	r2, [r6, #12]
 167 00a2 D25C     		ldrb	r2, [r2, r3]
 168 00a4 8A40     		lsls	r2, r2, r1
 169 00a6 3A43     		orrs	r2, r7
 170 00a8 0260     		str	r2, [r0]
 171 00aa 12E0     		b	.L12
 172              	.L11:
 173              		.loc 1 118 0 discriminator 2
 174 00ac 2001     		lsls	r0, r4, #4
 175 00ae 274A     		ldr	r2, .L23+4
 176 00b0 9446     		mov	ip, r2
 177 00b2 6044     		add	r0, r0, ip
 178 00b4 8268     		ldr	r2, [r0, #8]
 179 00b6 9446     		mov	ip, r2
 180 00b8 5907     		lsls	r1, r3, #29
 181 00ba CA1A     		subs	r2, r1, r3
 182 00bc D100     		lsls	r1, r2, #3
 183 00be 1831     		adds	r1, r1, #24
 184 00c0 FF22     		movs	r2, #255
 185 00c2 8A40     		lsls	r2, r2, r1
 186 00c4 6746     		mov	r7, ip
 187 00c6 9743     		bics	r7, r2
 188 00c8 F268     		ldr	r2, [r6, #12]
 189 00ca D25C     		ldrb	r2, [r2, r3]
 190 00cc 8A40     		lsls	r2, r2, r1
 191 00ce 3A43     		orrs	r2, r7
 192 00d0 8260     		str	r2, [r0, #8]
 193              	.L12:
 113:CAN_TX_RX_func.c ****                         {
 194              		.loc 1 113 0 is_stmt 1 discriminator 2
 195 00d2 0133     		adds	r3, r3, #1
 196              	.LVL13:
 197 00d4 DBB2     		uxtb	r3, r3
 198              	.LVL14:
 199              	.L10:
 113:CAN_TX_RX_func.c ****                         {
 200              		.loc 1 113 0 is_stmt 0 discriminator 1
 201 00d6 B279     		ldrb	r2, [r6, #6]
 202 00d8 9342     		cmp	r3, r2
 203 00da 01D2     		bcs	.L13
 113:CAN_TX_RX_func.c ****                         {
 204              		.loc 1 113 0 discriminator 3
 205 00dc 072B     		cmp	r3, #7
 206 00de CFD9     		bls	.L14
 207              	.L13:
 119:CAN_TX_RX_func.c ****                             #endif /* CY_PSOC3 || CY_PSOC5 */
 120:CAN_TX_RX_func.c ****                         }
 121:CAN_TX_RX_func.c **** 
 122:CAN_TX_RX_func.c ****                         /* Disable isr */
 123:CAN_TX_RX_func.c ****     CyIntDisable(CAN_ISR_NUMBER);
 208              		.loc 1 123 0 is_stmt 1
 209 00e0 1B20     		movs	r0, #27
 210 00e2 FFF7FEFF 		bl	CyIntDisable
 211              	.LVL15:
 124:CAN_TX_RX_func.c **** 
 125:CAN_TX_RX_func.c ****                         /* WPN[23] and WPN[3] set to 1 for write to CAN Control reg */
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 7


 126:CAN_TX_RX_func.c ****                         CY_SET_REG32(CAN_TX_CMD_PTR(i), (regTemp | CAN_TX_WPN_SET));
 212              		.loc 1 126 0
 213 00e6 2301     		lsls	r3, r4, #4
 214 00e8 184A     		ldr	r2, .L23+4
 215 00ea 9446     		mov	ip, r2
 216 00ec 6344     		add	r3, r3, ip
 217 00ee 194A     		ldr	r2, .L23+12
 218 00f0 4F46     		mov	r7, r9
 219 00f2 1743     		orrs	r7, r2
 220 00f4 1F60     		str	r7, [r3]
 127:CAN_TX_RX_func.c **** 
 128:CAN_TX_RX_func.c ****                         #if (CY_PSOC3 || CY_PSOC5)
 129:CAN_TX_RX_func.c ****                             CY_SET_REG32(CAN_TX_CMD_PTR(i), CAN_SEND_MESSAGE);
 130:CAN_TX_RX_func.c ****                         #else /* CY_PSOC4 */
 131:CAN_TX_RX_func.c ****                             if (message->sst != CAN_STANDARD_MESSAGE)
 221              		.loc 1 131 0
 222 00f6 327A     		ldrb	r2, [r6, #8]
 223 00f8 002A     		cmp	r2, #0
 224 00fa 04D0     		beq	.L15
 132:CAN_TX_RX_func.c ****                             {
 133:CAN_TX_RX_func.c ****                                 /* Single Shot Transmission */
 134:CAN_TX_RX_func.c ****                                 CAN_TX_CMD_REG(i) |= CAN_SEND_MESSAGE |
 225              		.loc 1 134 0
 226 00fc 1968     		ldr	r1, [r3]
 227 00fe 0322     		movs	r2, #3
 228 0100 0A43     		orrs	r2, r1
 229 0102 1A60     		str	r2, [r3]
 230 0104 03E0     		b	.L16
 231              	.L15:
 135:CAN_TX_RX_func.c ****                                 CAN_TX_ABORT_MASK;
 136:CAN_TX_RX_func.c ****                             }
 137:CAN_TX_RX_func.c ****                             else
 138:CAN_TX_RX_func.c ****                             {
 139:CAN_TX_RX_func.c ****                                 CAN_TX_CMD_REG(i) |= CAN_SEND_MESSAGE;
 232              		.loc 1 139 0
 233 0106 1968     		ldr	r1, [r3]
 234 0108 0122     		movs	r2, #1
 235 010a 0A43     		orrs	r2, r1
 236 010c 1A60     		str	r2, [r3]
 237              	.L16:
 140:CAN_TX_RX_func.c ****                             }
 141:CAN_TX_RX_func.c ****                         #endif /* CY_PSOC3 || CY_PSOC5 */
 142:CAN_TX_RX_func.c **** 
 143:CAN_TX_RX_func.c ****                         /* Enable isr */
 144:CAN_TX_RX_func.c ****     CyIntEnable(CAN_ISR_NUMBER);
 238              		.loc 1 144 0
 239 010e 1B20     		movs	r0, #27
 240 0110 FFF7FEFF 		bl	CyIntEnable
 241              	.LVL16:
 145:CAN_TX_RX_func.c **** 
 146:CAN_TX_RX_func.c ****                         result = CYRET_SUCCESS;
 242              		.loc 1 146 0
 243 0114 0020     		movs	r0, #0
 244              	.LVL17:
 245              	.L3:
 147:CAN_TX_RX_func.c ****                     }
 148:CAN_TX_RX_func.c ****             }
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 8


 149:CAN_TX_RX_func.c ****             shift <<= 1u;
 246              		.loc 1 149 0
 247 0116 6D00     		lsls	r5, r5, #1
 248              	.LVL18:
 249 0118 EDB2     		uxtb	r5, r5
 250              	.LVL19:
 150:CAN_TX_RX_func.c ****             if (result == CYRET_SUCCESS)
 251              		.loc 1 150 0
 252 011a 0028     		cmp	r0, #0
 253 011c 07D0     		beq	.L17
  68:CAN_TX_RX_func.c ****         {
 254              		.loc 1 68 0 discriminator 2
 255 011e 0134     		adds	r4, r4, #1
 256              	.LVL20:
 257 0120 E4B2     		uxtb	r4, r4
 258              	.LVL21:
 259 0122 01E0     		b	.L20
 260              	.LVL22:
 261              	.L22:
 262 0124 0125     		movs	r5, #1
 263 0126 0024     		movs	r4, #0
 264              	.L20:
 265              	.LVL23:
  68:CAN_TX_RX_func.c ****         {
 266              		.loc 1 68 0 is_stmt 0 discriminator 1
 267 0128 072C     		cmp	r4, #7
 268 012a 00D8     		bhi	.LCB273
 269 012c 71E7     		b	.L18	@long jump
 270              	.LCB273:
 271              	.L17:
 151:CAN_TX_RX_func.c ****             {
 152:CAN_TX_RX_func.c ****                 break;
 153:CAN_TX_RX_func.c ****             }
 154:CAN_TX_RX_func.c ****         }
 155:CAN_TX_RX_func.c ****         if (result == CYRET_SUCCESS)
 272              		.loc 1 155 0 is_stmt 1
 273 012e 0028     		cmp	r0, #0
 274 0130 06D0     		beq	.L19
 156:CAN_TX_RX_func.c ****         {
 157:CAN_TX_RX_func.c ****             break;
 158:CAN_TX_RX_func.c ****         }
 159:CAN_TX_RX_func.c ****         else
 160:CAN_TX_RX_func.c ****         {
 161:CAN_TX_RX_func.c ****             retry++;
 275              		.loc 1 161 0
 276 0132 4346     		mov	r3, r8
 277 0134 0133     		adds	r3, r3, #1
 278 0136 DBB2     		uxtb	r3, r3
 279 0138 9846     		mov	r8, r3
 280              	.LVL24:
 281              	.L2:
  65:CAN_TX_RX_func.c ****     {
 282              		.loc 1 65 0
 283 013a 4346     		mov	r3, r8
 284 013c 022B     		cmp	r3, #2
 285 013e F1D9     		bls	.L22
 286              	.L19:
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 9


 162:CAN_TX_RX_func.c ****         }
 163:CAN_TX_RX_func.c ****     }
 164:CAN_TX_RX_func.c **** 
 165:CAN_TX_RX_func.c ****     return (result);
 166:CAN_TX_RX_func.c **** }
 287              		.loc 1 166 0
 288              		@ sp needed
 289              	.LVL25:
 290              	.LVL26:
 291 0140 0CBC     		pop	{r2, r3}
 292 0142 9046     		mov	r8, r2
 293 0144 9946     		mov	r9, r3
 294 0146 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 295              	.L24:
 296              		.align	2
 297              	.L23:
 298 0148 08002E40 		.word	1076756488
 299 014c 20002E40 		.word	1076756512
 300 0150 2C002E40 		.word	1076756524
 301 0154 08008000 		.word	8388616
 302              		.cfi_endproc
 303              	.LFE1:
 304              		.size	CAN_SendMsg, .-CAN_SendMsg
 305              		.section	.text.CAN_TxCancel,"ax",%progbits
 306              		.align	2
 307              		.global	CAN_TxCancel
 308              		.code	16
 309              		.thumb_func
 310              		.type	CAN_TxCancel, %function
 311              	CAN_TxCancel:
 312              	.LFB2:
 167:CAN_TX_RX_func.c **** 
 168:CAN_TX_RX_func.c **** 
 169:CAN_TX_RX_func.c **** /*******************************************************************************
 170:CAN_TX_RX_func.c **** * FUNCTION NAME:   CAN_TxCancel
 171:CAN_TX_RX_func.c **** ********************************************************************************
 172:CAN_TX_RX_func.c **** *
 173:CAN_TX_RX_func.c **** * Summary:
 174:CAN_TX_RX_func.c **** *  This function cancels transmission of a message that has been queued to be
 175:CAN_TX_RX_func.c **** *  transmitted. Values between 0 and 7 are valid.
 176:CAN_TX_RX_func.c **** *
 177:CAN_TX_RX_func.c **** * Parameters:
 178:CAN_TX_RX_func.c **** *  bufferId: The mailbox number.
 179:CAN_TX_RX_func.c **** *
 180:CAN_TX_RX_func.c **** * Return:
 181:CAN_TX_RX_func.c **** *  None.
 182:CAN_TX_RX_func.c **** *
 183:CAN_TX_RX_func.c **** *******************************************************************************/
 184:CAN_TX_RX_func.c **** void CAN_TxCancel(uint8 bufferId) 
 185:CAN_TX_RX_func.c **** {
 313              		.loc 1 185 0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317              		@ link register save eliminated.
 318              	.LVL27:
 186:CAN_TX_RX_func.c ****     if (bufferId < CAN_NUMBER_OF_TX_MAILBOXES)
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 10


 319              		.loc 1 186 0
 320 0000 0728     		cmp	r0, #7
 321 0002 09D8     		bhi	.L25
 187:CAN_TX_RX_func.c ****     {
 188:CAN_TX_RX_func.c ****         CAN_TX_ABORT_MESSAGE(bufferId);
 322              		.loc 1 188 0
 323 0004 0001     		lsls	r0, r0, #4
 324              	.LVL28:
 325 0006 054B     		ldr	r3, .L27
 326 0008 9C46     		mov	ip, r3
 327 000a 6044     		add	r0, r0, ip
 328 000c 0368     		ldr	r3, [r0]
 329 000e 0322     		movs	r2, #3
 330 0010 9343     		bics	r3, r2
 331 0012 013A     		subs	r2, r2, #1
 332 0014 1343     		orrs	r3, r2
 333 0016 0360     		str	r3, [r0]
 334              	.L25:
 189:CAN_TX_RX_func.c ****     }
 190:CAN_TX_RX_func.c **** }
 335              		.loc 1 190 0
 336              		@ sp needed
 337 0018 7047     		bx	lr
 338              	.L28:
 339 001a C046     		.align	2
 340              	.L27:
 341 001c 20002E40 		.word	1076756512
 342              		.cfi_endproc
 343              	.LFE2:
 344              		.size	CAN_TxCancel, .-CAN_TxCancel
 345              		.section	.text.CAN_SendMsg0,"ax",%progbits
 346              		.align	2
 347              		.global	CAN_SendMsg0
 348              		.code	16
 349              		.thumb_func
 350              		.type	CAN_SendMsg0, %function
 351              	CAN_SendMsg0:
 352              	.LFB3:
 191:CAN_TX_RX_func.c **** 
 192:CAN_TX_RX_func.c **** 
 193:CAN_TX_RX_func.c **** #if (CAN_TX0_FUNC_ENABLE)
 194:CAN_TX_RX_func.c ****     /*******************************************************************************
 195:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg0
 196:CAN_TX_RX_func.c ****     ********************************************************************************
 197:CAN_TX_RX_func.c ****     *
 198:CAN_TX_RX_func.c ****     * Summary:
 199:CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 0. The function checks
 200:CAN_TX_RX_func.c ****     *  if mailbox 0 doesn't already have un-transmitted messages waiting for
 201:CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 202:CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 203:CAN_TX_RX_func.c ****     *
 204:CAN_TX_RX_func.c ****     * Parameters:
 205:CAN_TX_RX_func.c ****     *  None.
 206:CAN_TX_RX_func.c ****     *
 207:CAN_TX_RX_func.c ****     * Return:
 208:CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 209:CAN_TX_RX_func.c ****     *   Define                             Description
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 11


 210:CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 211:CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 212:CAN_TX_RX_func.c ****     *
 213:CAN_TX_RX_func.c ****     *******************************************************************************/
 214:CAN_TX_RX_func.c ****     uint8 CAN_SendMsg0(void) 
 215:CAN_TX_RX_func.c ****     {
 353              		.loc 1 215 0
 354              		.cfi_startproc
 355              		@ args = 0, pretend = 0, frame = 0
 356              		@ frame_needed = 0, uses_anonymous_args = 0
 357 0000 70B5     		push	{r4, r5, r6, lr}
 358              		.cfi_def_cfa_offset 16
 359              		.cfi_offset 4, -16
 360              		.cfi_offset 5, -12
 361              		.cfi_offset 6, -8
 362              		.cfi_offset 14, -4
 363              	.LVL29:
 216:CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 217:CAN_TX_RX_func.c **** 
 218:CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 219:CAN_TX_RX_func.c ****             if ((CAN_TX[0u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 220:CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 221:CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(0u) & CAN_TX_REQUEST_PENDING) != 0u)
 364              		.loc 1 221 0
 365 0002 234B     		ldr	r3, .L32
 366 0004 1B68     		ldr	r3, [r3]
 367 0006 DB07     		lsls	r3, r3, #31
 368 0008 3FD4     		bmi	.L31
 222:CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 223:CAN_TX_RX_func.c ****             {
 224:CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 225:CAN_TX_RX_func.c ****             }
 226:CAN_TX_RX_func.c ****             else
 227:CAN_TX_RX_func.c ****             {
 228:CAN_TX_RX_func.c ****                 /* `#START MESSAGE_0_TRASMITTED` */
 229:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(0,0,dato_enviado[0]);
 369              		.loc 1 229 0
 370 000a 224B     		ldr	r3, .L32+4
 371 000c 1968     		ldr	r1, [r3]
 372 000e 0902     		lsls	r1, r1, #8
 373 0010 090A     		lsrs	r1, r1, #8
 374 0012 214A     		ldr	r2, .L32+8
 375 0014 1078     		ldrb	r0, [r2]
 376 0016 0006     		lsls	r0, r0, #24
 377 0018 0143     		orrs	r1, r0
 378 001a 1960     		str	r1, [r3]
 230:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(0,1,dato_enviado[1]);
 379              		.loc 1 230 0
 380 001c 1968     		ldr	r1, [r3]
 381 001e 1F48     		ldr	r0, .L32+12
 382 0020 0140     		ands	r1, r0
 383 0022 0C00     		movs	r4, r1
 384 0024 5178     		ldrb	r1, [r2, #1]
 385 0026 0904     		lsls	r1, r1, #16
 386 0028 2143     		orrs	r1, r4
 387 002a 1960     		str	r1, [r3]
 231:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(0,2,dato_enviado[2]);
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 12


 388              		.loc 1 231 0
 389 002c 1C68     		ldr	r4, [r3]
 390 002e 1C49     		ldr	r1, .L32+16
 391 0030 0C40     		ands	r4, r1
 392 0032 2500     		movs	r5, r4
 393 0034 9478     		ldrb	r4, [r2, #2]
 394 0036 2402     		lsls	r4, r4, #8
 395 0038 2C43     		orrs	r4, r5
 396 003a 1C60     		str	r4, [r3]
 232:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(0,3,dato_enviado[3]);
 397              		.loc 1 232 0
 398 003c 1C68     		ldr	r4, [r3]
 399 003e FF26     		movs	r6, #255
 400 0040 B443     		bics	r4, r6
 401 0042 D578     		ldrb	r5, [r2, #3]
 402 0044 2C43     		orrs	r4, r5
 403 0046 1C60     		str	r4, [r3]
 233:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(0,4,dato_enviado[4]);
 404              		.loc 1 233 0
 405 0048 164B     		ldr	r3, .L32+20
 406 004a 1C68     		ldr	r4, [r3]
 407 004c 2402     		lsls	r4, r4, #8
 408 004e 240A     		lsrs	r4, r4, #8
 409 0050 1579     		ldrb	r5, [r2, #4]
 410 0052 2D06     		lsls	r5, r5, #24
 411 0054 2C43     		orrs	r4, r5
 412 0056 1C60     		str	r4, [r3]
 234:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(0,5,dato_enviado[5]);
 413              		.loc 1 234 0
 414 0058 1C68     		ldr	r4, [r3]
 415 005a 2040     		ands	r0, r4
 416 005c 5479     		ldrb	r4, [r2, #5]
 417 005e 2404     		lsls	r4, r4, #16
 418 0060 2043     		orrs	r0, r4
 419 0062 1860     		str	r0, [r3]
 235:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(0,6,dato_enviado[6]);
 420              		.loc 1 235 0
 421 0064 1868     		ldr	r0, [r3]
 422 0066 0140     		ands	r1, r0
 423 0068 9079     		ldrb	r0, [r2, #6]
 424 006a 0002     		lsls	r0, r0, #8
 425 006c 0143     		orrs	r1, r0
 426 006e 1960     		str	r1, [r3]
 236:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(0,7,dato_enviado[7]);                           
 427              		.loc 1 236 0
 428 0070 1868     		ldr	r0, [r3]
 429 0072 B043     		bics	r0, r6
 430 0074 D179     		ldrb	r1, [r2, #7]
 431 0076 0200     		movs	r2, r0
 432 0078 0A43     		orrs	r2, r1
 433 007a 1A60     		str	r2, [r3]
 237:CAN_TX_RX_func.c ****                 /* `#END` */
 238:CAN_TX_RX_func.c **** 
 239:CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_0_CALLBACK
 240:CAN_TX_RX_func.c ****                     CAN_SendMsg_0_Callback();
 241:CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_0_CALLBACK */
 242:CAN_TX_RX_func.c **** 
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 13


 243:CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(0u),
 434              		.loc 1 243 0
 435 007c 044A     		ldr	r2, .L32
 436 007e 1168     		ldr	r1, [r2]
 437 0080 0123     		movs	r3, #1
 438 0082 0B43     		orrs	r3, r1
 439 0084 1360     		str	r3, [r2]
 216:CAN_TX_RX_func.c **** 
 440              		.loc 1 216 0
 441 0086 0020     		movs	r0, #0
 442 0088 00E0     		b	.L30
 443              	.L31:
 224:CAN_TX_RX_func.c ****             }
 444              		.loc 1 224 0
 445 008a 0120     		movs	r0, #1
 446              	.L30:
 447              	.LVL30:
 244:CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(0u)) | CAN_SEND_MESSAGE);
 245:CAN_TX_RX_func.c ****             }
 246:CAN_TX_RX_func.c **** 
 247:CAN_TX_RX_func.c ****         return (result);
 248:CAN_TX_RX_func.c ****     }
 448              		.loc 1 248 0
 449              		@ sp needed
 450 008c 70BD     		pop	{r4, r5, r6, pc}
 451              	.L33:
 452 008e C046     		.align	2
 453              	.L32:
 454 0090 20002E40 		.word	1076756512
 455 0094 28002E40 		.word	1076756520
 456 0098 00000000 		.word	dato_enviado
 457 009c FFFF00FF 		.word	-16711681
 458 00a0 FF00FFFF 		.word	-65281
 459 00a4 2C002E40 		.word	1076756524
 460              		.cfi_endproc
 461              	.LFE3:
 462              		.size	CAN_SendMsg0, .-CAN_SendMsg0
 463              		.section	.text.CAN_SendMsg1,"ax",%progbits
 464              		.align	2
 465              		.global	CAN_SendMsg1
 466              		.code	16
 467              		.thumb_func
 468              		.type	CAN_SendMsg1, %function
 469              	CAN_SendMsg1:
 470              	.LFB4:
 249:CAN_TX_RX_func.c **** #endif /* CAN_TX0_FUNC_ENABLE */
 250:CAN_TX_RX_func.c **** 
 251:CAN_TX_RX_func.c **** 
 252:CAN_TX_RX_func.c **** #if (CAN_TX1_FUNC_ENABLE)
 253:CAN_TX_RX_func.c ****     /*******************************************************************************
 254:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg1
 255:CAN_TX_RX_func.c ****     ********************************************************************************
 256:CAN_TX_RX_func.c ****     *
 257:CAN_TX_RX_func.c ****     * Summary:
 258:CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 1. The function checks
 259:CAN_TX_RX_func.c ****     *  if mailbox 1 doesn't already have un-transmitted messages waiting for
 260:CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 14


 261:CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 262:CAN_TX_RX_func.c ****     *
 263:CAN_TX_RX_func.c ****     * Parameters:
 264:CAN_TX_RX_func.c ****     *  None.
 265:CAN_TX_RX_func.c ****     *
 266:CAN_TX_RX_func.c ****     * Return:
 267:CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 268:CAN_TX_RX_func.c ****     *   Define                             Description
 269:CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 270:CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 271:CAN_TX_RX_func.c ****     *
 272:CAN_TX_RX_func.c ****     *******************************************************************************/
 273:CAN_TX_RX_func.c ****     uint8 CAN_SendMsg1(void) 
 274:CAN_TX_RX_func.c ****     {
 471              		.loc 1 274 0
 472              		.cfi_startproc
 473              		@ args = 0, pretend = 0, frame = 0
 474              		@ frame_needed = 0, uses_anonymous_args = 0
 475 0000 70B5     		push	{r4, r5, r6, lr}
 476              		.cfi_def_cfa_offset 16
 477              		.cfi_offset 4, -16
 478              		.cfi_offset 5, -12
 479              		.cfi_offset 6, -8
 480              		.cfi_offset 14, -4
 481              	.LVL31:
 275:CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 276:CAN_TX_RX_func.c **** 
 277:CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 278:CAN_TX_RX_func.c ****             if ((CAN_TX[1u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 279:CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 280:CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(1u) & CAN_TX_REQUEST_PENDING) != 0u)
 482              		.loc 1 280 0
 483 0002 234B     		ldr	r3, .L37
 484 0004 1B68     		ldr	r3, [r3]
 485 0006 DB07     		lsls	r3, r3, #31
 486 0008 3FD4     		bmi	.L36
 281:CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 282:CAN_TX_RX_func.c ****             {
 283:CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 284:CAN_TX_RX_func.c ****             }
 285:CAN_TX_RX_func.c ****             else
 286:CAN_TX_RX_func.c ****             {
 287:CAN_TX_RX_func.c ****                 /* `#START MESSAGE_1_TRASMITTED` */
 288:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(1,0,dato_enviado_1[0]);
 487              		.loc 1 288 0
 488 000a 224B     		ldr	r3, .L37+4
 489 000c 1968     		ldr	r1, [r3]
 490 000e 0902     		lsls	r1, r1, #8
 491 0010 090A     		lsrs	r1, r1, #8
 492 0012 214A     		ldr	r2, .L37+8
 493 0014 1078     		ldrb	r0, [r2]
 494 0016 0006     		lsls	r0, r0, #24
 495 0018 0143     		orrs	r1, r0
 496 001a 1960     		str	r1, [r3]
 289:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(1,1,dato_enviado_1[1]);
 497              		.loc 1 289 0
 498 001c 1968     		ldr	r1, [r3]
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 15


 499 001e 1F48     		ldr	r0, .L37+12
 500 0020 0140     		ands	r1, r0
 501 0022 0C00     		movs	r4, r1
 502 0024 5178     		ldrb	r1, [r2, #1]
 503 0026 0904     		lsls	r1, r1, #16
 504 0028 2143     		orrs	r1, r4
 505 002a 1960     		str	r1, [r3]
 290:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(1,2,dato_enviado_1[2]);
 506              		.loc 1 290 0
 507 002c 1C68     		ldr	r4, [r3]
 508 002e 1C49     		ldr	r1, .L37+16
 509 0030 0C40     		ands	r4, r1
 510 0032 2500     		movs	r5, r4
 511 0034 9478     		ldrb	r4, [r2, #2]
 512 0036 2402     		lsls	r4, r4, #8
 513 0038 2C43     		orrs	r4, r5
 514 003a 1C60     		str	r4, [r3]
 291:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(1,3,dato_enviado_1[3]);
 515              		.loc 1 291 0
 516 003c 1C68     		ldr	r4, [r3]
 517 003e FF26     		movs	r6, #255
 518 0040 B443     		bics	r4, r6
 519 0042 D578     		ldrb	r5, [r2, #3]
 520 0044 2C43     		orrs	r4, r5
 521 0046 1C60     		str	r4, [r3]
 292:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(1,4,dato_enviado_1[4]);
 522              		.loc 1 292 0
 523 0048 164B     		ldr	r3, .L37+20
 524 004a 1C68     		ldr	r4, [r3]
 525 004c 2402     		lsls	r4, r4, #8
 526 004e 240A     		lsrs	r4, r4, #8
 527 0050 1579     		ldrb	r5, [r2, #4]
 528 0052 2D06     		lsls	r5, r5, #24
 529 0054 2C43     		orrs	r4, r5
 530 0056 1C60     		str	r4, [r3]
 293:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(1,5,dato_enviado_1[5]);
 531              		.loc 1 293 0
 532 0058 1C68     		ldr	r4, [r3]
 533 005a 2040     		ands	r0, r4
 534 005c 5479     		ldrb	r4, [r2, #5]
 535 005e 2404     		lsls	r4, r4, #16
 536 0060 2043     		orrs	r0, r4
 537 0062 1860     		str	r0, [r3]
 294:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(1,6,dato_enviado_1[6]);
 538              		.loc 1 294 0
 539 0064 1868     		ldr	r0, [r3]
 540 0066 0140     		ands	r1, r0
 541 0068 9079     		ldrb	r0, [r2, #6]
 542 006a 0002     		lsls	r0, r0, #8
 543 006c 0143     		orrs	r1, r0
 544 006e 1960     		str	r1, [r3]
 295:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(1,7,dato_enviado_1[7]);
 545              		.loc 1 295 0
 546 0070 1868     		ldr	r0, [r3]
 547 0072 B043     		bics	r0, r6
 548 0074 D179     		ldrb	r1, [r2, #7]
 549 0076 0200     		movs	r2, r0
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 16


 550 0078 0A43     		orrs	r2, r1
 551 007a 1A60     		str	r2, [r3]
 296:CAN_TX_RX_func.c ****                 /* `#END` */
 297:CAN_TX_RX_func.c **** 
 298:CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_1_CALLBACK
 299:CAN_TX_RX_func.c ****                     CAN_SendMsg_1_Callback();
 300:CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_1_CALLBACK */
 301:CAN_TX_RX_func.c **** 
 302:CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(1u),
 552              		.loc 1 302 0
 553 007c 044A     		ldr	r2, .L37
 554 007e 1168     		ldr	r1, [r2]
 555 0080 0123     		movs	r3, #1
 556 0082 0B43     		orrs	r3, r1
 557 0084 1360     		str	r3, [r2]
 275:CAN_TX_RX_func.c **** 
 558              		.loc 1 275 0
 559 0086 0020     		movs	r0, #0
 560 0088 00E0     		b	.L35
 561              	.L36:
 283:CAN_TX_RX_func.c ****             }
 562              		.loc 1 283 0
 563 008a 0120     		movs	r0, #1
 564              	.L35:
 565              	.LVL32:
 303:CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(1u)) | CAN_SEND_MESSAGE);
 304:CAN_TX_RX_func.c ****             }
 305:CAN_TX_RX_func.c **** 
 306:CAN_TX_RX_func.c ****         return (result);
 307:CAN_TX_RX_func.c ****     }
 566              		.loc 1 307 0
 567              		@ sp needed
 568 008c 70BD     		pop	{r4, r5, r6, pc}
 569              	.L38:
 570 008e C046     		.align	2
 571              	.L37:
 572 0090 30002E40 		.word	1076756528
 573 0094 38002E40 		.word	1076756536
 574 0098 00000000 		.word	dato_enviado_1
 575 009c FFFF00FF 		.word	-16711681
 576 00a0 FF00FFFF 		.word	-65281
 577 00a4 3C002E40 		.word	1076756540
 578              		.cfi_endproc
 579              	.LFE4:
 580              		.size	CAN_SendMsg1, .-CAN_SendMsg1
 581              		.section	.text.CAN_ReceiveMsg,"ax",%progbits
 582              		.align	2
 583              		.global	CAN_ReceiveMsg
 584              		.code	16
 585              		.thumb_func
 586              		.type	CAN_ReceiveMsg, %function
 587              	CAN_ReceiveMsg:
 588              	.LFB5:
 308:CAN_TX_RX_func.c **** #endif /* CAN_TX1_FUNC_ENABLE */
 309:CAN_TX_RX_func.c **** 
 310:CAN_TX_RX_func.c **** 
 311:CAN_TX_RX_func.c **** #if (CAN_TX2_FUNC_ENABLE)
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 17


 312:CAN_TX_RX_func.c ****     /*******************************************************************************
 313:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg2
 314:CAN_TX_RX_func.c ****     ********************************************************************************
 315:CAN_TX_RX_func.c ****     *
 316:CAN_TX_RX_func.c ****     * Summary:
 317:CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 2. The function checks
 318:CAN_TX_RX_func.c ****     *  if mailbox 2 doesn't already have un-transmitted messages waiting for
 319:CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 320:CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 321:CAN_TX_RX_func.c ****     *
 322:CAN_TX_RX_func.c ****     * Parameters:
 323:CAN_TX_RX_func.c ****     *  None.
 324:CAN_TX_RX_func.c ****     *
 325:CAN_TX_RX_func.c ****     * Return:
 326:CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 327:CAN_TX_RX_func.c ****     *   Define                             Description
 328:CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 329:CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 330:CAN_TX_RX_func.c ****     *
 331:CAN_TX_RX_func.c ****     *******************************************************************************/
 332:CAN_TX_RX_func.c ****     uint8 CAN_SendMsg2(void) 
 333:CAN_TX_RX_func.c ****     {
 334:CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 335:CAN_TX_RX_func.c **** 
 336:CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 337:CAN_TX_RX_func.c ****             if ((CAN_TX[2u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 338:CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 339:CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(2u) & CAN_TX_REQUEST_PENDING) != 0u)
 340:CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 341:CAN_TX_RX_func.c ****             {
 342:CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 343:CAN_TX_RX_func.c ****             }
 344:CAN_TX_RX_func.c ****             else
 345:CAN_TX_RX_func.c ****             {
 346:CAN_TX_RX_func.c ****                 /* `#START MESSAGE_2_TRASMITTED` */
 347:CAN_TX_RX_func.c **** 
 348:CAN_TX_RX_func.c ****                 /* `#END` */
 349:CAN_TX_RX_func.c **** 
 350:CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_2_CALLBACK
 351:CAN_TX_RX_func.c ****                     CAN_SendMsg_2_Callback();
 352:CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_2_CALLBACK */
 353:CAN_TX_RX_func.c **** 
 354:CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(2u),
 355:CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(2u)) | CAN_SEND_MESSAGE);
 356:CAN_TX_RX_func.c ****             }
 357:CAN_TX_RX_func.c **** 
 358:CAN_TX_RX_func.c ****         return (result);
 359:CAN_TX_RX_func.c ****     }
 360:CAN_TX_RX_func.c **** #endif /* CAN_TX2_FUNC_ENABLE */
 361:CAN_TX_RX_func.c **** 
 362:CAN_TX_RX_func.c **** 
 363:CAN_TX_RX_func.c **** #if (CAN_TX3_FUNC_ENABLE)
 364:CAN_TX_RX_func.c ****     /*******************************************************************************
 365:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg3
 366:CAN_TX_RX_func.c ****     ********************************************************************************
 367:CAN_TX_RX_func.c ****     *
 368:CAN_TX_RX_func.c ****     * Summary:
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 18


 369:CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 3. The function checks
 370:CAN_TX_RX_func.c ****     *  if mailbox 3 doesn't already have un-transmitted messages waiting for
 371:CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 372:CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 373:CAN_TX_RX_func.c ****     *
 374:CAN_TX_RX_func.c ****     * Parameters:
 375:CAN_TX_RX_func.c ****     *  None.
 376:CAN_TX_RX_func.c ****     *
 377:CAN_TX_RX_func.c ****     * Return:
 378:CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 379:CAN_TX_RX_func.c ****     *   Define                             Description
 380:CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 381:CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 382:CAN_TX_RX_func.c ****     *
 383:CAN_TX_RX_func.c ****     *******************************************************************************/
 384:CAN_TX_RX_func.c ****     uint8 CAN_SendMsg3(void) 
 385:CAN_TX_RX_func.c ****     {
 386:CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 387:CAN_TX_RX_func.c **** 
 388:CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 389:CAN_TX_RX_func.c ****             if ((CAN_TX[3u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 390:CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 391:CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(3u) & CAN_TX_REQUEST_PENDING) != 0u)
 392:CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 393:CAN_TX_RX_func.c ****             {
 394:CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 395:CAN_TX_RX_func.c ****             }
 396:CAN_TX_RX_func.c ****             else
 397:CAN_TX_RX_func.c ****             {
 398:CAN_TX_RX_func.c ****                 /* `#START MESSAGE_3_TRASMITTED` */
 399:CAN_TX_RX_func.c **** 
 400:CAN_TX_RX_func.c ****                 /* `#END` */
 401:CAN_TX_RX_func.c **** 
 402:CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_3_CALLBACK
 403:CAN_TX_RX_func.c ****                     CAN_SendMsg_3_Callback();
 404:CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_3_CALLBACK */
 405:CAN_TX_RX_func.c **** 
 406:CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(3u),
 407:CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(3u)) | CAN_SEND_MESSAGE);
 408:CAN_TX_RX_func.c ****             }
 409:CAN_TX_RX_func.c **** 
 410:CAN_TX_RX_func.c ****         return (result);
 411:CAN_TX_RX_func.c ****     }
 412:CAN_TX_RX_func.c **** #endif /* CAN_TX3_FUNC_ENABLE */
 413:CAN_TX_RX_func.c **** 
 414:CAN_TX_RX_func.c **** 
 415:CAN_TX_RX_func.c **** #if (CAN_TX4_FUNC_ENABLE)
 416:CAN_TX_RX_func.c ****     /*******************************************************************************
 417:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg4
 418:CAN_TX_RX_func.c ****     ********************************************************************************
 419:CAN_TX_RX_func.c ****     *
 420:CAN_TX_RX_func.c ****     * Summary:
 421:CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 4. The function checks
 422:CAN_TX_RX_func.c ****     *  if mailbox 4 doesn't already have un-transmitted messages waiting for
 423:CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 424:CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 425:CAN_TX_RX_func.c ****     *
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 19


 426:CAN_TX_RX_func.c ****     * Parameters:
 427:CAN_TX_RX_func.c ****     *  None.
 428:CAN_TX_RX_func.c ****     *
 429:CAN_TX_RX_func.c ****     * Return:
 430:CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 431:CAN_TX_RX_func.c ****     *   Define                             Description
 432:CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 433:CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 434:CAN_TX_RX_func.c ****     *
 435:CAN_TX_RX_func.c ****     *******************************************************************************/
 436:CAN_TX_RX_func.c ****     uint8 CAN_SendMsg4(void) 
 437:CAN_TX_RX_func.c ****     {
 438:CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 439:CAN_TX_RX_func.c **** 
 440:CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 441:CAN_TX_RX_func.c ****             if ((CAN_TX[4u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 442:CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 443:CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(4u) & CAN_TX_REQUEST_PENDING) != 0u)
 444:CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 445:CAN_TX_RX_func.c ****             {
 446:CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 447:CAN_TX_RX_func.c ****             }
 448:CAN_TX_RX_func.c ****             else
 449:CAN_TX_RX_func.c ****             {
 450:CAN_TX_RX_func.c ****                 /* `#START MESSAGE_4_TRASMITTED` */
 451:CAN_TX_RX_func.c **** 
 452:CAN_TX_RX_func.c ****                 /* `#END` */
 453:CAN_TX_RX_func.c **** 
 454:CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_4_CALLBACK
 455:CAN_TX_RX_func.c ****                     CAN_SendMsg_4_Callback();
 456:CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_4_CALLBACK */
 457:CAN_TX_RX_func.c **** 
 458:CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(4u),
 459:CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(4u)) | CAN_SEND_MESSAGE);
 460:CAN_TX_RX_func.c ****             }
 461:CAN_TX_RX_func.c **** 
 462:CAN_TX_RX_func.c ****         return (result);
 463:CAN_TX_RX_func.c ****     }
 464:CAN_TX_RX_func.c **** #endif /* CAN_TX4_FUNC_ENABLE */
 465:CAN_TX_RX_func.c **** 
 466:CAN_TX_RX_func.c **** 
 467:CAN_TX_RX_func.c **** #if (CAN_TX5_FUNC_ENABLE)
 468:CAN_TX_RX_func.c ****     /*******************************************************************************
 469:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg5
 470:CAN_TX_RX_func.c ****     ********************************************************************************
 471:CAN_TX_RX_func.c ****     *
 472:CAN_TX_RX_func.c ****     * Summary:
 473:CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 5. The function checks
 474:CAN_TX_RX_func.c ****     *  if mailbox 5 doesn't already have un-transmitted messages waiting for
 475:CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 476:CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 477:CAN_TX_RX_func.c ****     *
 478:CAN_TX_RX_func.c ****     * Parameters:
 479:CAN_TX_RX_func.c ****     *  None.
 480:CAN_TX_RX_func.c ****     *
 481:CAN_TX_RX_func.c ****     * Return:
 482:CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 20


 483:CAN_TX_RX_func.c ****     *   Define                             Description
 484:CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 485:CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 486:CAN_TX_RX_func.c ****     *
 487:CAN_TX_RX_func.c ****     *******************************************************************************/
 488:CAN_TX_RX_func.c ****     uint8 CAN_SendMsg5(void) 
 489:CAN_TX_RX_func.c ****     {
 490:CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 491:CAN_TX_RX_func.c **** 
 492:CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 493:CAN_TX_RX_func.c ****             if ((CAN_TX[5u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 494:CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 495:CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(5u) & CAN_TX_REQUEST_PENDING) != 0u)
 496:CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 497:CAN_TX_RX_func.c ****             {
 498:CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 499:CAN_TX_RX_func.c ****             }
 500:CAN_TX_RX_func.c ****             else
 501:CAN_TX_RX_func.c ****             {
 502:CAN_TX_RX_func.c ****                 /* `#START MESSAGE_5_TRASMITTED` */
 503:CAN_TX_RX_func.c **** 
 504:CAN_TX_RX_func.c ****                 /* `#END` */
 505:CAN_TX_RX_func.c **** 
 506:CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_5_CALLBACK
 507:CAN_TX_RX_func.c ****                     CAN_SendMsg_5_Callback();
 508:CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_5_CALLBACK */
 509:CAN_TX_RX_func.c **** 
 510:CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(5u),
 511:CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(5u)) | CAN_SEND_MESSAGE);
 512:CAN_TX_RX_func.c ****             }
 513:CAN_TX_RX_func.c **** 
 514:CAN_TX_RX_func.c ****         return (result);
 515:CAN_TX_RX_func.c ****     }
 516:CAN_TX_RX_func.c **** #endif /* CAN_TX5_FUNC_ENABLE */
 517:CAN_TX_RX_func.c **** 
 518:CAN_TX_RX_func.c **** 
 519:CAN_TX_RX_func.c **** #if (CAN_TX6_FUNC_ENABLE)
 520:CAN_TX_RX_func.c ****     /*******************************************************************************
 521:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg6
 522:CAN_TX_RX_func.c ****     ********************************************************************************
 523:CAN_TX_RX_func.c ****     *
 524:CAN_TX_RX_func.c ****     * Summary:
 525:CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 6. The function checks
 526:CAN_TX_RX_func.c ****     *  if mailbox 6 doesn't already have un-transmitted messages waiting for
 527:CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 528:CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 529:CAN_TX_RX_func.c ****     *
 530:CAN_TX_RX_func.c ****     * Parameters:
 531:CAN_TX_RX_func.c ****     *  None.
 532:CAN_TX_RX_func.c ****     *
 533:CAN_TX_RX_func.c ****     * Return:
 534:CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 535:CAN_TX_RX_func.c ****     *   Define                             Description
 536:CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 537:CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 538:CAN_TX_RX_func.c ****     *
 539:CAN_TX_RX_func.c ****     *******************************************************************************/
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 21


 540:CAN_TX_RX_func.c ****     uint8 CAN_SendMsg6(void) 
 541:CAN_TX_RX_func.c ****     {
 542:CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 543:CAN_TX_RX_func.c **** 
 544:CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 545:CAN_TX_RX_func.c ****             if ((CAN_TX[6u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 546:CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 547:CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(6u) & CAN_TX_REQUEST_PENDING) != 0u)
 548:CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 549:CAN_TX_RX_func.c ****             {
 550:CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 551:CAN_TX_RX_func.c ****             }
 552:CAN_TX_RX_func.c ****             else
 553:CAN_TX_RX_func.c ****             {
 554:CAN_TX_RX_func.c ****                 /* `#START MESSAGE_6_TRASMITTED` */
 555:CAN_TX_RX_func.c **** 
 556:CAN_TX_RX_func.c ****                 /* `#END` */
 557:CAN_TX_RX_func.c **** 
 558:CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_6_CALLBACK
 559:CAN_TX_RX_func.c ****                     CAN_SendMsg_6_Callback();
 560:CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_6_CALLBACK */
 561:CAN_TX_RX_func.c **** 
 562:CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(6u),
 563:CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(6u)) | CAN_SEND_MESSAGE);
 564:CAN_TX_RX_func.c ****             }
 565:CAN_TX_RX_func.c **** 
 566:CAN_TX_RX_func.c ****         return (result);
 567:CAN_TX_RX_func.c ****     }
 568:CAN_TX_RX_func.c **** #endif /* CAN_TX6_FUNC_ENABLE */
 569:CAN_TX_RX_func.c **** 
 570:CAN_TX_RX_func.c **** 
 571:CAN_TX_RX_func.c **** #if (CAN_TX7_FUNC_ENABLE)
 572:CAN_TX_RX_func.c ****     /*******************************************************************************
 573:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg7)
 574:CAN_TX_RX_func.c ****     ********************************************************************************
 575:CAN_TX_RX_func.c ****     *
 576:CAN_TX_RX_func.c ****     * Summary:
 577:CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 7. The function checks
 578:CAN_TX_RX_func.c ****     *  if mailbox 7 doesn't already have un-transmitted messages waiting for
 579:CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 580:CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 581:CAN_TX_RX_func.c ****     *
 582:CAN_TX_RX_func.c ****     * Parameters:
 583:CAN_TX_RX_func.c ****     *  None.
 584:CAN_TX_RX_func.c ****     *
 585:CAN_TX_RX_func.c ****     * Return:
 586:CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 587:CAN_TX_RX_func.c ****     *   Define                             Description
 588:CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 589:CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 590:CAN_TX_RX_func.c ****     *
 591:CAN_TX_RX_func.c ****     *******************************************************************************/
 592:CAN_TX_RX_func.c ****     uint8 CAN_SendMsg7(void) 
 593:CAN_TX_RX_func.c ****     {
 594:CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 595:CAN_TX_RX_func.c **** 
 596:CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 22


 597:CAN_TX_RX_func.c ****             if ((CAN_TX[7u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 598:CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 599:CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(7u) & CAN_TX_REQUEST_PENDING) != 0u)
 600:CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 601:CAN_TX_RX_func.c ****             {
 602:CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 603:CAN_TX_RX_func.c ****             }
 604:CAN_TX_RX_func.c ****             else
 605:CAN_TX_RX_func.c ****             {
 606:CAN_TX_RX_func.c ****                 /* `#START MESSAGE_7_TRASMITTED` */
 607:CAN_TX_RX_func.c **** 
 608:CAN_TX_RX_func.c ****                 /* `#END` */
 609:CAN_TX_RX_func.c **** 
 610:CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_7_CALLBACK
 611:CAN_TX_RX_func.c ****                     CAN_SendMsg_7_Callback();
 612:CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_7_CALLBACK */
 613:CAN_TX_RX_func.c **** 
 614:CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(7u),
 615:CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(7u)) | CAN_SEND_MESSAGE);
 616:CAN_TX_RX_func.c ****             }
 617:CAN_TX_RX_func.c **** 
 618:CAN_TX_RX_func.c ****         return (result);
 619:CAN_TX_RX_func.c ****     }
 620:CAN_TX_RX_func.c **** #endif /* CAN_TX7_FUNC_ENABLE */
 621:CAN_TX_RX_func.c **** 
 622:CAN_TX_RX_func.c **** 
 623:CAN_TX_RX_func.c **** /*******************************************************************************
 624:CAN_TX_RX_func.c **** * FUNCTION NAME:   CAN_ReceiveMsg
 625:CAN_TX_RX_func.c **** ********************************************************************************
 626:CAN_TX_RX_func.c **** *
 627:CAN_TX_RX_func.c **** * Summary:
 628:CAN_TX_RX_func.c **** *  This function is the entry point to Receive Message Interrupt for Basic
 629:CAN_TX_RX_func.c **** *  mailboxes. Clears the Receive particular Message interrupt flag. Generated
 630:CAN_TX_RX_func.c **** *  only if one of the Receive mailboxes is designed as Basic.
 631:CAN_TX_RX_func.c **** *
 632:CAN_TX_RX_func.c **** * Parameters:
 633:CAN_TX_RX_func.c **** *  rxMailbox: The mailbox number that trig Receive Message Interrupt.
 634:CAN_TX_RX_func.c **** *
 635:CAN_TX_RX_func.c **** * Return:
 636:CAN_TX_RX_func.c **** *  None.
 637:CAN_TX_RX_func.c **** *
 638:CAN_TX_RX_func.c **** * Reentrant:
 639:CAN_TX_RX_func.c **** *  Depends on the Customer code.
 640:CAN_TX_RX_func.c **** *
 641:CAN_TX_RX_func.c **** *******************************************************************************/
 642:CAN_TX_RX_func.c **** void CAN_ReceiveMsg(uint8 rxMailbox) 
 643:CAN_TX_RX_func.c **** {
 589              		.loc 1 643 0
 590              		.cfi_startproc
 591              		@ args = 0, pretend = 0, frame = 0
 592              		@ frame_needed = 0, uses_anonymous_args = 0
 593              		@ link register save eliminated.
 594              	.LVL33:
 644:CAN_TX_RX_func.c ****     #if (CY_PSOC3 || CY_PSOC5)
 645:CAN_TX_RX_func.c ****         if ((CAN_RX[rxMailbox].rxcmd.byte[0u] & CAN_RX_ACK_MSG) != 0u)
 646:CAN_TX_RX_func.c ****     #else  /* CY_PSOC4 */
 647:CAN_TX_RX_func.c ****         if ((CAN_RX_CMD_REG(rxMailbox) & CAN_RX_ACK_MSG) != 0u)
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 23


 595              		.loc 1 647 0
 596 0000 4001     		lsls	r0, r0, #5
 597              	.LVL34:
 598 0002 054B     		ldr	r3, .L41
 599 0004 9C46     		mov	ip, r3
 600 0006 6044     		add	r0, r0, ip
 601 0008 0368     		ldr	r3, [r0]
 602 000a DB07     		lsls	r3, r3, #31
 603 000c 03D5     		bpl	.L39
 648:CAN_TX_RX_func.c ****     #endif /* CY_PSOC3 || CY_PSOC5 */
 649:CAN_TX_RX_func.c ****         {
 650:CAN_TX_RX_func.c ****             /* `#START MESSAGE_BASIC_RECEIVED` */
 651:CAN_TX_RX_func.c **** 
 652:CAN_TX_RX_func.c ****             /* `#END` */
 653:CAN_TX_RX_func.c **** 
 654:CAN_TX_RX_func.c ****             #ifdef CAN_RECEIVE_MSG_CALLBACK
 655:CAN_TX_RX_func.c ****                 CAN_ReceiveMsg_Callback();
 656:CAN_TX_RX_func.c ****             #endif /* CAN_RECEIVE_MSG_CALLBACK */
 657:CAN_TX_RX_func.c **** 
 658:CAN_TX_RX_func.c ****             #if (CY_PSOC3 || CY_PSOC5)
 659:CAN_TX_RX_func.c ****                 CAN_RX[rxMailbox].rxcmd.byte[0u] |= CAN_RX_ACK_MSG;
 660:CAN_TX_RX_func.c ****             #else  /* CY_PSOC4 */
 661:CAN_TX_RX_func.c ****                 CAN_RX_CMD_REG(rxMailbox) |= CAN_RX_ACK_MSG;
 604              		.loc 1 661 0
 605 000e 0268     		ldr	r2, [r0]
 606 0010 0123     		movs	r3, #1
 607 0012 1343     		orrs	r3, r2
 608 0014 0360     		str	r3, [r0]
 609              	.L39:
 662:CAN_TX_RX_func.c ****             #endif /* CY_PSOC3 || CY_PSOC5 */
 663:CAN_TX_RX_func.c ****         }
 664:CAN_TX_RX_func.c **** }
 610              		.loc 1 664 0
 611              		@ sp needed
 612 0016 7047     		bx	lr
 613              	.L42:
 614              		.align	2
 615              	.L41:
 616 0018 A0002E40 		.word	1076756640
 617              		.cfi_endproc
 618              	.LFE5:
 619              		.size	CAN_ReceiveMsg, .-CAN_ReceiveMsg
 620              		.section	.text.CAN_ReceiveMsg0,"ax",%progbits
 621              		.align	2
 622              		.global	CAN_ReceiveMsg0
 623              		.code	16
 624              		.thumb_func
 625              		.type	CAN_ReceiveMsg0, %function
 626              	CAN_ReceiveMsg0:
 627              	.LFB6:
 665:CAN_TX_RX_func.c **** 
 666:CAN_TX_RX_func.c **** 
 667:CAN_TX_RX_func.c **** #if (CAN_RX0_FUNC_ENABLE)
 668:CAN_TX_RX_func.c ****     /*******************************************************************************
 669:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_ReceiveMsg0
 670:CAN_TX_RX_func.c ****     ********************************************************************************
 671:CAN_TX_RX_func.c ****     *
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 24


 672:CAN_TX_RX_func.c ****     * Summary:
 673:CAN_TX_RX_func.c ****     *  This function is the entry point to Receive Message 0 Interrupt. Clears the
 674:CAN_TX_RX_func.c ****     *  Receive Message 0 interrupt flag. Generated only for the Receive mailbox
 675:CAN_TX_RX_func.c ****     *  designed as Full.
 676:CAN_TX_RX_func.c ****     *
 677:CAN_TX_RX_func.c ****     * Parameters:
 678:CAN_TX_RX_func.c ****     *  None.
 679:CAN_TX_RX_func.c ****     *
 680:CAN_TX_RX_func.c ****     * Return:
 681:CAN_TX_RX_func.c ****     *  None.
 682:CAN_TX_RX_func.c ****     *
 683:CAN_TX_RX_func.c ****     * Reentrant:
 684:CAN_TX_RX_func.c ****     *  Depends on the Customer code.
 685:CAN_TX_RX_func.c ****     *
 686:CAN_TX_RX_func.c ****     *******************************************************************************/
 687:CAN_TX_RX_func.c ****     void CAN_ReceiveMsg0(void) 
 688:CAN_TX_RX_func.c ****     {
 628              		.loc 1 688 0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 0
 631              		@ frame_needed = 0, uses_anonymous_args = 0
 632              		@ link register save eliminated.
 689:CAN_TX_RX_func.c ****         /* `#START MESSAGE_0_RECEIVED` */
 690:CAN_TX_RX_func.c ****   
 691:CAN_TX_RX_func.c ****         mailbox0[0]=CAN_RX_DATA_BYTE1(0);
 633              		.loc 1 691 0
 634 0000 0F4A     		ldr	r2, .L44
 635 0002 1168     		ldr	r1, [r2]
 636 0004 090E     		lsrs	r1, r1, #24
 637 0006 0F4B     		ldr	r3, .L44+4
 638 0008 1970     		strb	r1, [r3]
 692:CAN_TX_RX_func.c ****         mailbox0[1]=CAN_RX_DATA_BYTE2(0);
 639              		.loc 1 692 0
 640 000a 1168     		ldr	r1, [r2]
 641 000c 090C     		lsrs	r1, r1, #16
 642 000e 5970     		strb	r1, [r3, #1]
 693:CAN_TX_RX_func.c ****         mailbox0[2]=CAN_RX_DATA_BYTE3(0);
 643              		.loc 1 693 0
 644 0010 1168     		ldr	r1, [r2]
 645 0012 090A     		lsrs	r1, r1, #8
 646 0014 9970     		strb	r1, [r3, #2]
 694:CAN_TX_RX_func.c ****         mailbox0[3]=CAN_RX_DATA_BYTE4(0);
 647              		.loc 1 694 0
 648 0016 1268     		ldr	r2, [r2]
 649 0018 DA70     		strb	r2, [r3, #3]
 695:CAN_TX_RX_func.c ****         mailbox0[4]=CAN_RX_DATA_BYTE5(0);
 650              		.loc 1 695 0
 651 001a 0B4A     		ldr	r2, .L44+8
 652 001c 1168     		ldr	r1, [r2]
 653 001e 090E     		lsrs	r1, r1, #24
 654 0020 1971     		strb	r1, [r3, #4]
 696:CAN_TX_RX_func.c ****         mailbox0[5]=CAN_RX_DATA_BYTE6(0);
 655              		.loc 1 696 0
 656 0022 1168     		ldr	r1, [r2]
 657 0024 090C     		lsrs	r1, r1, #16
 658 0026 5971     		strb	r1, [r3, #5]
 697:CAN_TX_RX_func.c ****         mailbox0[6]=CAN_RX_DATA_BYTE7(0);
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 25


 659              		.loc 1 697 0
 660 0028 1168     		ldr	r1, [r2]
 661 002a 090A     		lsrs	r1, r1, #8
 662 002c 9971     		strb	r1, [r3, #6]
 698:CAN_TX_RX_func.c ****         mailbox0[7]=CAN_RX_DATA_BYTE8(0);
 663              		.loc 1 698 0
 664 002e 1268     		ldr	r2, [r2]
 665 0030 DA71     		strb	r2, [r3, #7]
 699:CAN_TX_RX_func.c ****       
 700:CAN_TX_RX_func.c ****         
 701:CAN_TX_RX_func.c ****         
 702:CAN_TX_RX_func.c ****         /* `#END` */
 703:CAN_TX_RX_func.c **** 
 704:CAN_TX_RX_func.c ****         #ifdef CAN_RECEIVE_MSG_0_CALLBACK
 705:CAN_TX_RX_func.c ****             CAN_ReceiveMsg_0_Callback();
 706:CAN_TX_RX_func.c ****         #endif /* CAN_RECEIVE_MSG_0_CALLBACK */
 707:CAN_TX_RX_func.c **** 
 708:CAN_TX_RX_func.c ****         CAN_RX_ACK_MESSAGE(0u);
 666              		.loc 1 708 0
 667 0032 064A     		ldr	r2, .L44+12
 668 0034 1168     		ldr	r1, [r2]
 669 0036 0123     		movs	r3, #1
 670 0038 0B43     		orrs	r3, r1
 671 003a 1360     		str	r3, [r2]
 709:CAN_TX_RX_func.c ****     }
 672              		.loc 1 709 0
 673              		@ sp needed
 674 003c 7047     		bx	lr
 675              	.L45:
 676 003e C046     		.align	2
 677              	.L44:
 678 0040 A8002E40 		.word	1076756648
 679 0044 00000000 		.word	mailbox0
 680 0048 AC002E40 		.word	1076756652
 681 004c A0002E40 		.word	1076756640
 682              		.cfi_endproc
 683              	.LFE6:
 684              		.size	CAN_ReceiveMsg0, .-CAN_ReceiveMsg0
 685              		.section	.text.CAN_ReceiveMsg1,"ax",%progbits
 686              		.align	2
 687              		.global	CAN_ReceiveMsg1
 688              		.code	16
 689              		.thumb_func
 690              		.type	CAN_ReceiveMsg1, %function
 691              	CAN_ReceiveMsg1:
 692              	.LFB7:
 710:CAN_TX_RX_func.c **** #endif /* CAN_RX0_FUNC_ENABLE */
 711:CAN_TX_RX_func.c **** 
 712:CAN_TX_RX_func.c **** 
 713:CAN_TX_RX_func.c **** #if (CAN_RX1_FUNC_ENABLE)
 714:CAN_TX_RX_func.c ****     /*******************************************************************************
 715:CAN_TX_RX_func.c ****     * FUNCTION NAME:    CAN_ReceiveMsg1
 716:CAN_TX_RX_func.c ****     ********************************************************************************
 717:CAN_TX_RX_func.c ****     *
 718:CAN_TX_RX_func.c ****     * Summary:
 719:CAN_TX_RX_func.c ****     *  This function is the entry point to Receive Message 1 Interrupt. Clears the
 720:CAN_TX_RX_func.c ****     *  Receive Message 1 interrupt flag. Generated only for the Receive mailbox
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 26


 721:CAN_TX_RX_func.c ****     *  designed as Full.
 722:CAN_TX_RX_func.c ****     *
 723:CAN_TX_RX_func.c ****     * Parameters:
 724:CAN_TX_RX_func.c ****     *  None.
 725:CAN_TX_RX_func.c ****     *
 726:CAN_TX_RX_func.c ****     * Return:
 727:CAN_TX_RX_func.c ****     *  None.
 728:CAN_TX_RX_func.c ****     *
 729:CAN_TX_RX_func.c ****     * Reentrant:
 730:CAN_TX_RX_func.c ****     *  Depends on the Customer code.
 731:CAN_TX_RX_func.c ****     *
 732:CAN_TX_RX_func.c ****     *******************************************************************************/
 733:CAN_TX_RX_func.c ****     void CAN_ReceiveMsg1(void) 
 734:CAN_TX_RX_func.c ****     {
 693              		.loc 1 734 0
 694              		.cfi_startproc
 695              		@ args = 0, pretend = 0, frame = 0
 696              		@ frame_needed = 0, uses_anonymous_args = 0
 697              		@ link register save eliminated.
 735:CAN_TX_RX_func.c ****         /* `#START MESSAGE_1_RECEIVED` */
 736:CAN_TX_RX_func.c ****             mailbox1[0]=CAN_RX_DATA_BYTE1(1);
 698              		.loc 1 736 0
 699 0000 0F4A     		ldr	r2, .L47
 700 0002 1168     		ldr	r1, [r2]
 701 0004 090E     		lsrs	r1, r1, #24
 702 0006 0F4B     		ldr	r3, .L47+4
 703 0008 1970     		strb	r1, [r3]
 737:CAN_TX_RX_func.c ****             mailbox1[1]=CAN_RX_DATA_BYTE2(1);
 704              		.loc 1 737 0
 705 000a 1168     		ldr	r1, [r2]
 706 000c 090C     		lsrs	r1, r1, #16
 707 000e 5970     		strb	r1, [r3, #1]
 738:CAN_TX_RX_func.c ****             mailbox1[2]=CAN_RX_DATA_BYTE3(1);
 708              		.loc 1 738 0
 709 0010 1168     		ldr	r1, [r2]
 710 0012 090A     		lsrs	r1, r1, #8
 711 0014 9970     		strb	r1, [r3, #2]
 739:CAN_TX_RX_func.c ****             mailbox1[3]=CAN_RX_DATA_BYTE4(1);
 712              		.loc 1 739 0
 713 0016 1268     		ldr	r2, [r2]
 714 0018 DA70     		strb	r2, [r3, #3]
 740:CAN_TX_RX_func.c ****             mailbox1[4]=CAN_RX_DATA_BYTE5(1);
 715              		.loc 1 740 0
 716 001a 0B4A     		ldr	r2, .L47+8
 717 001c 1168     		ldr	r1, [r2]
 718 001e 090E     		lsrs	r1, r1, #24
 719 0020 1971     		strb	r1, [r3, #4]
 741:CAN_TX_RX_func.c ****             mailbox1[5]=CAN_RX_DATA_BYTE6(1);
 720              		.loc 1 741 0
 721 0022 1168     		ldr	r1, [r2]
 722 0024 090C     		lsrs	r1, r1, #16
 723 0026 5971     		strb	r1, [r3, #5]
 742:CAN_TX_RX_func.c ****             mailbox1[6]=CAN_RX_DATA_BYTE7(1);
 724              		.loc 1 742 0
 725 0028 1168     		ldr	r1, [r2]
 726 002a 090A     		lsrs	r1, r1, #8
 727 002c 9971     		strb	r1, [r3, #6]
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 27


 743:CAN_TX_RX_func.c ****             mailbox1[7]=CAN_RX_DATA_BYTE8(1);
 728              		.loc 1 743 0
 729 002e 1268     		ldr	r2, [r2]
 730 0030 DA71     		strb	r2, [r3, #7]
 744:CAN_TX_RX_func.c ****         /* `#END` */
 745:CAN_TX_RX_func.c **** 
 746:CAN_TX_RX_func.c ****         #ifdef CAN_RECEIVE_MSG_1_CALLBACK
 747:CAN_TX_RX_func.c ****             CAN_ReceiveMsg_1_Callback();
 748:CAN_TX_RX_func.c ****         #endif /* CAN_RECEIVE_MSG_1_CALLBACK */
 749:CAN_TX_RX_func.c **** 
 750:CAN_TX_RX_func.c ****         CAN_RX_ACK_MESSAGE(1u);
 731              		.loc 1 750 0
 732 0032 064A     		ldr	r2, .L47+12
 733 0034 1168     		ldr	r1, [r2]
 734 0036 0123     		movs	r3, #1
 735 0038 0B43     		orrs	r3, r1
 736 003a 1360     		str	r3, [r2]
 751:CAN_TX_RX_func.c ****     }
 737              		.loc 1 751 0
 738              		@ sp needed
 739 003c 7047     		bx	lr
 740              	.L48:
 741 003e C046     		.align	2
 742              	.L47:
 743 0040 C8002E40 		.word	1076756680
 744 0044 00000000 		.word	mailbox1
 745 0048 CC002E40 		.word	1076756684
 746 004c C0002E40 		.word	1076756672
 747              		.cfi_endproc
 748              	.LFE7:
 749              		.size	CAN_ReceiveMsg1, .-CAN_ReceiveMsg1
 750              		.section	.text.CAN_ReceiveMsg2,"ax",%progbits
 751              		.align	2
 752              		.global	CAN_ReceiveMsg2
 753              		.code	16
 754              		.thumb_func
 755              		.type	CAN_ReceiveMsg2, %function
 756              	CAN_ReceiveMsg2:
 757              	.LFB8:
 752:CAN_TX_RX_func.c **** #endif /* CAN_RX1_FUNC_ENABLE */
 753:CAN_TX_RX_func.c **** 
 754:CAN_TX_RX_func.c **** 
 755:CAN_TX_RX_func.c **** #if (CAN_RX2_FUNC_ENABLE)
 756:CAN_TX_RX_func.c ****     /*******************************************************************************
 757:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_ReceiveMsg2
 758:CAN_TX_RX_func.c ****     ********************************************************************************
 759:CAN_TX_RX_func.c ****     *
 760:CAN_TX_RX_func.c ****     * Summary:
 761:CAN_TX_RX_func.c ****     *  This function is the entry point to Receive Message 2 Interrupt. Clears the
 762:CAN_TX_RX_func.c ****     *  Receive Message 2 interrupt flag. Generated only for the Receive mailbox
 763:CAN_TX_RX_func.c ****     *  designed as Full.
 764:CAN_TX_RX_func.c ****     *
 765:CAN_TX_RX_func.c ****     * Parameters:
 766:CAN_TX_RX_func.c ****     *  None.
 767:CAN_TX_RX_func.c ****     *
 768:CAN_TX_RX_func.c ****     * Return:
 769:CAN_TX_RX_func.c ****     *  None.
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 28


 770:CAN_TX_RX_func.c ****     *
 771:CAN_TX_RX_func.c ****     * Reentrant:
 772:CAN_TX_RX_func.c ****     *  Depends on the Customer code.
 773:CAN_TX_RX_func.c ****     *
 774:CAN_TX_RX_func.c ****     *******************************************************************************/
 775:CAN_TX_RX_func.c ****     void CAN_ReceiveMsg2(void) 
 776:CAN_TX_RX_func.c ****     {
 758              		.loc 1 776 0
 759              		.cfi_startproc
 760              		@ args = 0, pretend = 0, frame = 0
 761              		@ frame_needed = 0, uses_anonymous_args = 0
 762              		@ link register save eliminated.
 777:CAN_TX_RX_func.c ****         /* `#START MESSAGE_2_RECEIVED` */
 778:CAN_TX_RX_func.c ****             mailbox2[0]=CAN_RX_DATA_BYTE1(2);
 763              		.loc 1 778 0
 764 0000 0F4A     		ldr	r2, .L50
 765 0002 1168     		ldr	r1, [r2]
 766 0004 090E     		lsrs	r1, r1, #24
 767 0006 0F4B     		ldr	r3, .L50+4
 768 0008 1970     		strb	r1, [r3]
 779:CAN_TX_RX_func.c ****             mailbox2[1]=CAN_RX_DATA_BYTE2(2);
 769              		.loc 1 779 0
 770 000a 1168     		ldr	r1, [r2]
 771 000c 090C     		lsrs	r1, r1, #16
 772 000e 5970     		strb	r1, [r3, #1]
 780:CAN_TX_RX_func.c ****             mailbox2[2]=CAN_RX_DATA_BYTE3(2);
 773              		.loc 1 780 0
 774 0010 1168     		ldr	r1, [r2]
 775 0012 090A     		lsrs	r1, r1, #8
 776 0014 9970     		strb	r1, [r3, #2]
 781:CAN_TX_RX_func.c ****             mailbox2[3]=CAN_RX_DATA_BYTE4(2);
 777              		.loc 1 781 0
 778 0016 1268     		ldr	r2, [r2]
 779 0018 DA70     		strb	r2, [r3, #3]
 782:CAN_TX_RX_func.c ****             mailbox2[4]=CAN_RX_DATA_BYTE5(2);
 780              		.loc 1 782 0
 781 001a 0B4A     		ldr	r2, .L50+8
 782 001c 1168     		ldr	r1, [r2]
 783 001e 090E     		lsrs	r1, r1, #24
 784 0020 1971     		strb	r1, [r3, #4]
 783:CAN_TX_RX_func.c ****             mailbox2[5]=CAN_RX_DATA_BYTE6(2);
 785              		.loc 1 783 0
 786 0022 1168     		ldr	r1, [r2]
 787 0024 090C     		lsrs	r1, r1, #16
 788 0026 5971     		strb	r1, [r3, #5]
 784:CAN_TX_RX_func.c ****             mailbox2[6]=CAN_RX_DATA_BYTE7(2);
 789              		.loc 1 784 0
 790 0028 1168     		ldr	r1, [r2]
 791 002a 090A     		lsrs	r1, r1, #8
 792 002c 9971     		strb	r1, [r3, #6]
 785:CAN_TX_RX_func.c ****             mailbox2[7]=CAN_RX_DATA_BYTE8(2);    
 793              		.loc 1 785 0
 794 002e 1268     		ldr	r2, [r2]
 795 0030 DA71     		strb	r2, [r3, #7]
 786:CAN_TX_RX_func.c ****         /* `#END` */
 787:CAN_TX_RX_func.c **** 
 788:CAN_TX_RX_func.c ****         #ifdef CAN_RECEIVE_MSG_2_CALLBACK
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 29


 789:CAN_TX_RX_func.c ****             CAN_ReceiveMsg_2_Callback();
 790:CAN_TX_RX_func.c ****         #endif /* CAN_RECEIVE_MSG_2_CALLBACK */
 791:CAN_TX_RX_func.c **** 
 792:CAN_TX_RX_func.c ****         CAN_RX_ACK_MESSAGE(2u);
 796              		.loc 1 792 0
 797 0032 064A     		ldr	r2, .L50+12
 798 0034 1168     		ldr	r1, [r2]
 799 0036 0123     		movs	r3, #1
 800 0038 0B43     		orrs	r3, r1
 801 003a 1360     		str	r3, [r2]
 793:CAN_TX_RX_func.c ****     }
 802              		.loc 1 793 0
 803              		@ sp needed
 804 003c 7047     		bx	lr
 805              	.L51:
 806 003e C046     		.align	2
 807              	.L50:
 808 0040 E8002E40 		.word	1076756712
 809 0044 00000000 		.word	mailbox2
 810 0048 EC002E40 		.word	1076756716
 811 004c E0002E40 		.word	1076756704
 812              		.cfi_endproc
 813              	.LFE8:
 814              		.size	CAN_ReceiveMsg2, .-CAN_ReceiveMsg2
 815              		.section	.text.CAN_ReceiveMsg3,"ax",%progbits
 816              		.align	2
 817              		.global	CAN_ReceiveMsg3
 818              		.code	16
 819              		.thumb_func
 820              		.type	CAN_ReceiveMsg3, %function
 821              	CAN_ReceiveMsg3:
 822              	.LFB9:
 794:CAN_TX_RX_func.c **** #endif /* CAN_RX2_FUNC_ENABLE */
 795:CAN_TX_RX_func.c **** 
 796:CAN_TX_RX_func.c **** 
 797:CAN_TX_RX_func.c **** #if (CAN_RX3_FUNC_ENABLE)
 798:CAN_TX_RX_func.c ****     /*******************************************************************************
 799:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_ReceiveMsg3
 800:CAN_TX_RX_func.c ****     ********************************************************************************
 801:CAN_TX_RX_func.c ****     *
 802:CAN_TX_RX_func.c ****     * Summary:
 803:CAN_TX_RX_func.c ****     *  This function is the entry point to Receive Message 3 Interrupt. Clears the
 804:CAN_TX_RX_func.c ****     *  Receive Message 3 interrupt flag. Generated only for the Receive mailbox
 805:CAN_TX_RX_func.c ****     *  designed as Full.
 806:CAN_TX_RX_func.c ****     *
 807:CAN_TX_RX_func.c ****     * Parameters:
 808:CAN_TX_RX_func.c ****     *  None.
 809:CAN_TX_RX_func.c ****     *
 810:CAN_TX_RX_func.c ****     * Return:
 811:CAN_TX_RX_func.c ****     *  None.
 812:CAN_TX_RX_func.c ****     *
 813:CAN_TX_RX_func.c ****     * Reentrant:
 814:CAN_TX_RX_func.c ****     *  Depends on the Customer code.
 815:CAN_TX_RX_func.c ****     *
 816:CAN_TX_RX_func.c ****     *******************************************************************************/
 817:CAN_TX_RX_func.c ****     void CAN_ReceiveMsg3(void) 
 818:CAN_TX_RX_func.c ****     {
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 30


 823              		.loc 1 818 0
 824              		.cfi_startproc
 825              		@ args = 0, pretend = 0, frame = 0
 826              		@ frame_needed = 0, uses_anonymous_args = 0
 827              		@ link register save eliminated.
 819:CAN_TX_RX_func.c ****         /* `#START MESSAGE_3_RECEIVED` */
 820:CAN_TX_RX_func.c ****             mailbox3[0]=CAN_RX_DATA_BYTE1(3);
 828              		.loc 1 820 0
 829 0000 0F4A     		ldr	r2, .L53
 830 0002 1168     		ldr	r1, [r2]
 831 0004 090E     		lsrs	r1, r1, #24
 832 0006 0F4B     		ldr	r3, .L53+4
 833 0008 1970     		strb	r1, [r3]
 821:CAN_TX_RX_func.c ****             mailbox3[1]=CAN_RX_DATA_BYTE2(3);
 834              		.loc 1 821 0
 835 000a 1168     		ldr	r1, [r2]
 836 000c 090C     		lsrs	r1, r1, #16
 837 000e 5970     		strb	r1, [r3, #1]
 822:CAN_TX_RX_func.c ****             mailbox3[2]=CAN_RX_DATA_BYTE3(3);
 838              		.loc 1 822 0
 839 0010 1168     		ldr	r1, [r2]
 840 0012 090A     		lsrs	r1, r1, #8
 841 0014 9970     		strb	r1, [r3, #2]
 823:CAN_TX_RX_func.c ****             mailbox3[3]=CAN_RX_DATA_BYTE4(3);
 842              		.loc 1 823 0
 843 0016 1268     		ldr	r2, [r2]
 844 0018 DA70     		strb	r2, [r3, #3]
 824:CAN_TX_RX_func.c ****             mailbox3[4]=CAN_RX_DATA_BYTE5(3);
 845              		.loc 1 824 0
 846 001a 0B4A     		ldr	r2, .L53+8
 847 001c 1168     		ldr	r1, [r2]
 848 001e 090E     		lsrs	r1, r1, #24
 849 0020 1971     		strb	r1, [r3, #4]
 825:CAN_TX_RX_func.c ****             mailbox3[5]=CAN_RX_DATA_BYTE6(3);
 850              		.loc 1 825 0
 851 0022 1168     		ldr	r1, [r2]
 852 0024 090C     		lsrs	r1, r1, #16
 853 0026 5971     		strb	r1, [r3, #5]
 826:CAN_TX_RX_func.c ****             mailbox3[6]=CAN_RX_DATA_BYTE7(3);
 854              		.loc 1 826 0
 855 0028 1168     		ldr	r1, [r2]
 856 002a 090A     		lsrs	r1, r1, #8
 857 002c 9971     		strb	r1, [r3, #6]
 827:CAN_TX_RX_func.c ****             mailbox3[7]=CAN_RX_DATA_BYTE8(3);   
 858              		.loc 1 827 0
 859 002e 1268     		ldr	r2, [r2]
 860 0030 DA71     		strb	r2, [r3, #7]
 828:CAN_TX_RX_func.c ****         /* `#END` */
 829:CAN_TX_RX_func.c **** 
 830:CAN_TX_RX_func.c ****         #ifdef CAN_RECEIVE_MSG_3_CALLBACK
 831:CAN_TX_RX_func.c ****             CAN_ReceiveMsg_3_Callback();
 832:CAN_TX_RX_func.c ****         #endif /* CAN_RECEIVE_MSG_3_CALLBACK */
 833:CAN_TX_RX_func.c **** 
 834:CAN_TX_RX_func.c ****         CAN_RX_ACK_MESSAGE(3u);
 861              		.loc 1 834 0
 862 0032 064A     		ldr	r2, .L53+12
 863 0034 1168     		ldr	r1, [r2]
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 31


 864 0036 0123     		movs	r3, #1
 865 0038 0B43     		orrs	r3, r1
 866 003a 1360     		str	r3, [r2]
 835:CAN_TX_RX_func.c ****     }
 867              		.loc 1 835 0
 868              		@ sp needed
 869 003c 7047     		bx	lr
 870              	.L54:
 871 003e C046     		.align	2
 872              	.L53:
 873 0040 08012E40 		.word	1076756744
 874 0044 00000000 		.word	mailbox3
 875 0048 0C012E40 		.word	1076756748
 876 004c 00012E40 		.word	1076756736
 877              		.cfi_endproc
 878              	.LFE9:
 879              		.size	CAN_ReceiveMsg3, .-CAN_ReceiveMsg3
 880              		.section	.text.CAN_ReceiveMsg4,"ax",%progbits
 881              		.align	2
 882              		.global	CAN_ReceiveMsg4
 883              		.code	16
 884              		.thumb_func
 885              		.type	CAN_ReceiveMsg4, %function
 886              	CAN_ReceiveMsg4:
 887              	.LFB10:
 836:CAN_TX_RX_func.c **** #endif /* CAN_RX3_FUNC_ENABLE */
 837:CAN_TX_RX_func.c **** 
 838:CAN_TX_RX_func.c **** 
 839:CAN_TX_RX_func.c **** #if (CAN_RX4_FUNC_ENABLE)
 840:CAN_TX_RX_func.c ****     /*******************************************************************************
 841:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_ReceiveMsg4
 842:CAN_TX_RX_func.c ****     ********************************************************************************
 843:CAN_TX_RX_func.c ****     *
 844:CAN_TX_RX_func.c ****     * Summary:
 845:CAN_TX_RX_func.c ****     *  This function is the entry point to Receive Message 4 Interrupt. Clears the
 846:CAN_TX_RX_func.c ****     *  Receive Message 4 interrupt flag. Generated only for the Receive mailbox
 847:CAN_TX_RX_func.c ****     *  designed as Full.
 848:CAN_TX_RX_func.c ****     *
 849:CAN_TX_RX_func.c ****     * Parameters:
 850:CAN_TX_RX_func.c ****     *  None.
 851:CAN_TX_RX_func.c ****     *
 852:CAN_TX_RX_func.c ****     * Return:
 853:CAN_TX_RX_func.c ****     *  None.
 854:CAN_TX_RX_func.c ****     *
 855:CAN_TX_RX_func.c ****     * Reentrant:
 856:CAN_TX_RX_func.c ****     *  Depends on the Customer code.
 857:CAN_TX_RX_func.c ****     *
 858:CAN_TX_RX_func.c ****     *******************************************************************************/
 859:CAN_TX_RX_func.c ****     void CAN_ReceiveMsg4(void) 
 860:CAN_TX_RX_func.c ****     {
 888              		.loc 1 860 0
 889              		.cfi_startproc
 890              		@ args = 0, pretend = 0, frame = 0
 891              		@ frame_needed = 0, uses_anonymous_args = 0
 892              		@ link register save eliminated.
 861:CAN_TX_RX_func.c ****         /* `#START MESSAGE_4_RECEIVED` */
 862:CAN_TX_RX_func.c ****             mailbox4[0]=CAN_RX_DATA_BYTE1(4);
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 32


 893              		.loc 1 862 0
 894 0000 0F4A     		ldr	r2, .L56
 895 0002 1168     		ldr	r1, [r2]
 896 0004 090E     		lsrs	r1, r1, #24
 897 0006 0F4B     		ldr	r3, .L56+4
 898 0008 1970     		strb	r1, [r3]
 863:CAN_TX_RX_func.c ****             mailbox4[1]=CAN_RX_DATA_BYTE2(4);
 899              		.loc 1 863 0
 900 000a 1168     		ldr	r1, [r2]
 901 000c 090C     		lsrs	r1, r1, #16
 902 000e 5970     		strb	r1, [r3, #1]
 864:CAN_TX_RX_func.c ****             mailbox4[2]=CAN_RX_DATA_BYTE3(4);
 903              		.loc 1 864 0
 904 0010 1168     		ldr	r1, [r2]
 905 0012 090A     		lsrs	r1, r1, #8
 906 0014 9970     		strb	r1, [r3, #2]
 865:CAN_TX_RX_func.c ****             mailbox4[3]=CAN_RX_DATA_BYTE4(4);
 907              		.loc 1 865 0
 908 0016 1268     		ldr	r2, [r2]
 909 0018 DA70     		strb	r2, [r3, #3]
 866:CAN_TX_RX_func.c ****             mailbox4[4]=CAN_RX_DATA_BYTE5(4);
 910              		.loc 1 866 0
 911 001a 0B4A     		ldr	r2, .L56+8
 912 001c 1168     		ldr	r1, [r2]
 913 001e 090E     		lsrs	r1, r1, #24
 914 0020 1971     		strb	r1, [r3, #4]
 867:CAN_TX_RX_func.c ****             mailbox4[5]=CAN_RX_DATA_BYTE6(4);
 915              		.loc 1 867 0
 916 0022 1168     		ldr	r1, [r2]
 917 0024 090C     		lsrs	r1, r1, #16
 918 0026 5971     		strb	r1, [r3, #5]
 868:CAN_TX_RX_func.c ****             mailbox4[6]=CAN_RX_DATA_BYTE7(4);
 919              		.loc 1 868 0
 920 0028 1168     		ldr	r1, [r2]
 921 002a 090A     		lsrs	r1, r1, #8
 922 002c 9971     		strb	r1, [r3, #6]
 869:CAN_TX_RX_func.c ****             mailbox4[7]=CAN_RX_DATA_BYTE8(4); 
 923              		.loc 1 869 0
 924 002e 1268     		ldr	r2, [r2]
 925 0030 DA71     		strb	r2, [r3, #7]
 870:CAN_TX_RX_func.c ****         /* `#END` */
 871:CAN_TX_RX_func.c **** 
 872:CAN_TX_RX_func.c ****         #ifdef CAN_RECEIVE_MSG_4_CALLBACK
 873:CAN_TX_RX_func.c ****             CAN_ReceiveMsg_4_Callback();
 874:CAN_TX_RX_func.c ****         #endif /* CAN_RECEIVE_MSG_4_CALLBACK */
 875:CAN_TX_RX_func.c **** 
 876:CAN_TX_RX_func.c ****         CAN_RX_ACK_MESSAGE(4u);
 926              		.loc 1 876 0
 927 0032 064A     		ldr	r2, .L56+12
 928 0034 1168     		ldr	r1, [r2]
 929 0036 0123     		movs	r3, #1
 930 0038 0B43     		orrs	r3, r1
 931 003a 1360     		str	r3, [r2]
 877:CAN_TX_RX_func.c ****     }
 932              		.loc 1 877 0
 933              		@ sp needed
 934 003c 7047     		bx	lr
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 33


 935              	.L57:
 936 003e C046     		.align	2
 937              	.L56:
 938 0040 28012E40 		.word	1076756776
 939 0044 00000000 		.word	mailbox4
 940 0048 2C012E40 		.word	1076756780
 941 004c 20012E40 		.word	1076756768
 942              		.cfi_endproc
 943              	.LFE10:
 944              		.size	CAN_ReceiveMsg4, .-CAN_ReceiveMsg4
 945              		.text
 946              	.Letext0:
 947              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 948              		.file 3 "Generated_Source\\PSoC4/CAN.h"
 949              		.file 4 "Generated_Source\\PSoC4/CyLib.h"
 950              		.section	.debug_info,"",%progbits
 951              	.Ldebug_info0:
 952 0000 75040000 		.4byte	0x475
 953 0004 0400     		.2byte	0x4
 954 0006 00000000 		.4byte	.Ldebug_abbrev0
 955 000a 04       		.byte	0x4
 956 000b 01       		.uleb128 0x1
 957 000c 00000000 		.4byte	.LASF61
 958 0010 0C       		.byte	0xc
 959 0011 27030000 		.4byte	.LASF62
 960 0015 40020000 		.4byte	.LASF63
 961 0019 00000000 		.4byte	.Ldebug_ranges0+0
 962 001d 00000000 		.4byte	0
 963 0021 00000000 		.4byte	.Ldebug_line0
 964 0025 02       		.uleb128 0x2
 965 0026 01       		.byte	0x1
 966 0027 06       		.byte	0x6
 967 0028 C0000000 		.4byte	.LASF0
 968 002c 02       		.uleb128 0x2
 969 002d 01       		.byte	0x1
 970 002e 08       		.byte	0x8
 971 002f 09020000 		.4byte	.LASF1
 972 0033 02       		.uleb128 0x2
 973 0034 02       		.byte	0x2
 974 0035 05       		.byte	0x5
 975 0036 17020000 		.4byte	.LASF2
 976 003a 02       		.uleb128 0x2
 977 003b 02       		.byte	0x2
 978 003c 07       		.byte	0x7
 979 003d 93010000 		.4byte	.LASF3
 980 0041 02       		.uleb128 0x2
 981 0042 04       		.byte	0x4
 982 0043 05       		.byte	0x5
 983 0044 F9000000 		.4byte	.LASF4
 984 0048 02       		.uleb128 0x2
 985 0049 04       		.byte	0x4
 986 004a 07       		.byte	0x7
 987 004b 64010000 		.4byte	.LASF5
 988 004f 02       		.uleb128 0x2
 989 0050 08       		.byte	0x8
 990 0051 05       		.byte	0x5
 991 0052 B2000000 		.4byte	.LASF6
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 34


 992 0056 02       		.uleb128 0x2
 993 0057 08       		.byte	0x8
 994 0058 07       		.byte	0x7
 995 0059 8E000000 		.4byte	.LASF7
 996 005d 03       		.uleb128 0x3
 997 005e 04       		.byte	0x4
 998 005f 05       		.byte	0x5
 999 0060 696E7400 		.ascii	"int\000"
 1000 0064 02       		.uleb128 0x2
 1001 0065 04       		.byte	0x4
 1002 0066 07       		.byte	0x7
 1003 0067 57010000 		.4byte	.LASF8
 1004 006b 04       		.uleb128 0x4
 1005 006c 16010000 		.4byte	.LASF9
 1006 0070 02       		.byte	0x2
 1007 0071 9801     		.2byte	0x198
 1008 0073 2C000000 		.4byte	0x2c
 1009 0077 04       		.uleb128 0x4
 1010 0078 2F010000 		.4byte	.LASF10
 1011 007c 02       		.byte	0x2
 1012 007d 9A01     		.2byte	0x19a
 1013 007f 48000000 		.4byte	0x48
 1014 0083 02       		.uleb128 0x2
 1015 0084 04       		.byte	0x4
 1016 0085 04       		.byte	0x4
 1017 0086 FE010000 		.4byte	.LASF11
 1018 008a 02       		.uleb128 0x2
 1019 008b 08       		.byte	0x8
 1020 008c 04       		.byte	0x4
 1021 008d 22010000 		.4byte	.LASF12
 1022 0091 02       		.uleb128 0x2
 1023 0092 01       		.byte	0x1
 1024 0093 08       		.byte	0x8
 1025 0094 B6020000 		.4byte	.LASF13
 1026 0098 04       		.uleb128 0x4
 1027 0099 04020000 		.4byte	.LASF14
 1028 009d 02       		.byte	0x2
 1029 009e 4202     		.2byte	0x242
 1030 00a0 A4000000 		.4byte	0xa4
 1031 00a4 05       		.uleb128 0x5
 1032 00a5 6B000000 		.4byte	0x6b
 1033 00a9 04       		.uleb128 0x4
 1034 00aa C5010000 		.4byte	.LASF15
 1035 00ae 02       		.byte	0x2
 1036 00af 4402     		.2byte	0x244
 1037 00b1 B5000000 		.4byte	0xb5
 1038 00b5 05       		.uleb128 0x5
 1039 00b6 77000000 		.4byte	0x77
 1040 00ba 02       		.uleb128 0x2
 1041 00bb 08       		.byte	0x8
 1042 00bc 04       		.byte	0x4
 1043 00bd DF010000 		.4byte	.LASF16
 1044 00c1 02       		.uleb128 0x2
 1045 00c2 04       		.byte	0x4
 1046 00c3 07       		.byte	0x7
 1047 00c4 D6010000 		.4byte	.LASF17
 1048 00c8 06       		.uleb128 0x6
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 35


 1049 00c9 08       		.byte	0x8
 1050 00ca 03       		.byte	0x3
 1051 00cb 6F       		.byte	0x6f
 1052 00cc DD000000 		.4byte	0xdd
 1053 00d0 07       		.uleb128 0x7
 1054 00d1 43010000 		.4byte	.LASF19
 1055 00d5 03       		.byte	0x3
 1056 00d6 71       		.byte	0x71
 1057 00d7 DD000000 		.4byte	0xdd
 1058 00db 00       		.byte	0
 1059 00dc 00       		.byte	0
 1060 00dd 08       		.uleb128 0x8
 1061 00de 6B000000 		.4byte	0x6b
 1062 00e2 ED000000 		.4byte	0xed
 1063 00e6 09       		.uleb128 0x9
 1064 00e7 C1000000 		.4byte	0xc1
 1065 00eb 07       		.byte	0x7
 1066 00ec 00       		.byte	0
 1067 00ed 0A       		.uleb128 0xa
 1068 00ee 2D020000 		.4byte	.LASF18
 1069 00f2 03       		.byte	0x3
 1070 00f3 72       		.byte	0x72
 1071 00f4 C8000000 		.4byte	0xc8
 1072 00f8 06       		.uleb128 0x6
 1073 00f9 08       		.byte	0x8
 1074 00fa 03       		.byte	0x3
 1075 00fb 75       		.byte	0x75
 1076 00fc 0D010000 		.4byte	0x10d
 1077 0100 07       		.uleb128 0x7
 1078 0101 43010000 		.4byte	.LASF19
 1079 0105 03       		.byte	0x3
 1080 0106 77       		.byte	0x77
 1081 0107 1D010000 		.4byte	0x11d
 1082 010b 00       		.byte	0
 1083 010c 00       		.byte	0
 1084 010d 08       		.uleb128 0x8
 1085 010e 98000000 		.4byte	0x98
 1086 0112 1D010000 		.4byte	0x11d
 1087 0116 09       		.uleb128 0x9
 1088 0117 C1000000 		.4byte	0xc1
 1089 011b 07       		.byte	0x7
 1090 011c 00       		.byte	0
 1091 011d 05       		.uleb128 0x5
 1092 011e 0D010000 		.4byte	0x10d
 1093 0122 0A       		.uleb128 0xa
 1094 0123 C8020000 		.4byte	.LASF20
 1095 0127 03       		.byte	0x3
 1096 0128 78       		.byte	0x78
 1097 0129 F8000000 		.4byte	0xf8
 1098 012d 06       		.uleb128 0x6
 1099 012e 04       		.byte	0x4
 1100 012f 03       		.byte	0x3
 1101 0130 7B       		.byte	0x7b
 1102 0131 42010000 		.4byte	0x142
 1103 0135 07       		.uleb128 0x7
 1104 0136 43010000 		.4byte	.LASF19
 1105 013a 03       		.byte	0x3
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 36


 1106 013b 7D       		.byte	0x7d
 1107 013c 52010000 		.4byte	0x152
 1108 0140 00       		.byte	0
 1109 0141 00       		.byte	0
 1110 0142 08       		.uleb128 0x8
 1111 0143 98000000 		.4byte	0x98
 1112 0147 52010000 		.4byte	0x152
 1113 014b 09       		.uleb128 0x9
 1114 014c C1000000 		.4byte	0xc1
 1115 0150 03       		.byte	0x3
 1116 0151 00       		.byte	0
 1117 0152 05       		.uleb128 0x5
 1118 0153 42010000 		.4byte	0x142
 1119 0157 0A       		.uleb128 0xa
 1120 0158 CB010000 		.4byte	.LASF21
 1121 015c 03       		.byte	0x3
 1122 015d 7E       		.byte	0x7e
 1123 015e 2D010000 		.4byte	0x12d
 1124 0162 06       		.uleb128 0x6
 1125 0163 10       		.byte	0x10
 1126 0164 03       		.byte	0x3
 1127 0165 81       		.byte	0x81
 1128 0166 BE010000 		.4byte	0x1be
 1129 016a 0B       		.uleb128 0xb
 1130 016b 696400   		.ascii	"id\000"
 1131 016e 03       		.byte	0x3
 1132 016f 83       		.byte	0x83
 1133 0170 77000000 		.4byte	0x77
 1134 0174 00       		.byte	0
 1135 0175 0B       		.uleb128 0xb
 1136 0176 72747200 		.ascii	"rtr\000"
 1137 017a 03       		.byte	0x3
 1138 017b 84       		.byte	0x84
 1139 017c 6B000000 		.4byte	0x6b
 1140 0180 04       		.byte	0x4
 1141 0181 0B       		.uleb128 0xb
 1142 0182 69646500 		.ascii	"ide\000"
 1143 0186 03       		.byte	0x3
 1144 0187 85       		.byte	0x85
 1145 0188 6B000000 		.4byte	0x6b
 1146 018c 05       		.byte	0x5
 1147 018d 0B       		.uleb128 0xb
 1148 018e 646C6300 		.ascii	"dlc\000"
 1149 0192 03       		.byte	0x3
 1150 0193 86       		.byte	0x86
 1151 0194 6B000000 		.4byte	0x6b
 1152 0198 06       		.byte	0x6
 1153 0199 0B       		.uleb128 0xb
 1154 019a 69727100 		.ascii	"irq\000"
 1155 019e 03       		.byte	0x3
 1156 019f 87       		.byte	0x87
 1157 01a0 6B000000 		.4byte	0x6b
 1158 01a4 07       		.byte	0x7
 1159 01a5 0B       		.uleb128 0xb
 1160 01a6 73737400 		.ascii	"sst\000"
 1161 01aa 03       		.byte	0x3
 1162 01ab 89       		.byte	0x89
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 37


 1163 01ac 6B000000 		.4byte	0x6b
 1164 01b0 08       		.byte	0x8
 1165 01b1 0B       		.uleb128 0xb
 1166 01b2 6D736700 		.ascii	"msg\000"
 1167 01b6 03       		.byte	0x3
 1168 01b7 8B       		.byte	0x8b
 1169 01b8 BE010000 		.4byte	0x1be
 1170 01bc 0C       		.byte	0xc
 1171 01bd 00       		.byte	0
 1172 01be 0C       		.uleb128 0xc
 1173 01bf 04       		.byte	0x4
 1174 01c0 ED000000 		.4byte	0xed
 1175 01c4 0A       		.uleb128 0xa
 1176 01c5 3E030000 		.4byte	.LASF22
 1177 01c9 03       		.byte	0x3
 1178 01ca 8C       		.byte	0x8c
 1179 01cb 62010000 		.4byte	0x162
 1180 01cf 06       		.uleb128 0x6
 1181 01d0 20       		.byte	0x20
 1182 01d1 03       		.byte	0x3
 1183 01d2 A0       		.byte	0xa0
 1184 01d3 2C020000 		.4byte	0x22c
 1185 01d7 07       		.uleb128 0x7
 1186 01d8 38030000 		.4byte	.LASF23
 1187 01dc 03       		.byte	0x3
 1188 01dd A2       		.byte	0xa2
 1189 01de 57010000 		.4byte	0x157
 1190 01e2 00       		.byte	0
 1191 01e3 07       		.uleb128 0x7
 1192 01e4 EB010000 		.4byte	.LASF24
 1193 01e8 03       		.byte	0x3
 1194 01e9 A3       		.byte	0xa3
 1195 01ea 57010000 		.4byte	0x157
 1196 01ee 04       		.byte	0x4
 1197 01ef 07       		.uleb128 0x7
 1198 01f0 0F010000 		.4byte	.LASF25
 1199 01f4 03       		.byte	0x3
 1200 01f5 A4       		.byte	0xa4
 1201 01f6 22010000 		.4byte	0x122
 1202 01fa 08       		.byte	0x8
 1203 01fb 07       		.uleb128 0x7
 1204 01fc 1C010000 		.4byte	.LASF26
 1205 0200 03       		.byte	0x3
 1206 0201 A5       		.byte	0xa5
 1207 0202 57010000 		.4byte	0x157
 1208 0206 10       		.byte	0x10
 1209 0207 07       		.uleb128 0x7
 1210 0208 4E030000 		.4byte	.LASF27
 1211 020c 03       		.byte	0x3
 1212 020d A6       		.byte	0xa6
 1213 020e 57010000 		.4byte	0x157
 1214 0212 14       		.byte	0x14
 1215 0213 07       		.uleb128 0x7
 1216 0214 AB000000 		.4byte	.LASF28
 1217 0218 03       		.byte	0x3
 1218 0219 A7       		.byte	0xa7
 1219 021a 57010000 		.4byte	0x157
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 38


 1220 021e 18       		.byte	0x18
 1221 021f 07       		.uleb128 0x7
 1222 0220 54030000 		.4byte	.LASF29
 1223 0224 03       		.byte	0x3
 1224 0225 A8       		.byte	0xa8
 1225 0226 57010000 		.4byte	0x157
 1226 022a 1C       		.byte	0x1c
 1227 022b 00       		.byte	0
 1228 022c 0A       		.uleb128 0xa
 1229 022d A6010000 		.4byte	.LASF30
 1230 0231 03       		.byte	0x3
 1231 0232 A9       		.byte	0xa9
 1232 0233 CF010000 		.4byte	0x1cf
 1233 0237 06       		.uleb128 0x6
 1234 0238 10       		.byte	0x10
 1235 0239 03       		.byte	0x3
 1236 023a AC       		.byte	0xac
 1237 023b 64020000 		.4byte	0x264
 1238 023f 07       		.uleb128 0x7
 1239 0240 A5000000 		.4byte	.LASF31
 1240 0244 03       		.byte	0x3
 1241 0245 AE       		.byte	0xae
 1242 0246 57010000 		.4byte	0x157
 1243 024a 00       		.byte	0
 1244 024b 07       		.uleb128 0x7
 1245 024c 49030000 		.4byte	.LASF32
 1246 0250 03       		.byte	0x3
 1247 0251 AF       		.byte	0xaf
 1248 0252 57010000 		.4byte	0x157
 1249 0256 04       		.byte	0x4
 1250 0257 07       		.uleb128 0x7
 1251 0258 BE010000 		.4byte	.LASF33
 1252 025c 03       		.byte	0x3
 1253 025d B0       		.byte	0xb0
 1254 025e 22010000 		.4byte	0x122
 1255 0262 08       		.byte	0x8
 1256 0263 00       		.byte	0
 1257 0264 0A       		.uleb128 0xa
 1258 0265 A8020000 		.4byte	.LASF34
 1259 0269 03       		.byte	0x3
 1260 026a B1       		.byte	0xb1
 1261 026b 37020000 		.4byte	0x237
 1262 026f 0D       		.uleb128 0xd
 1263 0270 76010000 		.4byte	.LASF41
 1264 0274 01       		.byte	0x1
 1265 0275 3A       		.byte	0x3a
 1266 0276 6B000000 		.4byte	0x6b
 1267 027a 00000000 		.4byte	.LFB1
 1268 027e 58010000 		.4byte	.LFE1-.LFB1
 1269 0282 01       		.uleb128 0x1
 1270 0283 9C       		.byte	0x9c
 1271 0284 10030000 		.4byte	0x310
 1272 0288 0E       		.uleb128 0xe
 1273 0289 F6010000 		.4byte	.LASF39
 1274 028d 01       		.byte	0x1
 1275 028e 3A       		.byte	0x3a
 1276 028f 10030000 		.4byte	0x310
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 39


 1277 0293 00000000 		.4byte	.LLST0
 1278 0297 0F       		.uleb128 0xf
 1279 0298 6900     		.ascii	"i\000"
 1280 029a 01       		.byte	0x1
 1281 029b 3C       		.byte	0x3c
 1282 029c 6B000000 		.4byte	0x6b
 1283 02a0 2C000000 		.4byte	.LLST1
 1284 02a4 0F       		.uleb128 0xf
 1285 02a5 6A00     		.ascii	"j\000"
 1286 02a7 01       		.byte	0x1
 1287 02a8 3C       		.byte	0x3c
 1288 02a9 6B000000 		.4byte	0x6b
 1289 02ad 55000000 		.4byte	.LLST2
 1290 02b1 10       		.uleb128 0x10
 1291 02b2 29010000 		.4byte	.LASF35
 1292 02b6 01       		.byte	0x1
 1293 02b7 3C       		.byte	0x3c
 1294 02b8 6B000000 		.4byte	0x6b
 1295 02bc 7F000000 		.4byte	.LLST3
 1296 02c0 10       		.uleb128 0x10
 1297 02c1 F0010000 		.4byte	.LASF36
 1298 02c5 01       		.byte	0x1
 1299 02c6 3D       		.byte	0x3d
 1300 02c7 6B000000 		.4byte	0x6b
 1301 02cb A8000000 		.4byte	.LLST4
 1302 02cf 10       		.uleb128 0x10
 1303 02d0 84030000 		.4byte	.LASF37
 1304 02d4 01       		.byte	0x1
 1305 02d5 3E       		.byte	0x3e
 1306 02d6 6B000000 		.4byte	0x6b
 1307 02da C7000000 		.4byte	.LLST5
 1308 02de 10       		.uleb128 0x10
 1309 02df 8B010000 		.4byte	.LASF38
 1310 02e3 01       		.byte	0x1
 1311 02e4 3F       		.byte	0x3f
 1312 02e5 77000000 		.4byte	0x77
 1313 02e9 FD000000 		.4byte	.LLST6
 1314 02ed 11       		.uleb128 0x11
 1315 02ee E6000000 		.4byte	.LVL15
 1316 02f2 62040000 		.4byte	0x462
 1317 02f6 00030000 		.4byte	0x300
 1318 02fa 12       		.uleb128 0x12
 1319 02fb 01       		.uleb128 0x1
 1320 02fc 50       		.byte	0x50
 1321 02fd 01       		.uleb128 0x1
 1322 02fe 4B       		.byte	0x4b
 1323 02ff 00       		.byte	0
 1324 0300 13       		.uleb128 0x13
 1325 0301 14010000 		.4byte	.LVL16
 1326 0305 6D040000 		.4byte	0x46d
 1327 0309 12       		.uleb128 0x12
 1328 030a 01       		.uleb128 0x1
 1329 030b 50       		.byte	0x50
 1330 030c 01       		.uleb128 0x1
 1331 030d 4B       		.byte	0x4b
 1332 030e 00       		.byte	0
 1333 030f 00       		.byte	0
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 40


 1334 0310 0C       		.uleb128 0xc
 1335 0311 04       		.byte	0x4
 1336 0312 16030000 		.4byte	0x316
 1337 0316 14       		.uleb128 0x14
 1338 0317 C4010000 		.4byte	0x1c4
 1339 031b 15       		.uleb128 0x15
 1340 031c 36010000 		.4byte	.LASF44
 1341 0320 01       		.byte	0x1
 1342 0321 B8       		.byte	0xb8
 1343 0322 00000000 		.4byte	.LFB2
 1344 0326 20000000 		.4byte	.LFE2-.LFB2
 1345 032a 01       		.uleb128 0x1
 1346 032b 9C       		.byte	0x9c
 1347 032c 40030000 		.4byte	0x340
 1348 0330 0E       		.uleb128 0xe
 1349 0331 82010000 		.4byte	.LASF40
 1350 0335 01       		.byte	0x1
 1351 0336 B8       		.byte	0xb8
 1352 0337 6B000000 		.4byte	0x6b
 1353 033b 3D010000 		.4byte	.LLST7
 1354 033f 00       		.byte	0
 1355 0340 0D       		.uleb128 0xd
 1356 0341 5B030000 		.4byte	.LASF42
 1357 0345 01       		.byte	0x1
 1358 0346 D6       		.byte	0xd6
 1359 0347 6B000000 		.4byte	0x6b
 1360 034b 00000000 		.4byte	.LFB3
 1361 034f A8000000 		.4byte	.LFE3-.LFB3
 1362 0353 01       		.uleb128 0x1
 1363 0354 9C       		.byte	0x9c
 1364 0355 69030000 		.4byte	0x369
 1365 0359 10       		.uleb128 0x10
 1366 035a 84030000 		.4byte	.LASF37
 1367 035e 01       		.byte	0x1
 1368 035f D8       		.byte	0xd8
 1369 0360 6B000000 		.4byte	0x6b
 1370 0364 5E010000 		.4byte	.LLST8
 1371 0368 00       		.byte	0
 1372 0369 16       		.uleb128 0x16
 1373 036a 68030000 		.4byte	.LASF43
 1374 036e 01       		.byte	0x1
 1375 036f 1101     		.2byte	0x111
 1376 0371 6B000000 		.4byte	0x6b
 1377 0375 00000000 		.4byte	.LFB4
 1378 0379 A8000000 		.4byte	.LFE4-.LFB4
 1379 037d 01       		.uleb128 0x1
 1380 037e 9C       		.byte	0x9c
 1381 037f 94030000 		.4byte	0x394
 1382 0383 17       		.uleb128 0x17
 1383 0384 84030000 		.4byte	.LASF37
 1384 0388 01       		.byte	0x1
 1385 0389 1301     		.2byte	0x113
 1386 038b 6B000000 		.4byte	0x6b
 1387 038f 7D010000 		.4byte	.LLST9
 1388 0393 00       		.byte	0
 1389 0394 18       		.uleb128 0x18
 1390 0395 75030000 		.4byte	.LASF45
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 41


 1391 0399 01       		.byte	0x1
 1392 039a 8202     		.2byte	0x282
 1393 039c 00000000 		.4byte	.LFB5
 1394 03a0 1C000000 		.4byte	.LFE5-.LFB5
 1395 03a4 01       		.uleb128 0x1
 1396 03a5 9C       		.byte	0x9c
 1397 03a6 BB030000 		.4byte	0x3bb
 1398 03aa 19       		.uleb128 0x19
 1399 03ab B4010000 		.4byte	.LASF46
 1400 03af 01       		.byte	0x1
 1401 03b0 8202     		.2byte	0x282
 1402 03b2 6B000000 		.4byte	0x6b
 1403 03b6 9C010000 		.4byte	.LLST10
 1404 03ba 00       		.byte	0
 1405 03bb 1A       		.uleb128 0x1a
 1406 03bc 17030000 		.4byte	.LASF47
 1407 03c0 01       		.byte	0x1
 1408 03c1 AF02     		.2byte	0x2af
 1409 03c3 00000000 		.4byte	.LFB6
 1410 03c7 50000000 		.4byte	.LFE6-.LFB6
 1411 03cb 01       		.uleb128 0x1
 1412 03cc 9C       		.byte	0x9c
 1413 03cd 1A       		.uleb128 0x1a
 1414 03ce D7020000 		.4byte	.LASF48
 1415 03d2 01       		.byte	0x1
 1416 03d3 DD02     		.2byte	0x2dd
 1417 03d5 00000000 		.4byte	.LFB7
 1418 03d9 50000000 		.4byte	.LFE7-.LFB7
 1419 03dd 01       		.uleb128 0x1
 1420 03de 9C       		.byte	0x9c
 1421 03df 1A       		.uleb128 0x1a
 1422 03e0 E7020000 		.4byte	.LASF49
 1423 03e4 01       		.byte	0x1
 1424 03e5 0703     		.2byte	0x307
 1425 03e7 00000000 		.4byte	.LFB8
 1426 03eb 50000000 		.4byte	.LFE8-.LFB8
 1427 03ef 01       		.uleb128 0x1
 1428 03f0 9C       		.byte	0x9c
 1429 03f1 1A       		.uleb128 0x1a
 1430 03f2 F7020000 		.4byte	.LASF50
 1431 03f6 01       		.byte	0x1
 1432 03f7 3103     		.2byte	0x331
 1433 03f9 00000000 		.4byte	.LFB9
 1434 03fd 50000000 		.4byte	.LFE9-.LFB9
 1435 0401 01       		.uleb128 0x1
 1436 0402 9C       		.byte	0x9c
 1437 0403 1A       		.uleb128 0x1a
 1438 0404 07030000 		.4byte	.LASF51
 1439 0408 01       		.byte	0x1
 1440 0409 5B03     		.2byte	0x35b
 1441 040b 00000000 		.4byte	.LFB10
 1442 040f 50000000 		.4byte	.LFE10-.LFB10
 1443 0413 01       		.uleb128 0x1
 1444 0414 9C       		.byte	0x9c
 1445 0415 1B       		.uleb128 0x1b
 1446 0416 BB020000 		.4byte	.LASF52
 1447 041a 01       		.byte	0x1
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 42


 1448 041b 1C       		.byte	0x1c
 1449 041c DD000000 		.4byte	0xdd
 1450 0420 1B       		.uleb128 0x1b
 1451 0421 48010000 		.4byte	.LASF53
 1452 0425 01       		.byte	0x1
 1453 0426 1D       		.byte	0x1d
 1454 0427 DD000000 		.4byte	0xdd
 1455 042b 1B       		.uleb128 0x1b
 1456 042c CC000000 		.4byte	.LASF54
 1457 0430 01       		.byte	0x1
 1458 0431 1E       		.byte	0x1e
 1459 0432 DD000000 		.4byte	0xdd
 1460 0436 1B       		.uleb128 0x1b
 1461 0437 D5000000 		.4byte	.LASF55
 1462 043b 01       		.byte	0x1
 1463 043c 1F       		.byte	0x1f
 1464 043d DD000000 		.4byte	0xdd
 1465 0441 1B       		.uleb128 0x1b
 1466 0442 DE000000 		.4byte	.LASF56
 1467 0446 01       		.byte	0x1
 1468 0447 20       		.byte	0x20
 1469 0448 DD000000 		.4byte	0xdd
 1470 044c 1B       		.uleb128 0x1b
 1471 044d E7000000 		.4byte	.LASF57
 1472 0451 01       		.byte	0x1
 1473 0452 21       		.byte	0x21
 1474 0453 DD000000 		.4byte	0xdd
 1475 0457 1B       		.uleb128 0x1b
 1476 0458 F0000000 		.4byte	.LASF58
 1477 045c 01       		.byte	0x1
 1478 045d 22       		.byte	0x22
 1479 045e DD000000 		.4byte	0xdd
 1480 0462 1C       		.uleb128 0x1c
 1481 0463 02010000 		.4byte	.LASF59
 1482 0467 02010000 		.4byte	.LASF59
 1483 046b 04       		.byte	0x4
 1484 046c C3       		.byte	0xc3
 1485 046d 1C       		.uleb128 0x1c
 1486 046e 21020000 		.4byte	.LASF60
 1487 0472 21020000 		.4byte	.LASF60
 1488 0476 04       		.byte	0x4
 1489 0477 C1       		.byte	0xc1
 1490 0478 00       		.byte	0
 1491              		.section	.debug_abbrev,"",%progbits
 1492              	.Ldebug_abbrev0:
 1493 0000 01       		.uleb128 0x1
 1494 0001 11       		.uleb128 0x11
 1495 0002 01       		.byte	0x1
 1496 0003 25       		.uleb128 0x25
 1497 0004 0E       		.uleb128 0xe
 1498 0005 13       		.uleb128 0x13
 1499 0006 0B       		.uleb128 0xb
 1500 0007 03       		.uleb128 0x3
 1501 0008 0E       		.uleb128 0xe
 1502 0009 1B       		.uleb128 0x1b
 1503 000a 0E       		.uleb128 0xe
 1504 000b 55       		.uleb128 0x55
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 43


 1505 000c 17       		.uleb128 0x17
 1506 000d 11       		.uleb128 0x11
 1507 000e 01       		.uleb128 0x1
 1508 000f 10       		.uleb128 0x10
 1509 0010 17       		.uleb128 0x17
 1510 0011 00       		.byte	0
 1511 0012 00       		.byte	0
 1512 0013 02       		.uleb128 0x2
 1513 0014 24       		.uleb128 0x24
 1514 0015 00       		.byte	0
 1515 0016 0B       		.uleb128 0xb
 1516 0017 0B       		.uleb128 0xb
 1517 0018 3E       		.uleb128 0x3e
 1518 0019 0B       		.uleb128 0xb
 1519 001a 03       		.uleb128 0x3
 1520 001b 0E       		.uleb128 0xe
 1521 001c 00       		.byte	0
 1522 001d 00       		.byte	0
 1523 001e 03       		.uleb128 0x3
 1524 001f 24       		.uleb128 0x24
 1525 0020 00       		.byte	0
 1526 0021 0B       		.uleb128 0xb
 1527 0022 0B       		.uleb128 0xb
 1528 0023 3E       		.uleb128 0x3e
 1529 0024 0B       		.uleb128 0xb
 1530 0025 03       		.uleb128 0x3
 1531 0026 08       		.uleb128 0x8
 1532 0027 00       		.byte	0
 1533 0028 00       		.byte	0
 1534 0029 04       		.uleb128 0x4
 1535 002a 16       		.uleb128 0x16
 1536 002b 00       		.byte	0
 1537 002c 03       		.uleb128 0x3
 1538 002d 0E       		.uleb128 0xe
 1539 002e 3A       		.uleb128 0x3a
 1540 002f 0B       		.uleb128 0xb
 1541 0030 3B       		.uleb128 0x3b
 1542 0031 05       		.uleb128 0x5
 1543 0032 49       		.uleb128 0x49
 1544 0033 13       		.uleb128 0x13
 1545 0034 00       		.byte	0
 1546 0035 00       		.byte	0
 1547 0036 05       		.uleb128 0x5
 1548 0037 35       		.uleb128 0x35
 1549 0038 00       		.byte	0
 1550 0039 49       		.uleb128 0x49
 1551 003a 13       		.uleb128 0x13
 1552 003b 00       		.byte	0
 1553 003c 00       		.byte	0
 1554 003d 06       		.uleb128 0x6
 1555 003e 13       		.uleb128 0x13
 1556 003f 01       		.byte	0x1
 1557 0040 0B       		.uleb128 0xb
 1558 0041 0B       		.uleb128 0xb
 1559 0042 3A       		.uleb128 0x3a
 1560 0043 0B       		.uleb128 0xb
 1561 0044 3B       		.uleb128 0x3b
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 44


 1562 0045 0B       		.uleb128 0xb
 1563 0046 01       		.uleb128 0x1
 1564 0047 13       		.uleb128 0x13
 1565 0048 00       		.byte	0
 1566 0049 00       		.byte	0
 1567 004a 07       		.uleb128 0x7
 1568 004b 0D       		.uleb128 0xd
 1569 004c 00       		.byte	0
 1570 004d 03       		.uleb128 0x3
 1571 004e 0E       		.uleb128 0xe
 1572 004f 3A       		.uleb128 0x3a
 1573 0050 0B       		.uleb128 0xb
 1574 0051 3B       		.uleb128 0x3b
 1575 0052 0B       		.uleb128 0xb
 1576 0053 49       		.uleb128 0x49
 1577 0054 13       		.uleb128 0x13
 1578 0055 38       		.uleb128 0x38
 1579 0056 0B       		.uleb128 0xb
 1580 0057 00       		.byte	0
 1581 0058 00       		.byte	0
 1582 0059 08       		.uleb128 0x8
 1583 005a 01       		.uleb128 0x1
 1584 005b 01       		.byte	0x1
 1585 005c 49       		.uleb128 0x49
 1586 005d 13       		.uleb128 0x13
 1587 005e 01       		.uleb128 0x1
 1588 005f 13       		.uleb128 0x13
 1589 0060 00       		.byte	0
 1590 0061 00       		.byte	0
 1591 0062 09       		.uleb128 0x9
 1592 0063 21       		.uleb128 0x21
 1593 0064 00       		.byte	0
 1594 0065 49       		.uleb128 0x49
 1595 0066 13       		.uleb128 0x13
 1596 0067 2F       		.uleb128 0x2f
 1597 0068 0B       		.uleb128 0xb
 1598 0069 00       		.byte	0
 1599 006a 00       		.byte	0
 1600 006b 0A       		.uleb128 0xa
 1601 006c 16       		.uleb128 0x16
 1602 006d 00       		.byte	0
 1603 006e 03       		.uleb128 0x3
 1604 006f 0E       		.uleb128 0xe
 1605 0070 3A       		.uleb128 0x3a
 1606 0071 0B       		.uleb128 0xb
 1607 0072 3B       		.uleb128 0x3b
 1608 0073 0B       		.uleb128 0xb
 1609 0074 49       		.uleb128 0x49
 1610 0075 13       		.uleb128 0x13
 1611 0076 00       		.byte	0
 1612 0077 00       		.byte	0
 1613 0078 0B       		.uleb128 0xb
 1614 0079 0D       		.uleb128 0xd
 1615 007a 00       		.byte	0
 1616 007b 03       		.uleb128 0x3
 1617 007c 08       		.uleb128 0x8
 1618 007d 3A       		.uleb128 0x3a
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 45


 1619 007e 0B       		.uleb128 0xb
 1620 007f 3B       		.uleb128 0x3b
 1621 0080 0B       		.uleb128 0xb
 1622 0081 49       		.uleb128 0x49
 1623 0082 13       		.uleb128 0x13
 1624 0083 38       		.uleb128 0x38
 1625 0084 0B       		.uleb128 0xb
 1626 0085 00       		.byte	0
 1627 0086 00       		.byte	0
 1628 0087 0C       		.uleb128 0xc
 1629 0088 0F       		.uleb128 0xf
 1630 0089 00       		.byte	0
 1631 008a 0B       		.uleb128 0xb
 1632 008b 0B       		.uleb128 0xb
 1633 008c 49       		.uleb128 0x49
 1634 008d 13       		.uleb128 0x13
 1635 008e 00       		.byte	0
 1636 008f 00       		.byte	0
 1637 0090 0D       		.uleb128 0xd
 1638 0091 2E       		.uleb128 0x2e
 1639 0092 01       		.byte	0x1
 1640 0093 3F       		.uleb128 0x3f
 1641 0094 19       		.uleb128 0x19
 1642 0095 03       		.uleb128 0x3
 1643 0096 0E       		.uleb128 0xe
 1644 0097 3A       		.uleb128 0x3a
 1645 0098 0B       		.uleb128 0xb
 1646 0099 3B       		.uleb128 0x3b
 1647 009a 0B       		.uleb128 0xb
 1648 009b 27       		.uleb128 0x27
 1649 009c 19       		.uleb128 0x19
 1650 009d 49       		.uleb128 0x49
 1651 009e 13       		.uleb128 0x13
 1652 009f 11       		.uleb128 0x11
 1653 00a0 01       		.uleb128 0x1
 1654 00a1 12       		.uleb128 0x12
 1655 00a2 06       		.uleb128 0x6
 1656 00a3 40       		.uleb128 0x40
 1657 00a4 18       		.uleb128 0x18
 1658 00a5 9742     		.uleb128 0x2117
 1659 00a7 19       		.uleb128 0x19
 1660 00a8 01       		.uleb128 0x1
 1661 00a9 13       		.uleb128 0x13
 1662 00aa 00       		.byte	0
 1663 00ab 00       		.byte	0
 1664 00ac 0E       		.uleb128 0xe
 1665 00ad 05       		.uleb128 0x5
 1666 00ae 00       		.byte	0
 1667 00af 03       		.uleb128 0x3
 1668 00b0 0E       		.uleb128 0xe
 1669 00b1 3A       		.uleb128 0x3a
 1670 00b2 0B       		.uleb128 0xb
 1671 00b3 3B       		.uleb128 0x3b
 1672 00b4 0B       		.uleb128 0xb
 1673 00b5 49       		.uleb128 0x49
 1674 00b6 13       		.uleb128 0x13
 1675 00b7 02       		.uleb128 0x2
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 46


 1676 00b8 17       		.uleb128 0x17
 1677 00b9 00       		.byte	0
 1678 00ba 00       		.byte	0
 1679 00bb 0F       		.uleb128 0xf
 1680 00bc 34       		.uleb128 0x34
 1681 00bd 00       		.byte	0
 1682 00be 03       		.uleb128 0x3
 1683 00bf 08       		.uleb128 0x8
 1684 00c0 3A       		.uleb128 0x3a
 1685 00c1 0B       		.uleb128 0xb
 1686 00c2 3B       		.uleb128 0x3b
 1687 00c3 0B       		.uleb128 0xb
 1688 00c4 49       		.uleb128 0x49
 1689 00c5 13       		.uleb128 0x13
 1690 00c6 02       		.uleb128 0x2
 1691 00c7 17       		.uleb128 0x17
 1692 00c8 00       		.byte	0
 1693 00c9 00       		.byte	0
 1694 00ca 10       		.uleb128 0x10
 1695 00cb 34       		.uleb128 0x34
 1696 00cc 00       		.byte	0
 1697 00cd 03       		.uleb128 0x3
 1698 00ce 0E       		.uleb128 0xe
 1699 00cf 3A       		.uleb128 0x3a
 1700 00d0 0B       		.uleb128 0xb
 1701 00d1 3B       		.uleb128 0x3b
 1702 00d2 0B       		.uleb128 0xb
 1703 00d3 49       		.uleb128 0x49
 1704 00d4 13       		.uleb128 0x13
 1705 00d5 02       		.uleb128 0x2
 1706 00d6 17       		.uleb128 0x17
 1707 00d7 00       		.byte	0
 1708 00d8 00       		.byte	0
 1709 00d9 11       		.uleb128 0x11
 1710 00da 898201   		.uleb128 0x4109
 1711 00dd 01       		.byte	0x1
 1712 00de 11       		.uleb128 0x11
 1713 00df 01       		.uleb128 0x1
 1714 00e0 31       		.uleb128 0x31
 1715 00e1 13       		.uleb128 0x13
 1716 00e2 01       		.uleb128 0x1
 1717 00e3 13       		.uleb128 0x13
 1718 00e4 00       		.byte	0
 1719 00e5 00       		.byte	0
 1720 00e6 12       		.uleb128 0x12
 1721 00e7 8A8201   		.uleb128 0x410a
 1722 00ea 00       		.byte	0
 1723 00eb 02       		.uleb128 0x2
 1724 00ec 18       		.uleb128 0x18
 1725 00ed 9142     		.uleb128 0x2111
 1726 00ef 18       		.uleb128 0x18
 1727 00f0 00       		.byte	0
 1728 00f1 00       		.byte	0
 1729 00f2 13       		.uleb128 0x13
 1730 00f3 898201   		.uleb128 0x4109
 1731 00f6 01       		.byte	0x1
 1732 00f7 11       		.uleb128 0x11
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 47


 1733 00f8 01       		.uleb128 0x1
 1734 00f9 31       		.uleb128 0x31
 1735 00fa 13       		.uleb128 0x13
 1736 00fb 00       		.byte	0
 1737 00fc 00       		.byte	0
 1738 00fd 14       		.uleb128 0x14
 1739 00fe 26       		.uleb128 0x26
 1740 00ff 00       		.byte	0
 1741 0100 49       		.uleb128 0x49
 1742 0101 13       		.uleb128 0x13
 1743 0102 00       		.byte	0
 1744 0103 00       		.byte	0
 1745 0104 15       		.uleb128 0x15
 1746 0105 2E       		.uleb128 0x2e
 1747 0106 01       		.byte	0x1
 1748 0107 3F       		.uleb128 0x3f
 1749 0108 19       		.uleb128 0x19
 1750 0109 03       		.uleb128 0x3
 1751 010a 0E       		.uleb128 0xe
 1752 010b 3A       		.uleb128 0x3a
 1753 010c 0B       		.uleb128 0xb
 1754 010d 3B       		.uleb128 0x3b
 1755 010e 0B       		.uleb128 0xb
 1756 010f 27       		.uleb128 0x27
 1757 0110 19       		.uleb128 0x19
 1758 0111 11       		.uleb128 0x11
 1759 0112 01       		.uleb128 0x1
 1760 0113 12       		.uleb128 0x12
 1761 0114 06       		.uleb128 0x6
 1762 0115 40       		.uleb128 0x40
 1763 0116 18       		.uleb128 0x18
 1764 0117 9742     		.uleb128 0x2117
 1765 0119 19       		.uleb128 0x19
 1766 011a 01       		.uleb128 0x1
 1767 011b 13       		.uleb128 0x13
 1768 011c 00       		.byte	0
 1769 011d 00       		.byte	0
 1770 011e 16       		.uleb128 0x16
 1771 011f 2E       		.uleb128 0x2e
 1772 0120 01       		.byte	0x1
 1773 0121 3F       		.uleb128 0x3f
 1774 0122 19       		.uleb128 0x19
 1775 0123 03       		.uleb128 0x3
 1776 0124 0E       		.uleb128 0xe
 1777 0125 3A       		.uleb128 0x3a
 1778 0126 0B       		.uleb128 0xb
 1779 0127 3B       		.uleb128 0x3b
 1780 0128 05       		.uleb128 0x5
 1781 0129 27       		.uleb128 0x27
 1782 012a 19       		.uleb128 0x19
 1783 012b 49       		.uleb128 0x49
 1784 012c 13       		.uleb128 0x13
 1785 012d 11       		.uleb128 0x11
 1786 012e 01       		.uleb128 0x1
 1787 012f 12       		.uleb128 0x12
 1788 0130 06       		.uleb128 0x6
 1789 0131 40       		.uleb128 0x40
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 48


 1790 0132 18       		.uleb128 0x18
 1791 0133 9742     		.uleb128 0x2117
 1792 0135 19       		.uleb128 0x19
 1793 0136 01       		.uleb128 0x1
 1794 0137 13       		.uleb128 0x13
 1795 0138 00       		.byte	0
 1796 0139 00       		.byte	0
 1797 013a 17       		.uleb128 0x17
 1798 013b 34       		.uleb128 0x34
 1799 013c 00       		.byte	0
 1800 013d 03       		.uleb128 0x3
 1801 013e 0E       		.uleb128 0xe
 1802 013f 3A       		.uleb128 0x3a
 1803 0140 0B       		.uleb128 0xb
 1804 0141 3B       		.uleb128 0x3b
 1805 0142 05       		.uleb128 0x5
 1806 0143 49       		.uleb128 0x49
 1807 0144 13       		.uleb128 0x13
 1808 0145 02       		.uleb128 0x2
 1809 0146 17       		.uleb128 0x17
 1810 0147 00       		.byte	0
 1811 0148 00       		.byte	0
 1812 0149 18       		.uleb128 0x18
 1813 014a 2E       		.uleb128 0x2e
 1814 014b 01       		.byte	0x1
 1815 014c 3F       		.uleb128 0x3f
 1816 014d 19       		.uleb128 0x19
 1817 014e 03       		.uleb128 0x3
 1818 014f 0E       		.uleb128 0xe
 1819 0150 3A       		.uleb128 0x3a
 1820 0151 0B       		.uleb128 0xb
 1821 0152 3B       		.uleb128 0x3b
 1822 0153 05       		.uleb128 0x5
 1823 0154 27       		.uleb128 0x27
 1824 0155 19       		.uleb128 0x19
 1825 0156 11       		.uleb128 0x11
 1826 0157 01       		.uleb128 0x1
 1827 0158 12       		.uleb128 0x12
 1828 0159 06       		.uleb128 0x6
 1829 015a 40       		.uleb128 0x40
 1830 015b 18       		.uleb128 0x18
 1831 015c 9742     		.uleb128 0x2117
 1832 015e 19       		.uleb128 0x19
 1833 015f 01       		.uleb128 0x1
 1834 0160 13       		.uleb128 0x13
 1835 0161 00       		.byte	0
 1836 0162 00       		.byte	0
 1837 0163 19       		.uleb128 0x19
 1838 0164 05       		.uleb128 0x5
 1839 0165 00       		.byte	0
 1840 0166 03       		.uleb128 0x3
 1841 0167 0E       		.uleb128 0xe
 1842 0168 3A       		.uleb128 0x3a
 1843 0169 0B       		.uleb128 0xb
 1844 016a 3B       		.uleb128 0x3b
 1845 016b 05       		.uleb128 0x5
 1846 016c 49       		.uleb128 0x49
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 49


 1847 016d 13       		.uleb128 0x13
 1848 016e 02       		.uleb128 0x2
 1849 016f 17       		.uleb128 0x17
 1850 0170 00       		.byte	0
 1851 0171 00       		.byte	0
 1852 0172 1A       		.uleb128 0x1a
 1853 0173 2E       		.uleb128 0x2e
 1854 0174 00       		.byte	0
 1855 0175 3F       		.uleb128 0x3f
 1856 0176 19       		.uleb128 0x19
 1857 0177 03       		.uleb128 0x3
 1858 0178 0E       		.uleb128 0xe
 1859 0179 3A       		.uleb128 0x3a
 1860 017a 0B       		.uleb128 0xb
 1861 017b 3B       		.uleb128 0x3b
 1862 017c 05       		.uleb128 0x5
 1863 017d 27       		.uleb128 0x27
 1864 017e 19       		.uleb128 0x19
 1865 017f 11       		.uleb128 0x11
 1866 0180 01       		.uleb128 0x1
 1867 0181 12       		.uleb128 0x12
 1868 0182 06       		.uleb128 0x6
 1869 0183 40       		.uleb128 0x40
 1870 0184 18       		.uleb128 0x18
 1871 0185 9742     		.uleb128 0x2117
 1872 0187 19       		.uleb128 0x19
 1873 0188 00       		.byte	0
 1874 0189 00       		.byte	0
 1875 018a 1B       		.uleb128 0x1b
 1876 018b 34       		.uleb128 0x34
 1877 018c 00       		.byte	0
 1878 018d 03       		.uleb128 0x3
 1879 018e 0E       		.uleb128 0xe
 1880 018f 3A       		.uleb128 0x3a
 1881 0190 0B       		.uleb128 0xb
 1882 0191 3B       		.uleb128 0x3b
 1883 0192 0B       		.uleb128 0xb
 1884 0193 49       		.uleb128 0x49
 1885 0194 13       		.uleb128 0x13
 1886 0195 3F       		.uleb128 0x3f
 1887 0196 19       		.uleb128 0x19
 1888 0197 3C       		.uleb128 0x3c
 1889 0198 19       		.uleb128 0x19
 1890 0199 00       		.byte	0
 1891 019a 00       		.byte	0
 1892 019b 1C       		.uleb128 0x1c
 1893 019c 2E       		.uleb128 0x2e
 1894 019d 00       		.byte	0
 1895 019e 3F       		.uleb128 0x3f
 1896 019f 19       		.uleb128 0x19
 1897 01a0 3C       		.uleb128 0x3c
 1898 01a1 19       		.uleb128 0x19
 1899 01a2 6E       		.uleb128 0x6e
 1900 01a3 0E       		.uleb128 0xe
 1901 01a4 03       		.uleb128 0x3
 1902 01a5 0E       		.uleb128 0xe
 1903 01a6 3A       		.uleb128 0x3a
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 50


 1904 01a7 0B       		.uleb128 0xb
 1905 01a8 3B       		.uleb128 0x3b
 1906 01a9 0B       		.uleb128 0xb
 1907 01aa 00       		.byte	0
 1908 01ab 00       		.byte	0
 1909 01ac 00       		.byte	0
 1910              		.section	.debug_loc,"",%progbits
 1911              	.Ldebug_loc0:
 1912              	.LLST0:
 1913 0000 00000000 		.4byte	.LVL0
 1914 0004 0C000000 		.4byte	.LVL2
 1915 0008 0100     		.2byte	0x1
 1916 000a 50       		.byte	0x50
 1917 000b 0C000000 		.4byte	.LVL2
 1918 000f 40010000 		.4byte	.LVL25
 1919 0013 0100     		.2byte	0x1
 1920 0015 56       		.byte	0x56
 1921 0016 40010000 		.4byte	.LVL25
 1922 001a 58010000 		.4byte	.LFE1
 1923 001e 0400     		.2byte	0x4
 1924 0020 F3       		.byte	0xf3
 1925 0021 01       		.uleb128 0x1
 1926 0022 50       		.byte	0x50
 1927 0023 9F       		.byte	0x9f
 1928 0024 00000000 		.4byte	0
 1929 0028 00000000 		.4byte	0
 1930              	.LLST1:
 1931 002c 12000000 		.4byte	.LVL3
 1932 0030 20010000 		.4byte	.LVL20
 1933 0034 0100     		.2byte	0x1
 1934 0036 54       		.byte	0x54
 1935 0037 22010000 		.4byte	.LVL21
 1936 003b 24010000 		.4byte	.LVL22
 1937 003f 0100     		.2byte	0x1
 1938 0041 54       		.byte	0x54
 1939 0042 28010000 		.4byte	.LVL23
 1940 0046 3A010000 		.4byte	.LVL24
 1941 004a 0100     		.2byte	0x1
 1942 004c 54       		.byte	0x54
 1943 004d 00000000 		.4byte	0
 1944 0051 00000000 		.4byte	0
 1945              	.LLST2:
 1946 0055 7C000000 		.4byte	.LVL11
 1947 0059 80000000 		.4byte	.LVL12
 1948 005d 0200     		.2byte	0x2
 1949 005f 30       		.byte	0x30
 1950 0060 9F       		.byte	0x9f
 1951 0061 80000000 		.4byte	.LVL12
 1952 0065 D4000000 		.4byte	.LVL13
 1953 0069 0100     		.2byte	0x1
 1954 006b 53       		.byte	0x53
 1955 006c D6000000 		.4byte	.LVL14
 1956 0070 E5000000 		.4byte	.LVL15-1
 1957 0074 0100     		.2byte	0x1
 1958 0076 53       		.byte	0x53
 1959 0077 00000000 		.4byte	0
 1960 007b 00000000 		.4byte	0
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 51


 1961              	.LLST3:
 1962 007f 12000000 		.4byte	.LVL3
 1963 0083 18010000 		.4byte	.LVL18
 1964 0087 0100     		.2byte	0x1
 1965 0089 55       		.byte	0x55
 1966 008a 1A010000 		.4byte	.LVL19
 1967 008e 24010000 		.4byte	.LVL22
 1968 0092 0100     		.2byte	0x1
 1969 0094 55       		.byte	0x55
 1970 0095 28010000 		.4byte	.LVL23
 1971 0099 3A010000 		.4byte	.LVL24
 1972 009d 0100     		.2byte	0x1
 1973 009f 55       		.byte	0x55
 1974 00a0 00000000 		.4byte	0
 1975 00a4 00000000 		.4byte	0
 1976              	.LLST4:
 1977 00a8 0A000000 		.4byte	.LVL1
 1978 00ac 12000000 		.4byte	.LVL3
 1979 00b0 0200     		.2byte	0x2
 1980 00b2 30       		.byte	0x30
 1981 00b3 9F       		.byte	0x9f
 1982 00b4 12000000 		.4byte	.LVL3
 1983 00b8 40010000 		.4byte	.LVL26
 1984 00bc 0100     		.2byte	0x1
 1985 00be 58       		.byte	0x58
 1986 00bf 00000000 		.4byte	0
 1987 00c3 00000000 		.4byte	0
 1988              	.LLST5:
 1989 00c7 0A000000 		.4byte	.LVL1
 1990 00cb 12000000 		.4byte	.LVL3
 1991 00cf 0200     		.2byte	0x2
 1992 00d1 31       		.byte	0x31
 1993 00d2 9F       		.byte	0x9f
 1994 00d3 12000000 		.4byte	.LVL3
 1995 00d7 80000000 		.4byte	.LVL12
 1996 00db 0100     		.2byte	0x1
 1997 00dd 50       		.byte	0x50
 1998 00de 14010000 		.4byte	.LVL16
 1999 00e2 16010000 		.4byte	.LVL17
 2000 00e6 0200     		.2byte	0x2
 2001 00e8 30       		.byte	0x30
 2002 00e9 9F       		.byte	0x9f
 2003 00ea 16010000 		.4byte	.LVL17
 2004 00ee 58010000 		.4byte	.LFE1
 2005 00f2 0100     		.2byte	0x1
 2006 00f4 50       		.byte	0x50
 2007 00f5 00000000 		.4byte	0
 2008 00f9 00000000 		.4byte	0
 2009              	.LLST6:
 2010 00fd 20000000 		.4byte	.LVL4
 2011 0101 2E000000 		.4byte	.LVL5
 2012 0105 0200     		.2byte	0x2
 2013 0107 30       		.byte	0x30
 2014 0108 9F       		.byte	0x9f
 2015 0109 2E000000 		.4byte	.LVL5
 2016 010d 62000000 		.4byte	.LVL7
 2017 0111 0100     		.2byte	0x1
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 52


 2018 0113 57       		.byte	0x57
 2019 0114 64000000 		.4byte	.LVL8
 2020 0118 6C000000 		.4byte	.LVL9
 2021 011c 0100     		.2byte	0x1
 2022 011e 57       		.byte	0x57
 2023 011f 6E000000 		.4byte	.LVL10
 2024 0123 7C000000 		.4byte	.LVL11
 2025 0127 0100     		.2byte	0x1
 2026 0129 57       		.byte	0x57
 2027 012a 7C000000 		.4byte	.LVL11
 2028 012e 16010000 		.4byte	.LVL17
 2029 0132 0100     		.2byte	0x1
 2030 0134 59       		.byte	0x59
 2031 0135 00000000 		.4byte	0
 2032 0139 00000000 		.4byte	0
 2033              	.LLST7:
 2034 013d 00000000 		.4byte	.LVL27
 2035 0141 06000000 		.4byte	.LVL28
 2036 0145 0100     		.2byte	0x1
 2037 0147 50       		.byte	0x50
 2038 0148 06000000 		.4byte	.LVL28
 2039 014c 20000000 		.4byte	.LFE2
 2040 0150 0400     		.2byte	0x4
 2041 0152 F3       		.byte	0xf3
 2042 0153 01       		.uleb128 0x1
 2043 0154 50       		.byte	0x50
 2044 0155 9F       		.byte	0x9f
 2045 0156 00000000 		.4byte	0
 2046 015a 00000000 		.4byte	0
 2047              	.LLST8:
 2048 015e 02000000 		.4byte	.LVL29
 2049 0162 8C000000 		.4byte	.LVL30
 2050 0166 0200     		.2byte	0x2
 2051 0168 30       		.byte	0x30
 2052 0169 9F       		.byte	0x9f
 2053 016a 8C000000 		.4byte	.LVL30
 2054 016e A8000000 		.4byte	.LFE3
 2055 0172 0100     		.2byte	0x1
 2056 0174 50       		.byte	0x50
 2057 0175 00000000 		.4byte	0
 2058 0179 00000000 		.4byte	0
 2059              	.LLST9:
 2060 017d 02000000 		.4byte	.LVL31
 2061 0181 8C000000 		.4byte	.LVL32
 2062 0185 0200     		.2byte	0x2
 2063 0187 30       		.byte	0x30
 2064 0188 9F       		.byte	0x9f
 2065 0189 8C000000 		.4byte	.LVL32
 2066 018d A8000000 		.4byte	.LFE4
 2067 0191 0100     		.2byte	0x1
 2068 0193 50       		.byte	0x50
 2069 0194 00000000 		.4byte	0
 2070 0198 00000000 		.4byte	0
 2071              	.LLST10:
 2072 019c 00000000 		.4byte	.LVL33
 2073 01a0 02000000 		.4byte	.LVL34
 2074 01a4 0100     		.2byte	0x1
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 53


 2075 01a6 50       		.byte	0x50
 2076 01a7 02000000 		.4byte	.LVL34
 2077 01ab 1C000000 		.4byte	.LFE5
 2078 01af 0400     		.2byte	0x4
 2079 01b1 F3       		.byte	0xf3
 2080 01b2 01       		.uleb128 0x1
 2081 01b3 50       		.byte	0x50
 2082 01b4 9F       		.byte	0x9f
 2083 01b5 00000000 		.4byte	0
 2084 01b9 00000000 		.4byte	0
 2085              		.section	.debug_aranges,"",%progbits
 2086 0000 64000000 		.4byte	0x64
 2087 0004 0200     		.2byte	0x2
 2088 0006 00000000 		.4byte	.Ldebug_info0
 2089 000a 04       		.byte	0x4
 2090 000b 00       		.byte	0
 2091 000c 0000     		.2byte	0
 2092 000e 0000     		.2byte	0
 2093 0010 00000000 		.4byte	.LFB1
 2094 0014 58010000 		.4byte	.LFE1-.LFB1
 2095 0018 00000000 		.4byte	.LFB2
 2096 001c 20000000 		.4byte	.LFE2-.LFB2
 2097 0020 00000000 		.4byte	.LFB3
 2098 0024 A8000000 		.4byte	.LFE3-.LFB3
 2099 0028 00000000 		.4byte	.LFB4
 2100 002c A8000000 		.4byte	.LFE4-.LFB4
 2101 0030 00000000 		.4byte	.LFB5
 2102 0034 1C000000 		.4byte	.LFE5-.LFB5
 2103 0038 00000000 		.4byte	.LFB6
 2104 003c 50000000 		.4byte	.LFE6-.LFB6
 2105 0040 00000000 		.4byte	.LFB7
 2106 0044 50000000 		.4byte	.LFE7-.LFB7
 2107 0048 00000000 		.4byte	.LFB8
 2108 004c 50000000 		.4byte	.LFE8-.LFB8
 2109 0050 00000000 		.4byte	.LFB9
 2110 0054 50000000 		.4byte	.LFE9-.LFB9
 2111 0058 00000000 		.4byte	.LFB10
 2112 005c 50000000 		.4byte	.LFE10-.LFB10
 2113 0060 00000000 		.4byte	0
 2114 0064 00000000 		.4byte	0
 2115              		.section	.debug_ranges,"",%progbits
 2116              	.Ldebug_ranges0:
 2117 0000 00000000 		.4byte	.LFB1
 2118 0004 58010000 		.4byte	.LFE1
 2119 0008 00000000 		.4byte	.LFB2
 2120 000c 20000000 		.4byte	.LFE2
 2121 0010 00000000 		.4byte	.LFB3
 2122 0014 A8000000 		.4byte	.LFE3
 2123 0018 00000000 		.4byte	.LFB4
 2124 001c A8000000 		.4byte	.LFE4
 2125 0020 00000000 		.4byte	.LFB5
 2126 0024 1C000000 		.4byte	.LFE5
 2127 0028 00000000 		.4byte	.LFB6
 2128 002c 50000000 		.4byte	.LFE6
 2129 0030 00000000 		.4byte	.LFB7
 2130 0034 50000000 		.4byte	.LFE7
 2131 0038 00000000 		.4byte	.LFB8
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 54


 2132 003c 50000000 		.4byte	.LFE8
 2133 0040 00000000 		.4byte	.LFB9
 2134 0044 50000000 		.4byte	.LFE9
 2135 0048 00000000 		.4byte	.LFB10
 2136 004c 50000000 		.4byte	.LFE10
 2137 0050 00000000 		.4byte	0
 2138 0054 00000000 		.4byte	0
 2139              		.section	.debug_line,"",%progbits
 2140              	.Ldebug_line0:
 2141 0000 BD010000 		.section	.debug_str,"MS",%progbits,1
 2141      02005F00 
 2141      00000201 
 2141      FB0E0D00 
 2141      01010101 
 2142              	.LASF61:
 2143 0000 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2143      43313120 
 2143      352E342E 
 2143      31203230 
 2143      31363036 
 2144 0033 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2144      20726576 
 2144      6973696F 
 2144      6E203233 
 2144      37373135 
 2145 0066 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2145      66756E63 
 2145      74696F6E 
 2145      2D736563 
 2145      74696F6E 
 2146              	.LASF7:
 2147 008e 6C6F6E67 		.ascii	"long long unsigned int\000"
 2147      206C6F6E 
 2147      6720756E 
 2147      7369676E 
 2147      65642069 
 2148              	.LASF31:
 2149 00a5 7478636D 		.ascii	"txcmd\000"
 2149      6400
 2150              	.LASF28:
 2151 00ab 7278616D 		.ascii	"rxamrd\000"
 2151      726400
 2152              	.LASF6:
 2153 00b2 6C6F6E67 		.ascii	"long long int\000"
 2153      206C6F6E 
 2153      6720696E 
 2153      7400
 2154              	.LASF0:
 2155 00c0 7369676E 		.ascii	"signed char\000"
 2155      65642063 
 2155      68617200 
 2156              	.LASF54:
 2157 00cc 6D61696C 		.ascii	"mailbox0\000"
 2157      626F7830 
 2157      00
 2158              	.LASF55:
 2159 00d5 6D61696C 		.ascii	"mailbox1\000"
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 55


 2159      626F7831 
 2159      00
 2160              	.LASF56:
 2161 00de 6D61696C 		.ascii	"mailbox2\000"
 2161      626F7832 
 2161      00
 2162              	.LASF57:
 2163 00e7 6D61696C 		.ascii	"mailbox3\000"
 2163      626F7833 
 2163      00
 2164              	.LASF58:
 2165 00f0 6D61696C 		.ascii	"mailbox4\000"
 2165      626F7834 
 2165      00
 2166              	.LASF4:
 2167 00f9 6C6F6E67 		.ascii	"long int\000"
 2167      20696E74 
 2167      00
 2168              	.LASF59:
 2169 0102 4379496E 		.ascii	"CyIntDisable\000"
 2169      74446973 
 2169      61626C65 
 2169      00
 2170              	.LASF25:
 2171 010f 72786461 		.ascii	"rxdata\000"
 2171      746100
 2172              	.LASF9:
 2173 0116 75696E74 		.ascii	"uint8\000"
 2173      3800
 2174              	.LASF26:
 2175 011c 7278616D 		.ascii	"rxamr\000"
 2175      7200
 2176              	.LASF12:
 2177 0122 646F7562 		.ascii	"double\000"
 2177      6C6500
 2178              	.LASF35:
 2179 0129 73686966 		.ascii	"shift\000"
 2179      7400
 2180              	.LASF10:
 2181 012f 75696E74 		.ascii	"uint32\000"
 2181      333200
 2182              	.LASF44:
 2183 0136 43414E5F 		.ascii	"CAN_TxCancel\000"
 2183      54784361 
 2183      6E63656C 
 2183      00
 2184              	.LASF19:
 2185 0143 62797465 		.ascii	"byte\000"
 2185      00
 2186              	.LASF53:
 2187 0148 6461746F 		.ascii	"dato_enviado_1\000"
 2187      5F656E76 
 2187      6961646F 
 2187      5F3100
 2188              	.LASF8:
 2189 0157 756E7369 		.ascii	"unsigned int\000"
 2189      676E6564 
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 56


 2189      20696E74 
 2189      00
 2190              	.LASF5:
 2191 0164 6C6F6E67 		.ascii	"long unsigned int\000"
 2191      20756E73 
 2191      69676E65 
 2191      6420696E 
 2191      7400
 2192              	.LASF41:
 2193 0176 43414E5F 		.ascii	"CAN_SendMsg\000"
 2193      53656E64 
 2193      4D736700 
 2194              	.LASF40:
 2195 0182 62756666 		.ascii	"bufferId\000"
 2195      65724964 
 2195      00
 2196              	.LASF38:
 2197 018b 72656754 		.ascii	"regTemp\000"
 2197      656D7000 
 2198              	.LASF3:
 2199 0193 73686F72 		.ascii	"short unsigned int\000"
 2199      7420756E 
 2199      7369676E 
 2199      65642069 
 2199      6E7400
 2200              	.LASF30:
 2201 01a6 43414E5F 		.ascii	"CAN_RX_STRUCT\000"
 2201      52585F53 
 2201      54525543 
 2201      5400
 2202              	.LASF46:
 2203 01b4 72784D61 		.ascii	"rxMailbox\000"
 2203      696C626F 
 2203      7800
 2204              	.LASF33:
 2205 01be 74786461 		.ascii	"txdata\000"
 2205      746100
 2206              	.LASF15:
 2207 01c5 72656733 		.ascii	"reg32\000"
 2207      3200
 2208              	.LASF21:
 2209 01cb 43414E5F 		.ascii	"CAN_REG_32\000"
 2209      5245475F 
 2209      333200
 2210              	.LASF17:
 2211 01d6 73697A65 		.ascii	"sizetype\000"
 2211      74797065 
 2211      00
 2212              	.LASF16:
 2213 01df 6C6F6E67 		.ascii	"long double\000"
 2213      20646F75 
 2213      626C6500 
 2214              	.LASF24:
 2215 01eb 72786964 		.ascii	"rxid\000"
 2215      00
 2216              	.LASF36:
 2217 01f0 72657472 		.ascii	"retry\000"
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 57


 2217      7900
 2218              	.LASF39:
 2219 01f6 6D657373 		.ascii	"message\000"
 2219      61676500 
 2220              	.LASF11:
 2221 01fe 666C6F61 		.ascii	"float\000"
 2221      7400
 2222              	.LASF14:
 2223 0204 72656738 		.ascii	"reg8\000"
 2223      00
 2224              	.LASF1:
 2225 0209 756E7369 		.ascii	"unsigned char\000"
 2225      676E6564 
 2225      20636861 
 2225      7200
 2226              	.LASF2:
 2227 0217 73686F72 		.ascii	"short int\000"
 2227      7420696E 
 2227      7400
 2228              	.LASF60:
 2229 0221 4379496E 		.ascii	"CyIntEnable\000"
 2229      74456E61 
 2229      626C6500 
 2230              	.LASF18:
 2231 022d 43414E5F 		.ascii	"CAN_DATA_BYTES_MSG\000"
 2231      44415441 
 2231      5F425954 
 2231      45535F4D 
 2231      534700
 2232              	.LASF63:
 2233 0240 433A5C55 		.ascii	"C:\\Users\\Henry Alberto\\Documents\\GitHub\\Psoc_M"
 2233      73657273 
 2233      5C48656E 
 2233      72792041 
 2233      6C626572 
 2234 026e 6F64756C 		.ascii	"odular\\Optimization_Algorithms\\Xbee_Snifer_Terate"
 2234      61725C4F 
 2234      7074696D 
 2234      697A6174 
 2234      696F6E5F 
 2235 029f 726D2E63 		.ascii	"rm.cydsn\000"
 2235      7964736E 
 2235      00
 2236              	.LASF34:
 2237 02a8 43414E5F 		.ascii	"CAN_TX_STRUCT\000"
 2237      54585F53 
 2237      54525543 
 2237      5400
 2238              	.LASF13:
 2239 02b6 63686172 		.ascii	"char\000"
 2239      00
 2240              	.LASF52:
 2241 02bb 6461746F 		.ascii	"dato_enviado\000"
 2241      5F656E76 
 2241      6961646F 
 2241      00
 2242              	.LASF20:
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 58


 2243 02c8 43414E5F 		.ascii	"CAN_DATA_BYTES\000"
 2243      44415441 
 2243      5F425954 
 2243      455300
 2244              	.LASF48:
 2245 02d7 43414E5F 		.ascii	"CAN_ReceiveMsg1\000"
 2245      52656365 
 2245      6976654D 
 2245      73673100 
 2246              	.LASF49:
 2247 02e7 43414E5F 		.ascii	"CAN_ReceiveMsg2\000"
 2247      52656365 
 2247      6976654D 
 2247      73673200 
 2248              	.LASF50:
 2249 02f7 43414E5F 		.ascii	"CAN_ReceiveMsg3\000"
 2249      52656365 
 2249      6976654D 
 2249      73673300 
 2250              	.LASF51:
 2251 0307 43414E5F 		.ascii	"CAN_ReceiveMsg4\000"
 2251      52656365 
 2251      6976654D 
 2251      73673400 
 2252              	.LASF47:
 2253 0317 43414E5F 		.ascii	"CAN_ReceiveMsg0\000"
 2253      52656365 
 2253      6976654D 
 2253      73673000 
 2254              	.LASF62:
 2255 0327 43414E5F 		.ascii	"CAN_TX_RX_func.c\000"
 2255      54585F52 
 2255      585F6675 
 2255      6E632E63 
 2255      00
 2256              	.LASF23:
 2257 0338 7278636D 		.ascii	"rxcmd\000"
 2257      6400
 2258              	.LASF22:
 2259 033e 43414E5F 		.ascii	"CAN_TX_MSG\000"
 2259      54585F4D 
 2259      534700
 2260              	.LASF32:
 2261 0349 74786964 		.ascii	"txid\000"
 2261      00
 2262              	.LASF27:
 2263 034e 72786163 		.ascii	"rxacr\000"
 2263      7200
 2264              	.LASF29:
 2265 0354 72786163 		.ascii	"rxacrd\000"
 2265      726400
 2266              	.LASF42:
 2267 035b 43414E5F 		.ascii	"CAN_SendMsg0\000"
 2267      53656E64 
 2267      4D736730 
 2267      00
 2268              	.LASF43:
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccOBNGAi.s 			page 59


 2269 0368 43414E5F 		.ascii	"CAN_SendMsg1\000"
 2269      53656E64 
 2269      4D736731 
 2269      00
 2270              	.LASF45:
 2271 0375 43414E5F 		.ascii	"CAN_ReceiveMsg\000"
 2271      52656365 
 2271      6976654D 
 2271      736700
 2272              	.LASF37:
 2273 0384 72657375 		.ascii	"result\000"
 2273      6C7400
 2274              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
