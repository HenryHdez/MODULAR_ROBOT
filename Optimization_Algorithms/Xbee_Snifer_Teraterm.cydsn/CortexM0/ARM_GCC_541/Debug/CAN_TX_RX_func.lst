ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CAN_TX_RX_func.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CAN_SendMsg,"ax",%progbits
  20              		.align	2
  21              		.global	CAN_SendMsg
  22              		.code	16
  23              		.thumb_func
  24              		.type	CAN_SendMsg, %function
  25              	CAN_SendMsg:
  26              	.LFB1:
  27              		.file 1 "CAN_TX_RX_func.c"
   1:CAN_TX_RX_func.c **** /*******************************************************************************
   2:CAN_TX_RX_func.c **** * File Name: CAN_TX_RX_func.c
   3:CAN_TX_RX_func.c **** * Version 3.0
   4:CAN_TX_RX_func.c **** *
   5:CAN_TX_RX_func.c **** * Description:
   6:CAN_TX_RX_func.c **** *  There are functions process "Full" Receive and Transmit mailboxes:
   7:CAN_TX_RX_func.c **** *     - CAN_SendMsg0-7();
   8:CAN_TX_RX_func.c **** *     - CAN_ReceiveMsg0-15();
   9:CAN_TX_RX_func.c **** *  Transmission of message, and receive routine for "Basic" mailboxes:
  10:CAN_TX_RX_func.c **** *     - CAN_SendMsg();
  11:CAN_TX_RX_func.c **** *     - CAN_TxCancel();
  12:CAN_TX_RX_func.c **** *     - CAN_ReceiveMsg();
  13:CAN_TX_RX_func.c **** *
  14:CAN_TX_RX_func.c **** *  Note:
  15:CAN_TX_RX_func.c **** *   None
  16:CAN_TX_RX_func.c **** *
  17:CAN_TX_RX_func.c **** ********************************************************************************
  18:CAN_TX_RX_func.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  19:CAN_TX_RX_func.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:CAN_TX_RX_func.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:CAN_TX_RX_func.c **** * the software package with which this file was provided.
  22:CAN_TX_RX_func.c **** *******************************************************************************/
  23:CAN_TX_RX_func.c **** 
  24:CAN_TX_RX_func.c **** #include "CAN.h"
  25:CAN_TX_RX_func.c **** #include "cyapicallbacks.h"
  26:CAN_TX_RX_func.c **** 
  27:CAN_TX_RX_func.c **** /* `#START TX_RX_FUNCTION` */
  28:CAN_TX_RX_func.c **** extern uint8 dato_enviado[8];
  29:CAN_TX_RX_func.c **** extern uint8 dato_enviado_1[8];
  30:CAN_TX_RX_func.c **** extern uint8 mailbox0[8];
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 2


  31:CAN_TX_RX_func.c **** extern uint8 mailbox1[8];
  32:CAN_TX_RX_func.c **** extern uint8 mailbox2[8];
  33:CAN_TX_RX_func.c **** extern uint8 mailbox3[8];
  34:CAN_TX_RX_func.c **** /* `#END` */
  35:CAN_TX_RX_func.c **** 
  36:CAN_TX_RX_func.c **** 
  37:CAN_TX_RX_func.c **** /*******************************************************************************
  38:CAN_TX_RX_func.c **** * FUNCTION NAME:   CAN_SendMsg
  39:CAN_TX_RX_func.c **** ********************************************************************************
  40:CAN_TX_RX_func.c **** *
  41:CAN_TX_RX_func.c **** * Summary:
  42:CAN_TX_RX_func.c **** *  This function is Send Message from one of Basic mailboxes. The function loops
  43:CAN_TX_RX_func.c **** *  through the transmit message buffer designed as Basic CAN mailboxes for the
  44:CAN_TX_RX_func.c **** *  first free available and sends from it. The number of retries is limited.
  45:CAN_TX_RX_func.c **** *
  46:CAN_TX_RX_func.c **** * Parameters:
  47:CAN_TX_RX_func.c **** *  message: The pointer to a structure that contains all required data to send
  48:CAN_TX_RX_func.c **** *           messages.
  49:CAN_TX_RX_func.c **** *
  50:CAN_TX_RX_func.c **** * Return:
  51:CAN_TX_RX_func.c **** *  Indication if message has been sent.
  52:CAN_TX_RX_func.c **** *   Define                             Description
  53:CAN_TX_RX_func.c **** *    CYRET_SUCCESS                      The function passed successfully
  54:CAN_TX_RX_func.c **** *    CAN_FAIL              The function failed
  55:CAN_TX_RX_func.c **** *
  56:CAN_TX_RX_func.c **** *******************************************************************************/
  57:CAN_TX_RX_func.c **** uint8 CAN_SendMsg(const CAN_TX_MSG *message) 
  58:CAN_TX_RX_func.c **** {
  28              		.loc 1 58 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  34              		.cfi_def_cfa_offset 24
  35              		.cfi_offset 3, -24
  36              		.cfi_offset 4, -20
  37              		.cfi_offset 5, -16
  38              		.cfi_offset 6, -12
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 4F46     		mov	r7, r9
  42 0004 4646     		mov	r6, r8
  43 0006 C0B4     		push	{r6, r7}
  44              		.cfi_def_cfa_offset 32
  45              		.cfi_offset 8, -32
  46              		.cfi_offset 9, -28
  47 0008 0600     		movs	r6, r0
  48              	.LVL1:
  59:CAN_TX_RX_func.c ****     uint8 i, j, shift;
  60:CAN_TX_RX_func.c ****     uint8 retry = 0u;
  61:CAN_TX_RX_func.c ****     uint8 result = CAN_FAIL;
  49              		.loc 1 61 0
  50 000a 0120     		movs	r0, #1
  51              	.LVL2:
  60:CAN_TX_RX_func.c ****     uint8 result = CAN_FAIL;
  52              		.loc 1 60 0
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 3


  53 000c 0023     		movs	r3, #0
  54 000e 9846     		mov	r8, r3
  62:CAN_TX_RX_func.c ****     uint32 regTemp;
  63:CAN_TX_RX_func.c **** 
  64:CAN_TX_RX_func.c ****     while (retry < CAN_RETRY_NUMBER)
  55              		.loc 1 64 0
  56 0010 93E0     		b	.L2
  57              	.LVL3:
  58              	.L18:
  65:CAN_TX_RX_func.c ****     {
  66:CAN_TX_RX_func.c ****         shift = 1u;    /* Start from first mailbox */
  67:CAN_TX_RX_func.c ****         for (i = 0u; i < CAN_NUMBER_OF_TX_MAILBOXES; i++)
  68:CAN_TX_RX_func.c ****         {
  69:CAN_TX_RX_func.c ****             /* Find Basic TX mailboxes */
  70:CAN_TX_RX_func.c ****             if ((CAN_TX_MAILBOX_TYPE & shift) == 0u)
  59              		.loc 1 70 0
  60 0012 AB07     		lsls	r3, r5, #30
  61 0014 7FD1     		bne	.L3
  71:CAN_TX_RX_func.c ****             {
  72:CAN_TX_RX_func.c ****                 /* Find free mailbox */
  73:CAN_TX_RX_func.c ****                 #if (CY_PSOC3 || CY_PSOC5)
  74:CAN_TX_RX_func.c ****                     if ((CAN_BUF_SR_REG.byte[2] & shift) == 0u)
  75:CAN_TX_RX_func.c ****                 #else  /* CY_PSOC4 */
  76:CAN_TX_RX_func.c ****                     if ((CAN_BUF_SR_REG &
  62              		.loc 1 76 0
  63 0016 4C4B     		ldr	r3, .L23
  64 0018 1B68     		ldr	r3, [r3]
  77:CAN_TX_RX_func.c ****                         (uint32) ((uint32) shift << CAN_TWO_BYTE_OFFSET)) == 0u)
  65              		.loc 1 77 0
  66 001a 2A04     		lsls	r2, r5, #16
  76:CAN_TX_RX_func.c ****                         (uint32) ((uint32) shift << CAN_TWO_BYTE_OFFSET)) == 0u)
  67              		.loc 1 76 0
  68 001c 1A42     		tst	r2, r3
  69 001e 7AD1     		bne	.L3
  70              	.LVL4:
  78:CAN_TX_RX_func.c ****                 #endif /* CY_PSOC3 || CY_PSOC5 */
  79:CAN_TX_RX_func.c ****                     {
  80:CAN_TX_RX_func.c ****                         regTemp = 0u;
  81:CAN_TX_RX_func.c **** 
  82:CAN_TX_RX_func.c ****                         /* Set message parameters */
  83:CAN_TX_RX_func.c ****                         if (message->rtr != CAN_STANDARD_MESSAGE)
  71              		.loc 1 83 0
  72 0020 3379     		ldrb	r3, [r6, #4]
  73 0022 002B     		cmp	r3, #0
  74 0024 01D1     		bne	.L21
  80:CAN_TX_RX_func.c **** 
  75              		.loc 1 80 0
  76 0026 0027     		movs	r7, #0
  77 0028 01E0     		b	.L4
  78              	.L21:
  84:CAN_TX_RX_func.c ****                         {
  85:CAN_TX_RX_func.c ****                             regTemp = CAN_TX_RTR_MASK;    /* RTR message Enable */
  79              		.loc 1 85 0
  80 002a 8027     		movs	r7, #128
  81 002c BF03     		lsls	r7, r7, #14
  82              	.L4:
  83              	.LVL5:
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 4


  86:CAN_TX_RX_func.c ****                         }
  87:CAN_TX_RX_func.c **** 
  88:CAN_TX_RX_func.c ****                         if (message->ide == CAN_STANDARD_MESSAGE)
  84              		.loc 1 88 0
  85 002e 7379     		ldrb	r3, [r6, #5]
  86 0030 002B     		cmp	r3, #0
  87 0032 07D1     		bne	.L5
  89:CAN_TX_RX_func.c ****                         {
  90:CAN_TX_RX_func.c ****                             CAN_SET_TX_ID_STANDARD_MSG(i, message->id);
  88              		.loc 1 90 0
  89 0034 2301     		lsls	r3, r4, #4
  90 0036 454A     		ldr	r2, .L23+4
  91 0038 9446     		mov	ip, r2
  92 003a 6344     		add	r3, r3, ip
  93 003c 3268     		ldr	r2, [r6]
  94 003e 5205     		lsls	r2, r2, #21
  95 0040 5A60     		str	r2, [r3, #4]
  96 0042 09E0     		b	.L6
  97              	.L5:
  91:CAN_TX_RX_func.c ****                         }
  92:CAN_TX_RX_func.c ****                         else
  93:CAN_TX_RX_func.c ****                         {
  94:CAN_TX_RX_func.c ****                             regTemp |= CAN_TX_IDE_MASK;
  98              		.loc 1 94 0
  99 0044 8023     		movs	r3, #128
 100 0046 5B03     		lsls	r3, r3, #13
 101 0048 1F43     		orrs	r7, r3
 102              	.LVL6:
  95:CAN_TX_RX_func.c ****                             CAN_SET_TX_ID_EXTENDED_MSG(i, message->id);
 103              		.loc 1 95 0
 104 004a 2301     		lsls	r3, r4, #4
 105 004c 3F4A     		ldr	r2, .L23+4
 106 004e 9446     		mov	ip, r2
 107 0050 6344     		add	r3, r3, ip
 108 0052 3268     		ldr	r2, [r6]
 109 0054 D200     		lsls	r2, r2, #3
 110 0056 5A60     		str	r2, [r3, #4]
 111              	.L6:
  96:CAN_TX_RX_func.c ****                         }
  97:CAN_TX_RX_func.c **** 
  98:CAN_TX_RX_func.c ****                         if (message->dlc < CAN_TX_DLC_MAX_VALUE)
 112              		.loc 1 98 0
 113 0058 B379     		ldrb	r3, [r6, #6]
 114 005a 072B     		cmp	r3, #7
 115 005c 03D8     		bhi	.L7
  99:CAN_TX_RX_func.c ****                         {
 100:CAN_TX_RX_func.c ****                             regTemp |= ((uint32) message->dlc) << CAN_TWO_BYTE_OFFSET;
 116              		.loc 1 100 0
 117 005e 1B04     		lsls	r3, r3, #16
 118 0060 1F43     		orrs	r7, r3
 119              	.LVL7:
 120 0062 B946     		mov	r9, r7
 121              	.LVL8:
 122 0064 03E0     		b	.L8
 123              	.L7:
 101:CAN_TX_RX_func.c ****                         }
 102:CAN_TX_RX_func.c ****                         else
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 5


 103:CAN_TX_RX_func.c ****                         {
 104:CAN_TX_RX_func.c ****                             regTemp |= CAN_TX_DLC_UPPER_VALUE;
 124              		.loc 1 104 0
 125 0066 8023     		movs	r3, #128
 126 0068 1B03     		lsls	r3, r3, #12
 127 006a 1F43     		orrs	r7, r3
 128              	.LVL9:
 129 006c B946     		mov	r9, r7
 130              	.LVL10:
 131              	.L8:
 105:CAN_TX_RX_func.c ****                         }
 106:CAN_TX_RX_func.c **** 
 107:CAN_TX_RX_func.c ****                         if (message->irq != CAN_TRANSMIT_INT_DISABLE)
 132              		.loc 1 107 0
 133 006e F379     		ldrb	r3, [r6, #7]
 134 0070 002B     		cmp	r3, #0
 135 0072 03D0     		beq	.L9
 108:CAN_TX_RX_func.c ****                         {
 109:CAN_TX_RX_func.c ****                             regTemp |= CAN_TX_INT_ENABLE_MASK;    /* Transmit Interrupt Enable */
 136              		.loc 1 109 0
 137 0074 0423     		movs	r3, #4
 138 0076 4A46     		mov	r2, r9
 139 0078 1A43     		orrs	r2, r3
 140 007a 9146     		mov	r9, r2
 141              	.LVL11:
 142              	.L9:
 110:CAN_TX_RX_func.c ****                         }
 111:CAN_TX_RX_func.c **** 
 112:CAN_TX_RX_func.c ****                         for (j = 0u; (j < message->dlc) && (j < CAN_TX_DLC_MAX_VALUE); j++)
 143              		.loc 1 112 0
 144 007c 0023     		movs	r3, #0
 145 007e 2AE0     		b	.L10
 146              	.LVL12:
 147              	.L14:
 113:CAN_TX_RX_func.c ****                         {
 114:CAN_TX_RX_func.c ****                             #if (CY_PSOC3 || CY_PSOC5)
 115:CAN_TX_RX_func.c ****                                 CAN_TX_DATA_BYTE(i, j) = message->msg->byte[j];
 116:CAN_TX_RX_func.c ****                             #else /* CY_PSOC4 */
 117:CAN_TX_RX_func.c ****                                 CAN_TX_DATA_BYTE(i, j, message->msg->byte[j]);
 148              		.loc 1 117 0
 149 0080 032B     		cmp	r3, #3
 150 0082 13D9     		bls	.L11
 151              		.loc 1 117 0 is_stmt 0 discriminator 1
 152 0084 2001     		lsls	r0, r4, #4
 153 0086 324A     		ldr	r2, .L23+8
 154 0088 9446     		mov	ip, r2
 155 008a 6044     		add	r0, r0, ip
 156 008c 0268     		ldr	r2, [r0]
 157 008e 9446     		mov	ip, r2
 158 0090 5907     		lsls	r1, r3, #29
 159 0092 CA1A     		subs	r2, r1, r3
 160 0094 D100     		lsls	r1, r2, #3
 161 0096 3831     		adds	r1, r1, #56
 162 0098 FF22     		movs	r2, #255
 163 009a 8A40     		lsls	r2, r2, r1
 164 009c 6746     		mov	r7, ip
 165 009e 9743     		bics	r7, r2
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 6


 166 00a0 F268     		ldr	r2, [r6, #12]
 167 00a2 D25C     		ldrb	r2, [r2, r3]
 168 00a4 8A40     		lsls	r2, r2, r1
 169 00a6 3A43     		orrs	r2, r7
 170 00a8 0260     		str	r2, [r0]
 171 00aa 12E0     		b	.L12
 172              	.L11:
 173              		.loc 1 117 0 discriminator 2
 174 00ac 2001     		lsls	r0, r4, #4
 175 00ae 274A     		ldr	r2, .L23+4
 176 00b0 9446     		mov	ip, r2
 177 00b2 6044     		add	r0, r0, ip
 178 00b4 8268     		ldr	r2, [r0, #8]
 179 00b6 9446     		mov	ip, r2
 180 00b8 5907     		lsls	r1, r3, #29
 181 00ba CA1A     		subs	r2, r1, r3
 182 00bc D100     		lsls	r1, r2, #3
 183 00be 1831     		adds	r1, r1, #24
 184 00c0 FF22     		movs	r2, #255
 185 00c2 8A40     		lsls	r2, r2, r1
 186 00c4 6746     		mov	r7, ip
 187 00c6 9743     		bics	r7, r2
 188 00c8 F268     		ldr	r2, [r6, #12]
 189 00ca D25C     		ldrb	r2, [r2, r3]
 190 00cc 8A40     		lsls	r2, r2, r1
 191 00ce 3A43     		orrs	r2, r7
 192 00d0 8260     		str	r2, [r0, #8]
 193              	.L12:
 112:CAN_TX_RX_func.c ****                         {
 194              		.loc 1 112 0 is_stmt 1 discriminator 2
 195 00d2 0133     		adds	r3, r3, #1
 196              	.LVL13:
 197 00d4 DBB2     		uxtb	r3, r3
 198              	.LVL14:
 199              	.L10:
 112:CAN_TX_RX_func.c ****                         {
 200              		.loc 1 112 0 is_stmt 0 discriminator 1
 201 00d6 B279     		ldrb	r2, [r6, #6]
 202 00d8 9342     		cmp	r3, r2
 203 00da 01D2     		bcs	.L13
 112:CAN_TX_RX_func.c ****                         {
 204              		.loc 1 112 0 discriminator 3
 205 00dc 072B     		cmp	r3, #7
 206 00de CFD9     		bls	.L14
 207              	.L13:
 118:CAN_TX_RX_func.c ****                             #endif /* CY_PSOC3 || CY_PSOC5 */
 119:CAN_TX_RX_func.c ****                         }
 120:CAN_TX_RX_func.c **** 
 121:CAN_TX_RX_func.c ****                         /* Disable isr */
 122:CAN_TX_RX_func.c ****     CyIntDisable(CAN_ISR_NUMBER);
 208              		.loc 1 122 0 is_stmt 1
 209 00e0 1B20     		movs	r0, #27
 210 00e2 FFF7FEFF 		bl	CyIntDisable
 211              	.LVL15:
 123:CAN_TX_RX_func.c **** 
 124:CAN_TX_RX_func.c ****                         /* WPN[23] and WPN[3] set to 1 for write to CAN Control reg */
 125:CAN_TX_RX_func.c ****                         CY_SET_REG32(CAN_TX_CMD_PTR(i), (regTemp | CAN_TX_WPN_SET));
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 7


 212              		.loc 1 125 0
 213 00e6 2301     		lsls	r3, r4, #4
 214 00e8 184A     		ldr	r2, .L23+4
 215 00ea 9446     		mov	ip, r2
 216 00ec 6344     		add	r3, r3, ip
 217 00ee 194A     		ldr	r2, .L23+12
 218 00f0 4F46     		mov	r7, r9
 219 00f2 1743     		orrs	r7, r2
 220 00f4 1F60     		str	r7, [r3]
 126:CAN_TX_RX_func.c **** 
 127:CAN_TX_RX_func.c ****                         #if (CY_PSOC3 || CY_PSOC5)
 128:CAN_TX_RX_func.c ****                             CY_SET_REG32(CAN_TX_CMD_PTR(i), CAN_SEND_MESSAGE);
 129:CAN_TX_RX_func.c ****                         #else /* CY_PSOC4 */
 130:CAN_TX_RX_func.c ****                             if (message->sst != CAN_STANDARD_MESSAGE)
 221              		.loc 1 130 0
 222 00f6 327A     		ldrb	r2, [r6, #8]
 223 00f8 002A     		cmp	r2, #0
 224 00fa 04D0     		beq	.L15
 131:CAN_TX_RX_func.c ****                             {
 132:CAN_TX_RX_func.c ****                                 /* Single Shot Transmission */
 133:CAN_TX_RX_func.c ****                                 CAN_TX_CMD_REG(i) |= CAN_SEND_MESSAGE |
 225              		.loc 1 133 0
 226 00fc 1968     		ldr	r1, [r3]
 227 00fe 0322     		movs	r2, #3
 228 0100 0A43     		orrs	r2, r1
 229 0102 1A60     		str	r2, [r3]
 230 0104 03E0     		b	.L16
 231              	.L15:
 134:CAN_TX_RX_func.c ****                                 CAN_TX_ABORT_MASK;
 135:CAN_TX_RX_func.c ****                             }
 136:CAN_TX_RX_func.c ****                             else
 137:CAN_TX_RX_func.c ****                             {
 138:CAN_TX_RX_func.c ****                                 CAN_TX_CMD_REG(i) |= CAN_SEND_MESSAGE;
 232              		.loc 1 138 0
 233 0106 1968     		ldr	r1, [r3]
 234 0108 0122     		movs	r2, #1
 235 010a 0A43     		orrs	r2, r1
 236 010c 1A60     		str	r2, [r3]
 237              	.L16:
 139:CAN_TX_RX_func.c ****                             }
 140:CAN_TX_RX_func.c ****                         #endif /* CY_PSOC3 || CY_PSOC5 */
 141:CAN_TX_RX_func.c **** 
 142:CAN_TX_RX_func.c ****                         /* Enable isr */
 143:CAN_TX_RX_func.c ****     CyIntEnable(CAN_ISR_NUMBER);
 238              		.loc 1 143 0
 239 010e 1B20     		movs	r0, #27
 240 0110 FFF7FEFF 		bl	CyIntEnable
 241              	.LVL16:
 144:CAN_TX_RX_func.c **** 
 145:CAN_TX_RX_func.c ****                         result = CYRET_SUCCESS;
 242              		.loc 1 145 0
 243 0114 0020     		movs	r0, #0
 244              	.LVL17:
 245              	.L3:
 146:CAN_TX_RX_func.c ****                     }
 147:CAN_TX_RX_func.c ****             }
 148:CAN_TX_RX_func.c ****             shift <<= 1u;
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 8


 246              		.loc 1 148 0
 247 0116 6D00     		lsls	r5, r5, #1
 248              	.LVL18:
 249 0118 EDB2     		uxtb	r5, r5
 250              	.LVL19:
 149:CAN_TX_RX_func.c ****             if (result == CYRET_SUCCESS)
 251              		.loc 1 149 0
 252 011a 0028     		cmp	r0, #0
 253 011c 07D0     		beq	.L17
  67:CAN_TX_RX_func.c ****         {
 254              		.loc 1 67 0 discriminator 2
 255 011e 0134     		adds	r4, r4, #1
 256              	.LVL20:
 257 0120 E4B2     		uxtb	r4, r4
 258              	.LVL21:
 259 0122 01E0     		b	.L20
 260              	.LVL22:
 261              	.L22:
 262 0124 0125     		movs	r5, #1
 263 0126 0024     		movs	r4, #0
 264              	.L20:
 265              	.LVL23:
  67:CAN_TX_RX_func.c ****         {
 266              		.loc 1 67 0 is_stmt 0 discriminator 1
 267 0128 072C     		cmp	r4, #7
 268 012a 00D8     		bhi	.LCB273
 269 012c 71E7     		b	.L18	@long jump
 270              	.LCB273:
 271              	.L17:
 150:CAN_TX_RX_func.c ****             {
 151:CAN_TX_RX_func.c ****                 break;
 152:CAN_TX_RX_func.c ****             }
 153:CAN_TX_RX_func.c ****         }
 154:CAN_TX_RX_func.c ****         if (result == CYRET_SUCCESS)
 272              		.loc 1 154 0 is_stmt 1
 273 012e 0028     		cmp	r0, #0
 274 0130 06D0     		beq	.L19
 155:CAN_TX_RX_func.c ****         {
 156:CAN_TX_RX_func.c ****             break;
 157:CAN_TX_RX_func.c ****         }
 158:CAN_TX_RX_func.c ****         else
 159:CAN_TX_RX_func.c ****         {
 160:CAN_TX_RX_func.c ****             retry++;
 275              		.loc 1 160 0
 276 0132 4346     		mov	r3, r8
 277 0134 0133     		adds	r3, r3, #1
 278 0136 DBB2     		uxtb	r3, r3
 279 0138 9846     		mov	r8, r3
 280              	.LVL24:
 281              	.L2:
  64:CAN_TX_RX_func.c ****     {
 282              		.loc 1 64 0
 283 013a 4346     		mov	r3, r8
 284 013c 022B     		cmp	r3, #2
 285 013e F1D9     		bls	.L22
 286              	.L19:
 161:CAN_TX_RX_func.c ****         }
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 9


 162:CAN_TX_RX_func.c ****     }
 163:CAN_TX_RX_func.c **** 
 164:CAN_TX_RX_func.c ****     return (result);
 165:CAN_TX_RX_func.c **** }
 287              		.loc 1 165 0
 288              		@ sp needed
 289              	.LVL25:
 290              	.LVL26:
 291 0140 0CBC     		pop	{r2, r3}
 292 0142 9046     		mov	r8, r2
 293 0144 9946     		mov	r9, r3
 294 0146 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 295              	.L24:
 296              		.align	2
 297              	.L23:
 298 0148 08002E40 		.word	1076756488
 299 014c 20002E40 		.word	1076756512
 300 0150 2C002E40 		.word	1076756524
 301 0154 08008000 		.word	8388616
 302              		.cfi_endproc
 303              	.LFE1:
 304              		.size	CAN_SendMsg, .-CAN_SendMsg
 305              		.section	.text.CAN_TxCancel,"ax",%progbits
 306              		.align	2
 307              		.global	CAN_TxCancel
 308              		.code	16
 309              		.thumb_func
 310              		.type	CAN_TxCancel, %function
 311              	CAN_TxCancel:
 312              	.LFB2:
 166:CAN_TX_RX_func.c **** 
 167:CAN_TX_RX_func.c **** 
 168:CAN_TX_RX_func.c **** /*******************************************************************************
 169:CAN_TX_RX_func.c **** * FUNCTION NAME:   CAN_TxCancel
 170:CAN_TX_RX_func.c **** ********************************************************************************
 171:CAN_TX_RX_func.c **** *
 172:CAN_TX_RX_func.c **** * Summary:
 173:CAN_TX_RX_func.c **** *  This function cancels transmission of a message that has been queued to be
 174:CAN_TX_RX_func.c **** *  transmitted. Values between 0 and 7 are valid.
 175:CAN_TX_RX_func.c **** *
 176:CAN_TX_RX_func.c **** * Parameters:
 177:CAN_TX_RX_func.c **** *  bufferId: The mailbox number.
 178:CAN_TX_RX_func.c **** *
 179:CAN_TX_RX_func.c **** * Return:
 180:CAN_TX_RX_func.c **** *  None.
 181:CAN_TX_RX_func.c **** *
 182:CAN_TX_RX_func.c **** *******************************************************************************/
 183:CAN_TX_RX_func.c **** void CAN_TxCancel(uint8 bufferId) 
 184:CAN_TX_RX_func.c **** {
 313              		.loc 1 184 0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317              		@ link register save eliminated.
 318              	.LVL27:
 185:CAN_TX_RX_func.c ****     if (bufferId < CAN_NUMBER_OF_TX_MAILBOXES)
 319              		.loc 1 185 0
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 10


 320 0000 0728     		cmp	r0, #7
 321 0002 09D8     		bhi	.L25
 186:CAN_TX_RX_func.c ****     {
 187:CAN_TX_RX_func.c ****         CAN_TX_ABORT_MESSAGE(bufferId);
 322              		.loc 1 187 0
 323 0004 0001     		lsls	r0, r0, #4
 324              	.LVL28:
 325 0006 054B     		ldr	r3, .L27
 326 0008 9C46     		mov	ip, r3
 327 000a 6044     		add	r0, r0, ip
 328 000c 0368     		ldr	r3, [r0]
 329 000e 0322     		movs	r2, #3
 330 0010 9343     		bics	r3, r2
 331 0012 013A     		subs	r2, r2, #1
 332 0014 1343     		orrs	r3, r2
 333 0016 0360     		str	r3, [r0]
 334              	.L25:
 188:CAN_TX_RX_func.c ****     }
 189:CAN_TX_RX_func.c **** }
 335              		.loc 1 189 0
 336              		@ sp needed
 337 0018 7047     		bx	lr
 338              	.L28:
 339 001a C046     		.align	2
 340              	.L27:
 341 001c 20002E40 		.word	1076756512
 342              		.cfi_endproc
 343              	.LFE2:
 344              		.size	CAN_TxCancel, .-CAN_TxCancel
 345              		.section	.text.CAN_SendMsg0,"ax",%progbits
 346              		.align	2
 347              		.global	CAN_SendMsg0
 348              		.code	16
 349              		.thumb_func
 350              		.type	CAN_SendMsg0, %function
 351              	CAN_SendMsg0:
 352              	.LFB3:
 190:CAN_TX_RX_func.c **** 
 191:CAN_TX_RX_func.c **** 
 192:CAN_TX_RX_func.c **** #if (CAN_TX0_FUNC_ENABLE)
 193:CAN_TX_RX_func.c ****     /*******************************************************************************
 194:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg0
 195:CAN_TX_RX_func.c ****     ********************************************************************************
 196:CAN_TX_RX_func.c ****     *
 197:CAN_TX_RX_func.c ****     * Summary:
 198:CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 0. The function checks
 199:CAN_TX_RX_func.c ****     *  if mailbox 0 doesn't already have un-transmitted messages waiting for
 200:CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 201:CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 202:CAN_TX_RX_func.c ****     *
 203:CAN_TX_RX_func.c ****     * Parameters:
 204:CAN_TX_RX_func.c ****     *  None.
 205:CAN_TX_RX_func.c ****     *
 206:CAN_TX_RX_func.c ****     * Return:
 207:CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 208:CAN_TX_RX_func.c ****     *   Define                             Description
 209:CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 11


 210:CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 211:CAN_TX_RX_func.c ****     *
 212:CAN_TX_RX_func.c ****     *******************************************************************************/
 213:CAN_TX_RX_func.c ****     uint8 CAN_SendMsg0(void) 
 214:CAN_TX_RX_func.c ****     {
 353              		.loc 1 214 0
 354              		.cfi_startproc
 355              		@ args = 0, pretend = 0, frame = 0
 356              		@ frame_needed = 0, uses_anonymous_args = 0
 357 0000 70B5     		push	{r4, r5, r6, lr}
 358              		.cfi_def_cfa_offset 16
 359              		.cfi_offset 4, -16
 360              		.cfi_offset 5, -12
 361              		.cfi_offset 6, -8
 362              		.cfi_offset 14, -4
 363              	.LVL29:
 215:CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 216:CAN_TX_RX_func.c **** 
 217:CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 218:CAN_TX_RX_func.c ****             if ((CAN_TX[0u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 219:CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 220:CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(0u) & CAN_TX_REQUEST_PENDING) != 0u)
 364              		.loc 1 220 0
 365 0002 234B     		ldr	r3, .L32
 366 0004 1B68     		ldr	r3, [r3]
 367 0006 DB07     		lsls	r3, r3, #31
 368 0008 3FD4     		bmi	.L31
 221:CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 222:CAN_TX_RX_func.c ****             {
 223:CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 224:CAN_TX_RX_func.c ****             }
 225:CAN_TX_RX_func.c ****             else
 226:CAN_TX_RX_func.c ****             {
 227:CAN_TX_RX_func.c ****                 /* `#START MESSAGE_0_TRASMITTED` */
 228:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(0,0,dato_enviado[0]);
 369              		.loc 1 228 0
 370 000a 224B     		ldr	r3, .L32+4
 371 000c 1968     		ldr	r1, [r3]
 372 000e 0902     		lsls	r1, r1, #8
 373 0010 090A     		lsrs	r1, r1, #8
 374 0012 214A     		ldr	r2, .L32+8
 375 0014 1078     		ldrb	r0, [r2]
 376 0016 0006     		lsls	r0, r0, #24
 377 0018 0143     		orrs	r1, r0
 378 001a 1960     		str	r1, [r3]
 229:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(0,1,dato_enviado[1]);
 379              		.loc 1 229 0
 380 001c 1968     		ldr	r1, [r3]
 381 001e 1F48     		ldr	r0, .L32+12
 382 0020 0140     		ands	r1, r0
 383 0022 0C00     		movs	r4, r1
 384 0024 5178     		ldrb	r1, [r2, #1]
 385 0026 0904     		lsls	r1, r1, #16
 386 0028 2143     		orrs	r1, r4
 387 002a 1960     		str	r1, [r3]
 230:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(0,2,dato_enviado[2]);
 388              		.loc 1 230 0
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 12


 389 002c 1C68     		ldr	r4, [r3]
 390 002e 1C49     		ldr	r1, .L32+16
 391 0030 0C40     		ands	r4, r1
 392 0032 2500     		movs	r5, r4
 393 0034 9478     		ldrb	r4, [r2, #2]
 394 0036 2402     		lsls	r4, r4, #8
 395 0038 2C43     		orrs	r4, r5
 396 003a 1C60     		str	r4, [r3]
 231:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(0,3,dato_enviado[3]);
 397              		.loc 1 231 0
 398 003c 1C68     		ldr	r4, [r3]
 399 003e FF26     		movs	r6, #255
 400 0040 B443     		bics	r4, r6
 401 0042 D578     		ldrb	r5, [r2, #3]
 402 0044 2C43     		orrs	r4, r5
 403 0046 1C60     		str	r4, [r3]
 232:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(0,4,dato_enviado[4]);
 404              		.loc 1 232 0
 405 0048 164B     		ldr	r3, .L32+20
 406 004a 1C68     		ldr	r4, [r3]
 407 004c 2402     		lsls	r4, r4, #8
 408 004e 240A     		lsrs	r4, r4, #8
 409 0050 1579     		ldrb	r5, [r2, #4]
 410 0052 2D06     		lsls	r5, r5, #24
 411 0054 2C43     		orrs	r4, r5
 412 0056 1C60     		str	r4, [r3]
 233:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(0,5,dato_enviado[5]);
 413              		.loc 1 233 0
 414 0058 1C68     		ldr	r4, [r3]
 415 005a 2040     		ands	r0, r4
 416 005c 5479     		ldrb	r4, [r2, #5]
 417 005e 2404     		lsls	r4, r4, #16
 418 0060 2043     		orrs	r0, r4
 419 0062 1860     		str	r0, [r3]
 234:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(0,6,dato_enviado[6]);
 420              		.loc 1 234 0
 421 0064 1868     		ldr	r0, [r3]
 422 0066 0140     		ands	r1, r0
 423 0068 9079     		ldrb	r0, [r2, #6]
 424 006a 0002     		lsls	r0, r0, #8
 425 006c 0143     		orrs	r1, r0
 426 006e 1960     		str	r1, [r3]
 235:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(0,7,dato_enviado[7]);                           
 427              		.loc 1 235 0
 428 0070 1868     		ldr	r0, [r3]
 429 0072 B043     		bics	r0, r6
 430 0074 D179     		ldrb	r1, [r2, #7]
 431 0076 0200     		movs	r2, r0
 432 0078 0A43     		orrs	r2, r1
 433 007a 1A60     		str	r2, [r3]
 236:CAN_TX_RX_func.c ****                 /* `#END` */
 237:CAN_TX_RX_func.c **** 
 238:CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_0_CALLBACK
 239:CAN_TX_RX_func.c ****                     CAN_SendMsg_0_Callback();
 240:CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_0_CALLBACK */
 241:CAN_TX_RX_func.c **** 
 242:CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(0u),
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 13


 434              		.loc 1 242 0
 435 007c 044A     		ldr	r2, .L32
 436 007e 1168     		ldr	r1, [r2]
 437 0080 0123     		movs	r3, #1
 438 0082 0B43     		orrs	r3, r1
 439 0084 1360     		str	r3, [r2]
 215:CAN_TX_RX_func.c **** 
 440              		.loc 1 215 0
 441 0086 0020     		movs	r0, #0
 442 0088 00E0     		b	.L30
 443              	.L31:
 223:CAN_TX_RX_func.c ****             }
 444              		.loc 1 223 0
 445 008a 0120     		movs	r0, #1
 446              	.L30:
 447              	.LVL30:
 243:CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(0u)) | CAN_SEND_MESSAGE);
 244:CAN_TX_RX_func.c ****             }
 245:CAN_TX_RX_func.c **** 
 246:CAN_TX_RX_func.c ****         return (result);
 247:CAN_TX_RX_func.c ****     }
 448              		.loc 1 247 0
 449              		@ sp needed
 450 008c 70BD     		pop	{r4, r5, r6, pc}
 451              	.L33:
 452 008e C046     		.align	2
 453              	.L32:
 454 0090 20002E40 		.word	1076756512
 455 0094 28002E40 		.word	1076756520
 456 0098 00000000 		.word	dato_enviado
 457 009c FFFF00FF 		.word	-16711681
 458 00a0 FF00FFFF 		.word	-65281
 459 00a4 2C002E40 		.word	1076756524
 460              		.cfi_endproc
 461              	.LFE3:
 462              		.size	CAN_SendMsg0, .-CAN_SendMsg0
 463              		.section	.text.CAN_SendMsg1,"ax",%progbits
 464              		.align	2
 465              		.global	CAN_SendMsg1
 466              		.code	16
 467              		.thumb_func
 468              		.type	CAN_SendMsg1, %function
 469              	CAN_SendMsg1:
 470              	.LFB4:
 248:CAN_TX_RX_func.c **** #endif /* CAN_TX0_FUNC_ENABLE */
 249:CAN_TX_RX_func.c **** 
 250:CAN_TX_RX_func.c **** 
 251:CAN_TX_RX_func.c **** #if (CAN_TX1_FUNC_ENABLE)
 252:CAN_TX_RX_func.c ****     /*******************************************************************************
 253:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg1
 254:CAN_TX_RX_func.c ****     ********************************************************************************
 255:CAN_TX_RX_func.c ****     *
 256:CAN_TX_RX_func.c ****     * Summary:
 257:CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 1. The function checks
 258:CAN_TX_RX_func.c ****     *  if mailbox 1 doesn't already have un-transmitted messages waiting for
 259:CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 260:CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 14


 261:CAN_TX_RX_func.c ****     *
 262:CAN_TX_RX_func.c ****     * Parameters:
 263:CAN_TX_RX_func.c ****     *  None.
 264:CAN_TX_RX_func.c ****     *
 265:CAN_TX_RX_func.c ****     * Return:
 266:CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 267:CAN_TX_RX_func.c ****     *   Define                             Description
 268:CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 269:CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 270:CAN_TX_RX_func.c ****     *
 271:CAN_TX_RX_func.c ****     *******************************************************************************/
 272:CAN_TX_RX_func.c ****     uint8 CAN_SendMsg1(void) 
 273:CAN_TX_RX_func.c ****     {
 471              		.loc 1 273 0
 472              		.cfi_startproc
 473              		@ args = 0, pretend = 0, frame = 0
 474              		@ frame_needed = 0, uses_anonymous_args = 0
 475 0000 70B5     		push	{r4, r5, r6, lr}
 476              		.cfi_def_cfa_offset 16
 477              		.cfi_offset 4, -16
 478              		.cfi_offset 5, -12
 479              		.cfi_offset 6, -8
 480              		.cfi_offset 14, -4
 481              	.LVL31:
 274:CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 275:CAN_TX_RX_func.c **** 
 276:CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 277:CAN_TX_RX_func.c ****             if ((CAN_TX[1u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 278:CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 279:CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(1u) & CAN_TX_REQUEST_PENDING) != 0u)
 482              		.loc 1 279 0
 483 0002 234B     		ldr	r3, .L37
 484 0004 1B68     		ldr	r3, [r3]
 485 0006 DB07     		lsls	r3, r3, #31
 486 0008 3FD4     		bmi	.L36
 280:CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 281:CAN_TX_RX_func.c ****             {
 282:CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 283:CAN_TX_RX_func.c ****             }
 284:CAN_TX_RX_func.c ****             else
 285:CAN_TX_RX_func.c ****             {
 286:CAN_TX_RX_func.c ****                 /* `#START MESSAGE_1_TRASMITTED` */
 287:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(1,0,dato_enviado_1[0]);
 487              		.loc 1 287 0
 488 000a 224B     		ldr	r3, .L37+4
 489 000c 1968     		ldr	r1, [r3]
 490 000e 0902     		lsls	r1, r1, #8
 491 0010 090A     		lsrs	r1, r1, #8
 492 0012 214A     		ldr	r2, .L37+8
 493 0014 1078     		ldrb	r0, [r2]
 494 0016 0006     		lsls	r0, r0, #24
 495 0018 0143     		orrs	r1, r0
 496 001a 1960     		str	r1, [r3]
 288:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(1,1,dato_enviado_1[1]);
 497              		.loc 1 288 0
 498 001c 1968     		ldr	r1, [r3]
 499 001e 1F48     		ldr	r0, .L37+12
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 15


 500 0020 0140     		ands	r1, r0
 501 0022 0C00     		movs	r4, r1
 502 0024 5178     		ldrb	r1, [r2, #1]
 503 0026 0904     		lsls	r1, r1, #16
 504 0028 2143     		orrs	r1, r4
 505 002a 1960     		str	r1, [r3]
 289:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(1,2,dato_enviado_1[2]);
 506              		.loc 1 289 0
 507 002c 1C68     		ldr	r4, [r3]
 508 002e 1C49     		ldr	r1, .L37+16
 509 0030 0C40     		ands	r4, r1
 510 0032 2500     		movs	r5, r4
 511 0034 9478     		ldrb	r4, [r2, #2]
 512 0036 2402     		lsls	r4, r4, #8
 513 0038 2C43     		orrs	r4, r5
 514 003a 1C60     		str	r4, [r3]
 290:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(1,3,dato_enviado_1[3]);
 515              		.loc 1 290 0
 516 003c 1C68     		ldr	r4, [r3]
 517 003e FF26     		movs	r6, #255
 518 0040 B443     		bics	r4, r6
 519 0042 D578     		ldrb	r5, [r2, #3]
 520 0044 2C43     		orrs	r4, r5
 521 0046 1C60     		str	r4, [r3]
 291:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(1,4,dato_enviado_1[4]);
 522              		.loc 1 291 0
 523 0048 164B     		ldr	r3, .L37+20
 524 004a 1C68     		ldr	r4, [r3]
 525 004c 2402     		lsls	r4, r4, #8
 526 004e 240A     		lsrs	r4, r4, #8
 527 0050 1579     		ldrb	r5, [r2, #4]
 528 0052 2D06     		lsls	r5, r5, #24
 529 0054 2C43     		orrs	r4, r5
 530 0056 1C60     		str	r4, [r3]
 292:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(1,5,dato_enviado_1[5]);
 531              		.loc 1 292 0
 532 0058 1C68     		ldr	r4, [r3]
 533 005a 2040     		ands	r0, r4
 534 005c 5479     		ldrb	r4, [r2, #5]
 535 005e 2404     		lsls	r4, r4, #16
 536 0060 2043     		orrs	r0, r4
 537 0062 1860     		str	r0, [r3]
 293:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(1,6,dato_enviado_1[6]);
 538              		.loc 1 293 0
 539 0064 1868     		ldr	r0, [r3]
 540 0066 0140     		ands	r1, r0
 541 0068 9079     		ldrb	r0, [r2, #6]
 542 006a 0002     		lsls	r0, r0, #8
 543 006c 0143     		orrs	r1, r0
 544 006e 1960     		str	r1, [r3]
 294:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(1,7,dato_enviado_1[7]);
 545              		.loc 1 294 0
 546 0070 1868     		ldr	r0, [r3]
 547 0072 B043     		bics	r0, r6
 548 0074 D179     		ldrb	r1, [r2, #7]
 549 0076 0200     		movs	r2, r0
 550 0078 0A43     		orrs	r2, r1
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 16


 551 007a 1A60     		str	r2, [r3]
 295:CAN_TX_RX_func.c ****                 /* `#END` */
 296:CAN_TX_RX_func.c **** 
 297:CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_1_CALLBACK
 298:CAN_TX_RX_func.c ****                     CAN_SendMsg_1_Callback();
 299:CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_1_CALLBACK */
 300:CAN_TX_RX_func.c **** 
 301:CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(1u),
 552              		.loc 1 301 0
 553 007c 044A     		ldr	r2, .L37
 554 007e 1168     		ldr	r1, [r2]
 555 0080 0123     		movs	r3, #1
 556 0082 0B43     		orrs	r3, r1
 557 0084 1360     		str	r3, [r2]
 274:CAN_TX_RX_func.c **** 
 558              		.loc 1 274 0
 559 0086 0020     		movs	r0, #0
 560 0088 00E0     		b	.L35
 561              	.L36:
 282:CAN_TX_RX_func.c ****             }
 562              		.loc 1 282 0
 563 008a 0120     		movs	r0, #1
 564              	.L35:
 565              	.LVL32:
 302:CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(1u)) | CAN_SEND_MESSAGE);
 303:CAN_TX_RX_func.c ****             }
 304:CAN_TX_RX_func.c **** 
 305:CAN_TX_RX_func.c ****         return (result);
 306:CAN_TX_RX_func.c ****     }
 566              		.loc 1 306 0
 567              		@ sp needed
 568 008c 70BD     		pop	{r4, r5, r6, pc}
 569              	.L38:
 570 008e C046     		.align	2
 571              	.L37:
 572 0090 30002E40 		.word	1076756528
 573 0094 38002E40 		.word	1076756536
 574 0098 00000000 		.word	dato_enviado_1
 575 009c FFFF00FF 		.word	-16711681
 576 00a0 FF00FFFF 		.word	-65281
 577 00a4 3C002E40 		.word	1076756540
 578              		.cfi_endproc
 579              	.LFE4:
 580              		.size	CAN_SendMsg1, .-CAN_SendMsg1
 581              		.section	.text.CAN_ReceiveMsg,"ax",%progbits
 582              		.align	2
 583              		.global	CAN_ReceiveMsg
 584              		.code	16
 585              		.thumb_func
 586              		.type	CAN_ReceiveMsg, %function
 587              	CAN_ReceiveMsg:
 588              	.LFB5:
 307:CAN_TX_RX_func.c **** #endif /* CAN_TX1_FUNC_ENABLE */
 308:CAN_TX_RX_func.c **** 
 309:CAN_TX_RX_func.c **** 
 310:CAN_TX_RX_func.c **** #if (CAN_TX2_FUNC_ENABLE)
 311:CAN_TX_RX_func.c ****     /*******************************************************************************
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 17


 312:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg2
 313:CAN_TX_RX_func.c ****     ********************************************************************************
 314:CAN_TX_RX_func.c ****     *
 315:CAN_TX_RX_func.c ****     * Summary:
 316:CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 2. The function checks
 317:CAN_TX_RX_func.c ****     *  if mailbox 2 doesn't already have un-transmitted messages waiting for
 318:CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 319:CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 320:CAN_TX_RX_func.c ****     *
 321:CAN_TX_RX_func.c ****     * Parameters:
 322:CAN_TX_RX_func.c ****     *  None.
 323:CAN_TX_RX_func.c ****     *
 324:CAN_TX_RX_func.c ****     * Return:
 325:CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 326:CAN_TX_RX_func.c ****     *   Define                             Description
 327:CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 328:CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 329:CAN_TX_RX_func.c ****     *
 330:CAN_TX_RX_func.c ****     *******************************************************************************/
 331:CAN_TX_RX_func.c ****     uint8 CAN_SendMsg2(void) 
 332:CAN_TX_RX_func.c ****     {
 333:CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 334:CAN_TX_RX_func.c **** 
 335:CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 336:CAN_TX_RX_func.c ****             if ((CAN_TX[2u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 337:CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 338:CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(2u) & CAN_TX_REQUEST_PENDING) != 0u)
 339:CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 340:CAN_TX_RX_func.c ****             {
 341:CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 342:CAN_TX_RX_func.c ****             }
 343:CAN_TX_RX_func.c ****             else
 344:CAN_TX_RX_func.c ****             {
 345:CAN_TX_RX_func.c ****                 /* `#START MESSAGE_2_TRASMITTED` */
 346:CAN_TX_RX_func.c **** 
 347:CAN_TX_RX_func.c ****                 /* `#END` */
 348:CAN_TX_RX_func.c **** 
 349:CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_2_CALLBACK
 350:CAN_TX_RX_func.c ****                     CAN_SendMsg_2_Callback();
 351:CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_2_CALLBACK */
 352:CAN_TX_RX_func.c **** 
 353:CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(2u),
 354:CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(2u)) | CAN_SEND_MESSAGE);
 355:CAN_TX_RX_func.c ****             }
 356:CAN_TX_RX_func.c **** 
 357:CAN_TX_RX_func.c ****         return (result);
 358:CAN_TX_RX_func.c ****     }
 359:CAN_TX_RX_func.c **** #endif /* CAN_TX2_FUNC_ENABLE */
 360:CAN_TX_RX_func.c **** 
 361:CAN_TX_RX_func.c **** 
 362:CAN_TX_RX_func.c **** #if (CAN_TX3_FUNC_ENABLE)
 363:CAN_TX_RX_func.c ****     /*******************************************************************************
 364:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg3
 365:CAN_TX_RX_func.c ****     ********************************************************************************
 366:CAN_TX_RX_func.c ****     *
 367:CAN_TX_RX_func.c ****     * Summary:
 368:CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 3. The function checks
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 18


 369:CAN_TX_RX_func.c ****     *  if mailbox 3 doesn't already have un-transmitted messages waiting for
 370:CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 371:CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 372:CAN_TX_RX_func.c ****     *
 373:CAN_TX_RX_func.c ****     * Parameters:
 374:CAN_TX_RX_func.c ****     *  None.
 375:CAN_TX_RX_func.c ****     *
 376:CAN_TX_RX_func.c ****     * Return:
 377:CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 378:CAN_TX_RX_func.c ****     *   Define                             Description
 379:CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 380:CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 381:CAN_TX_RX_func.c ****     *
 382:CAN_TX_RX_func.c ****     *******************************************************************************/
 383:CAN_TX_RX_func.c ****     uint8 CAN_SendMsg3(void) 
 384:CAN_TX_RX_func.c ****     {
 385:CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 386:CAN_TX_RX_func.c **** 
 387:CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 388:CAN_TX_RX_func.c ****             if ((CAN_TX[3u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 389:CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 390:CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(3u) & CAN_TX_REQUEST_PENDING) != 0u)
 391:CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 392:CAN_TX_RX_func.c ****             {
 393:CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 394:CAN_TX_RX_func.c ****             }
 395:CAN_TX_RX_func.c ****             else
 396:CAN_TX_RX_func.c ****             {
 397:CAN_TX_RX_func.c ****                 /* `#START MESSAGE_3_TRASMITTED` */
 398:CAN_TX_RX_func.c **** 
 399:CAN_TX_RX_func.c ****                 /* `#END` */
 400:CAN_TX_RX_func.c **** 
 401:CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_3_CALLBACK
 402:CAN_TX_RX_func.c ****                     CAN_SendMsg_3_Callback();
 403:CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_3_CALLBACK */
 404:CAN_TX_RX_func.c **** 
 405:CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(3u),
 406:CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(3u)) | CAN_SEND_MESSAGE);
 407:CAN_TX_RX_func.c ****             }
 408:CAN_TX_RX_func.c **** 
 409:CAN_TX_RX_func.c ****         return (result);
 410:CAN_TX_RX_func.c ****     }
 411:CAN_TX_RX_func.c **** #endif /* CAN_TX3_FUNC_ENABLE */
 412:CAN_TX_RX_func.c **** 
 413:CAN_TX_RX_func.c **** 
 414:CAN_TX_RX_func.c **** #if (CAN_TX4_FUNC_ENABLE)
 415:CAN_TX_RX_func.c ****     /*******************************************************************************
 416:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg4
 417:CAN_TX_RX_func.c ****     ********************************************************************************
 418:CAN_TX_RX_func.c ****     *
 419:CAN_TX_RX_func.c ****     * Summary:
 420:CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 4. The function checks
 421:CAN_TX_RX_func.c ****     *  if mailbox 4 doesn't already have un-transmitted messages waiting for
 422:CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 423:CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 424:CAN_TX_RX_func.c ****     *
 425:CAN_TX_RX_func.c ****     * Parameters:
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 19


 426:CAN_TX_RX_func.c ****     *  None.
 427:CAN_TX_RX_func.c ****     *
 428:CAN_TX_RX_func.c ****     * Return:
 429:CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 430:CAN_TX_RX_func.c ****     *   Define                             Description
 431:CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 432:CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 433:CAN_TX_RX_func.c ****     *
 434:CAN_TX_RX_func.c ****     *******************************************************************************/
 435:CAN_TX_RX_func.c ****     uint8 CAN_SendMsg4(void) 
 436:CAN_TX_RX_func.c ****     {
 437:CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 438:CAN_TX_RX_func.c **** 
 439:CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 440:CAN_TX_RX_func.c ****             if ((CAN_TX[4u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 441:CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 442:CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(4u) & CAN_TX_REQUEST_PENDING) != 0u)
 443:CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 444:CAN_TX_RX_func.c ****             {
 445:CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 446:CAN_TX_RX_func.c ****             }
 447:CAN_TX_RX_func.c ****             else
 448:CAN_TX_RX_func.c ****             {
 449:CAN_TX_RX_func.c ****                 /* `#START MESSAGE_4_TRASMITTED` */
 450:CAN_TX_RX_func.c **** 
 451:CAN_TX_RX_func.c ****                 /* `#END` */
 452:CAN_TX_RX_func.c **** 
 453:CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_4_CALLBACK
 454:CAN_TX_RX_func.c ****                     CAN_SendMsg_4_Callback();
 455:CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_4_CALLBACK */
 456:CAN_TX_RX_func.c **** 
 457:CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(4u),
 458:CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(4u)) | CAN_SEND_MESSAGE);
 459:CAN_TX_RX_func.c ****             }
 460:CAN_TX_RX_func.c **** 
 461:CAN_TX_RX_func.c ****         return (result);
 462:CAN_TX_RX_func.c ****     }
 463:CAN_TX_RX_func.c **** #endif /* CAN_TX4_FUNC_ENABLE */
 464:CAN_TX_RX_func.c **** 
 465:CAN_TX_RX_func.c **** 
 466:CAN_TX_RX_func.c **** #if (CAN_TX5_FUNC_ENABLE)
 467:CAN_TX_RX_func.c ****     /*******************************************************************************
 468:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg5
 469:CAN_TX_RX_func.c ****     ********************************************************************************
 470:CAN_TX_RX_func.c ****     *
 471:CAN_TX_RX_func.c ****     * Summary:
 472:CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 5. The function checks
 473:CAN_TX_RX_func.c ****     *  if mailbox 5 doesn't already have un-transmitted messages waiting for
 474:CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 475:CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 476:CAN_TX_RX_func.c ****     *
 477:CAN_TX_RX_func.c ****     * Parameters:
 478:CAN_TX_RX_func.c ****     *  None.
 479:CAN_TX_RX_func.c ****     *
 480:CAN_TX_RX_func.c ****     * Return:
 481:CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 482:CAN_TX_RX_func.c ****     *   Define                             Description
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 20


 483:CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 484:CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 485:CAN_TX_RX_func.c ****     *
 486:CAN_TX_RX_func.c ****     *******************************************************************************/
 487:CAN_TX_RX_func.c ****     uint8 CAN_SendMsg5(void) 
 488:CAN_TX_RX_func.c ****     {
 489:CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 490:CAN_TX_RX_func.c **** 
 491:CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 492:CAN_TX_RX_func.c ****             if ((CAN_TX[5u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 493:CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 494:CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(5u) & CAN_TX_REQUEST_PENDING) != 0u)
 495:CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 496:CAN_TX_RX_func.c ****             {
 497:CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 498:CAN_TX_RX_func.c ****             }
 499:CAN_TX_RX_func.c ****             else
 500:CAN_TX_RX_func.c ****             {
 501:CAN_TX_RX_func.c ****                 /* `#START MESSAGE_5_TRASMITTED` */
 502:CAN_TX_RX_func.c **** 
 503:CAN_TX_RX_func.c ****                 /* `#END` */
 504:CAN_TX_RX_func.c **** 
 505:CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_5_CALLBACK
 506:CAN_TX_RX_func.c ****                     CAN_SendMsg_5_Callback();
 507:CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_5_CALLBACK */
 508:CAN_TX_RX_func.c **** 
 509:CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(5u),
 510:CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(5u)) | CAN_SEND_MESSAGE);
 511:CAN_TX_RX_func.c ****             }
 512:CAN_TX_RX_func.c **** 
 513:CAN_TX_RX_func.c ****         return (result);
 514:CAN_TX_RX_func.c ****     }
 515:CAN_TX_RX_func.c **** #endif /* CAN_TX5_FUNC_ENABLE */
 516:CAN_TX_RX_func.c **** 
 517:CAN_TX_RX_func.c **** 
 518:CAN_TX_RX_func.c **** #if (CAN_TX6_FUNC_ENABLE)
 519:CAN_TX_RX_func.c ****     /*******************************************************************************
 520:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg6
 521:CAN_TX_RX_func.c ****     ********************************************************************************
 522:CAN_TX_RX_func.c ****     *
 523:CAN_TX_RX_func.c ****     * Summary:
 524:CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 6. The function checks
 525:CAN_TX_RX_func.c ****     *  if mailbox 6 doesn't already have un-transmitted messages waiting for
 526:CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 527:CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 528:CAN_TX_RX_func.c ****     *
 529:CAN_TX_RX_func.c ****     * Parameters:
 530:CAN_TX_RX_func.c ****     *  None.
 531:CAN_TX_RX_func.c ****     *
 532:CAN_TX_RX_func.c ****     * Return:
 533:CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 534:CAN_TX_RX_func.c ****     *   Define                             Description
 535:CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 536:CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 537:CAN_TX_RX_func.c ****     *
 538:CAN_TX_RX_func.c ****     *******************************************************************************/
 539:CAN_TX_RX_func.c ****     uint8 CAN_SendMsg6(void) 
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 21


 540:CAN_TX_RX_func.c ****     {
 541:CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 542:CAN_TX_RX_func.c **** 
 543:CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 544:CAN_TX_RX_func.c ****             if ((CAN_TX[6u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 545:CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 546:CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(6u) & CAN_TX_REQUEST_PENDING) != 0u)
 547:CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 548:CAN_TX_RX_func.c ****             {
 549:CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 550:CAN_TX_RX_func.c ****             }
 551:CAN_TX_RX_func.c ****             else
 552:CAN_TX_RX_func.c ****             {
 553:CAN_TX_RX_func.c ****                 /* `#START MESSAGE_6_TRASMITTED` */
 554:CAN_TX_RX_func.c **** 
 555:CAN_TX_RX_func.c ****                 /* `#END` */
 556:CAN_TX_RX_func.c **** 
 557:CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_6_CALLBACK
 558:CAN_TX_RX_func.c ****                     CAN_SendMsg_6_Callback();
 559:CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_6_CALLBACK */
 560:CAN_TX_RX_func.c **** 
 561:CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(6u),
 562:CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(6u)) | CAN_SEND_MESSAGE);
 563:CAN_TX_RX_func.c ****             }
 564:CAN_TX_RX_func.c **** 
 565:CAN_TX_RX_func.c ****         return (result);
 566:CAN_TX_RX_func.c ****     }
 567:CAN_TX_RX_func.c **** #endif /* CAN_TX6_FUNC_ENABLE */
 568:CAN_TX_RX_func.c **** 
 569:CAN_TX_RX_func.c **** 
 570:CAN_TX_RX_func.c **** #if (CAN_TX7_FUNC_ENABLE)
 571:CAN_TX_RX_func.c ****     /*******************************************************************************
 572:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg7)
 573:CAN_TX_RX_func.c ****     ********************************************************************************
 574:CAN_TX_RX_func.c ****     *
 575:CAN_TX_RX_func.c ****     * Summary:
 576:CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 7. The function checks
 577:CAN_TX_RX_func.c ****     *  if mailbox 7 doesn't already have un-transmitted messages waiting for
 578:CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 579:CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 580:CAN_TX_RX_func.c ****     *
 581:CAN_TX_RX_func.c ****     * Parameters:
 582:CAN_TX_RX_func.c ****     *  None.
 583:CAN_TX_RX_func.c ****     *
 584:CAN_TX_RX_func.c ****     * Return:
 585:CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 586:CAN_TX_RX_func.c ****     *   Define                             Description
 587:CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 588:CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 589:CAN_TX_RX_func.c ****     *
 590:CAN_TX_RX_func.c ****     *******************************************************************************/
 591:CAN_TX_RX_func.c ****     uint8 CAN_SendMsg7(void) 
 592:CAN_TX_RX_func.c ****     {
 593:CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 594:CAN_TX_RX_func.c **** 
 595:CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 596:CAN_TX_RX_func.c ****             if ((CAN_TX[7u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 22


 597:CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 598:CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(7u) & CAN_TX_REQUEST_PENDING) != 0u)
 599:CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 600:CAN_TX_RX_func.c ****             {
 601:CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 602:CAN_TX_RX_func.c ****             }
 603:CAN_TX_RX_func.c ****             else
 604:CAN_TX_RX_func.c ****             {
 605:CAN_TX_RX_func.c ****                 /* `#START MESSAGE_7_TRASMITTED` */
 606:CAN_TX_RX_func.c **** 
 607:CAN_TX_RX_func.c ****                 /* `#END` */
 608:CAN_TX_RX_func.c **** 
 609:CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_7_CALLBACK
 610:CAN_TX_RX_func.c ****                     CAN_SendMsg_7_Callback();
 611:CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_7_CALLBACK */
 612:CAN_TX_RX_func.c **** 
 613:CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(7u),
 614:CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(7u)) | CAN_SEND_MESSAGE);
 615:CAN_TX_RX_func.c ****             }
 616:CAN_TX_RX_func.c **** 
 617:CAN_TX_RX_func.c ****         return (result);
 618:CAN_TX_RX_func.c ****     }
 619:CAN_TX_RX_func.c **** #endif /* CAN_TX7_FUNC_ENABLE */
 620:CAN_TX_RX_func.c **** 
 621:CAN_TX_RX_func.c **** 
 622:CAN_TX_RX_func.c **** /*******************************************************************************
 623:CAN_TX_RX_func.c **** * FUNCTION NAME:   CAN_ReceiveMsg
 624:CAN_TX_RX_func.c **** ********************************************************************************
 625:CAN_TX_RX_func.c **** *
 626:CAN_TX_RX_func.c **** * Summary:
 627:CAN_TX_RX_func.c **** *  This function is the entry point to Receive Message Interrupt for Basic
 628:CAN_TX_RX_func.c **** *  mailboxes. Clears the Receive particular Message interrupt flag. Generated
 629:CAN_TX_RX_func.c **** *  only if one of the Receive mailboxes is designed as Basic.
 630:CAN_TX_RX_func.c **** *
 631:CAN_TX_RX_func.c **** * Parameters:
 632:CAN_TX_RX_func.c **** *  rxMailbox: The mailbox number that trig Receive Message Interrupt.
 633:CAN_TX_RX_func.c **** *
 634:CAN_TX_RX_func.c **** * Return:
 635:CAN_TX_RX_func.c **** *  None.
 636:CAN_TX_RX_func.c **** *
 637:CAN_TX_RX_func.c **** * Reentrant:
 638:CAN_TX_RX_func.c **** *  Depends on the Customer code.
 639:CAN_TX_RX_func.c **** *
 640:CAN_TX_RX_func.c **** *******************************************************************************/
 641:CAN_TX_RX_func.c **** void CAN_ReceiveMsg(uint8 rxMailbox) 
 642:CAN_TX_RX_func.c **** {
 589              		.loc 1 642 0
 590              		.cfi_startproc
 591              		@ args = 0, pretend = 0, frame = 0
 592              		@ frame_needed = 0, uses_anonymous_args = 0
 593              		@ link register save eliminated.
 594              	.LVL33:
 643:CAN_TX_RX_func.c ****     #if (CY_PSOC3 || CY_PSOC5)
 644:CAN_TX_RX_func.c ****         if ((CAN_RX[rxMailbox].rxcmd.byte[0u] & CAN_RX_ACK_MSG) != 0u)
 645:CAN_TX_RX_func.c ****     #else  /* CY_PSOC4 */
 646:CAN_TX_RX_func.c ****         if ((CAN_RX_CMD_REG(rxMailbox) & CAN_RX_ACK_MSG) != 0u)
 595              		.loc 1 646 0
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 23


 596 0000 4001     		lsls	r0, r0, #5
 597              	.LVL34:
 598 0002 054B     		ldr	r3, .L41
 599 0004 9C46     		mov	ip, r3
 600 0006 6044     		add	r0, r0, ip
 601 0008 0368     		ldr	r3, [r0]
 602 000a DB07     		lsls	r3, r3, #31
 603 000c 03D5     		bpl	.L39
 647:CAN_TX_RX_func.c ****     #endif /* CY_PSOC3 || CY_PSOC5 */
 648:CAN_TX_RX_func.c ****         {
 649:CAN_TX_RX_func.c ****             /* `#START MESSAGE_BASIC_RECEIVED` */
 650:CAN_TX_RX_func.c **** 
 651:CAN_TX_RX_func.c ****             /* `#END` */
 652:CAN_TX_RX_func.c **** 
 653:CAN_TX_RX_func.c ****             #ifdef CAN_RECEIVE_MSG_CALLBACK
 654:CAN_TX_RX_func.c ****                 CAN_ReceiveMsg_Callback();
 655:CAN_TX_RX_func.c ****             #endif /* CAN_RECEIVE_MSG_CALLBACK */
 656:CAN_TX_RX_func.c **** 
 657:CAN_TX_RX_func.c ****             #if (CY_PSOC3 || CY_PSOC5)
 658:CAN_TX_RX_func.c ****                 CAN_RX[rxMailbox].rxcmd.byte[0u] |= CAN_RX_ACK_MSG;
 659:CAN_TX_RX_func.c ****             #else  /* CY_PSOC4 */
 660:CAN_TX_RX_func.c ****                 CAN_RX_CMD_REG(rxMailbox) |= CAN_RX_ACK_MSG;
 604              		.loc 1 660 0
 605 000e 0268     		ldr	r2, [r0]
 606 0010 0123     		movs	r3, #1
 607 0012 1343     		orrs	r3, r2
 608 0014 0360     		str	r3, [r0]
 609              	.L39:
 661:CAN_TX_RX_func.c ****             #endif /* CY_PSOC3 || CY_PSOC5 */
 662:CAN_TX_RX_func.c ****         }
 663:CAN_TX_RX_func.c **** }
 610              		.loc 1 663 0
 611              		@ sp needed
 612 0016 7047     		bx	lr
 613              	.L42:
 614              		.align	2
 615              	.L41:
 616 0018 A0002E40 		.word	1076756640
 617              		.cfi_endproc
 618              	.LFE5:
 619              		.size	CAN_ReceiveMsg, .-CAN_ReceiveMsg
 620              		.section	.text.CAN_ReceiveMsg0,"ax",%progbits
 621              		.align	2
 622              		.global	CAN_ReceiveMsg0
 623              		.code	16
 624              		.thumb_func
 625              		.type	CAN_ReceiveMsg0, %function
 626              	CAN_ReceiveMsg0:
 627              	.LFB6:
 664:CAN_TX_RX_func.c **** 
 665:CAN_TX_RX_func.c **** 
 666:CAN_TX_RX_func.c **** #if (CAN_RX0_FUNC_ENABLE)
 667:CAN_TX_RX_func.c ****     /*******************************************************************************
 668:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_ReceiveMsg0
 669:CAN_TX_RX_func.c ****     ********************************************************************************
 670:CAN_TX_RX_func.c ****     *
 671:CAN_TX_RX_func.c ****     * Summary:
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 24


 672:CAN_TX_RX_func.c ****     *  This function is the entry point to Receive Message 0 Interrupt. Clears the
 673:CAN_TX_RX_func.c ****     *  Receive Message 0 interrupt flag. Generated only for the Receive mailbox
 674:CAN_TX_RX_func.c ****     *  designed as Full.
 675:CAN_TX_RX_func.c ****     *
 676:CAN_TX_RX_func.c ****     * Parameters:
 677:CAN_TX_RX_func.c ****     *  None.
 678:CAN_TX_RX_func.c ****     *
 679:CAN_TX_RX_func.c ****     * Return:
 680:CAN_TX_RX_func.c ****     *  None.
 681:CAN_TX_RX_func.c ****     *
 682:CAN_TX_RX_func.c ****     * Reentrant:
 683:CAN_TX_RX_func.c ****     *  Depends on the Customer code.
 684:CAN_TX_RX_func.c ****     *
 685:CAN_TX_RX_func.c ****     *******************************************************************************/
 686:CAN_TX_RX_func.c ****     void CAN_ReceiveMsg0(void) 
 687:CAN_TX_RX_func.c ****     {
 628              		.loc 1 687 0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 0
 631              		@ frame_needed = 0, uses_anonymous_args = 0
 632              		@ link register save eliminated.
 688:CAN_TX_RX_func.c ****         /* `#START MESSAGE_0_RECEIVED` */
 689:CAN_TX_RX_func.c ****   
 690:CAN_TX_RX_func.c ****         mailbox0[0]=CAN_RX_DATA_BYTE1(0);
 633              		.loc 1 690 0
 634 0000 0F4A     		ldr	r2, .L44
 635 0002 1168     		ldr	r1, [r2]
 636 0004 090E     		lsrs	r1, r1, #24
 637 0006 0F4B     		ldr	r3, .L44+4
 638 0008 1970     		strb	r1, [r3]
 691:CAN_TX_RX_func.c ****         mailbox0[1]=CAN_RX_DATA_BYTE2(0);
 639              		.loc 1 691 0
 640 000a 1168     		ldr	r1, [r2]
 641 000c 090C     		lsrs	r1, r1, #16
 642 000e 5970     		strb	r1, [r3, #1]
 692:CAN_TX_RX_func.c ****         mailbox0[2]=CAN_RX_DATA_BYTE3(0);
 643              		.loc 1 692 0
 644 0010 1168     		ldr	r1, [r2]
 645 0012 090A     		lsrs	r1, r1, #8
 646 0014 9970     		strb	r1, [r3, #2]
 693:CAN_TX_RX_func.c ****         mailbox0[3]=CAN_RX_DATA_BYTE4(0);
 647              		.loc 1 693 0
 648 0016 1268     		ldr	r2, [r2]
 649 0018 DA70     		strb	r2, [r3, #3]
 694:CAN_TX_RX_func.c ****         mailbox0[4]=CAN_RX_DATA_BYTE5(0);
 650              		.loc 1 694 0
 651 001a 0B4A     		ldr	r2, .L44+8
 652 001c 1168     		ldr	r1, [r2]
 653 001e 090E     		lsrs	r1, r1, #24
 654 0020 1971     		strb	r1, [r3, #4]
 695:CAN_TX_RX_func.c ****         mailbox0[5]=CAN_RX_DATA_BYTE6(0);
 655              		.loc 1 695 0
 656 0022 1168     		ldr	r1, [r2]
 657 0024 090C     		lsrs	r1, r1, #16
 658 0026 5971     		strb	r1, [r3, #5]
 696:CAN_TX_RX_func.c ****         mailbox0[6]=CAN_RX_DATA_BYTE7(0);
 659              		.loc 1 696 0
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 25


 660 0028 1168     		ldr	r1, [r2]
 661 002a 090A     		lsrs	r1, r1, #8
 662 002c 9971     		strb	r1, [r3, #6]
 697:CAN_TX_RX_func.c ****         mailbox0[7]=CAN_RX_DATA_BYTE8(0);
 663              		.loc 1 697 0
 664 002e 1268     		ldr	r2, [r2]
 665 0030 DA71     		strb	r2, [r3, #7]
 698:CAN_TX_RX_func.c ****       
 699:CAN_TX_RX_func.c ****         
 700:CAN_TX_RX_func.c ****         
 701:CAN_TX_RX_func.c ****         /* `#END` */
 702:CAN_TX_RX_func.c **** 
 703:CAN_TX_RX_func.c ****         #ifdef CAN_RECEIVE_MSG_0_CALLBACK
 704:CAN_TX_RX_func.c ****             CAN_ReceiveMsg_0_Callback();
 705:CAN_TX_RX_func.c ****         #endif /* CAN_RECEIVE_MSG_0_CALLBACK */
 706:CAN_TX_RX_func.c **** 
 707:CAN_TX_RX_func.c ****         CAN_RX_ACK_MESSAGE(0u);
 666              		.loc 1 707 0
 667 0032 064A     		ldr	r2, .L44+12
 668 0034 1168     		ldr	r1, [r2]
 669 0036 0123     		movs	r3, #1
 670 0038 0B43     		orrs	r3, r1
 671 003a 1360     		str	r3, [r2]
 708:CAN_TX_RX_func.c ****     }
 672              		.loc 1 708 0
 673              		@ sp needed
 674 003c 7047     		bx	lr
 675              	.L45:
 676 003e C046     		.align	2
 677              	.L44:
 678 0040 A8002E40 		.word	1076756648
 679 0044 00000000 		.word	mailbox0
 680 0048 AC002E40 		.word	1076756652
 681 004c A0002E40 		.word	1076756640
 682              		.cfi_endproc
 683              	.LFE6:
 684              		.size	CAN_ReceiveMsg0, .-CAN_ReceiveMsg0
 685              		.section	.text.CAN_ReceiveMsg1,"ax",%progbits
 686              		.align	2
 687              		.global	CAN_ReceiveMsg1
 688              		.code	16
 689              		.thumb_func
 690              		.type	CAN_ReceiveMsg1, %function
 691              	CAN_ReceiveMsg1:
 692              	.LFB7:
 709:CAN_TX_RX_func.c **** #endif /* CAN_RX0_FUNC_ENABLE */
 710:CAN_TX_RX_func.c **** 
 711:CAN_TX_RX_func.c **** 
 712:CAN_TX_RX_func.c **** #if (CAN_RX1_FUNC_ENABLE)
 713:CAN_TX_RX_func.c ****     /*******************************************************************************
 714:CAN_TX_RX_func.c ****     * FUNCTION NAME:    CAN_ReceiveMsg1
 715:CAN_TX_RX_func.c ****     ********************************************************************************
 716:CAN_TX_RX_func.c ****     *
 717:CAN_TX_RX_func.c ****     * Summary:
 718:CAN_TX_RX_func.c ****     *  This function is the entry point to Receive Message 1 Interrupt. Clears the
 719:CAN_TX_RX_func.c ****     *  Receive Message 1 interrupt flag. Generated only for the Receive mailbox
 720:CAN_TX_RX_func.c ****     *  designed as Full.
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 26


 721:CAN_TX_RX_func.c ****     *
 722:CAN_TX_RX_func.c ****     * Parameters:
 723:CAN_TX_RX_func.c ****     *  None.
 724:CAN_TX_RX_func.c ****     *
 725:CAN_TX_RX_func.c ****     * Return:
 726:CAN_TX_RX_func.c ****     *  None.
 727:CAN_TX_RX_func.c ****     *
 728:CAN_TX_RX_func.c ****     * Reentrant:
 729:CAN_TX_RX_func.c ****     *  Depends on the Customer code.
 730:CAN_TX_RX_func.c ****     *
 731:CAN_TX_RX_func.c ****     *******************************************************************************/
 732:CAN_TX_RX_func.c ****     void CAN_ReceiveMsg1(void) 
 733:CAN_TX_RX_func.c ****     {
 693              		.loc 1 733 0
 694              		.cfi_startproc
 695              		@ args = 0, pretend = 0, frame = 0
 696              		@ frame_needed = 0, uses_anonymous_args = 0
 697              		@ link register save eliminated.
 734:CAN_TX_RX_func.c ****         /* `#START MESSAGE_1_RECEIVED` */
 735:CAN_TX_RX_func.c ****             mailbox1[0]=CAN_RX_DATA_BYTE1(1);
 698              		.loc 1 735 0
 699 0000 0F4A     		ldr	r2, .L47
 700 0002 1168     		ldr	r1, [r2]
 701 0004 090E     		lsrs	r1, r1, #24
 702 0006 0F4B     		ldr	r3, .L47+4
 703 0008 1970     		strb	r1, [r3]
 736:CAN_TX_RX_func.c ****             mailbox1[1]=CAN_RX_DATA_BYTE2(1);
 704              		.loc 1 736 0
 705 000a 1168     		ldr	r1, [r2]
 706 000c 090C     		lsrs	r1, r1, #16
 707 000e 5970     		strb	r1, [r3, #1]
 737:CAN_TX_RX_func.c ****             mailbox1[2]=CAN_RX_DATA_BYTE3(1);
 708              		.loc 1 737 0
 709 0010 1168     		ldr	r1, [r2]
 710 0012 090A     		lsrs	r1, r1, #8
 711 0014 9970     		strb	r1, [r3, #2]
 738:CAN_TX_RX_func.c ****             mailbox1[3]=CAN_RX_DATA_BYTE4(1);
 712              		.loc 1 738 0
 713 0016 1268     		ldr	r2, [r2]
 714 0018 DA70     		strb	r2, [r3, #3]
 739:CAN_TX_RX_func.c ****             mailbox1[4]=CAN_RX_DATA_BYTE5(1);
 715              		.loc 1 739 0
 716 001a 0B4A     		ldr	r2, .L47+8
 717 001c 1168     		ldr	r1, [r2]
 718 001e 090E     		lsrs	r1, r1, #24
 719 0020 1971     		strb	r1, [r3, #4]
 740:CAN_TX_RX_func.c ****             mailbox1[5]=CAN_RX_DATA_BYTE6(1);
 720              		.loc 1 740 0
 721 0022 1168     		ldr	r1, [r2]
 722 0024 090C     		lsrs	r1, r1, #16
 723 0026 5971     		strb	r1, [r3, #5]
 741:CAN_TX_RX_func.c ****             mailbox1[6]=CAN_RX_DATA_BYTE7(1);
 724              		.loc 1 741 0
 725 0028 1168     		ldr	r1, [r2]
 726 002a 090A     		lsrs	r1, r1, #8
 727 002c 9971     		strb	r1, [r3, #6]
 742:CAN_TX_RX_func.c ****             mailbox1[7]=CAN_RX_DATA_BYTE8(1);
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 27


 728              		.loc 1 742 0
 729 002e 1268     		ldr	r2, [r2]
 730 0030 DA71     		strb	r2, [r3, #7]
 743:CAN_TX_RX_func.c ****         /* `#END` */
 744:CAN_TX_RX_func.c **** 
 745:CAN_TX_RX_func.c ****         #ifdef CAN_RECEIVE_MSG_1_CALLBACK
 746:CAN_TX_RX_func.c ****             CAN_ReceiveMsg_1_Callback();
 747:CAN_TX_RX_func.c ****         #endif /* CAN_RECEIVE_MSG_1_CALLBACK */
 748:CAN_TX_RX_func.c **** 
 749:CAN_TX_RX_func.c ****         CAN_RX_ACK_MESSAGE(1u);
 731              		.loc 1 749 0
 732 0032 064A     		ldr	r2, .L47+12
 733 0034 1168     		ldr	r1, [r2]
 734 0036 0123     		movs	r3, #1
 735 0038 0B43     		orrs	r3, r1
 736 003a 1360     		str	r3, [r2]
 750:CAN_TX_RX_func.c ****     }
 737              		.loc 1 750 0
 738              		@ sp needed
 739 003c 7047     		bx	lr
 740              	.L48:
 741 003e C046     		.align	2
 742              	.L47:
 743 0040 C8002E40 		.word	1076756680
 744 0044 00000000 		.word	mailbox1
 745 0048 CC002E40 		.word	1076756684
 746 004c C0002E40 		.word	1076756672
 747              		.cfi_endproc
 748              	.LFE7:
 749              		.size	CAN_ReceiveMsg1, .-CAN_ReceiveMsg1
 750              		.section	.text.CAN_ReceiveMsg2,"ax",%progbits
 751              		.align	2
 752              		.global	CAN_ReceiveMsg2
 753              		.code	16
 754              		.thumb_func
 755              		.type	CAN_ReceiveMsg2, %function
 756              	CAN_ReceiveMsg2:
 757              	.LFB8:
 751:CAN_TX_RX_func.c **** #endif /* CAN_RX1_FUNC_ENABLE */
 752:CAN_TX_RX_func.c **** 
 753:CAN_TX_RX_func.c **** 
 754:CAN_TX_RX_func.c **** #if (CAN_RX2_FUNC_ENABLE)
 755:CAN_TX_RX_func.c ****     /*******************************************************************************
 756:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_ReceiveMsg2
 757:CAN_TX_RX_func.c ****     ********************************************************************************
 758:CAN_TX_RX_func.c ****     *
 759:CAN_TX_RX_func.c ****     * Summary:
 760:CAN_TX_RX_func.c ****     *  This function is the entry point to Receive Message 2 Interrupt. Clears the
 761:CAN_TX_RX_func.c ****     *  Receive Message 2 interrupt flag. Generated only for the Receive mailbox
 762:CAN_TX_RX_func.c ****     *  designed as Full.
 763:CAN_TX_RX_func.c ****     *
 764:CAN_TX_RX_func.c ****     * Parameters:
 765:CAN_TX_RX_func.c ****     *  None.
 766:CAN_TX_RX_func.c ****     *
 767:CAN_TX_RX_func.c ****     * Return:
 768:CAN_TX_RX_func.c ****     *  None.
 769:CAN_TX_RX_func.c ****     *
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 28


 770:CAN_TX_RX_func.c ****     * Reentrant:
 771:CAN_TX_RX_func.c ****     *  Depends on the Customer code.
 772:CAN_TX_RX_func.c ****     *
 773:CAN_TX_RX_func.c ****     *******************************************************************************/
 774:CAN_TX_RX_func.c ****     void CAN_ReceiveMsg2(void) 
 775:CAN_TX_RX_func.c ****     {
 758              		.loc 1 775 0
 759              		.cfi_startproc
 760              		@ args = 0, pretend = 0, frame = 0
 761              		@ frame_needed = 0, uses_anonymous_args = 0
 762              		@ link register save eliminated.
 776:CAN_TX_RX_func.c ****         /* `#START MESSAGE_2_RECEIVED` */
 777:CAN_TX_RX_func.c ****             mailbox2[0]=CAN_RX_DATA_BYTE1(2);
 763              		.loc 1 777 0
 764 0000 0F4A     		ldr	r2, .L50
 765 0002 1168     		ldr	r1, [r2]
 766 0004 090E     		lsrs	r1, r1, #24
 767 0006 0F4B     		ldr	r3, .L50+4
 768 0008 1970     		strb	r1, [r3]
 778:CAN_TX_RX_func.c ****             mailbox2[1]=CAN_RX_DATA_BYTE2(2);
 769              		.loc 1 778 0
 770 000a 1168     		ldr	r1, [r2]
 771 000c 090C     		lsrs	r1, r1, #16
 772 000e 5970     		strb	r1, [r3, #1]
 779:CAN_TX_RX_func.c ****             mailbox2[2]=CAN_RX_DATA_BYTE3(2);
 773              		.loc 1 779 0
 774 0010 1168     		ldr	r1, [r2]
 775 0012 090A     		lsrs	r1, r1, #8
 776 0014 9970     		strb	r1, [r3, #2]
 780:CAN_TX_RX_func.c ****             mailbox2[3]=CAN_RX_DATA_BYTE4(2);
 777              		.loc 1 780 0
 778 0016 1268     		ldr	r2, [r2]
 779 0018 DA70     		strb	r2, [r3, #3]
 781:CAN_TX_RX_func.c ****             mailbox2[4]=CAN_RX_DATA_BYTE5(2);
 780              		.loc 1 781 0
 781 001a 0B4A     		ldr	r2, .L50+8
 782 001c 1168     		ldr	r1, [r2]
 783 001e 090E     		lsrs	r1, r1, #24
 784 0020 1971     		strb	r1, [r3, #4]
 782:CAN_TX_RX_func.c ****             mailbox2[5]=CAN_RX_DATA_BYTE6(2);
 785              		.loc 1 782 0
 786 0022 1168     		ldr	r1, [r2]
 787 0024 090C     		lsrs	r1, r1, #16
 788 0026 5971     		strb	r1, [r3, #5]
 783:CAN_TX_RX_func.c ****             mailbox2[6]=CAN_RX_DATA_BYTE7(2);
 789              		.loc 1 783 0
 790 0028 1168     		ldr	r1, [r2]
 791 002a 090A     		lsrs	r1, r1, #8
 792 002c 9971     		strb	r1, [r3, #6]
 784:CAN_TX_RX_func.c ****             mailbox2[7]=CAN_RX_DATA_BYTE8(2);    
 793              		.loc 1 784 0
 794 002e 1268     		ldr	r2, [r2]
 795 0030 DA71     		strb	r2, [r3, #7]
 785:CAN_TX_RX_func.c ****         /* `#END` */
 786:CAN_TX_RX_func.c **** 
 787:CAN_TX_RX_func.c ****         #ifdef CAN_RECEIVE_MSG_2_CALLBACK
 788:CAN_TX_RX_func.c ****             CAN_ReceiveMsg_2_Callback();
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 29


 789:CAN_TX_RX_func.c ****         #endif /* CAN_RECEIVE_MSG_2_CALLBACK */
 790:CAN_TX_RX_func.c **** 
 791:CAN_TX_RX_func.c ****         CAN_RX_ACK_MESSAGE(2u);
 796              		.loc 1 791 0
 797 0032 064A     		ldr	r2, .L50+12
 798 0034 1168     		ldr	r1, [r2]
 799 0036 0123     		movs	r3, #1
 800 0038 0B43     		orrs	r3, r1
 801 003a 1360     		str	r3, [r2]
 792:CAN_TX_RX_func.c ****     }
 802              		.loc 1 792 0
 803              		@ sp needed
 804 003c 7047     		bx	lr
 805              	.L51:
 806 003e C046     		.align	2
 807              	.L50:
 808 0040 E8002E40 		.word	1076756712
 809 0044 00000000 		.word	mailbox2
 810 0048 EC002E40 		.word	1076756716
 811 004c E0002E40 		.word	1076756704
 812              		.cfi_endproc
 813              	.LFE8:
 814              		.size	CAN_ReceiveMsg2, .-CAN_ReceiveMsg2
 815              		.section	.text.CAN_ReceiveMsg3,"ax",%progbits
 816              		.align	2
 817              		.global	CAN_ReceiveMsg3
 818              		.code	16
 819              		.thumb_func
 820              		.type	CAN_ReceiveMsg3, %function
 821              	CAN_ReceiveMsg3:
 822              	.LFB9:
 793:CAN_TX_RX_func.c **** #endif /* CAN_RX2_FUNC_ENABLE */
 794:CAN_TX_RX_func.c **** 
 795:CAN_TX_RX_func.c **** 
 796:CAN_TX_RX_func.c **** #if (CAN_RX3_FUNC_ENABLE)
 797:CAN_TX_RX_func.c ****     /*******************************************************************************
 798:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_ReceiveMsg3
 799:CAN_TX_RX_func.c ****     ********************************************************************************
 800:CAN_TX_RX_func.c ****     *
 801:CAN_TX_RX_func.c ****     * Summary:
 802:CAN_TX_RX_func.c ****     *  This function is the entry point to Receive Message 3 Interrupt. Clears the
 803:CAN_TX_RX_func.c ****     *  Receive Message 3 interrupt flag. Generated only for the Receive mailbox
 804:CAN_TX_RX_func.c ****     *  designed as Full.
 805:CAN_TX_RX_func.c ****     *
 806:CAN_TX_RX_func.c ****     * Parameters:
 807:CAN_TX_RX_func.c ****     *  None.
 808:CAN_TX_RX_func.c ****     *
 809:CAN_TX_RX_func.c ****     * Return:
 810:CAN_TX_RX_func.c ****     *  None.
 811:CAN_TX_RX_func.c ****     *
 812:CAN_TX_RX_func.c ****     * Reentrant:
 813:CAN_TX_RX_func.c ****     *  Depends on the Customer code.
 814:CAN_TX_RX_func.c ****     *
 815:CAN_TX_RX_func.c ****     *******************************************************************************/
 816:CAN_TX_RX_func.c ****     void CAN_ReceiveMsg3(void) 
 817:CAN_TX_RX_func.c ****     {
 823              		.loc 1 817 0
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 30


 824              		.cfi_startproc
 825              		@ args = 0, pretend = 0, frame = 0
 826              		@ frame_needed = 0, uses_anonymous_args = 0
 827              		@ link register save eliminated.
 818:CAN_TX_RX_func.c ****         /* `#START MESSAGE_3_RECEIVED` */
 819:CAN_TX_RX_func.c ****             mailbox3[0]=CAN_RX_DATA_BYTE1(3);
 828              		.loc 1 819 0
 829 0000 0F4A     		ldr	r2, .L53
 830 0002 1168     		ldr	r1, [r2]
 831 0004 090E     		lsrs	r1, r1, #24
 832 0006 0F4B     		ldr	r3, .L53+4
 833 0008 1970     		strb	r1, [r3]
 820:CAN_TX_RX_func.c ****             mailbox3[1]=CAN_RX_DATA_BYTE2(3);
 834              		.loc 1 820 0
 835 000a 1168     		ldr	r1, [r2]
 836 000c 090C     		lsrs	r1, r1, #16
 837 000e 5970     		strb	r1, [r3, #1]
 821:CAN_TX_RX_func.c ****             mailbox3[2]=CAN_RX_DATA_BYTE3(3);
 838              		.loc 1 821 0
 839 0010 1168     		ldr	r1, [r2]
 840 0012 090A     		lsrs	r1, r1, #8
 841 0014 9970     		strb	r1, [r3, #2]
 822:CAN_TX_RX_func.c ****             mailbox3[3]=CAN_RX_DATA_BYTE4(3);
 842              		.loc 1 822 0
 843 0016 1268     		ldr	r2, [r2]
 844 0018 DA70     		strb	r2, [r3, #3]
 823:CAN_TX_RX_func.c ****             mailbox3[4]=CAN_RX_DATA_BYTE5(3);
 845              		.loc 1 823 0
 846 001a 0B4A     		ldr	r2, .L53+8
 847 001c 1168     		ldr	r1, [r2]
 848 001e 090E     		lsrs	r1, r1, #24
 849 0020 1971     		strb	r1, [r3, #4]
 824:CAN_TX_RX_func.c ****             mailbox3[5]=CAN_RX_DATA_BYTE6(3);
 850              		.loc 1 824 0
 851 0022 1168     		ldr	r1, [r2]
 852 0024 090C     		lsrs	r1, r1, #16
 853 0026 5971     		strb	r1, [r3, #5]
 825:CAN_TX_RX_func.c ****             mailbox3[6]=CAN_RX_DATA_BYTE7(3);
 854              		.loc 1 825 0
 855 0028 1168     		ldr	r1, [r2]
 856 002a 090A     		lsrs	r1, r1, #8
 857 002c 9971     		strb	r1, [r3, #6]
 826:CAN_TX_RX_func.c ****             mailbox3[7]=CAN_RX_DATA_BYTE8(3);   
 858              		.loc 1 826 0
 859 002e 1268     		ldr	r2, [r2]
 860 0030 DA71     		strb	r2, [r3, #7]
 827:CAN_TX_RX_func.c ****         /* `#END` */
 828:CAN_TX_RX_func.c **** 
 829:CAN_TX_RX_func.c ****         #ifdef CAN_RECEIVE_MSG_3_CALLBACK
 830:CAN_TX_RX_func.c ****             CAN_ReceiveMsg_3_Callback();
 831:CAN_TX_RX_func.c ****         #endif /* CAN_RECEIVE_MSG_3_CALLBACK */
 832:CAN_TX_RX_func.c **** 
 833:CAN_TX_RX_func.c ****         CAN_RX_ACK_MESSAGE(3u);
 861              		.loc 1 833 0
 862 0032 064A     		ldr	r2, .L53+12
 863 0034 1168     		ldr	r1, [r2]
 864 0036 0123     		movs	r3, #1
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 31


 865 0038 0B43     		orrs	r3, r1
 866 003a 1360     		str	r3, [r2]
 834:CAN_TX_RX_func.c ****     }
 867              		.loc 1 834 0
 868              		@ sp needed
 869 003c 7047     		bx	lr
 870              	.L54:
 871 003e C046     		.align	2
 872              	.L53:
 873 0040 08012E40 		.word	1076756744
 874 0044 00000000 		.word	mailbox3
 875 0048 0C012E40 		.word	1076756748
 876 004c 00012E40 		.word	1076756736
 877              		.cfi_endproc
 878              	.LFE9:
 879              		.size	CAN_ReceiveMsg3, .-CAN_ReceiveMsg3
 880              		.text
 881              	.Letext0:
 882              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 883              		.file 3 "Generated_Source\\PSoC4/CAN.h"
 884              		.file 4 "Generated_Source\\PSoC4/CyLib.h"
 885              		.section	.debug_info,"",%progbits
 886              	.Ldebug_info0:
 887 0000 58040000 		.4byte	0x458
 888 0004 0400     		.2byte	0x4
 889 0006 00000000 		.4byte	.Ldebug_abbrev0
 890 000a 04       		.byte	0x4
 891 000b 01       		.uleb128 0x1
 892 000c 00000000 		.4byte	.LASF59
 893 0010 0C       		.byte	0xc
 894 0011 0E030000 		.4byte	.LASF60
 895 0015 37020000 		.4byte	.LASF61
 896 0019 00000000 		.4byte	.Ldebug_ranges0+0
 897 001d 00000000 		.4byte	0
 898 0021 00000000 		.4byte	.Ldebug_line0
 899 0025 02       		.uleb128 0x2
 900 0026 01       		.byte	0x1
 901 0027 06       		.byte	0x6
 902 0028 C0000000 		.4byte	.LASF0
 903 002c 02       		.uleb128 0x2
 904 002d 01       		.byte	0x1
 905 002e 08       		.byte	0x8
 906 002f 00020000 		.4byte	.LASF1
 907 0033 02       		.uleb128 0x2
 908 0034 02       		.byte	0x2
 909 0035 05       		.byte	0x5
 910 0036 0E020000 		.4byte	.LASF2
 911 003a 02       		.uleb128 0x2
 912 003b 02       		.byte	0x2
 913 003c 07       		.byte	0x7
 914 003d 8A010000 		.4byte	.LASF3
 915 0041 02       		.uleb128 0x2
 916 0042 04       		.byte	0x4
 917 0043 05       		.byte	0x5
 918 0044 F0000000 		.4byte	.LASF4
 919 0048 02       		.uleb128 0x2
 920 0049 04       		.byte	0x4
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 32


 921 004a 07       		.byte	0x7
 922 004b 5B010000 		.4byte	.LASF5
 923 004f 02       		.uleb128 0x2
 924 0050 08       		.byte	0x8
 925 0051 05       		.byte	0x5
 926 0052 B2000000 		.4byte	.LASF6
 927 0056 02       		.uleb128 0x2
 928 0057 08       		.byte	0x8
 929 0058 07       		.byte	0x7
 930 0059 8E000000 		.4byte	.LASF7
 931 005d 03       		.uleb128 0x3
 932 005e 04       		.byte	0x4
 933 005f 05       		.byte	0x5
 934 0060 696E7400 		.ascii	"int\000"
 935 0064 02       		.uleb128 0x2
 936 0065 04       		.byte	0x4
 937 0066 07       		.byte	0x7
 938 0067 4E010000 		.4byte	.LASF8
 939 006b 04       		.uleb128 0x4
 940 006c 0D010000 		.4byte	.LASF9
 941 0070 02       		.byte	0x2
 942 0071 9801     		.2byte	0x198
 943 0073 2C000000 		.4byte	0x2c
 944 0077 04       		.uleb128 0x4
 945 0078 26010000 		.4byte	.LASF10
 946 007c 02       		.byte	0x2
 947 007d 9A01     		.2byte	0x19a
 948 007f 48000000 		.4byte	0x48
 949 0083 02       		.uleb128 0x2
 950 0084 04       		.byte	0x4
 951 0085 04       		.byte	0x4
 952 0086 F5010000 		.4byte	.LASF11
 953 008a 02       		.uleb128 0x2
 954 008b 08       		.byte	0x8
 955 008c 04       		.byte	0x4
 956 008d 19010000 		.4byte	.LASF12
 957 0091 02       		.uleb128 0x2
 958 0092 01       		.byte	0x1
 959 0093 08       		.byte	0x8
 960 0094 AD020000 		.4byte	.LASF13
 961 0098 04       		.uleb128 0x4
 962 0099 FB010000 		.4byte	.LASF14
 963 009d 02       		.byte	0x2
 964 009e 4202     		.2byte	0x242
 965 00a0 A4000000 		.4byte	0xa4
 966 00a4 05       		.uleb128 0x5
 967 00a5 6B000000 		.4byte	0x6b
 968 00a9 04       		.uleb128 0x4
 969 00aa BC010000 		.4byte	.LASF15
 970 00ae 02       		.byte	0x2
 971 00af 4402     		.2byte	0x244
 972 00b1 B5000000 		.4byte	0xb5
 973 00b5 05       		.uleb128 0x5
 974 00b6 77000000 		.4byte	0x77
 975 00ba 02       		.uleb128 0x2
 976 00bb 08       		.byte	0x8
 977 00bc 04       		.byte	0x4
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 33


 978 00bd D6010000 		.4byte	.LASF16
 979 00c1 02       		.uleb128 0x2
 980 00c2 04       		.byte	0x4
 981 00c3 07       		.byte	0x7
 982 00c4 CD010000 		.4byte	.LASF17
 983 00c8 06       		.uleb128 0x6
 984 00c9 08       		.byte	0x8
 985 00ca 03       		.byte	0x3
 986 00cb 6F       		.byte	0x6f
 987 00cc DD000000 		.4byte	0xdd
 988 00d0 07       		.uleb128 0x7
 989 00d1 3A010000 		.4byte	.LASF19
 990 00d5 03       		.byte	0x3
 991 00d6 71       		.byte	0x71
 992 00d7 DD000000 		.4byte	0xdd
 993 00db 00       		.byte	0
 994 00dc 00       		.byte	0
 995 00dd 08       		.uleb128 0x8
 996 00de 6B000000 		.4byte	0x6b
 997 00e2 ED000000 		.4byte	0xed
 998 00e6 09       		.uleb128 0x9
 999 00e7 C1000000 		.4byte	0xc1
 1000 00eb 07       		.byte	0x7
 1001 00ec 00       		.byte	0
 1002 00ed 0A       		.uleb128 0xa
 1003 00ee 24020000 		.4byte	.LASF18
 1004 00f2 03       		.byte	0x3
 1005 00f3 72       		.byte	0x72
 1006 00f4 C8000000 		.4byte	0xc8
 1007 00f8 06       		.uleb128 0x6
 1008 00f9 08       		.byte	0x8
 1009 00fa 03       		.byte	0x3
 1010 00fb 75       		.byte	0x75
 1011 00fc 0D010000 		.4byte	0x10d
 1012 0100 07       		.uleb128 0x7
 1013 0101 3A010000 		.4byte	.LASF19
 1014 0105 03       		.byte	0x3
 1015 0106 77       		.byte	0x77
 1016 0107 1D010000 		.4byte	0x11d
 1017 010b 00       		.byte	0
 1018 010c 00       		.byte	0
 1019 010d 08       		.uleb128 0x8
 1020 010e 98000000 		.4byte	0x98
 1021 0112 1D010000 		.4byte	0x11d
 1022 0116 09       		.uleb128 0x9
 1023 0117 C1000000 		.4byte	0xc1
 1024 011b 07       		.byte	0x7
 1025 011c 00       		.byte	0
 1026 011d 05       		.uleb128 0x5
 1027 011e 0D010000 		.4byte	0x10d
 1028 0122 0A       		.uleb128 0xa
 1029 0123 BF020000 		.4byte	.LASF20
 1030 0127 03       		.byte	0x3
 1031 0128 78       		.byte	0x78
 1032 0129 F8000000 		.4byte	0xf8
 1033 012d 06       		.uleb128 0x6
 1034 012e 04       		.byte	0x4
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 34


 1035 012f 03       		.byte	0x3
 1036 0130 7B       		.byte	0x7b
 1037 0131 42010000 		.4byte	0x142
 1038 0135 07       		.uleb128 0x7
 1039 0136 3A010000 		.4byte	.LASF19
 1040 013a 03       		.byte	0x3
 1041 013b 7D       		.byte	0x7d
 1042 013c 52010000 		.4byte	0x152
 1043 0140 00       		.byte	0
 1044 0141 00       		.byte	0
 1045 0142 08       		.uleb128 0x8
 1046 0143 98000000 		.4byte	0x98
 1047 0147 52010000 		.4byte	0x152
 1048 014b 09       		.uleb128 0x9
 1049 014c C1000000 		.4byte	0xc1
 1050 0150 03       		.byte	0x3
 1051 0151 00       		.byte	0
 1052 0152 05       		.uleb128 0x5
 1053 0153 42010000 		.4byte	0x142
 1054 0157 0A       		.uleb128 0xa
 1055 0158 C2010000 		.4byte	.LASF21
 1056 015c 03       		.byte	0x3
 1057 015d 7E       		.byte	0x7e
 1058 015e 2D010000 		.4byte	0x12d
 1059 0162 06       		.uleb128 0x6
 1060 0163 10       		.byte	0x10
 1061 0164 03       		.byte	0x3
 1062 0165 81       		.byte	0x81
 1063 0166 BE010000 		.4byte	0x1be
 1064 016a 0B       		.uleb128 0xb
 1065 016b 696400   		.ascii	"id\000"
 1066 016e 03       		.byte	0x3
 1067 016f 83       		.byte	0x83
 1068 0170 77000000 		.4byte	0x77
 1069 0174 00       		.byte	0
 1070 0175 0B       		.uleb128 0xb
 1071 0176 72747200 		.ascii	"rtr\000"
 1072 017a 03       		.byte	0x3
 1073 017b 84       		.byte	0x84
 1074 017c 6B000000 		.4byte	0x6b
 1075 0180 04       		.byte	0x4
 1076 0181 0B       		.uleb128 0xb
 1077 0182 69646500 		.ascii	"ide\000"
 1078 0186 03       		.byte	0x3
 1079 0187 85       		.byte	0x85
 1080 0188 6B000000 		.4byte	0x6b
 1081 018c 05       		.byte	0x5
 1082 018d 0B       		.uleb128 0xb
 1083 018e 646C6300 		.ascii	"dlc\000"
 1084 0192 03       		.byte	0x3
 1085 0193 86       		.byte	0x86
 1086 0194 6B000000 		.4byte	0x6b
 1087 0198 06       		.byte	0x6
 1088 0199 0B       		.uleb128 0xb
 1089 019a 69727100 		.ascii	"irq\000"
 1090 019e 03       		.byte	0x3
 1091 019f 87       		.byte	0x87
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 35


 1092 01a0 6B000000 		.4byte	0x6b
 1093 01a4 07       		.byte	0x7
 1094 01a5 0B       		.uleb128 0xb
 1095 01a6 73737400 		.ascii	"sst\000"
 1096 01aa 03       		.byte	0x3
 1097 01ab 89       		.byte	0x89
 1098 01ac 6B000000 		.4byte	0x6b
 1099 01b0 08       		.byte	0x8
 1100 01b1 0B       		.uleb128 0xb
 1101 01b2 6D736700 		.ascii	"msg\000"
 1102 01b6 03       		.byte	0x3
 1103 01b7 8B       		.byte	0x8b
 1104 01b8 BE010000 		.4byte	0x1be
 1105 01bc 0C       		.byte	0xc
 1106 01bd 00       		.byte	0
 1107 01be 0C       		.uleb128 0xc
 1108 01bf 04       		.byte	0x4
 1109 01c0 ED000000 		.4byte	0xed
 1110 01c4 0A       		.uleb128 0xa
 1111 01c5 25030000 		.4byte	.LASF22
 1112 01c9 03       		.byte	0x3
 1113 01ca 8C       		.byte	0x8c
 1114 01cb 62010000 		.4byte	0x162
 1115 01cf 06       		.uleb128 0x6
 1116 01d0 20       		.byte	0x20
 1117 01d1 03       		.byte	0x3
 1118 01d2 A0       		.byte	0xa0
 1119 01d3 2C020000 		.4byte	0x22c
 1120 01d7 07       		.uleb128 0x7
 1121 01d8 1F030000 		.4byte	.LASF23
 1122 01dc 03       		.byte	0x3
 1123 01dd A2       		.byte	0xa2
 1124 01de 57010000 		.4byte	0x157
 1125 01e2 00       		.byte	0
 1126 01e3 07       		.uleb128 0x7
 1127 01e4 E2010000 		.4byte	.LASF24
 1128 01e8 03       		.byte	0x3
 1129 01e9 A3       		.byte	0xa3
 1130 01ea 57010000 		.4byte	0x157
 1131 01ee 04       		.byte	0x4
 1132 01ef 07       		.uleb128 0x7
 1133 01f0 06010000 		.4byte	.LASF25
 1134 01f4 03       		.byte	0x3
 1135 01f5 A4       		.byte	0xa4
 1136 01f6 22010000 		.4byte	0x122
 1137 01fa 08       		.byte	0x8
 1138 01fb 07       		.uleb128 0x7
 1139 01fc 13010000 		.4byte	.LASF26
 1140 0200 03       		.byte	0x3
 1141 0201 A5       		.byte	0xa5
 1142 0202 57010000 		.4byte	0x157
 1143 0206 10       		.byte	0x10
 1144 0207 07       		.uleb128 0x7
 1145 0208 35030000 		.4byte	.LASF27
 1146 020c 03       		.byte	0x3
 1147 020d A6       		.byte	0xa6
 1148 020e 57010000 		.4byte	0x157
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 36


 1149 0212 14       		.byte	0x14
 1150 0213 07       		.uleb128 0x7
 1151 0214 AB000000 		.4byte	.LASF28
 1152 0218 03       		.byte	0x3
 1153 0219 A7       		.byte	0xa7
 1154 021a 57010000 		.4byte	0x157
 1155 021e 18       		.byte	0x18
 1156 021f 07       		.uleb128 0x7
 1157 0220 3B030000 		.4byte	.LASF29
 1158 0224 03       		.byte	0x3
 1159 0225 A8       		.byte	0xa8
 1160 0226 57010000 		.4byte	0x157
 1161 022a 1C       		.byte	0x1c
 1162 022b 00       		.byte	0
 1163 022c 0A       		.uleb128 0xa
 1164 022d 9D010000 		.4byte	.LASF30
 1165 0231 03       		.byte	0x3
 1166 0232 A9       		.byte	0xa9
 1167 0233 CF010000 		.4byte	0x1cf
 1168 0237 06       		.uleb128 0x6
 1169 0238 10       		.byte	0x10
 1170 0239 03       		.byte	0x3
 1171 023a AC       		.byte	0xac
 1172 023b 64020000 		.4byte	0x264
 1173 023f 07       		.uleb128 0x7
 1174 0240 A5000000 		.4byte	.LASF31
 1175 0244 03       		.byte	0x3
 1176 0245 AE       		.byte	0xae
 1177 0246 57010000 		.4byte	0x157
 1178 024a 00       		.byte	0
 1179 024b 07       		.uleb128 0x7
 1180 024c 30030000 		.4byte	.LASF32
 1181 0250 03       		.byte	0x3
 1182 0251 AF       		.byte	0xaf
 1183 0252 57010000 		.4byte	0x157
 1184 0256 04       		.byte	0x4
 1185 0257 07       		.uleb128 0x7
 1186 0258 B5010000 		.4byte	.LASF33
 1187 025c 03       		.byte	0x3
 1188 025d B0       		.byte	0xb0
 1189 025e 22010000 		.4byte	0x122
 1190 0262 08       		.byte	0x8
 1191 0263 00       		.byte	0
 1192 0264 0A       		.uleb128 0xa
 1193 0265 9F020000 		.4byte	.LASF34
 1194 0269 03       		.byte	0x3
 1195 026a B1       		.byte	0xb1
 1196 026b 37020000 		.4byte	0x237
 1197 026f 0D       		.uleb128 0xd
 1198 0270 6D010000 		.4byte	.LASF41
 1199 0274 01       		.byte	0x1
 1200 0275 39       		.byte	0x39
 1201 0276 6B000000 		.4byte	0x6b
 1202 027a 00000000 		.4byte	.LFB1
 1203 027e 58010000 		.4byte	.LFE1-.LFB1
 1204 0282 01       		.uleb128 0x1
 1205 0283 9C       		.byte	0x9c
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 37


 1206 0284 10030000 		.4byte	0x310
 1207 0288 0E       		.uleb128 0xe
 1208 0289 ED010000 		.4byte	.LASF39
 1209 028d 01       		.byte	0x1
 1210 028e 39       		.byte	0x39
 1211 028f 10030000 		.4byte	0x310
 1212 0293 00000000 		.4byte	.LLST0
 1213 0297 0F       		.uleb128 0xf
 1214 0298 6900     		.ascii	"i\000"
 1215 029a 01       		.byte	0x1
 1216 029b 3B       		.byte	0x3b
 1217 029c 6B000000 		.4byte	0x6b
 1218 02a0 2C000000 		.4byte	.LLST1
 1219 02a4 0F       		.uleb128 0xf
 1220 02a5 6A00     		.ascii	"j\000"
 1221 02a7 01       		.byte	0x1
 1222 02a8 3B       		.byte	0x3b
 1223 02a9 6B000000 		.4byte	0x6b
 1224 02ad 55000000 		.4byte	.LLST2
 1225 02b1 10       		.uleb128 0x10
 1226 02b2 20010000 		.4byte	.LASF35
 1227 02b6 01       		.byte	0x1
 1228 02b7 3B       		.byte	0x3b
 1229 02b8 6B000000 		.4byte	0x6b
 1230 02bc 7F000000 		.4byte	.LLST3
 1231 02c0 10       		.uleb128 0x10
 1232 02c1 E7010000 		.4byte	.LASF36
 1233 02c5 01       		.byte	0x1
 1234 02c6 3C       		.byte	0x3c
 1235 02c7 6B000000 		.4byte	0x6b
 1236 02cb A8000000 		.4byte	.LLST4
 1237 02cf 10       		.uleb128 0x10
 1238 02d0 6B030000 		.4byte	.LASF37
 1239 02d4 01       		.byte	0x1
 1240 02d5 3D       		.byte	0x3d
 1241 02d6 6B000000 		.4byte	0x6b
 1242 02da C7000000 		.4byte	.LLST5
 1243 02de 10       		.uleb128 0x10
 1244 02df 82010000 		.4byte	.LASF38
 1245 02e3 01       		.byte	0x1
 1246 02e4 3E       		.byte	0x3e
 1247 02e5 77000000 		.4byte	0x77
 1248 02e9 FD000000 		.4byte	.LLST6
 1249 02ed 11       		.uleb128 0x11
 1250 02ee E6000000 		.4byte	.LVL15
 1251 02f2 45040000 		.4byte	0x445
 1252 02f6 00030000 		.4byte	0x300
 1253 02fa 12       		.uleb128 0x12
 1254 02fb 01       		.uleb128 0x1
 1255 02fc 50       		.byte	0x50
 1256 02fd 01       		.uleb128 0x1
 1257 02fe 4B       		.byte	0x4b
 1258 02ff 00       		.byte	0
 1259 0300 13       		.uleb128 0x13
 1260 0301 14010000 		.4byte	.LVL16
 1261 0305 50040000 		.4byte	0x450
 1262 0309 12       		.uleb128 0x12
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 38


 1263 030a 01       		.uleb128 0x1
 1264 030b 50       		.byte	0x50
 1265 030c 01       		.uleb128 0x1
 1266 030d 4B       		.byte	0x4b
 1267 030e 00       		.byte	0
 1268 030f 00       		.byte	0
 1269 0310 0C       		.uleb128 0xc
 1270 0311 04       		.byte	0x4
 1271 0312 16030000 		.4byte	0x316
 1272 0316 14       		.uleb128 0x14
 1273 0317 C4010000 		.4byte	0x1c4
 1274 031b 15       		.uleb128 0x15
 1275 031c 2D010000 		.4byte	.LASF44
 1276 0320 01       		.byte	0x1
 1277 0321 B7       		.byte	0xb7
 1278 0322 00000000 		.4byte	.LFB2
 1279 0326 20000000 		.4byte	.LFE2-.LFB2
 1280 032a 01       		.uleb128 0x1
 1281 032b 9C       		.byte	0x9c
 1282 032c 40030000 		.4byte	0x340
 1283 0330 0E       		.uleb128 0xe
 1284 0331 79010000 		.4byte	.LASF40
 1285 0335 01       		.byte	0x1
 1286 0336 B7       		.byte	0xb7
 1287 0337 6B000000 		.4byte	0x6b
 1288 033b 3D010000 		.4byte	.LLST7
 1289 033f 00       		.byte	0
 1290 0340 0D       		.uleb128 0xd
 1291 0341 42030000 		.4byte	.LASF42
 1292 0345 01       		.byte	0x1
 1293 0346 D5       		.byte	0xd5
 1294 0347 6B000000 		.4byte	0x6b
 1295 034b 00000000 		.4byte	.LFB3
 1296 034f A8000000 		.4byte	.LFE3-.LFB3
 1297 0353 01       		.uleb128 0x1
 1298 0354 9C       		.byte	0x9c
 1299 0355 69030000 		.4byte	0x369
 1300 0359 10       		.uleb128 0x10
 1301 035a 6B030000 		.4byte	.LASF37
 1302 035e 01       		.byte	0x1
 1303 035f D7       		.byte	0xd7
 1304 0360 6B000000 		.4byte	0x6b
 1305 0364 5E010000 		.4byte	.LLST8
 1306 0368 00       		.byte	0
 1307 0369 16       		.uleb128 0x16
 1308 036a 4F030000 		.4byte	.LASF43
 1309 036e 01       		.byte	0x1
 1310 036f 1001     		.2byte	0x110
 1311 0371 6B000000 		.4byte	0x6b
 1312 0375 00000000 		.4byte	.LFB4
 1313 0379 A8000000 		.4byte	.LFE4-.LFB4
 1314 037d 01       		.uleb128 0x1
 1315 037e 9C       		.byte	0x9c
 1316 037f 94030000 		.4byte	0x394
 1317 0383 17       		.uleb128 0x17
 1318 0384 6B030000 		.4byte	.LASF37
 1319 0388 01       		.byte	0x1
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 39


 1320 0389 1201     		.2byte	0x112
 1321 038b 6B000000 		.4byte	0x6b
 1322 038f 7D010000 		.4byte	.LLST9
 1323 0393 00       		.byte	0
 1324 0394 18       		.uleb128 0x18
 1325 0395 5C030000 		.4byte	.LASF45
 1326 0399 01       		.byte	0x1
 1327 039a 8102     		.2byte	0x281
 1328 039c 00000000 		.4byte	.LFB5
 1329 03a0 1C000000 		.4byte	.LFE5-.LFB5
 1330 03a4 01       		.uleb128 0x1
 1331 03a5 9C       		.byte	0x9c
 1332 03a6 BB030000 		.4byte	0x3bb
 1333 03aa 19       		.uleb128 0x19
 1334 03ab AB010000 		.4byte	.LASF46
 1335 03af 01       		.byte	0x1
 1336 03b0 8102     		.2byte	0x281
 1337 03b2 6B000000 		.4byte	0x6b
 1338 03b6 9C010000 		.4byte	.LLST10
 1339 03ba 00       		.byte	0
 1340 03bb 1A       		.uleb128 0x1a
 1341 03bc FE020000 		.4byte	.LASF47
 1342 03c0 01       		.byte	0x1
 1343 03c1 AE02     		.2byte	0x2ae
 1344 03c3 00000000 		.4byte	.LFB6
 1345 03c7 50000000 		.4byte	.LFE6-.LFB6
 1346 03cb 01       		.uleb128 0x1
 1347 03cc 9C       		.byte	0x9c
 1348 03cd 1A       		.uleb128 0x1a
 1349 03ce CE020000 		.4byte	.LASF48
 1350 03d2 01       		.byte	0x1
 1351 03d3 DC02     		.2byte	0x2dc
 1352 03d5 00000000 		.4byte	.LFB7
 1353 03d9 50000000 		.4byte	.LFE7-.LFB7
 1354 03dd 01       		.uleb128 0x1
 1355 03de 9C       		.byte	0x9c
 1356 03df 1A       		.uleb128 0x1a
 1357 03e0 DE020000 		.4byte	.LASF49
 1358 03e4 01       		.byte	0x1
 1359 03e5 0603     		.2byte	0x306
 1360 03e7 00000000 		.4byte	.LFB8
 1361 03eb 50000000 		.4byte	.LFE8-.LFB8
 1362 03ef 01       		.uleb128 0x1
 1363 03f0 9C       		.byte	0x9c
 1364 03f1 1A       		.uleb128 0x1a
 1365 03f2 EE020000 		.4byte	.LASF50
 1366 03f6 01       		.byte	0x1
 1367 03f7 3003     		.2byte	0x330
 1368 03f9 00000000 		.4byte	.LFB9
 1369 03fd 50000000 		.4byte	.LFE9-.LFB9
 1370 0401 01       		.uleb128 0x1
 1371 0402 9C       		.byte	0x9c
 1372 0403 1B       		.uleb128 0x1b
 1373 0404 B2020000 		.4byte	.LASF51
 1374 0408 01       		.byte	0x1
 1375 0409 1C       		.byte	0x1c
 1376 040a DD000000 		.4byte	0xdd
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 40


 1377 040e 1B       		.uleb128 0x1b
 1378 040f 3F010000 		.4byte	.LASF52
 1379 0413 01       		.byte	0x1
 1380 0414 1D       		.byte	0x1d
 1381 0415 DD000000 		.4byte	0xdd
 1382 0419 1B       		.uleb128 0x1b
 1383 041a CC000000 		.4byte	.LASF53
 1384 041e 01       		.byte	0x1
 1385 041f 1E       		.byte	0x1e
 1386 0420 DD000000 		.4byte	0xdd
 1387 0424 1B       		.uleb128 0x1b
 1388 0425 D5000000 		.4byte	.LASF54
 1389 0429 01       		.byte	0x1
 1390 042a 1F       		.byte	0x1f
 1391 042b DD000000 		.4byte	0xdd
 1392 042f 1B       		.uleb128 0x1b
 1393 0430 DE000000 		.4byte	.LASF55
 1394 0434 01       		.byte	0x1
 1395 0435 20       		.byte	0x20
 1396 0436 DD000000 		.4byte	0xdd
 1397 043a 1B       		.uleb128 0x1b
 1398 043b E7000000 		.4byte	.LASF56
 1399 043f 01       		.byte	0x1
 1400 0440 21       		.byte	0x21
 1401 0441 DD000000 		.4byte	0xdd
 1402 0445 1C       		.uleb128 0x1c
 1403 0446 F9000000 		.4byte	.LASF57
 1404 044a F9000000 		.4byte	.LASF57
 1405 044e 04       		.byte	0x4
 1406 044f C3       		.byte	0xc3
 1407 0450 1C       		.uleb128 0x1c
 1408 0451 18020000 		.4byte	.LASF58
 1409 0455 18020000 		.4byte	.LASF58
 1410 0459 04       		.byte	0x4
 1411 045a C1       		.byte	0xc1
 1412 045b 00       		.byte	0
 1413              		.section	.debug_abbrev,"",%progbits
 1414              	.Ldebug_abbrev0:
 1415 0000 01       		.uleb128 0x1
 1416 0001 11       		.uleb128 0x11
 1417 0002 01       		.byte	0x1
 1418 0003 25       		.uleb128 0x25
 1419 0004 0E       		.uleb128 0xe
 1420 0005 13       		.uleb128 0x13
 1421 0006 0B       		.uleb128 0xb
 1422 0007 03       		.uleb128 0x3
 1423 0008 0E       		.uleb128 0xe
 1424 0009 1B       		.uleb128 0x1b
 1425 000a 0E       		.uleb128 0xe
 1426 000b 55       		.uleb128 0x55
 1427 000c 17       		.uleb128 0x17
 1428 000d 11       		.uleb128 0x11
 1429 000e 01       		.uleb128 0x1
 1430 000f 10       		.uleb128 0x10
 1431 0010 17       		.uleb128 0x17
 1432 0011 00       		.byte	0
 1433 0012 00       		.byte	0
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 41


 1434 0013 02       		.uleb128 0x2
 1435 0014 24       		.uleb128 0x24
 1436 0015 00       		.byte	0
 1437 0016 0B       		.uleb128 0xb
 1438 0017 0B       		.uleb128 0xb
 1439 0018 3E       		.uleb128 0x3e
 1440 0019 0B       		.uleb128 0xb
 1441 001a 03       		.uleb128 0x3
 1442 001b 0E       		.uleb128 0xe
 1443 001c 00       		.byte	0
 1444 001d 00       		.byte	0
 1445 001e 03       		.uleb128 0x3
 1446 001f 24       		.uleb128 0x24
 1447 0020 00       		.byte	0
 1448 0021 0B       		.uleb128 0xb
 1449 0022 0B       		.uleb128 0xb
 1450 0023 3E       		.uleb128 0x3e
 1451 0024 0B       		.uleb128 0xb
 1452 0025 03       		.uleb128 0x3
 1453 0026 08       		.uleb128 0x8
 1454 0027 00       		.byte	0
 1455 0028 00       		.byte	0
 1456 0029 04       		.uleb128 0x4
 1457 002a 16       		.uleb128 0x16
 1458 002b 00       		.byte	0
 1459 002c 03       		.uleb128 0x3
 1460 002d 0E       		.uleb128 0xe
 1461 002e 3A       		.uleb128 0x3a
 1462 002f 0B       		.uleb128 0xb
 1463 0030 3B       		.uleb128 0x3b
 1464 0031 05       		.uleb128 0x5
 1465 0032 49       		.uleb128 0x49
 1466 0033 13       		.uleb128 0x13
 1467 0034 00       		.byte	0
 1468 0035 00       		.byte	0
 1469 0036 05       		.uleb128 0x5
 1470 0037 35       		.uleb128 0x35
 1471 0038 00       		.byte	0
 1472 0039 49       		.uleb128 0x49
 1473 003a 13       		.uleb128 0x13
 1474 003b 00       		.byte	0
 1475 003c 00       		.byte	0
 1476 003d 06       		.uleb128 0x6
 1477 003e 13       		.uleb128 0x13
 1478 003f 01       		.byte	0x1
 1479 0040 0B       		.uleb128 0xb
 1480 0041 0B       		.uleb128 0xb
 1481 0042 3A       		.uleb128 0x3a
 1482 0043 0B       		.uleb128 0xb
 1483 0044 3B       		.uleb128 0x3b
 1484 0045 0B       		.uleb128 0xb
 1485 0046 01       		.uleb128 0x1
 1486 0047 13       		.uleb128 0x13
 1487 0048 00       		.byte	0
 1488 0049 00       		.byte	0
 1489 004a 07       		.uleb128 0x7
 1490 004b 0D       		.uleb128 0xd
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 42


 1491 004c 00       		.byte	0
 1492 004d 03       		.uleb128 0x3
 1493 004e 0E       		.uleb128 0xe
 1494 004f 3A       		.uleb128 0x3a
 1495 0050 0B       		.uleb128 0xb
 1496 0051 3B       		.uleb128 0x3b
 1497 0052 0B       		.uleb128 0xb
 1498 0053 49       		.uleb128 0x49
 1499 0054 13       		.uleb128 0x13
 1500 0055 38       		.uleb128 0x38
 1501 0056 0B       		.uleb128 0xb
 1502 0057 00       		.byte	0
 1503 0058 00       		.byte	0
 1504 0059 08       		.uleb128 0x8
 1505 005a 01       		.uleb128 0x1
 1506 005b 01       		.byte	0x1
 1507 005c 49       		.uleb128 0x49
 1508 005d 13       		.uleb128 0x13
 1509 005e 01       		.uleb128 0x1
 1510 005f 13       		.uleb128 0x13
 1511 0060 00       		.byte	0
 1512 0061 00       		.byte	0
 1513 0062 09       		.uleb128 0x9
 1514 0063 21       		.uleb128 0x21
 1515 0064 00       		.byte	0
 1516 0065 49       		.uleb128 0x49
 1517 0066 13       		.uleb128 0x13
 1518 0067 2F       		.uleb128 0x2f
 1519 0068 0B       		.uleb128 0xb
 1520 0069 00       		.byte	0
 1521 006a 00       		.byte	0
 1522 006b 0A       		.uleb128 0xa
 1523 006c 16       		.uleb128 0x16
 1524 006d 00       		.byte	0
 1525 006e 03       		.uleb128 0x3
 1526 006f 0E       		.uleb128 0xe
 1527 0070 3A       		.uleb128 0x3a
 1528 0071 0B       		.uleb128 0xb
 1529 0072 3B       		.uleb128 0x3b
 1530 0073 0B       		.uleb128 0xb
 1531 0074 49       		.uleb128 0x49
 1532 0075 13       		.uleb128 0x13
 1533 0076 00       		.byte	0
 1534 0077 00       		.byte	0
 1535 0078 0B       		.uleb128 0xb
 1536 0079 0D       		.uleb128 0xd
 1537 007a 00       		.byte	0
 1538 007b 03       		.uleb128 0x3
 1539 007c 08       		.uleb128 0x8
 1540 007d 3A       		.uleb128 0x3a
 1541 007e 0B       		.uleb128 0xb
 1542 007f 3B       		.uleb128 0x3b
 1543 0080 0B       		.uleb128 0xb
 1544 0081 49       		.uleb128 0x49
 1545 0082 13       		.uleb128 0x13
 1546 0083 38       		.uleb128 0x38
 1547 0084 0B       		.uleb128 0xb
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 43


 1548 0085 00       		.byte	0
 1549 0086 00       		.byte	0
 1550 0087 0C       		.uleb128 0xc
 1551 0088 0F       		.uleb128 0xf
 1552 0089 00       		.byte	0
 1553 008a 0B       		.uleb128 0xb
 1554 008b 0B       		.uleb128 0xb
 1555 008c 49       		.uleb128 0x49
 1556 008d 13       		.uleb128 0x13
 1557 008e 00       		.byte	0
 1558 008f 00       		.byte	0
 1559 0090 0D       		.uleb128 0xd
 1560 0091 2E       		.uleb128 0x2e
 1561 0092 01       		.byte	0x1
 1562 0093 3F       		.uleb128 0x3f
 1563 0094 19       		.uleb128 0x19
 1564 0095 03       		.uleb128 0x3
 1565 0096 0E       		.uleb128 0xe
 1566 0097 3A       		.uleb128 0x3a
 1567 0098 0B       		.uleb128 0xb
 1568 0099 3B       		.uleb128 0x3b
 1569 009a 0B       		.uleb128 0xb
 1570 009b 27       		.uleb128 0x27
 1571 009c 19       		.uleb128 0x19
 1572 009d 49       		.uleb128 0x49
 1573 009e 13       		.uleb128 0x13
 1574 009f 11       		.uleb128 0x11
 1575 00a0 01       		.uleb128 0x1
 1576 00a1 12       		.uleb128 0x12
 1577 00a2 06       		.uleb128 0x6
 1578 00a3 40       		.uleb128 0x40
 1579 00a4 18       		.uleb128 0x18
 1580 00a5 9742     		.uleb128 0x2117
 1581 00a7 19       		.uleb128 0x19
 1582 00a8 01       		.uleb128 0x1
 1583 00a9 13       		.uleb128 0x13
 1584 00aa 00       		.byte	0
 1585 00ab 00       		.byte	0
 1586 00ac 0E       		.uleb128 0xe
 1587 00ad 05       		.uleb128 0x5
 1588 00ae 00       		.byte	0
 1589 00af 03       		.uleb128 0x3
 1590 00b0 0E       		.uleb128 0xe
 1591 00b1 3A       		.uleb128 0x3a
 1592 00b2 0B       		.uleb128 0xb
 1593 00b3 3B       		.uleb128 0x3b
 1594 00b4 0B       		.uleb128 0xb
 1595 00b5 49       		.uleb128 0x49
 1596 00b6 13       		.uleb128 0x13
 1597 00b7 02       		.uleb128 0x2
 1598 00b8 17       		.uleb128 0x17
 1599 00b9 00       		.byte	0
 1600 00ba 00       		.byte	0
 1601 00bb 0F       		.uleb128 0xf
 1602 00bc 34       		.uleb128 0x34
 1603 00bd 00       		.byte	0
 1604 00be 03       		.uleb128 0x3
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 44


 1605 00bf 08       		.uleb128 0x8
 1606 00c0 3A       		.uleb128 0x3a
 1607 00c1 0B       		.uleb128 0xb
 1608 00c2 3B       		.uleb128 0x3b
 1609 00c3 0B       		.uleb128 0xb
 1610 00c4 49       		.uleb128 0x49
 1611 00c5 13       		.uleb128 0x13
 1612 00c6 02       		.uleb128 0x2
 1613 00c7 17       		.uleb128 0x17
 1614 00c8 00       		.byte	0
 1615 00c9 00       		.byte	0
 1616 00ca 10       		.uleb128 0x10
 1617 00cb 34       		.uleb128 0x34
 1618 00cc 00       		.byte	0
 1619 00cd 03       		.uleb128 0x3
 1620 00ce 0E       		.uleb128 0xe
 1621 00cf 3A       		.uleb128 0x3a
 1622 00d0 0B       		.uleb128 0xb
 1623 00d1 3B       		.uleb128 0x3b
 1624 00d2 0B       		.uleb128 0xb
 1625 00d3 49       		.uleb128 0x49
 1626 00d4 13       		.uleb128 0x13
 1627 00d5 02       		.uleb128 0x2
 1628 00d6 17       		.uleb128 0x17
 1629 00d7 00       		.byte	0
 1630 00d8 00       		.byte	0
 1631 00d9 11       		.uleb128 0x11
 1632 00da 898201   		.uleb128 0x4109
 1633 00dd 01       		.byte	0x1
 1634 00de 11       		.uleb128 0x11
 1635 00df 01       		.uleb128 0x1
 1636 00e0 31       		.uleb128 0x31
 1637 00e1 13       		.uleb128 0x13
 1638 00e2 01       		.uleb128 0x1
 1639 00e3 13       		.uleb128 0x13
 1640 00e4 00       		.byte	0
 1641 00e5 00       		.byte	0
 1642 00e6 12       		.uleb128 0x12
 1643 00e7 8A8201   		.uleb128 0x410a
 1644 00ea 00       		.byte	0
 1645 00eb 02       		.uleb128 0x2
 1646 00ec 18       		.uleb128 0x18
 1647 00ed 9142     		.uleb128 0x2111
 1648 00ef 18       		.uleb128 0x18
 1649 00f0 00       		.byte	0
 1650 00f1 00       		.byte	0
 1651 00f2 13       		.uleb128 0x13
 1652 00f3 898201   		.uleb128 0x4109
 1653 00f6 01       		.byte	0x1
 1654 00f7 11       		.uleb128 0x11
 1655 00f8 01       		.uleb128 0x1
 1656 00f9 31       		.uleb128 0x31
 1657 00fa 13       		.uleb128 0x13
 1658 00fb 00       		.byte	0
 1659 00fc 00       		.byte	0
 1660 00fd 14       		.uleb128 0x14
 1661 00fe 26       		.uleb128 0x26
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 45


 1662 00ff 00       		.byte	0
 1663 0100 49       		.uleb128 0x49
 1664 0101 13       		.uleb128 0x13
 1665 0102 00       		.byte	0
 1666 0103 00       		.byte	0
 1667 0104 15       		.uleb128 0x15
 1668 0105 2E       		.uleb128 0x2e
 1669 0106 01       		.byte	0x1
 1670 0107 3F       		.uleb128 0x3f
 1671 0108 19       		.uleb128 0x19
 1672 0109 03       		.uleb128 0x3
 1673 010a 0E       		.uleb128 0xe
 1674 010b 3A       		.uleb128 0x3a
 1675 010c 0B       		.uleb128 0xb
 1676 010d 3B       		.uleb128 0x3b
 1677 010e 0B       		.uleb128 0xb
 1678 010f 27       		.uleb128 0x27
 1679 0110 19       		.uleb128 0x19
 1680 0111 11       		.uleb128 0x11
 1681 0112 01       		.uleb128 0x1
 1682 0113 12       		.uleb128 0x12
 1683 0114 06       		.uleb128 0x6
 1684 0115 40       		.uleb128 0x40
 1685 0116 18       		.uleb128 0x18
 1686 0117 9742     		.uleb128 0x2117
 1687 0119 19       		.uleb128 0x19
 1688 011a 01       		.uleb128 0x1
 1689 011b 13       		.uleb128 0x13
 1690 011c 00       		.byte	0
 1691 011d 00       		.byte	0
 1692 011e 16       		.uleb128 0x16
 1693 011f 2E       		.uleb128 0x2e
 1694 0120 01       		.byte	0x1
 1695 0121 3F       		.uleb128 0x3f
 1696 0122 19       		.uleb128 0x19
 1697 0123 03       		.uleb128 0x3
 1698 0124 0E       		.uleb128 0xe
 1699 0125 3A       		.uleb128 0x3a
 1700 0126 0B       		.uleb128 0xb
 1701 0127 3B       		.uleb128 0x3b
 1702 0128 05       		.uleb128 0x5
 1703 0129 27       		.uleb128 0x27
 1704 012a 19       		.uleb128 0x19
 1705 012b 49       		.uleb128 0x49
 1706 012c 13       		.uleb128 0x13
 1707 012d 11       		.uleb128 0x11
 1708 012e 01       		.uleb128 0x1
 1709 012f 12       		.uleb128 0x12
 1710 0130 06       		.uleb128 0x6
 1711 0131 40       		.uleb128 0x40
 1712 0132 18       		.uleb128 0x18
 1713 0133 9742     		.uleb128 0x2117
 1714 0135 19       		.uleb128 0x19
 1715 0136 01       		.uleb128 0x1
 1716 0137 13       		.uleb128 0x13
 1717 0138 00       		.byte	0
 1718 0139 00       		.byte	0
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 46


 1719 013a 17       		.uleb128 0x17
 1720 013b 34       		.uleb128 0x34
 1721 013c 00       		.byte	0
 1722 013d 03       		.uleb128 0x3
 1723 013e 0E       		.uleb128 0xe
 1724 013f 3A       		.uleb128 0x3a
 1725 0140 0B       		.uleb128 0xb
 1726 0141 3B       		.uleb128 0x3b
 1727 0142 05       		.uleb128 0x5
 1728 0143 49       		.uleb128 0x49
 1729 0144 13       		.uleb128 0x13
 1730 0145 02       		.uleb128 0x2
 1731 0146 17       		.uleb128 0x17
 1732 0147 00       		.byte	0
 1733 0148 00       		.byte	0
 1734 0149 18       		.uleb128 0x18
 1735 014a 2E       		.uleb128 0x2e
 1736 014b 01       		.byte	0x1
 1737 014c 3F       		.uleb128 0x3f
 1738 014d 19       		.uleb128 0x19
 1739 014e 03       		.uleb128 0x3
 1740 014f 0E       		.uleb128 0xe
 1741 0150 3A       		.uleb128 0x3a
 1742 0151 0B       		.uleb128 0xb
 1743 0152 3B       		.uleb128 0x3b
 1744 0153 05       		.uleb128 0x5
 1745 0154 27       		.uleb128 0x27
 1746 0155 19       		.uleb128 0x19
 1747 0156 11       		.uleb128 0x11
 1748 0157 01       		.uleb128 0x1
 1749 0158 12       		.uleb128 0x12
 1750 0159 06       		.uleb128 0x6
 1751 015a 40       		.uleb128 0x40
 1752 015b 18       		.uleb128 0x18
 1753 015c 9742     		.uleb128 0x2117
 1754 015e 19       		.uleb128 0x19
 1755 015f 01       		.uleb128 0x1
 1756 0160 13       		.uleb128 0x13
 1757 0161 00       		.byte	0
 1758 0162 00       		.byte	0
 1759 0163 19       		.uleb128 0x19
 1760 0164 05       		.uleb128 0x5
 1761 0165 00       		.byte	0
 1762 0166 03       		.uleb128 0x3
 1763 0167 0E       		.uleb128 0xe
 1764 0168 3A       		.uleb128 0x3a
 1765 0169 0B       		.uleb128 0xb
 1766 016a 3B       		.uleb128 0x3b
 1767 016b 05       		.uleb128 0x5
 1768 016c 49       		.uleb128 0x49
 1769 016d 13       		.uleb128 0x13
 1770 016e 02       		.uleb128 0x2
 1771 016f 17       		.uleb128 0x17
 1772 0170 00       		.byte	0
 1773 0171 00       		.byte	0
 1774 0172 1A       		.uleb128 0x1a
 1775 0173 2E       		.uleb128 0x2e
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 47


 1776 0174 00       		.byte	0
 1777 0175 3F       		.uleb128 0x3f
 1778 0176 19       		.uleb128 0x19
 1779 0177 03       		.uleb128 0x3
 1780 0178 0E       		.uleb128 0xe
 1781 0179 3A       		.uleb128 0x3a
 1782 017a 0B       		.uleb128 0xb
 1783 017b 3B       		.uleb128 0x3b
 1784 017c 05       		.uleb128 0x5
 1785 017d 27       		.uleb128 0x27
 1786 017e 19       		.uleb128 0x19
 1787 017f 11       		.uleb128 0x11
 1788 0180 01       		.uleb128 0x1
 1789 0181 12       		.uleb128 0x12
 1790 0182 06       		.uleb128 0x6
 1791 0183 40       		.uleb128 0x40
 1792 0184 18       		.uleb128 0x18
 1793 0185 9742     		.uleb128 0x2117
 1794 0187 19       		.uleb128 0x19
 1795 0188 00       		.byte	0
 1796 0189 00       		.byte	0
 1797 018a 1B       		.uleb128 0x1b
 1798 018b 34       		.uleb128 0x34
 1799 018c 00       		.byte	0
 1800 018d 03       		.uleb128 0x3
 1801 018e 0E       		.uleb128 0xe
 1802 018f 3A       		.uleb128 0x3a
 1803 0190 0B       		.uleb128 0xb
 1804 0191 3B       		.uleb128 0x3b
 1805 0192 0B       		.uleb128 0xb
 1806 0193 49       		.uleb128 0x49
 1807 0194 13       		.uleb128 0x13
 1808 0195 3F       		.uleb128 0x3f
 1809 0196 19       		.uleb128 0x19
 1810 0197 3C       		.uleb128 0x3c
 1811 0198 19       		.uleb128 0x19
 1812 0199 00       		.byte	0
 1813 019a 00       		.byte	0
 1814 019b 1C       		.uleb128 0x1c
 1815 019c 2E       		.uleb128 0x2e
 1816 019d 00       		.byte	0
 1817 019e 3F       		.uleb128 0x3f
 1818 019f 19       		.uleb128 0x19
 1819 01a0 3C       		.uleb128 0x3c
 1820 01a1 19       		.uleb128 0x19
 1821 01a2 6E       		.uleb128 0x6e
 1822 01a3 0E       		.uleb128 0xe
 1823 01a4 03       		.uleb128 0x3
 1824 01a5 0E       		.uleb128 0xe
 1825 01a6 3A       		.uleb128 0x3a
 1826 01a7 0B       		.uleb128 0xb
 1827 01a8 3B       		.uleb128 0x3b
 1828 01a9 0B       		.uleb128 0xb
 1829 01aa 00       		.byte	0
 1830 01ab 00       		.byte	0
 1831 01ac 00       		.byte	0
 1832              		.section	.debug_loc,"",%progbits
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 48


 1833              	.Ldebug_loc0:
 1834              	.LLST0:
 1835 0000 00000000 		.4byte	.LVL0
 1836 0004 0C000000 		.4byte	.LVL2
 1837 0008 0100     		.2byte	0x1
 1838 000a 50       		.byte	0x50
 1839 000b 0C000000 		.4byte	.LVL2
 1840 000f 40010000 		.4byte	.LVL25
 1841 0013 0100     		.2byte	0x1
 1842 0015 56       		.byte	0x56
 1843 0016 40010000 		.4byte	.LVL25
 1844 001a 58010000 		.4byte	.LFE1
 1845 001e 0400     		.2byte	0x4
 1846 0020 F3       		.byte	0xf3
 1847 0021 01       		.uleb128 0x1
 1848 0022 50       		.byte	0x50
 1849 0023 9F       		.byte	0x9f
 1850 0024 00000000 		.4byte	0
 1851 0028 00000000 		.4byte	0
 1852              	.LLST1:
 1853 002c 12000000 		.4byte	.LVL3
 1854 0030 20010000 		.4byte	.LVL20
 1855 0034 0100     		.2byte	0x1
 1856 0036 54       		.byte	0x54
 1857 0037 22010000 		.4byte	.LVL21
 1858 003b 24010000 		.4byte	.LVL22
 1859 003f 0100     		.2byte	0x1
 1860 0041 54       		.byte	0x54
 1861 0042 28010000 		.4byte	.LVL23
 1862 0046 3A010000 		.4byte	.LVL24
 1863 004a 0100     		.2byte	0x1
 1864 004c 54       		.byte	0x54
 1865 004d 00000000 		.4byte	0
 1866 0051 00000000 		.4byte	0
 1867              	.LLST2:
 1868 0055 7C000000 		.4byte	.LVL11
 1869 0059 80000000 		.4byte	.LVL12
 1870 005d 0200     		.2byte	0x2
 1871 005f 30       		.byte	0x30
 1872 0060 9F       		.byte	0x9f
 1873 0061 80000000 		.4byte	.LVL12
 1874 0065 D4000000 		.4byte	.LVL13
 1875 0069 0100     		.2byte	0x1
 1876 006b 53       		.byte	0x53
 1877 006c D6000000 		.4byte	.LVL14
 1878 0070 E5000000 		.4byte	.LVL15-1
 1879 0074 0100     		.2byte	0x1
 1880 0076 53       		.byte	0x53
 1881 0077 00000000 		.4byte	0
 1882 007b 00000000 		.4byte	0
 1883              	.LLST3:
 1884 007f 12000000 		.4byte	.LVL3
 1885 0083 18010000 		.4byte	.LVL18
 1886 0087 0100     		.2byte	0x1
 1887 0089 55       		.byte	0x55
 1888 008a 1A010000 		.4byte	.LVL19
 1889 008e 24010000 		.4byte	.LVL22
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 49


 1890 0092 0100     		.2byte	0x1
 1891 0094 55       		.byte	0x55
 1892 0095 28010000 		.4byte	.LVL23
 1893 0099 3A010000 		.4byte	.LVL24
 1894 009d 0100     		.2byte	0x1
 1895 009f 55       		.byte	0x55
 1896 00a0 00000000 		.4byte	0
 1897 00a4 00000000 		.4byte	0
 1898              	.LLST4:
 1899 00a8 0A000000 		.4byte	.LVL1
 1900 00ac 12000000 		.4byte	.LVL3
 1901 00b0 0200     		.2byte	0x2
 1902 00b2 30       		.byte	0x30
 1903 00b3 9F       		.byte	0x9f
 1904 00b4 12000000 		.4byte	.LVL3
 1905 00b8 40010000 		.4byte	.LVL26
 1906 00bc 0100     		.2byte	0x1
 1907 00be 58       		.byte	0x58
 1908 00bf 00000000 		.4byte	0
 1909 00c3 00000000 		.4byte	0
 1910              	.LLST5:
 1911 00c7 0A000000 		.4byte	.LVL1
 1912 00cb 12000000 		.4byte	.LVL3
 1913 00cf 0200     		.2byte	0x2
 1914 00d1 31       		.byte	0x31
 1915 00d2 9F       		.byte	0x9f
 1916 00d3 12000000 		.4byte	.LVL3
 1917 00d7 80000000 		.4byte	.LVL12
 1918 00db 0100     		.2byte	0x1
 1919 00dd 50       		.byte	0x50
 1920 00de 14010000 		.4byte	.LVL16
 1921 00e2 16010000 		.4byte	.LVL17
 1922 00e6 0200     		.2byte	0x2
 1923 00e8 30       		.byte	0x30
 1924 00e9 9F       		.byte	0x9f
 1925 00ea 16010000 		.4byte	.LVL17
 1926 00ee 58010000 		.4byte	.LFE1
 1927 00f2 0100     		.2byte	0x1
 1928 00f4 50       		.byte	0x50
 1929 00f5 00000000 		.4byte	0
 1930 00f9 00000000 		.4byte	0
 1931              	.LLST6:
 1932 00fd 20000000 		.4byte	.LVL4
 1933 0101 2E000000 		.4byte	.LVL5
 1934 0105 0200     		.2byte	0x2
 1935 0107 30       		.byte	0x30
 1936 0108 9F       		.byte	0x9f
 1937 0109 2E000000 		.4byte	.LVL5
 1938 010d 62000000 		.4byte	.LVL7
 1939 0111 0100     		.2byte	0x1
 1940 0113 57       		.byte	0x57
 1941 0114 64000000 		.4byte	.LVL8
 1942 0118 6C000000 		.4byte	.LVL9
 1943 011c 0100     		.2byte	0x1
 1944 011e 57       		.byte	0x57
 1945 011f 6E000000 		.4byte	.LVL10
 1946 0123 7C000000 		.4byte	.LVL11
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 50


 1947 0127 0100     		.2byte	0x1
 1948 0129 57       		.byte	0x57
 1949 012a 7C000000 		.4byte	.LVL11
 1950 012e 16010000 		.4byte	.LVL17
 1951 0132 0100     		.2byte	0x1
 1952 0134 59       		.byte	0x59
 1953 0135 00000000 		.4byte	0
 1954 0139 00000000 		.4byte	0
 1955              	.LLST7:
 1956 013d 00000000 		.4byte	.LVL27
 1957 0141 06000000 		.4byte	.LVL28
 1958 0145 0100     		.2byte	0x1
 1959 0147 50       		.byte	0x50
 1960 0148 06000000 		.4byte	.LVL28
 1961 014c 20000000 		.4byte	.LFE2
 1962 0150 0400     		.2byte	0x4
 1963 0152 F3       		.byte	0xf3
 1964 0153 01       		.uleb128 0x1
 1965 0154 50       		.byte	0x50
 1966 0155 9F       		.byte	0x9f
 1967 0156 00000000 		.4byte	0
 1968 015a 00000000 		.4byte	0
 1969              	.LLST8:
 1970 015e 02000000 		.4byte	.LVL29
 1971 0162 8C000000 		.4byte	.LVL30
 1972 0166 0200     		.2byte	0x2
 1973 0168 30       		.byte	0x30
 1974 0169 9F       		.byte	0x9f
 1975 016a 8C000000 		.4byte	.LVL30
 1976 016e A8000000 		.4byte	.LFE3
 1977 0172 0100     		.2byte	0x1
 1978 0174 50       		.byte	0x50
 1979 0175 00000000 		.4byte	0
 1980 0179 00000000 		.4byte	0
 1981              	.LLST9:
 1982 017d 02000000 		.4byte	.LVL31
 1983 0181 8C000000 		.4byte	.LVL32
 1984 0185 0200     		.2byte	0x2
 1985 0187 30       		.byte	0x30
 1986 0188 9F       		.byte	0x9f
 1987 0189 8C000000 		.4byte	.LVL32
 1988 018d A8000000 		.4byte	.LFE4
 1989 0191 0100     		.2byte	0x1
 1990 0193 50       		.byte	0x50
 1991 0194 00000000 		.4byte	0
 1992 0198 00000000 		.4byte	0
 1993              	.LLST10:
 1994 019c 00000000 		.4byte	.LVL33
 1995 01a0 02000000 		.4byte	.LVL34
 1996 01a4 0100     		.2byte	0x1
 1997 01a6 50       		.byte	0x50
 1998 01a7 02000000 		.4byte	.LVL34
 1999 01ab 1C000000 		.4byte	.LFE5
 2000 01af 0400     		.2byte	0x4
 2001 01b1 F3       		.byte	0xf3
 2002 01b2 01       		.uleb128 0x1
 2003 01b3 50       		.byte	0x50
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 51


 2004 01b4 9F       		.byte	0x9f
 2005 01b5 00000000 		.4byte	0
 2006 01b9 00000000 		.4byte	0
 2007              		.section	.debug_aranges,"",%progbits
 2008 0000 5C000000 		.4byte	0x5c
 2009 0004 0200     		.2byte	0x2
 2010 0006 00000000 		.4byte	.Ldebug_info0
 2011 000a 04       		.byte	0x4
 2012 000b 00       		.byte	0
 2013 000c 0000     		.2byte	0
 2014 000e 0000     		.2byte	0
 2015 0010 00000000 		.4byte	.LFB1
 2016 0014 58010000 		.4byte	.LFE1-.LFB1
 2017 0018 00000000 		.4byte	.LFB2
 2018 001c 20000000 		.4byte	.LFE2-.LFB2
 2019 0020 00000000 		.4byte	.LFB3
 2020 0024 A8000000 		.4byte	.LFE3-.LFB3
 2021 0028 00000000 		.4byte	.LFB4
 2022 002c A8000000 		.4byte	.LFE4-.LFB4
 2023 0030 00000000 		.4byte	.LFB5
 2024 0034 1C000000 		.4byte	.LFE5-.LFB5
 2025 0038 00000000 		.4byte	.LFB6
 2026 003c 50000000 		.4byte	.LFE6-.LFB6
 2027 0040 00000000 		.4byte	.LFB7
 2028 0044 50000000 		.4byte	.LFE7-.LFB7
 2029 0048 00000000 		.4byte	.LFB8
 2030 004c 50000000 		.4byte	.LFE8-.LFB8
 2031 0050 00000000 		.4byte	.LFB9
 2032 0054 50000000 		.4byte	.LFE9-.LFB9
 2033 0058 00000000 		.4byte	0
 2034 005c 00000000 		.4byte	0
 2035              		.section	.debug_ranges,"",%progbits
 2036              	.Ldebug_ranges0:
 2037 0000 00000000 		.4byte	.LFB1
 2038 0004 58010000 		.4byte	.LFE1
 2039 0008 00000000 		.4byte	.LFB2
 2040 000c 20000000 		.4byte	.LFE2
 2041 0010 00000000 		.4byte	.LFB3
 2042 0014 A8000000 		.4byte	.LFE3
 2043 0018 00000000 		.4byte	.LFB4
 2044 001c A8000000 		.4byte	.LFE4
 2045 0020 00000000 		.4byte	.LFB5
 2046 0024 1C000000 		.4byte	.LFE5
 2047 0028 00000000 		.4byte	.LFB6
 2048 002c 50000000 		.4byte	.LFE6
 2049 0030 00000000 		.4byte	.LFB7
 2050 0034 50000000 		.4byte	.LFE7
 2051 0038 00000000 		.4byte	.LFB8
 2052 003c 50000000 		.4byte	.LFE8
 2053 0040 00000000 		.4byte	.LFB9
 2054 0044 50000000 		.4byte	.LFE9
 2055 0048 00000000 		.4byte	0
 2056 004c 00000000 		.4byte	0
 2057              		.section	.debug_line,"",%progbits
 2058              	.Ldebug_line0:
 2059 0000 A3010000 		.section	.debug_str,"MS",%progbits,1
 2059      02005F00 
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 52


 2059      00000201 
 2059      FB0E0D00 
 2059      01010101 
 2060              	.LASF59:
 2061 0000 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2061      43313120 
 2061      352E342E 
 2061      31203230 
 2061      31363036 
 2062 0033 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2062      20726576 
 2062      6973696F 
 2062      6E203233 
 2062      37373135 
 2063 0066 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2063      66756E63 
 2063      74696F6E 
 2063      2D736563 
 2063      74696F6E 
 2064              	.LASF7:
 2065 008e 6C6F6E67 		.ascii	"long long unsigned int\000"
 2065      206C6F6E 
 2065      6720756E 
 2065      7369676E 
 2065      65642069 
 2066              	.LASF31:
 2067 00a5 7478636D 		.ascii	"txcmd\000"
 2067      6400
 2068              	.LASF28:
 2069 00ab 7278616D 		.ascii	"rxamrd\000"
 2069      726400
 2070              	.LASF6:
 2071 00b2 6C6F6E67 		.ascii	"long long int\000"
 2071      206C6F6E 
 2071      6720696E 
 2071      7400
 2072              	.LASF0:
 2073 00c0 7369676E 		.ascii	"signed char\000"
 2073      65642063 
 2073      68617200 
 2074              	.LASF53:
 2075 00cc 6D61696C 		.ascii	"mailbox0\000"
 2075      626F7830 
 2075      00
 2076              	.LASF54:
 2077 00d5 6D61696C 		.ascii	"mailbox1\000"
 2077      626F7831 
 2077      00
 2078              	.LASF55:
 2079 00de 6D61696C 		.ascii	"mailbox2\000"
 2079      626F7832 
 2079      00
 2080              	.LASF56:
 2081 00e7 6D61696C 		.ascii	"mailbox3\000"
 2081      626F7833 
 2081      00
 2082              	.LASF4:
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 53


 2083 00f0 6C6F6E67 		.ascii	"long int\000"
 2083      20696E74 
 2083      00
 2084              	.LASF57:
 2085 00f9 4379496E 		.ascii	"CyIntDisable\000"
 2085      74446973 
 2085      61626C65 
 2085      00
 2086              	.LASF25:
 2087 0106 72786461 		.ascii	"rxdata\000"
 2087      746100
 2088              	.LASF9:
 2089 010d 75696E74 		.ascii	"uint8\000"
 2089      3800
 2090              	.LASF26:
 2091 0113 7278616D 		.ascii	"rxamr\000"
 2091      7200
 2092              	.LASF12:
 2093 0119 646F7562 		.ascii	"double\000"
 2093      6C6500
 2094              	.LASF35:
 2095 0120 73686966 		.ascii	"shift\000"
 2095      7400
 2096              	.LASF10:
 2097 0126 75696E74 		.ascii	"uint32\000"
 2097      333200
 2098              	.LASF44:
 2099 012d 43414E5F 		.ascii	"CAN_TxCancel\000"
 2099      54784361 
 2099      6E63656C 
 2099      00
 2100              	.LASF19:
 2101 013a 62797465 		.ascii	"byte\000"
 2101      00
 2102              	.LASF52:
 2103 013f 6461746F 		.ascii	"dato_enviado_1\000"
 2103      5F656E76 
 2103      6961646F 
 2103      5F3100
 2104              	.LASF8:
 2105 014e 756E7369 		.ascii	"unsigned int\000"
 2105      676E6564 
 2105      20696E74 
 2105      00
 2106              	.LASF5:
 2107 015b 6C6F6E67 		.ascii	"long unsigned int\000"
 2107      20756E73 
 2107      69676E65 
 2107      6420696E 
 2107      7400
 2108              	.LASF41:
 2109 016d 43414E5F 		.ascii	"CAN_SendMsg\000"
 2109      53656E64 
 2109      4D736700 
 2110              	.LASF40:
 2111 0179 62756666 		.ascii	"bufferId\000"
 2111      65724964 
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 54


 2111      00
 2112              	.LASF38:
 2113 0182 72656754 		.ascii	"regTemp\000"
 2113      656D7000 
 2114              	.LASF3:
 2115 018a 73686F72 		.ascii	"short unsigned int\000"
 2115      7420756E 
 2115      7369676E 
 2115      65642069 
 2115      6E7400
 2116              	.LASF30:
 2117 019d 43414E5F 		.ascii	"CAN_RX_STRUCT\000"
 2117      52585F53 
 2117      54525543 
 2117      5400
 2118              	.LASF46:
 2119 01ab 72784D61 		.ascii	"rxMailbox\000"
 2119      696C626F 
 2119      7800
 2120              	.LASF33:
 2121 01b5 74786461 		.ascii	"txdata\000"
 2121      746100
 2122              	.LASF15:
 2123 01bc 72656733 		.ascii	"reg32\000"
 2123      3200
 2124              	.LASF21:
 2125 01c2 43414E5F 		.ascii	"CAN_REG_32\000"
 2125      5245475F 
 2125      333200
 2126              	.LASF17:
 2127 01cd 73697A65 		.ascii	"sizetype\000"
 2127      74797065 
 2127      00
 2128              	.LASF16:
 2129 01d6 6C6F6E67 		.ascii	"long double\000"
 2129      20646F75 
 2129      626C6500 
 2130              	.LASF24:
 2131 01e2 72786964 		.ascii	"rxid\000"
 2131      00
 2132              	.LASF36:
 2133 01e7 72657472 		.ascii	"retry\000"
 2133      7900
 2134              	.LASF39:
 2135 01ed 6D657373 		.ascii	"message\000"
 2135      61676500 
 2136              	.LASF11:
 2137 01f5 666C6F61 		.ascii	"float\000"
 2137      7400
 2138              	.LASF14:
 2139 01fb 72656738 		.ascii	"reg8\000"
 2139      00
 2140              	.LASF1:
 2141 0200 756E7369 		.ascii	"unsigned char\000"
 2141      676E6564 
 2141      20636861 
 2141      7200
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 55


 2142              	.LASF2:
 2143 020e 73686F72 		.ascii	"short int\000"
 2143      7420696E 
 2143      7400
 2144              	.LASF58:
 2145 0218 4379496E 		.ascii	"CyIntEnable\000"
 2145      74456E61 
 2145      626C6500 
 2146              	.LASF18:
 2147 0224 43414E5F 		.ascii	"CAN_DATA_BYTES_MSG\000"
 2147      44415441 
 2147      5F425954 
 2147      45535F4D 
 2147      534700
 2148              	.LASF61:
 2149 0237 433A5C55 		.ascii	"C:\\Users\\Henry Alberto\\Documents\\GitHub\\Psoc_M"
 2149      73657273 
 2149      5C48656E 
 2149      72792041 
 2149      6C626572 
 2150 0265 6F64756C 		.ascii	"odular\\Optimization_Algorithms\\Xbee_Snifer_Terate"
 2150      61725C4F 
 2150      7074696D 
 2150      697A6174 
 2150      696F6E5F 
 2151 0296 726D2E63 		.ascii	"rm.cydsn\000"
 2151      7964736E 
 2151      00
 2152              	.LASF34:
 2153 029f 43414E5F 		.ascii	"CAN_TX_STRUCT\000"
 2153      54585F53 
 2153      54525543 
 2153      5400
 2154              	.LASF13:
 2155 02ad 63686172 		.ascii	"char\000"
 2155      00
 2156              	.LASF51:
 2157 02b2 6461746F 		.ascii	"dato_enviado\000"
 2157      5F656E76 
 2157      6961646F 
 2157      00
 2158              	.LASF20:
 2159 02bf 43414E5F 		.ascii	"CAN_DATA_BYTES\000"
 2159      44415441 
 2159      5F425954 
 2159      455300
 2160              	.LASF48:
 2161 02ce 43414E5F 		.ascii	"CAN_ReceiveMsg1\000"
 2161      52656365 
 2161      6976654D 
 2161      73673100 
 2162              	.LASF49:
 2163 02de 43414E5F 		.ascii	"CAN_ReceiveMsg2\000"
 2163      52656365 
 2163      6976654D 
 2163      73673200 
 2164              	.LASF50:
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc931N6b.s 			page 56


 2165 02ee 43414E5F 		.ascii	"CAN_ReceiveMsg3\000"
 2165      52656365 
 2165      6976654D 
 2165      73673300 
 2166              	.LASF47:
 2167 02fe 43414E5F 		.ascii	"CAN_ReceiveMsg0\000"
 2167      52656365 
 2167      6976654D 
 2167      73673000 
 2168              	.LASF60:
 2169 030e 43414E5F 		.ascii	"CAN_TX_RX_func.c\000"
 2169      54585F52 
 2169      585F6675 
 2169      6E632E63 
 2169      00
 2170              	.LASF23:
 2171 031f 7278636D 		.ascii	"rxcmd\000"
 2171      6400
 2172              	.LASF22:
 2173 0325 43414E5F 		.ascii	"CAN_TX_MSG\000"
 2173      54585F4D 
 2173      534700
 2174              	.LASF32:
 2175 0330 74786964 		.ascii	"txid\000"
 2175      00
 2176              	.LASF27:
 2177 0335 72786163 		.ascii	"rxacr\000"
 2177      7200
 2178              	.LASF29:
 2179 033b 72786163 		.ascii	"rxacrd\000"
 2179      726400
 2180              	.LASF42:
 2181 0342 43414E5F 		.ascii	"CAN_SendMsg0\000"
 2181      53656E64 
 2181      4D736730 
 2181      00
 2182              	.LASF43:
 2183 034f 43414E5F 		.ascii	"CAN_SendMsg1\000"
 2183      53656E64 
 2183      4D736731 
 2183      00
 2184              	.LASF45:
 2185 035c 43414E5F 		.ascii	"CAN_ReceiveMsg\000"
 2185      52656365 
 2185      6976654D 
 2185      736700
 2186              	.LASF37:
 2187 036b 72657375 		.ascii	"result\000"
 2187      6C7400
 2188              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
