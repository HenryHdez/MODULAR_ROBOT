ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"RX.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.RX_Init,"ax",%progbits
  20              		.align	2
  21              		.global	RX_Init
  22              		.code	16
  23              		.thumb_func
  24              		.type	RX_Init, %function
  25              	RX_Init:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC4\\RX.c"
   1:Generated_Source\PSoC4/RX.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/RX.c **** * File Name: RX.c
   3:Generated_Source\PSoC4/RX.c **** * Version 2.50
   4:Generated_Source\PSoC4/RX.c **** *
   5:Generated_Source\PSoC4/RX.c **** * Description:
   6:Generated_Source\PSoC4/RX.c **** *  This file provides all API functionality of the UART component
   7:Generated_Source\PSoC4/RX.c **** *
   8:Generated_Source\PSoC4/RX.c **** * Note:
   9:Generated_Source\PSoC4/RX.c **** *
  10:Generated_Source\PSoC4/RX.c **** ********************************************************************************
  11:Generated_Source\PSoC4/RX.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC4/RX.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC4/RX.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC4/RX.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC4/RX.c **** *******************************************************************************/
  16:Generated_Source\PSoC4/RX.c **** 
  17:Generated_Source\PSoC4/RX.c **** #include "RX.h"
  18:Generated_Source\PSoC4/RX.c **** #if (RX_INTERNAL_CLOCK_USED)
  19:Generated_Source\PSoC4/RX.c ****     #include "RX_IntClock.h"
  20:Generated_Source\PSoC4/RX.c **** #endif /* End RX_INTERNAL_CLOCK_USED */
  21:Generated_Source\PSoC4/RX.c **** 
  22:Generated_Source\PSoC4/RX.c **** 
  23:Generated_Source\PSoC4/RX.c **** /***************************************
  24:Generated_Source\PSoC4/RX.c **** * Global data allocation
  25:Generated_Source\PSoC4/RX.c **** ***************************************/
  26:Generated_Source\PSoC4/RX.c **** 
  27:Generated_Source\PSoC4/RX.c **** uint8 RX_initVar = 0u;
  28:Generated_Source\PSoC4/RX.c **** 
  29:Generated_Source\PSoC4/RX.c **** #if (RX_TX_INTERRUPT_ENABLED && RX_TX_ENABLED)
  30:Generated_Source\PSoC4/RX.c ****     volatile uint8 RX_txBuffer[RX_TX_BUFFER_SIZE];
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 2


  31:Generated_Source\PSoC4/RX.c ****     volatile uint8 RX_txBufferRead = 0u;
  32:Generated_Source\PSoC4/RX.c ****     uint8 RX_txBufferWrite = 0u;
  33:Generated_Source\PSoC4/RX.c **** #endif /* (RX_TX_INTERRUPT_ENABLED && RX_TX_ENABLED) */
  34:Generated_Source\PSoC4/RX.c **** 
  35:Generated_Source\PSoC4/RX.c **** #if (RX_RX_INTERRUPT_ENABLED && (RX_RX_ENABLED || RX_HD_ENABLED))
  36:Generated_Source\PSoC4/RX.c ****     uint8 RX_errorStatus = 0u;
  37:Generated_Source\PSoC4/RX.c ****     volatile uint8 RX_rxBuffer[RX_RX_BUFFER_SIZE];
  38:Generated_Source\PSoC4/RX.c ****     volatile uint8 RX_rxBufferRead  = 0u;
  39:Generated_Source\PSoC4/RX.c ****     volatile uint8 RX_rxBufferWrite = 0u;
  40:Generated_Source\PSoC4/RX.c ****     volatile uint8 RX_rxBufferLoopDetect = 0u;
  41:Generated_Source\PSoC4/RX.c ****     volatile uint8 RX_rxBufferOverflow   = 0u;
  42:Generated_Source\PSoC4/RX.c ****     #if (RX_RXHW_ADDRESS_ENABLED)
  43:Generated_Source\PSoC4/RX.c ****         volatile uint8 RX_rxAddressMode = RX_RX_ADDRESS_MODE;
  44:Generated_Source\PSoC4/RX.c ****         volatile uint8 RX_rxAddressDetected = 0u;
  45:Generated_Source\PSoC4/RX.c ****     #endif /* (RX_RXHW_ADDRESS_ENABLED) */
  46:Generated_Source\PSoC4/RX.c **** #endif /* (RX_RX_INTERRUPT_ENABLED && (RX_RX_ENABLED || RX_HD_ENABLED)) */
  47:Generated_Source\PSoC4/RX.c **** 
  48:Generated_Source\PSoC4/RX.c **** 
  49:Generated_Source\PSoC4/RX.c **** /*******************************************************************************
  50:Generated_Source\PSoC4/RX.c **** * Function Name: RX_Start
  51:Generated_Source\PSoC4/RX.c **** ********************************************************************************
  52:Generated_Source\PSoC4/RX.c **** *
  53:Generated_Source\PSoC4/RX.c **** * Summary:
  54:Generated_Source\PSoC4/RX.c **** *  This is the preferred method to begin component operation.
  55:Generated_Source\PSoC4/RX.c **** *  RX_Start() sets the initVar variable, calls the
  56:Generated_Source\PSoC4/RX.c **** *  RX_Init() function, and then calls the
  57:Generated_Source\PSoC4/RX.c **** *  RX_Enable() function.
  58:Generated_Source\PSoC4/RX.c **** *
  59:Generated_Source\PSoC4/RX.c **** * Parameters:
  60:Generated_Source\PSoC4/RX.c **** *  None.
  61:Generated_Source\PSoC4/RX.c **** *
  62:Generated_Source\PSoC4/RX.c **** * Return:
  63:Generated_Source\PSoC4/RX.c **** *  None.
  64:Generated_Source\PSoC4/RX.c **** *
  65:Generated_Source\PSoC4/RX.c **** * Global variables:
  66:Generated_Source\PSoC4/RX.c **** *  The RX_intiVar variable is used to indicate initial
  67:Generated_Source\PSoC4/RX.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:Generated_Source\PSoC4/RX.c **** *  and set to one (1u) the first time RX_Start() is called. This
  69:Generated_Source\PSoC4/RX.c **** *  allows for component initialization without re-initialization in all
  70:Generated_Source\PSoC4/RX.c **** *  subsequent calls to the RX_Start() routine.
  71:Generated_Source\PSoC4/RX.c **** *
  72:Generated_Source\PSoC4/RX.c **** * Reentrant:
  73:Generated_Source\PSoC4/RX.c **** *  No.
  74:Generated_Source\PSoC4/RX.c **** *
  75:Generated_Source\PSoC4/RX.c **** *******************************************************************************/
  76:Generated_Source\PSoC4/RX.c **** void RX_Start(void) 
  77:Generated_Source\PSoC4/RX.c **** {
  78:Generated_Source\PSoC4/RX.c ****     /* If not initialized then initialize all required hardware and software */
  79:Generated_Source\PSoC4/RX.c ****     if(RX_initVar == 0u)
  80:Generated_Source\PSoC4/RX.c ****     {
  81:Generated_Source\PSoC4/RX.c ****         RX_Init();
  82:Generated_Source\PSoC4/RX.c ****         RX_initVar = 1u;
  83:Generated_Source\PSoC4/RX.c ****     }
  84:Generated_Source\PSoC4/RX.c **** 
  85:Generated_Source\PSoC4/RX.c ****     RX_Enable();
  86:Generated_Source\PSoC4/RX.c **** }
  87:Generated_Source\PSoC4/RX.c **** 
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 3


  88:Generated_Source\PSoC4/RX.c **** 
  89:Generated_Source\PSoC4/RX.c **** /*******************************************************************************
  90:Generated_Source\PSoC4/RX.c **** * Function Name: RX_Init
  91:Generated_Source\PSoC4/RX.c **** ********************************************************************************
  92:Generated_Source\PSoC4/RX.c **** *
  93:Generated_Source\PSoC4/RX.c **** * Summary:
  94:Generated_Source\PSoC4/RX.c **** *  Initializes or restores the component according to the customizer Configure
  95:Generated_Source\PSoC4/RX.c **** *  dialog settings. It is not necessary to call RX_Init() because
  96:Generated_Source\PSoC4/RX.c **** *  the RX_Start() API calls this function and is the preferred
  97:Generated_Source\PSoC4/RX.c **** *  method to begin component operation.
  98:Generated_Source\PSoC4/RX.c **** *
  99:Generated_Source\PSoC4/RX.c **** * Parameters:
 100:Generated_Source\PSoC4/RX.c **** *  None.
 101:Generated_Source\PSoC4/RX.c **** *
 102:Generated_Source\PSoC4/RX.c **** * Return:
 103:Generated_Source\PSoC4/RX.c **** *  None.
 104:Generated_Source\PSoC4/RX.c **** *
 105:Generated_Source\PSoC4/RX.c **** *******************************************************************************/
 106:Generated_Source\PSoC4/RX.c **** void RX_Init(void) 
 107:Generated_Source\PSoC4/RX.c **** {
  28              		.loc 1 107 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
 108:Generated_Source\PSoC4/RX.c ****     #if(RX_RX_ENABLED || RX_HD_ENABLED)
 109:Generated_Source\PSoC4/RX.c **** 
 110:Generated_Source\PSoC4/RX.c ****         #if (RX_RX_INTERRUPT_ENABLED)
 111:Generated_Source\PSoC4/RX.c ****             /* Set RX interrupt vector and priority */
 112:Generated_Source\PSoC4/RX.c ****             (void) CyIntSetVector(RX_RX_VECT_NUM, &RX_RXISR);
  36              		.loc 1 112 0
  37 0002 0949     		ldr	r1, .L2
  38 0004 0020     		movs	r0, #0
  39 0006 FFF7FEFF 		bl	CyIntSetVector
  40              	.LVL0:
 113:Generated_Source\PSoC4/RX.c ****             CyIntSetPriority(RX_RX_VECT_NUM, RX_RX_PRIOR_NUM);
  41              		.loc 1 113 0
  42 000a 0321     		movs	r1, #3
  43 000c 0020     		movs	r0, #0
  44 000e FFF7FEFF 		bl	CyIntSetPriority
  45              	.LVL1:
 114:Generated_Source\PSoC4/RX.c ****             RX_errorStatus = 0u;
  46              		.loc 1 114 0
  47 0012 0022     		movs	r2, #0
  48 0014 054B     		ldr	r3, .L2+4
  49 0016 1A70     		strb	r2, [r3]
 115:Generated_Source\PSoC4/RX.c ****         #endif /* (RX_RX_INTERRUPT_ENABLED) */
 116:Generated_Source\PSoC4/RX.c **** 
 117:Generated_Source\PSoC4/RX.c ****         #if (RX_RXHW_ADDRESS_ENABLED)
 118:Generated_Source\PSoC4/RX.c ****             RX_SetRxAddressMode(RX_RX_ADDRESS_MODE);
 119:Generated_Source\PSoC4/RX.c ****             RX_SetRxAddress1(RX_RX_HW_ADDRESS1);
 120:Generated_Source\PSoC4/RX.c ****             RX_SetRxAddress2(RX_RX_HW_ADDRESS2);
 121:Generated_Source\PSoC4/RX.c ****         #endif /* End RX_RXHW_ADDRESS_ENABLED */
 122:Generated_Source\PSoC4/RX.c **** 
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 4


 123:Generated_Source\PSoC4/RX.c ****         /* Init Count7 period */
 124:Generated_Source\PSoC4/RX.c ****         RX_RXBITCTR_PERIOD_REG = RX_RXBITCTR_INIT;
  50              		.loc 1 124 0
  51 0018 7132     		adds	r2, r2, #113
  52 001a 054B     		ldr	r3, .L2+8
  53 001c 1A70     		strb	r2, [r3]
 125:Generated_Source\PSoC4/RX.c ****         /* Configure the Initial RX interrupt mask */
 126:Generated_Source\PSoC4/RX.c ****         RX_RXSTATUS_MASK_REG  = RX_INIT_RX_INTERRUPTS_MASK;
  54              		.loc 1 126 0
  55 001e 513A     		subs	r2, r2, #81
  56 0020 044B     		ldr	r3, .L2+12
  57 0022 1A70     		strb	r2, [r3]
 127:Generated_Source\PSoC4/RX.c ****     #endif /* End RX_RX_ENABLED || RX_HD_ENABLED*/
 128:Generated_Source\PSoC4/RX.c **** 
 129:Generated_Source\PSoC4/RX.c ****     #if(RX_TX_ENABLED)
 130:Generated_Source\PSoC4/RX.c ****         #if (RX_TX_INTERRUPT_ENABLED)
 131:Generated_Source\PSoC4/RX.c ****             /* Set TX interrupt vector and priority */
 132:Generated_Source\PSoC4/RX.c ****             (void) CyIntSetVector(RX_TX_VECT_NUM, &RX_TXISR);
 133:Generated_Source\PSoC4/RX.c ****             CyIntSetPriority(RX_TX_VECT_NUM, RX_TX_PRIOR_NUM);
 134:Generated_Source\PSoC4/RX.c ****         #endif /* (RX_TX_INTERRUPT_ENABLED) */
 135:Generated_Source\PSoC4/RX.c **** 
 136:Generated_Source\PSoC4/RX.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:Generated_Source\PSoC4/RX.c ****         #if (RX_TXCLKGEN_DP)
 138:Generated_Source\PSoC4/RX.c ****             RX_TXBITCLKGEN_CTR_REG = RX_BIT_CENTER;
 139:Generated_Source\PSoC4/RX.c ****             RX_TXBITCLKTX_COMPLETE_REG = ((RX_NUMBER_OF_DATA_BITS +
 140:Generated_Source\PSoC4/RX.c ****                         RX_NUMBER_OF_START_BIT) * RX_OVER_SAMPLE_COUNT) - 1u;
 141:Generated_Source\PSoC4/RX.c ****         #else
 142:Generated_Source\PSoC4/RX.c ****             RX_TXBITCTR_PERIOD_REG = ((RX_NUMBER_OF_DATA_BITS +
 143:Generated_Source\PSoC4/RX.c ****                         RX_NUMBER_OF_START_BIT) * RX_OVER_SAMPLE_8) - 1u;
 144:Generated_Source\PSoC4/RX.c ****         #endif /* End RX_TXCLKGEN_DP */
 145:Generated_Source\PSoC4/RX.c **** 
 146:Generated_Source\PSoC4/RX.c ****         /* Configure the Initial TX interrupt mask */
 147:Generated_Source\PSoC4/RX.c ****         #if (RX_TX_INTERRUPT_ENABLED)
 148:Generated_Source\PSoC4/RX.c ****             RX_TXSTATUS_MASK_REG = RX_TX_STS_FIFO_EMPTY;
 149:Generated_Source\PSoC4/RX.c ****         #else
 150:Generated_Source\PSoC4/RX.c ****             RX_TXSTATUS_MASK_REG = RX_INIT_TX_INTERRUPTS_MASK;
 151:Generated_Source\PSoC4/RX.c ****         #endif /*End RX_TX_INTERRUPT_ENABLED*/
 152:Generated_Source\PSoC4/RX.c **** 
 153:Generated_Source\PSoC4/RX.c ****     #endif /* End RX_TX_ENABLED */
 154:Generated_Source\PSoC4/RX.c **** 
 155:Generated_Source\PSoC4/RX.c ****     #if(RX_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:Generated_Source\PSoC4/RX.c ****         RX_WriteControlRegister( \
 157:Generated_Source\PSoC4/RX.c ****             (RX_ReadControlRegister() & (uint8)~RX_CTRL_PARITY_TYPE_MASK) | \
 158:Generated_Source\PSoC4/RX.c ****             (uint8)(RX_PARITY_TYPE << RX_CTRL_PARITY_TYPE0_SHIFT) );
 159:Generated_Source\PSoC4/RX.c ****     #endif /* End RX_PARITY_TYPE_SW */
 160:Generated_Source\PSoC4/RX.c **** }
  58              		.loc 1 160 0
  59              		@ sp needed
  60 0024 10BD     		pop	{r4, pc}
  61              	.L3:
  62 0026 C046     		.align	2
  63              	.L2:
  64 0028 00000000 		.word	RX_RXISR
  65 002c 00000000 		.word	.LANCHOR0
  66 0030 82000F40 		.word	1074724994
  67 0034 83000F40 		.word	1074724995
  68              		.cfi_endproc
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 5


  69              	.LFE2:
  70              		.size	RX_Init, .-RX_Init
  71              		.section	.text.RX_Enable,"ax",%progbits
  72              		.align	2
  73              		.global	RX_Enable
  74              		.code	16
  75              		.thumb_func
  76              		.type	RX_Enable, %function
  77              	RX_Enable:
  78              	.LFB3:
 161:Generated_Source\PSoC4/RX.c **** 
 162:Generated_Source\PSoC4/RX.c **** 
 163:Generated_Source\PSoC4/RX.c **** /*******************************************************************************
 164:Generated_Source\PSoC4/RX.c **** * Function Name: RX_Enable
 165:Generated_Source\PSoC4/RX.c **** ********************************************************************************
 166:Generated_Source\PSoC4/RX.c **** *
 167:Generated_Source\PSoC4/RX.c **** * Summary:
 168:Generated_Source\PSoC4/RX.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:Generated_Source\PSoC4/RX.c **** *  to call RX_Enable() because the RX_Start() API
 170:Generated_Source\PSoC4/RX.c **** *  calls this function, which is the preferred method to begin component
 171:Generated_Source\PSoC4/RX.c **** *  operation.
 172:Generated_Source\PSoC4/RX.c **** 
 173:Generated_Source\PSoC4/RX.c **** * Parameters:
 174:Generated_Source\PSoC4/RX.c **** *  None.
 175:Generated_Source\PSoC4/RX.c **** *
 176:Generated_Source\PSoC4/RX.c **** * Return:
 177:Generated_Source\PSoC4/RX.c **** *  None.
 178:Generated_Source\PSoC4/RX.c **** *
 179:Generated_Source\PSoC4/RX.c **** * Global Variables:
 180:Generated_Source\PSoC4/RX.c **** *  RX_rxAddressDetected - set to initial state (0).
 181:Generated_Source\PSoC4/RX.c **** *
 182:Generated_Source\PSoC4/RX.c **** *******************************************************************************/
 183:Generated_Source\PSoC4/RX.c **** void RX_Enable(void) 
 184:Generated_Source\PSoC4/RX.c **** {
  79              		.loc 1 184 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83 0000 10B5     		push	{r4, lr}
  84              		.cfi_def_cfa_offset 8
  85              		.cfi_offset 4, -8
  86              		.cfi_offset 14, -4
 185:Generated_Source\PSoC4/RX.c ****     uint8 enableInterrupts;
 186:Generated_Source\PSoC4/RX.c ****     enableInterrupts = CyEnterCriticalSection();
  87              		.loc 1 186 0
  88 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  89              	.LVL2:
  90 0006 0400     		movs	r4, r0
  91              	.LVL3:
 187:Generated_Source\PSoC4/RX.c **** 
 188:Generated_Source\PSoC4/RX.c ****     #if (RX_RX_ENABLED || RX_HD_ENABLED)
 189:Generated_Source\PSoC4/RX.c ****         /* RX Counter (Count7) Enable */
 190:Generated_Source\PSoC4/RX.c ****         RX_RXBITCTR_CONTROL_REG |= RX_CNTR_ENABLE;
  92              		.loc 1 190 0
  93 0008 0A4A     		ldr	r2, .L5
  94 000a 1178     		ldrb	r1, [r2]
  95 000c 2023     		movs	r3, #32
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 6


  96 000e 0B43     		orrs	r3, r1
  97 0010 DBB2     		uxtb	r3, r3
  98 0012 1370     		strb	r3, [r2]
 191:Generated_Source\PSoC4/RX.c **** 
 192:Generated_Source\PSoC4/RX.c ****         /* Enable the RX Interrupt */
 193:Generated_Source\PSoC4/RX.c ****         RX_RXSTATUS_ACTL_REG  |= RX_INT_ENABLE;
  99              		.loc 1 193 0
 100 0014 084A     		ldr	r2, .L5+4
 101 0016 1178     		ldrb	r1, [r2]
 102 0018 1023     		movs	r3, #16
 103 001a 0B43     		orrs	r3, r1
 104 001c DBB2     		uxtb	r3, r3
 105 001e 1370     		strb	r3, [r2]
 194:Generated_Source\PSoC4/RX.c **** 
 195:Generated_Source\PSoC4/RX.c ****         #if (RX_RX_INTERRUPT_ENABLED)
 196:Generated_Source\PSoC4/RX.c ****             RX_EnableRxInt();
 106              		.loc 1 196 0
 107 0020 0020     		movs	r0, #0
 108 0022 FFF7FEFF 		bl	CyIntEnable
 109              	.LVL4:
 197:Generated_Source\PSoC4/RX.c **** 
 198:Generated_Source\PSoC4/RX.c ****             #if (RX_RXHW_ADDRESS_ENABLED)
 199:Generated_Source\PSoC4/RX.c ****                 RX_rxAddressDetected = 0u;
 200:Generated_Source\PSoC4/RX.c ****             #endif /* (RX_RXHW_ADDRESS_ENABLED) */
 201:Generated_Source\PSoC4/RX.c ****         #endif /* (RX_RX_INTERRUPT_ENABLED) */
 202:Generated_Source\PSoC4/RX.c ****     #endif /* (RX_RX_ENABLED || RX_HD_ENABLED) */
 203:Generated_Source\PSoC4/RX.c **** 
 204:Generated_Source\PSoC4/RX.c ****     #if(RX_TX_ENABLED)
 205:Generated_Source\PSoC4/RX.c ****         /* TX Counter (DP/Count7) Enable */
 206:Generated_Source\PSoC4/RX.c ****         #if(!RX_TXCLKGEN_DP)
 207:Generated_Source\PSoC4/RX.c ****             RX_TXBITCTR_CONTROL_REG |= RX_CNTR_ENABLE;
 208:Generated_Source\PSoC4/RX.c ****         #endif /* End RX_TXCLKGEN_DP */
 209:Generated_Source\PSoC4/RX.c **** 
 210:Generated_Source\PSoC4/RX.c ****         /* Enable the TX Interrupt */
 211:Generated_Source\PSoC4/RX.c ****         RX_TXSTATUS_ACTL_REG |= RX_INT_ENABLE;
 212:Generated_Source\PSoC4/RX.c ****         #if (RX_TX_INTERRUPT_ENABLED)
 213:Generated_Source\PSoC4/RX.c ****             RX_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:Generated_Source\PSoC4/RX.c ****             RX_EnableTxInt();
 215:Generated_Source\PSoC4/RX.c ****         #endif /* (RX_TX_INTERRUPT_ENABLED) */
 216:Generated_Source\PSoC4/RX.c ****      #endif /* (RX_TX_INTERRUPT_ENABLED) */
 217:Generated_Source\PSoC4/RX.c **** 
 218:Generated_Source\PSoC4/RX.c ****     #if (RX_INTERNAL_CLOCK_USED)
 219:Generated_Source\PSoC4/RX.c ****         RX_IntClock_Start();  /* Enable the clock */
 110              		.loc 1 219 0
 111 0026 FF20     		movs	r0, #255
 112 0028 FFF7FEFF 		bl	RX_IntClock_StartEx
 113              	.LVL5:
 220:Generated_Source\PSoC4/RX.c ****     #endif /* (RX_INTERNAL_CLOCK_USED) */
 221:Generated_Source\PSoC4/RX.c **** 
 222:Generated_Source\PSoC4/RX.c ****     CyExitCriticalSection(enableInterrupts);
 114              		.loc 1 222 0
 115 002c 2000     		movs	r0, r4
 116 002e FFF7FEFF 		bl	CyExitCriticalSection
 117              	.LVL6:
 223:Generated_Source\PSoC4/RX.c **** }
 118              		.loc 1 223 0
 119              		@ sp needed
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 7


 120              	.LVL7:
 121 0032 10BD     		pop	{r4, pc}
 122              	.L6:
 123              		.align	2
 124              	.L5:
 125 0034 92000F40 		.word	1074725010
 126 0038 93000F40 		.word	1074725011
 127              		.cfi_endproc
 128              	.LFE3:
 129              		.size	RX_Enable, .-RX_Enable
 130              		.section	.text.RX_Start,"ax",%progbits
 131              		.align	2
 132              		.global	RX_Start
 133              		.code	16
 134              		.thumb_func
 135              		.type	RX_Start, %function
 136              	RX_Start:
 137              	.LFB1:
  77:Generated_Source\PSoC4/RX.c ****     /* If not initialized then initialize all required hardware and software */
 138              		.loc 1 77 0
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 0
 141              		@ frame_needed = 0, uses_anonymous_args = 0
 142 0000 10B5     		push	{r4, lr}
 143              		.cfi_def_cfa_offset 8
 144              		.cfi_offset 4, -8
 145              		.cfi_offset 14, -4
  79:Generated_Source\PSoC4/RX.c ****     {
 146              		.loc 1 79 0
 147 0002 064B     		ldr	r3, .L9
 148 0004 5B78     		ldrb	r3, [r3, #1]
 149 0006 002B     		cmp	r3, #0
 150 0008 04D1     		bne	.L8
  81:Generated_Source\PSoC4/RX.c ****         RX_initVar = 1u;
 151              		.loc 1 81 0
 152 000a FFF7FEFF 		bl	RX_Init
 153              	.LVL8:
  82:Generated_Source\PSoC4/RX.c ****     }
 154              		.loc 1 82 0
 155 000e 0122     		movs	r2, #1
 156 0010 024B     		ldr	r3, .L9
 157 0012 5A70     		strb	r2, [r3, #1]
 158              	.L8:
  85:Generated_Source\PSoC4/RX.c **** }
 159              		.loc 1 85 0
 160 0014 FFF7FEFF 		bl	RX_Enable
 161              	.LVL9:
  86:Generated_Source\PSoC4/RX.c **** 
 162              		.loc 1 86 0
 163              		@ sp needed
 164 0018 10BD     		pop	{r4, pc}
 165              	.L10:
 166 001a C046     		.align	2
 167              	.L9:
 168 001c 00000000 		.word	.LANCHOR0
 169              		.cfi_endproc
 170              	.LFE1:
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 8


 171              		.size	RX_Start, .-RX_Start
 172              		.section	.text.RX_Stop,"ax",%progbits
 173              		.align	2
 174              		.global	RX_Stop
 175              		.code	16
 176              		.thumb_func
 177              		.type	RX_Stop, %function
 178              	RX_Stop:
 179              	.LFB4:
 224:Generated_Source\PSoC4/RX.c **** 
 225:Generated_Source\PSoC4/RX.c **** 
 226:Generated_Source\PSoC4/RX.c **** /*******************************************************************************
 227:Generated_Source\PSoC4/RX.c **** * Function Name: RX_Stop
 228:Generated_Source\PSoC4/RX.c **** ********************************************************************************
 229:Generated_Source\PSoC4/RX.c **** *
 230:Generated_Source\PSoC4/RX.c **** * Summary:
 231:Generated_Source\PSoC4/RX.c **** *  Disables the UART operation.
 232:Generated_Source\PSoC4/RX.c **** *
 233:Generated_Source\PSoC4/RX.c **** * Parameters:
 234:Generated_Source\PSoC4/RX.c **** *  None.
 235:Generated_Source\PSoC4/RX.c **** *
 236:Generated_Source\PSoC4/RX.c **** * Return:
 237:Generated_Source\PSoC4/RX.c **** *  None.
 238:Generated_Source\PSoC4/RX.c **** *
 239:Generated_Source\PSoC4/RX.c **** *******************************************************************************/
 240:Generated_Source\PSoC4/RX.c **** void RX_Stop(void) 
 241:Generated_Source\PSoC4/RX.c **** {
 180              		.loc 1 241 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184 0000 10B5     		push	{r4, lr}
 185              		.cfi_def_cfa_offset 8
 186              		.cfi_offset 4, -8
 187              		.cfi_offset 14, -4
 242:Generated_Source\PSoC4/RX.c ****     uint8 enableInterrupts;
 243:Generated_Source\PSoC4/RX.c ****     enableInterrupts = CyEnterCriticalSection();
 188              		.loc 1 243 0
 189 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 190              	.LVL10:
 191 0006 0400     		movs	r4, r0
 192              	.LVL11:
 244:Generated_Source\PSoC4/RX.c **** 
 245:Generated_Source\PSoC4/RX.c ****     /* Write Bit Counter Disable */
 246:Generated_Source\PSoC4/RX.c ****     #if (RX_RX_ENABLED || RX_HD_ENABLED)
 247:Generated_Source\PSoC4/RX.c ****         RX_RXBITCTR_CONTROL_REG &= (uint8) ~RX_CNTR_ENABLE;
 193              		.loc 1 247 0
 194 0008 094A     		ldr	r2, .L12
 195 000a 1378     		ldrb	r3, [r2]
 196 000c 2021     		movs	r1, #32
 197 000e 8B43     		bics	r3, r1
 198 0010 1370     		strb	r3, [r2]
 248:Generated_Source\PSoC4/RX.c ****     #endif /* (RX_RX_ENABLED || RX_HD_ENABLED) */
 249:Generated_Source\PSoC4/RX.c **** 
 250:Generated_Source\PSoC4/RX.c ****     #if (RX_TX_ENABLED)
 251:Generated_Source\PSoC4/RX.c ****         #if(!RX_TXCLKGEN_DP)
 252:Generated_Source\PSoC4/RX.c ****             RX_TXBITCTR_CONTROL_REG &= (uint8) ~RX_CNTR_ENABLE;
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 9


 253:Generated_Source\PSoC4/RX.c ****         #endif /* (!RX_TXCLKGEN_DP) */
 254:Generated_Source\PSoC4/RX.c ****     #endif /* (RX_TX_ENABLED) */
 255:Generated_Source\PSoC4/RX.c **** 
 256:Generated_Source\PSoC4/RX.c ****     #if (RX_INTERNAL_CLOCK_USED)
 257:Generated_Source\PSoC4/RX.c ****         RX_IntClock_Stop();   /* Disable the clock */
 199              		.loc 1 257 0
 200 0012 FFF7FEFF 		bl	RX_IntClock_Stop
 201              	.LVL12:
 258:Generated_Source\PSoC4/RX.c ****     #endif /* (RX_INTERNAL_CLOCK_USED) */
 259:Generated_Source\PSoC4/RX.c **** 
 260:Generated_Source\PSoC4/RX.c ****     /* Disable internal interrupt component */
 261:Generated_Source\PSoC4/RX.c ****     #if (RX_RX_ENABLED || RX_HD_ENABLED)
 262:Generated_Source\PSoC4/RX.c ****         RX_RXSTATUS_ACTL_REG  &= (uint8) ~RX_INT_ENABLE;
 202              		.loc 1 262 0
 203 0016 074A     		ldr	r2, .L12+4
 204 0018 1378     		ldrb	r3, [r2]
 205 001a 1021     		movs	r1, #16
 206 001c 8B43     		bics	r3, r1
 207 001e 1370     		strb	r3, [r2]
 263:Generated_Source\PSoC4/RX.c **** 
 264:Generated_Source\PSoC4/RX.c ****         #if (RX_RX_INTERRUPT_ENABLED)
 265:Generated_Source\PSoC4/RX.c ****             RX_DisableRxInt();
 208              		.loc 1 265 0
 209 0020 0020     		movs	r0, #0
 210 0022 FFF7FEFF 		bl	CyIntDisable
 211              	.LVL13:
 266:Generated_Source\PSoC4/RX.c ****         #endif /* (RX_RX_INTERRUPT_ENABLED) */
 267:Generated_Source\PSoC4/RX.c ****     #endif /* (RX_RX_ENABLED || RX_HD_ENABLED) */
 268:Generated_Source\PSoC4/RX.c **** 
 269:Generated_Source\PSoC4/RX.c ****     #if (RX_TX_ENABLED)
 270:Generated_Source\PSoC4/RX.c ****         RX_TXSTATUS_ACTL_REG &= (uint8) ~RX_INT_ENABLE;
 271:Generated_Source\PSoC4/RX.c **** 
 272:Generated_Source\PSoC4/RX.c ****         #if (RX_TX_INTERRUPT_ENABLED)
 273:Generated_Source\PSoC4/RX.c ****             RX_DisableTxInt();
 274:Generated_Source\PSoC4/RX.c ****         #endif /* (RX_TX_INTERRUPT_ENABLED) */
 275:Generated_Source\PSoC4/RX.c ****     #endif /* (RX_TX_ENABLED) */
 276:Generated_Source\PSoC4/RX.c **** 
 277:Generated_Source\PSoC4/RX.c ****     CyExitCriticalSection(enableInterrupts);
 212              		.loc 1 277 0
 213 0026 2000     		movs	r0, r4
 214 0028 FFF7FEFF 		bl	CyExitCriticalSection
 215              	.LVL14:
 278:Generated_Source\PSoC4/RX.c **** }
 216              		.loc 1 278 0
 217              		@ sp needed
 218              	.LVL15:
 219 002c 10BD     		pop	{r4, pc}
 220              	.L13:
 221 002e C046     		.align	2
 222              	.L12:
 223 0030 92000F40 		.word	1074725010
 224 0034 93000F40 		.word	1074725011
 225              		.cfi_endproc
 226              	.LFE4:
 227              		.size	RX_Stop, .-RX_Stop
 228              		.section	.text.RX_ReadControlRegister,"ax",%progbits
 229              		.align	2
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 10


 230              		.global	RX_ReadControlRegister
 231              		.code	16
 232              		.thumb_func
 233              		.type	RX_ReadControlRegister, %function
 234              	RX_ReadControlRegister:
 235              	.LFB5:
 279:Generated_Source\PSoC4/RX.c **** 
 280:Generated_Source\PSoC4/RX.c **** 
 281:Generated_Source\PSoC4/RX.c **** /*******************************************************************************
 282:Generated_Source\PSoC4/RX.c **** * Function Name: RX_ReadControlRegister
 283:Generated_Source\PSoC4/RX.c **** ********************************************************************************
 284:Generated_Source\PSoC4/RX.c **** *
 285:Generated_Source\PSoC4/RX.c **** * Summary:
 286:Generated_Source\PSoC4/RX.c **** *  Returns the current value of the control register.
 287:Generated_Source\PSoC4/RX.c **** *
 288:Generated_Source\PSoC4/RX.c **** * Parameters:
 289:Generated_Source\PSoC4/RX.c **** *  None.
 290:Generated_Source\PSoC4/RX.c **** *
 291:Generated_Source\PSoC4/RX.c **** * Return:
 292:Generated_Source\PSoC4/RX.c **** *  Contents of the control register.
 293:Generated_Source\PSoC4/RX.c **** *
 294:Generated_Source\PSoC4/RX.c **** *******************************************************************************/
 295:Generated_Source\PSoC4/RX.c **** uint8 RX_ReadControlRegister(void) 
 296:Generated_Source\PSoC4/RX.c **** {
 236              		.loc 1 296 0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 0
 239              		@ frame_needed = 0, uses_anonymous_args = 0
 240              		@ link register save eliminated.
 297:Generated_Source\PSoC4/RX.c ****     #if (RX_CONTROL_REG_REMOVED)
 298:Generated_Source\PSoC4/RX.c ****         return(0u);
 299:Generated_Source\PSoC4/RX.c ****     #else
 300:Generated_Source\PSoC4/RX.c ****         return(RX_CONTROL_REG);
 301:Generated_Source\PSoC4/RX.c ****     #endif /* (RX_CONTROL_REG_REMOVED) */
 302:Generated_Source\PSoC4/RX.c **** }
 241              		.loc 1 302 0
 242 0000 0020     		movs	r0, #0
 243              		@ sp needed
 244 0002 7047     		bx	lr
 245              		.cfi_endproc
 246              	.LFE5:
 247              		.size	RX_ReadControlRegister, .-RX_ReadControlRegister
 248              		.section	.text.RX_WriteControlRegister,"ax",%progbits
 249              		.align	2
 250              		.global	RX_WriteControlRegister
 251              		.code	16
 252              		.thumb_func
 253              		.type	RX_WriteControlRegister, %function
 254              	RX_WriteControlRegister:
 255              	.LFB6:
 303:Generated_Source\PSoC4/RX.c **** 
 304:Generated_Source\PSoC4/RX.c **** 
 305:Generated_Source\PSoC4/RX.c **** /*******************************************************************************
 306:Generated_Source\PSoC4/RX.c **** * Function Name: RX_WriteControlRegister
 307:Generated_Source\PSoC4/RX.c **** ********************************************************************************
 308:Generated_Source\PSoC4/RX.c **** *
 309:Generated_Source\PSoC4/RX.c **** * Summary:
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 11


 310:Generated_Source\PSoC4/RX.c **** *  Writes an 8-bit value into the control register
 311:Generated_Source\PSoC4/RX.c **** *
 312:Generated_Source\PSoC4/RX.c **** * Parameters:
 313:Generated_Source\PSoC4/RX.c **** *  control:  control register value
 314:Generated_Source\PSoC4/RX.c **** *
 315:Generated_Source\PSoC4/RX.c **** * Return:
 316:Generated_Source\PSoC4/RX.c **** *  None.
 317:Generated_Source\PSoC4/RX.c **** *
 318:Generated_Source\PSoC4/RX.c **** *******************************************************************************/
 319:Generated_Source\PSoC4/RX.c **** void  RX_WriteControlRegister(uint8 control) 
 320:Generated_Source\PSoC4/RX.c **** {
 256              		.loc 1 320 0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260              		@ link register save eliminated.
 261              	.LVL16:
 321:Generated_Source\PSoC4/RX.c ****     #if (RX_CONTROL_REG_REMOVED)
 322:Generated_Source\PSoC4/RX.c ****         if(0u != control)
 323:Generated_Source\PSoC4/RX.c ****         {
 324:Generated_Source\PSoC4/RX.c ****             /* Suppress compiler warning */
 325:Generated_Source\PSoC4/RX.c ****         }
 326:Generated_Source\PSoC4/RX.c ****     #else
 327:Generated_Source\PSoC4/RX.c ****        RX_CONTROL_REG = control;
 328:Generated_Source\PSoC4/RX.c ****     #endif /* (RX_CONTROL_REG_REMOVED) */
 329:Generated_Source\PSoC4/RX.c **** }
 262              		.loc 1 329 0
 263              		@ sp needed
 264 0000 7047     		bx	lr
 265              		.cfi_endproc
 266              	.LFE6:
 267              		.size	RX_WriteControlRegister, .-RX_WriteControlRegister
 268 0002 C046     		.section	.text.RX_SetRxInterruptMode,"ax",%progbits
 269              		.align	2
 270              		.global	RX_SetRxInterruptMode
 271              		.code	16
 272              		.thumb_func
 273              		.type	RX_SetRxInterruptMode, %function
 274              	RX_SetRxInterruptMode:
 275              	.LFB7:
 330:Generated_Source\PSoC4/RX.c **** 
 331:Generated_Source\PSoC4/RX.c **** 
 332:Generated_Source\PSoC4/RX.c **** #if(RX_RX_ENABLED || RX_HD_ENABLED)
 333:Generated_Source\PSoC4/RX.c ****     /*******************************************************************************
 334:Generated_Source\PSoC4/RX.c ****     * Function Name: RX_SetRxInterruptMode
 335:Generated_Source\PSoC4/RX.c ****     ********************************************************************************
 336:Generated_Source\PSoC4/RX.c ****     *
 337:Generated_Source\PSoC4/RX.c ****     * Summary:
 338:Generated_Source\PSoC4/RX.c ****     *  Configures the RX interrupt sources enabled.
 339:Generated_Source\PSoC4/RX.c ****     *
 340:Generated_Source\PSoC4/RX.c ****     * Parameters:
 341:Generated_Source\PSoC4/RX.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:Generated_Source\PSoC4/RX.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:Generated_Source\PSoC4/RX.c ****     *  combination of status register bit-masks shown below:
 344:Generated_Source\PSoC4/RX.c ****     *      RX_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:Generated_Source\PSoC4/RX.c ****     *      RX_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:Generated_Source\PSoC4/RX.c ****     *      RX_RX_STS_STOP_ERROR       Interrupt on stop error.
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 12


 347:Generated_Source\PSoC4/RX.c ****     *      RX_RX_STS_BREAK            Interrupt on break.
 348:Generated_Source\PSoC4/RX.c ****     *      RX_RX_STS_OVERRUN          Interrupt on overrun error.
 349:Generated_Source\PSoC4/RX.c ****     *      RX_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:Generated_Source\PSoC4/RX.c ****     *      RX_RX_STS_MRKSPC           Interrupt on address detect.
 351:Generated_Source\PSoC4/RX.c ****     *
 352:Generated_Source\PSoC4/RX.c ****     * Return:
 353:Generated_Source\PSoC4/RX.c ****     *  None.
 354:Generated_Source\PSoC4/RX.c ****     *
 355:Generated_Source\PSoC4/RX.c ****     * Theory:
 356:Generated_Source\PSoC4/RX.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:Generated_Source\PSoC4/RX.c ****     *
 358:Generated_Source\PSoC4/RX.c ****     *******************************************************************************/
 359:Generated_Source\PSoC4/RX.c ****     void RX_SetRxInterruptMode(uint8 intSrc) 
 360:Generated_Source\PSoC4/RX.c ****     {
 276              		.loc 1 360 0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 0
 279              		@ frame_needed = 0, uses_anonymous_args = 0
 280              		@ link register save eliminated.
 281              	.LVL17:
 361:Generated_Source\PSoC4/RX.c ****         RX_RXSTATUS_MASK_REG  = intSrc;
 282              		.loc 1 361 0
 283 0000 014B     		ldr	r3, .L17
 284 0002 1870     		strb	r0, [r3]
 362:Generated_Source\PSoC4/RX.c ****     }
 285              		.loc 1 362 0
 286              		@ sp needed
 287 0004 7047     		bx	lr
 288              	.L18:
 289 0006 C046     		.align	2
 290              	.L17:
 291 0008 83000F40 		.word	1074724995
 292              		.cfi_endproc
 293              	.LFE7:
 294              		.size	RX_SetRxInterruptMode, .-RX_SetRxInterruptMode
 295              		.section	.text.RX_ReadRxData,"ax",%progbits
 296              		.align	2
 297              		.global	RX_ReadRxData
 298              		.code	16
 299              		.thumb_func
 300              		.type	RX_ReadRxData, %function
 301              	RX_ReadRxData:
 302              	.LFB8:
 363:Generated_Source\PSoC4/RX.c **** 
 364:Generated_Source\PSoC4/RX.c **** 
 365:Generated_Source\PSoC4/RX.c ****     /*******************************************************************************
 366:Generated_Source\PSoC4/RX.c ****     * Function Name: RX_ReadRxData
 367:Generated_Source\PSoC4/RX.c ****     ********************************************************************************
 368:Generated_Source\PSoC4/RX.c ****     *
 369:Generated_Source\PSoC4/RX.c ****     * Summary:
 370:Generated_Source\PSoC4/RX.c ****     *  Returns the next byte of received data. This function returns data without
 371:Generated_Source\PSoC4/RX.c ****     *  checking the status. You must check the status separately.
 372:Generated_Source\PSoC4/RX.c ****     *
 373:Generated_Source\PSoC4/RX.c ****     * Parameters:
 374:Generated_Source\PSoC4/RX.c ****     *  None.
 375:Generated_Source\PSoC4/RX.c ****     *
 376:Generated_Source\PSoC4/RX.c ****     * Return:
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 13


 377:Generated_Source\PSoC4/RX.c ****     *  Received data from RX register
 378:Generated_Source\PSoC4/RX.c ****     *
 379:Generated_Source\PSoC4/RX.c ****     * Global Variables:
 380:Generated_Source\PSoC4/RX.c ****     *  RX_rxBuffer - RAM buffer pointer for save received data.
 381:Generated_Source\PSoC4/RX.c ****     *  RX_rxBufferWrite - cyclic index for write to rxBuffer,
 382:Generated_Source\PSoC4/RX.c ****     *     checked to identify new data.
 383:Generated_Source\PSoC4/RX.c ****     *  RX_rxBufferRead - cyclic index for read from rxBuffer,
 384:Generated_Source\PSoC4/RX.c ****     *     incremented after each byte has been read from buffer.
 385:Generated_Source\PSoC4/RX.c ****     *  RX_rxBufferLoopDetect - cleared if loop condition was detected
 386:Generated_Source\PSoC4/RX.c ****     *     in RX ISR.
 387:Generated_Source\PSoC4/RX.c ****     *
 388:Generated_Source\PSoC4/RX.c ****     * Reentrant:
 389:Generated_Source\PSoC4/RX.c ****     *  No.
 390:Generated_Source\PSoC4/RX.c ****     *
 391:Generated_Source\PSoC4/RX.c ****     *******************************************************************************/
 392:Generated_Source\PSoC4/RX.c ****     uint8 RX_ReadRxData(void) 
 393:Generated_Source\PSoC4/RX.c ****     {
 303              		.loc 1 393 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307 0000 10B5     		push	{r4, lr}
 308              		.cfi_def_cfa_offset 8
 309              		.cfi_offset 4, -8
 310              		.cfi_offset 14, -4
 394:Generated_Source\PSoC4/RX.c ****         uint8 rxData;
 395:Generated_Source\PSoC4/RX.c **** 
 396:Generated_Source\PSoC4/RX.c ****     #if (RX_RX_INTERRUPT_ENABLED)
 397:Generated_Source\PSoC4/RX.c **** 
 398:Generated_Source\PSoC4/RX.c ****         uint8 locRxBufferRead;
 399:Generated_Source\PSoC4/RX.c ****         uint8 locRxBufferWrite;
 400:Generated_Source\PSoC4/RX.c **** 
 401:Generated_Source\PSoC4/RX.c ****         /* Protect variables that could change on interrupt */
 402:Generated_Source\PSoC4/RX.c ****         RX_DisableRxInt();
 311              		.loc 1 402 0
 312 0002 0020     		movs	r0, #0
 313 0004 FFF7FEFF 		bl	CyIntDisable
 314              	.LVL18:
 403:Generated_Source\PSoC4/RX.c **** 
 404:Generated_Source\PSoC4/RX.c ****         locRxBufferRead  = RX_rxBufferRead;
 315              		.loc 1 404 0
 316 0008 114A     		ldr	r2, .L25
 317 000a 9378     		ldrb	r3, [r2, #2]
 318 000c DBB2     		uxtb	r3, r3
 319              	.LVL19:
 405:Generated_Source\PSoC4/RX.c ****         locRxBufferWrite = RX_rxBufferWrite;
 320              		.loc 1 405 0
 321 000e D178     		ldrb	r1, [r2, #3]
 322 0010 C9B2     		uxtb	r1, r1
 323              	.LVL20:
 406:Generated_Source\PSoC4/RX.c **** 
 407:Generated_Source\PSoC4/RX.c ****         if( (RX_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 324              		.loc 1 407 0
 325 0012 1279     		ldrb	r2, [r2, #4]
 326 0014 002A     		cmp	r2, #0
 327 0016 01D1     		bne	.L20
 328              		.loc 1 407 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 14


 329 0018 8B42     		cmp	r3, r1
 330 001a 10D0     		beq	.L21
 331              	.L20:
 408:Generated_Source\PSoC4/RX.c ****         {
 409:Generated_Source\PSoC4/RX.c ****             rxData = RX_rxBuffer[locRxBufferRead];
 332              		.loc 1 409 0 is_stmt 1
 333 001c 0D4A     		ldr	r2, .L25+4
 334 001e D45C     		ldrb	r4, [r2, r3]
 335 0020 E4B2     		uxtb	r4, r4
 336              	.LVL21:
 410:Generated_Source\PSoC4/RX.c ****             locRxBufferRead++;
 337              		.loc 1 410 0
 338 0022 0133     		adds	r3, r3, #1
 339              	.LVL22:
 340 0024 DBB2     		uxtb	r3, r3
 341              	.LVL23:
 411:Generated_Source\PSoC4/RX.c **** 
 412:Generated_Source\PSoC4/RX.c ****             if(locRxBufferRead >= RX_RX_BUFFER_SIZE)
 342              		.loc 1 412 0
 343 0026 0F2B     		cmp	r3, #15
 344 0028 00D9     		bls	.L22
 413:Generated_Source\PSoC4/RX.c ****             {
 414:Generated_Source\PSoC4/RX.c ****                 locRxBufferRead = 0u;
 345              		.loc 1 414 0
 346 002a 0023     		movs	r3, #0
 347              	.LVL24:
 348              	.L22:
 415:Generated_Source\PSoC4/RX.c ****             }
 416:Generated_Source\PSoC4/RX.c ****             /* Update the real pointer */
 417:Generated_Source\PSoC4/RX.c ****             RX_rxBufferRead = locRxBufferRead;
 349              		.loc 1 417 0
 350 002c 084A     		ldr	r2, .L25
 351 002e 9370     		strb	r3, [r2, #2]
 418:Generated_Source\PSoC4/RX.c **** 
 419:Generated_Source\PSoC4/RX.c ****             if(RX_rxBufferLoopDetect != 0u)
 352              		.loc 1 419 0
 353 0030 1379     		ldrb	r3, [r2, #4]
 354              	.LVL25:
 355 0032 002B     		cmp	r3, #0
 356 0034 06D0     		beq	.L23
 420:Generated_Source\PSoC4/RX.c ****             {
 421:Generated_Source\PSoC4/RX.c ****                 RX_rxBufferLoopDetect = 0u;
 357              		.loc 1 421 0
 358 0036 0022     		movs	r2, #0
 359 0038 054B     		ldr	r3, .L25
 360 003a 1A71     		strb	r2, [r3, #4]
 361              	.LVL26:
 362 003c 02E0     		b	.L23
 363              	.LVL27:
 364              	.L21:
 422:Generated_Source\PSoC4/RX.c ****                 #if ((RX_RX_INTERRUPT_ENABLED) && (RX_FLOW_CONTROL != 0u))
 423:Generated_Source\PSoC4/RX.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:Generated_Source\PSoC4/RX.c ****                     #if( RX_HD_ENABLED )
 425:Generated_Source\PSoC4/RX.c ****                         if((RX_CONTROL_REG & RX_CTRL_HD_SEND) == 0u)
 426:Generated_Source\PSoC4/RX.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:Generated_Source\PSoC4/RX.c ****                             *  configuration set, otherwise
 428:Generated_Source\PSoC4/RX.c ****                             *  mask will be returned in LoadRxConfig() API.
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 15


 429:Generated_Source\PSoC4/RX.c ****                             */
 430:Generated_Source\PSoC4/RX.c ****                             RX_RXSTATUS_MASK_REG  |= RX_RX_STS_FIFO_NOTEMPTY;
 431:Generated_Source\PSoC4/RX.c ****                         }
 432:Generated_Source\PSoC4/RX.c ****                     #else
 433:Generated_Source\PSoC4/RX.c ****                         RX_RXSTATUS_MASK_REG  |= RX_RX_STS_FIFO_NOTEMPTY;
 434:Generated_Source\PSoC4/RX.c ****                     #endif /* end RX_HD_ENABLED */
 435:Generated_Source\PSoC4/RX.c ****                 #endif /* ((RX_RX_INTERRUPT_ENABLED) && (RX_FLOW_CONTROL != 0u)) */
 436:Generated_Source\PSoC4/RX.c ****             }
 437:Generated_Source\PSoC4/RX.c ****         }
 438:Generated_Source\PSoC4/RX.c ****         else
 439:Generated_Source\PSoC4/RX.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:Generated_Source\PSoC4/RX.c ****             rxData = RX_RXDATA_REG;
 365              		.loc 1 440 0
 366 003e 064B     		ldr	r3, .L25+8
 367              	.LVL28:
 368 0040 1C78     		ldrb	r4, [r3]
 369 0042 E4B2     		uxtb	r4, r4
 370              	.LVL29:
 371              	.L23:
 441:Generated_Source\PSoC4/RX.c ****         }
 442:Generated_Source\PSoC4/RX.c **** 
 443:Generated_Source\PSoC4/RX.c ****         RX_EnableRxInt();
 372              		.loc 1 443 0
 373 0044 0020     		movs	r0, #0
 374 0046 FFF7FEFF 		bl	CyIntEnable
 375              	.LVL30:
 444:Generated_Source\PSoC4/RX.c **** 
 445:Generated_Source\PSoC4/RX.c ****     #else
 446:Generated_Source\PSoC4/RX.c **** 
 447:Generated_Source\PSoC4/RX.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:Generated_Source\PSoC4/RX.c ****         rxData = RX_RXDATA_REG;
 449:Generated_Source\PSoC4/RX.c **** 
 450:Generated_Source\PSoC4/RX.c ****     #endif /* (RX_RX_INTERRUPT_ENABLED) */
 451:Generated_Source\PSoC4/RX.c **** 
 452:Generated_Source\PSoC4/RX.c ****         return(rxData);
 453:Generated_Source\PSoC4/RX.c ****     }
 376              		.loc 1 453 0
 377 004a 2000     		movs	r0, r4
 378              		@ sp needed
 379              	.LVL31:
 380 004c 10BD     		pop	{r4, pc}
 381              	.L26:
 382 004e C046     		.align	2
 383              	.L25:
 384 0050 00000000 		.word	.LANCHOR0
 385 0054 00000000 		.word	RX_rxBuffer
 386 0058 42000F40 		.word	1074724930
 387              		.cfi_endproc
 388              	.LFE8:
 389              		.size	RX_ReadRxData, .-RX_ReadRxData
 390              		.section	.text.RX_ReadRxStatus,"ax",%progbits
 391              		.align	2
 392              		.global	RX_ReadRxStatus
 393              		.code	16
 394              		.thumb_func
 395              		.type	RX_ReadRxStatus, %function
 396              	RX_ReadRxStatus:
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 16


 397              	.LFB9:
 454:Generated_Source\PSoC4/RX.c **** 
 455:Generated_Source\PSoC4/RX.c **** 
 456:Generated_Source\PSoC4/RX.c ****     /*******************************************************************************
 457:Generated_Source\PSoC4/RX.c ****     * Function Name: RX_ReadRxStatus
 458:Generated_Source\PSoC4/RX.c ****     ********************************************************************************
 459:Generated_Source\PSoC4/RX.c ****     *
 460:Generated_Source\PSoC4/RX.c ****     * Summary:
 461:Generated_Source\PSoC4/RX.c ****     *  Returns the current state of the receiver status register and the software
 462:Generated_Source\PSoC4/RX.c ****     *  buffer overflow status.
 463:Generated_Source\PSoC4/RX.c ****     *
 464:Generated_Source\PSoC4/RX.c ****     * Parameters:
 465:Generated_Source\PSoC4/RX.c ****     *  None.
 466:Generated_Source\PSoC4/RX.c ****     *
 467:Generated_Source\PSoC4/RX.c ****     * Return:
 468:Generated_Source\PSoC4/RX.c ****     *  Current state of the status register.
 469:Generated_Source\PSoC4/RX.c ****     *
 470:Generated_Source\PSoC4/RX.c ****     * Side Effect:
 471:Generated_Source\PSoC4/RX.c ****     *  All status register bits are clear-on-read except
 472:Generated_Source\PSoC4/RX.c ****     *  RX_RX_STS_FIFO_NOTEMPTY.
 473:Generated_Source\PSoC4/RX.c ****     *  RX_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:Generated_Source\PSoC4/RX.c ****     *  register read.
 475:Generated_Source\PSoC4/RX.c ****     *
 476:Generated_Source\PSoC4/RX.c ****     * Global Variables:
 477:Generated_Source\PSoC4/RX.c ****     *  RX_rxBufferOverflow - used to indicate overload condition.
 478:Generated_Source\PSoC4/RX.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:Generated_Source\PSoC4/RX.c ****     *   RX_rxBufferRead to write new data. This condition returned
 480:Generated_Source\PSoC4/RX.c ****     *   and cleared to zero by this API as an
 481:Generated_Source\PSoC4/RX.c ****     *   RX_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:Generated_Source\PSoC4/RX.c ****     *   bits.
 483:Generated_Source\PSoC4/RX.c ****     *
 484:Generated_Source\PSoC4/RX.c ****     *******************************************************************************/
 485:Generated_Source\PSoC4/RX.c ****     uint8 RX_ReadRxStatus(void) 
 486:Generated_Source\PSoC4/RX.c ****     {
 398              		.loc 1 486 0
 399              		.cfi_startproc
 400              		@ args = 0, pretend = 0, frame = 0
 401              		@ frame_needed = 0, uses_anonymous_args = 0
 402              		@ link register save eliminated.
 487:Generated_Source\PSoC4/RX.c ****         uint8 status;
 488:Generated_Source\PSoC4/RX.c **** 
 489:Generated_Source\PSoC4/RX.c ****         status = RX_RXSTATUS_REG & RX_RX_HW_MASK;
 403              		.loc 1 489 0
 404 0000 074B     		ldr	r3, .L29
 405 0002 1878     		ldrb	r0, [r3]
 406 0004 7F23     		movs	r3, #127
 407 0006 1840     		ands	r0, r3
 408              	.LVL32:
 490:Generated_Source\PSoC4/RX.c **** 
 491:Generated_Source\PSoC4/RX.c ****     #if (RX_RX_INTERRUPT_ENABLED)
 492:Generated_Source\PSoC4/RX.c ****         if(RX_rxBufferOverflow != 0u)
 409              		.loc 1 492 0
 410 0008 064B     		ldr	r3, .L29+4
 411 000a 5B79     		ldrb	r3, [r3, #5]
 412 000c 002B     		cmp	r3, #0
 413 000e 06D0     		beq	.L28
 493:Generated_Source\PSoC4/RX.c ****         {
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 17


 494:Generated_Source\PSoC4/RX.c ****             status |= RX_RX_STS_SOFT_BUFF_OVER;
 414              		.loc 1 494 0
 415 0010 8023     		movs	r3, #128
 416 0012 5B42     		rsbs	r3, r3, #0
 417 0014 1843     		orrs	r0, r3
 418              	.LVL33:
 419 0016 C0B2     		uxtb	r0, r0
 420              	.LVL34:
 495:Generated_Source\PSoC4/RX.c ****             RX_rxBufferOverflow = 0u;
 421              		.loc 1 495 0
 422 0018 0022     		movs	r2, #0
 423 001a 024B     		ldr	r3, .L29+4
 424 001c 5A71     		strb	r2, [r3, #5]
 425              	.L28:
 496:Generated_Source\PSoC4/RX.c ****         }
 497:Generated_Source\PSoC4/RX.c ****     #endif /* (RX_RX_INTERRUPT_ENABLED) */
 498:Generated_Source\PSoC4/RX.c **** 
 499:Generated_Source\PSoC4/RX.c ****         return(status);
 500:Generated_Source\PSoC4/RX.c ****     }
 426              		.loc 1 500 0
 427              		@ sp needed
 428 001e 7047     		bx	lr
 429              	.L30:
 430              		.align	2
 431              	.L29:
 432 0020 63000F40 		.word	1074724963
 433 0024 00000000 		.word	.LANCHOR0
 434              		.cfi_endproc
 435              	.LFE9:
 436              		.size	RX_ReadRxStatus, .-RX_ReadRxStatus
 437              		.section	.text.RX_GetChar,"ax",%progbits
 438              		.align	2
 439              		.global	RX_GetChar
 440              		.code	16
 441              		.thumb_func
 442              		.type	RX_GetChar, %function
 443              	RX_GetChar:
 444              	.LFB10:
 501:Generated_Source\PSoC4/RX.c **** 
 502:Generated_Source\PSoC4/RX.c **** 
 503:Generated_Source\PSoC4/RX.c ****     /*******************************************************************************
 504:Generated_Source\PSoC4/RX.c ****     * Function Name: RX_GetChar
 505:Generated_Source\PSoC4/RX.c ****     ********************************************************************************
 506:Generated_Source\PSoC4/RX.c ****     *
 507:Generated_Source\PSoC4/RX.c ****     * Summary:
 508:Generated_Source\PSoC4/RX.c ****     *  Returns the last received byte of data. RX_GetChar() is
 509:Generated_Source\PSoC4/RX.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:Generated_Source\PSoC4/RX.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:Generated_Source\PSoC4/RX.c ****     *
 512:Generated_Source\PSoC4/RX.c ****     * Parameters:
 513:Generated_Source\PSoC4/RX.c ****     *  None.
 514:Generated_Source\PSoC4/RX.c ****     *
 515:Generated_Source\PSoC4/RX.c ****     * Return:
 516:Generated_Source\PSoC4/RX.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:Generated_Source\PSoC4/RX.c ****     *  A returned zero signifies an error condition or no data available.
 518:Generated_Source\PSoC4/RX.c ****     *
 519:Generated_Source\PSoC4/RX.c ****     * Global Variables:
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 18


 520:Generated_Source\PSoC4/RX.c ****     *  RX_rxBuffer - RAM buffer pointer for save received data.
 521:Generated_Source\PSoC4/RX.c ****     *  RX_rxBufferWrite - cyclic index for write to rxBuffer,
 522:Generated_Source\PSoC4/RX.c ****     *     checked to identify new data.
 523:Generated_Source\PSoC4/RX.c ****     *  RX_rxBufferRead - cyclic index for read from rxBuffer,
 524:Generated_Source\PSoC4/RX.c ****     *     incremented after each byte has been read from buffer.
 525:Generated_Source\PSoC4/RX.c ****     *  RX_rxBufferLoopDetect - cleared if loop condition was detected
 526:Generated_Source\PSoC4/RX.c ****     *     in RX ISR.
 527:Generated_Source\PSoC4/RX.c ****     *
 528:Generated_Source\PSoC4/RX.c ****     * Reentrant:
 529:Generated_Source\PSoC4/RX.c ****     *  No.
 530:Generated_Source\PSoC4/RX.c ****     *
 531:Generated_Source\PSoC4/RX.c ****     *******************************************************************************/
 532:Generated_Source\PSoC4/RX.c ****     uint8 RX_GetChar(void) 
 533:Generated_Source\PSoC4/RX.c ****     {
 445              		.loc 1 533 0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 0
 448              		@ frame_needed = 0, uses_anonymous_args = 0
 449 0000 10B5     		push	{r4, lr}
 450              		.cfi_def_cfa_offset 8
 451              		.cfi_offset 4, -8
 452              		.cfi_offset 14, -4
 453              	.LVL35:
 534:Generated_Source\PSoC4/RX.c ****         uint8 rxData = 0u;
 535:Generated_Source\PSoC4/RX.c ****         uint8 rxStatus;
 536:Generated_Source\PSoC4/RX.c **** 
 537:Generated_Source\PSoC4/RX.c ****     #if (RX_RX_INTERRUPT_ENABLED)
 538:Generated_Source\PSoC4/RX.c ****         uint8 locRxBufferRead;
 539:Generated_Source\PSoC4/RX.c ****         uint8 locRxBufferWrite;
 540:Generated_Source\PSoC4/RX.c **** 
 541:Generated_Source\PSoC4/RX.c ****         /* Protect variables that could change on interrupt */
 542:Generated_Source\PSoC4/RX.c ****         RX_DisableRxInt();
 454              		.loc 1 542 0
 455 0002 0020     		movs	r0, #0
 456 0004 FFF7FEFF 		bl	CyIntDisable
 457              	.LVL36:
 543:Generated_Source\PSoC4/RX.c **** 
 544:Generated_Source\PSoC4/RX.c ****         locRxBufferRead  = RX_rxBufferRead;
 458              		.loc 1 544 0
 459 0008 174A     		ldr	r2, .L39
 460 000a 9378     		ldrb	r3, [r2, #2]
 461 000c DBB2     		uxtb	r3, r3
 462              	.LVL37:
 545:Generated_Source\PSoC4/RX.c ****         locRxBufferWrite = RX_rxBufferWrite;
 463              		.loc 1 545 0
 464 000e D178     		ldrb	r1, [r2, #3]
 465 0010 C9B2     		uxtb	r1, r1
 466              	.LVL38:
 546:Generated_Source\PSoC4/RX.c **** 
 547:Generated_Source\PSoC4/RX.c ****         if( (RX_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 467              		.loc 1 547 0
 468 0012 1279     		ldrb	r2, [r2, #4]
 469 0014 002A     		cmp	r2, #0
 470 0016 01D1     		bne	.L32
 471              		.loc 1 547 0 is_stmt 0 discriminator 1
 472 0018 8B42     		cmp	r3, r1
 473 001a 10D0     		beq	.L33
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 19


 474              	.L32:
 548:Generated_Source\PSoC4/RX.c ****         {
 549:Generated_Source\PSoC4/RX.c ****             rxData = RX_rxBuffer[locRxBufferRead];
 475              		.loc 1 549 0 is_stmt 1
 476 001c 134A     		ldr	r2, .L39+4
 477 001e D45C     		ldrb	r4, [r2, r3]
 478 0020 E4B2     		uxtb	r4, r4
 479              	.LVL39:
 550:Generated_Source\PSoC4/RX.c ****             locRxBufferRead++;
 480              		.loc 1 550 0
 481 0022 0133     		adds	r3, r3, #1
 482              	.LVL40:
 483 0024 DBB2     		uxtb	r3, r3
 484              	.LVL41:
 551:Generated_Source\PSoC4/RX.c ****             if(locRxBufferRead >= RX_RX_BUFFER_SIZE)
 485              		.loc 1 551 0
 486 0026 0F2B     		cmp	r3, #15
 487 0028 00D9     		bls	.L34
 552:Generated_Source\PSoC4/RX.c ****             {
 553:Generated_Source\PSoC4/RX.c ****                 locRxBufferRead = 0u;
 488              		.loc 1 553 0
 489 002a 0023     		movs	r3, #0
 490              	.LVL42:
 491              	.L34:
 554:Generated_Source\PSoC4/RX.c ****             }
 555:Generated_Source\PSoC4/RX.c ****             /* Update the real pointer */
 556:Generated_Source\PSoC4/RX.c ****             RX_rxBufferRead = locRxBufferRead;
 492              		.loc 1 556 0
 493 002c 0E4A     		ldr	r2, .L39
 494 002e 9370     		strb	r3, [r2, #2]
 557:Generated_Source\PSoC4/RX.c **** 
 558:Generated_Source\PSoC4/RX.c ****             if(RX_rxBufferLoopDetect != 0u)
 495              		.loc 1 558 0
 496 0030 1379     		ldrb	r3, [r2, #4]
 497              	.LVL43:
 498 0032 002B     		cmp	r3, #0
 499 0034 12D0     		beq	.L35
 559:Generated_Source\PSoC4/RX.c ****             {
 560:Generated_Source\PSoC4/RX.c ****                 RX_rxBufferLoopDetect = 0u;
 500              		.loc 1 560 0
 501 0036 0022     		movs	r2, #0
 502 0038 0B4B     		ldr	r3, .L39
 503 003a 1A71     		strb	r2, [r3, #4]
 504              	.LVL44:
 505 003c 0EE0     		b	.L35
 506              	.LVL45:
 507              	.L33:
 561:Generated_Source\PSoC4/RX.c ****                 #if( (RX_RX_INTERRUPT_ENABLED) && (RX_FLOW_CONTROL != 0u) )
 562:Generated_Source\PSoC4/RX.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:Generated_Source\PSoC4/RX.c ****                     #if( RX_HD_ENABLED )
 564:Generated_Source\PSoC4/RX.c ****                         if((RX_CONTROL_REG & RX_CTRL_HD_SEND) == 0u)
 565:Generated_Source\PSoC4/RX.c ****                         {   /* In Half duplex mode return RX mask only if
 566:Generated_Source\PSoC4/RX.c ****                             *  RX configuration set, otherwise
 567:Generated_Source\PSoC4/RX.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:Generated_Source\PSoC4/RX.c ****                             */
 569:Generated_Source\PSoC4/RX.c ****                             RX_RXSTATUS_MASK_REG |= RX_RX_STS_FIFO_NOTEMPTY;
 570:Generated_Source\PSoC4/RX.c ****                         }
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 20


 571:Generated_Source\PSoC4/RX.c ****                     #else
 572:Generated_Source\PSoC4/RX.c ****                         RX_RXSTATUS_MASK_REG |= RX_RX_STS_FIFO_NOTEMPTY;
 573:Generated_Source\PSoC4/RX.c ****                     #endif /* end RX_HD_ENABLED */
 574:Generated_Source\PSoC4/RX.c ****                 #endif /* RX_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:Generated_Source\PSoC4/RX.c ****             }
 576:Generated_Source\PSoC4/RX.c **** 
 577:Generated_Source\PSoC4/RX.c ****         }
 578:Generated_Source\PSoC4/RX.c ****         else
 579:Generated_Source\PSoC4/RX.c ****         {   rxStatus = RX_RXSTATUS_REG;
 508              		.loc 1 579 0
 509 003e 0C4B     		ldr	r3, .L39+8
 510              	.LVL46:
 511 0040 1B78     		ldrb	r3, [r3]
 512 0042 DBB2     		uxtb	r3, r3
 513              	.LVL47:
 580:Generated_Source\PSoC4/RX.c ****             if((rxStatus & RX_RX_STS_FIFO_NOTEMPTY) != 0u)
 514              		.loc 1 580 0
 515 0044 9A06     		lsls	r2, r3, #26
 516 0046 06D5     		bpl	.L37
 581:Generated_Source\PSoC4/RX.c ****             {   /* Read received data from FIFO */
 582:Generated_Source\PSoC4/RX.c ****                 rxData = RX_RXDATA_REG;
 517              		.loc 1 582 0
 518 0048 0A4A     		ldr	r2, .L39+12
 519 004a 1478     		ldrb	r4, [r2]
 520 004c E4B2     		uxtb	r4, r4
 521              	.LVL48:
 583:Generated_Source\PSoC4/RX.c ****                 /*Check status on error*/
 584:Generated_Source\PSoC4/RX.c ****                 if((rxStatus & (RX_RX_STS_BREAK | RX_RX_STS_PAR_ERROR |
 522              		.loc 1 584 0
 523 004e 1E22     		movs	r2, #30
 524 0050 1A42     		tst	r2, r3
 525 0052 02D1     		bne	.L38
 526 0054 02E0     		b	.L35
 527              	.LVL49:
 528              	.L37:
 534:Generated_Source\PSoC4/RX.c ****         uint8 rxStatus;
 529              		.loc 1 534 0
 530 0056 0024     		movs	r4, #0
 531 0058 00E0     		b	.L35
 532              	.LVL50:
 533              	.L38:
 585:Generated_Source\PSoC4/RX.c ****                                 RX_RX_STS_STOP_ERROR | RX_RX_STS_OVERRUN)) != 0u)
 586:Generated_Source\PSoC4/RX.c ****                 {
 587:Generated_Source\PSoC4/RX.c ****                     rxData = 0u;
 534              		.loc 1 587 0
 535 005a 0024     		movs	r4, #0
 536              	.LVL51:
 537              	.L35:
 588:Generated_Source\PSoC4/RX.c ****                 }
 589:Generated_Source\PSoC4/RX.c ****             }
 590:Generated_Source\PSoC4/RX.c ****         }
 591:Generated_Source\PSoC4/RX.c **** 
 592:Generated_Source\PSoC4/RX.c ****         RX_EnableRxInt();
 538              		.loc 1 592 0
 539 005c 0020     		movs	r0, #0
 540 005e FFF7FEFF 		bl	CyIntEnable
 541              	.LVL52:
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 21


 593:Generated_Source\PSoC4/RX.c **** 
 594:Generated_Source\PSoC4/RX.c ****     #else
 595:Generated_Source\PSoC4/RX.c **** 
 596:Generated_Source\PSoC4/RX.c ****         rxStatus =RX_RXSTATUS_REG;
 597:Generated_Source\PSoC4/RX.c ****         if((rxStatus & RX_RX_STS_FIFO_NOTEMPTY) != 0u)
 598:Generated_Source\PSoC4/RX.c ****         {
 599:Generated_Source\PSoC4/RX.c ****             /* Read received data from FIFO */
 600:Generated_Source\PSoC4/RX.c ****             rxData = RX_RXDATA_REG;
 601:Generated_Source\PSoC4/RX.c **** 
 602:Generated_Source\PSoC4/RX.c ****             /*Check status on error*/
 603:Generated_Source\PSoC4/RX.c ****             if((rxStatus & (RX_RX_STS_BREAK | RX_RX_STS_PAR_ERROR |
 604:Generated_Source\PSoC4/RX.c ****                             RX_RX_STS_STOP_ERROR | RX_RX_STS_OVERRUN)) != 0u)
 605:Generated_Source\PSoC4/RX.c ****             {
 606:Generated_Source\PSoC4/RX.c ****                 rxData = 0u;
 607:Generated_Source\PSoC4/RX.c ****             }
 608:Generated_Source\PSoC4/RX.c ****         }
 609:Generated_Source\PSoC4/RX.c ****     #endif /* (RX_RX_INTERRUPT_ENABLED) */
 610:Generated_Source\PSoC4/RX.c **** 
 611:Generated_Source\PSoC4/RX.c ****         return(rxData);
 612:Generated_Source\PSoC4/RX.c ****     }
 542              		.loc 1 612 0
 543 0062 2000     		movs	r0, r4
 544              		@ sp needed
 545              	.LVL53:
 546 0064 10BD     		pop	{r4, pc}
 547              	.L40:
 548 0066 C046     		.align	2
 549              	.L39:
 550 0068 00000000 		.word	.LANCHOR0
 551 006c 00000000 		.word	RX_rxBuffer
 552 0070 63000F40 		.word	1074724963
 553 0074 42000F40 		.word	1074724930
 554              		.cfi_endproc
 555              	.LFE10:
 556              		.size	RX_GetChar, .-RX_GetChar
 557              		.section	.text.RX_GetByte,"ax",%progbits
 558              		.align	2
 559              		.global	RX_GetByte
 560              		.code	16
 561              		.thumb_func
 562              		.type	RX_GetByte, %function
 563              	RX_GetByte:
 564              	.LFB11:
 613:Generated_Source\PSoC4/RX.c **** 
 614:Generated_Source\PSoC4/RX.c **** 
 615:Generated_Source\PSoC4/RX.c ****     /*******************************************************************************
 616:Generated_Source\PSoC4/RX.c ****     * Function Name: RX_GetByte
 617:Generated_Source\PSoC4/RX.c ****     ********************************************************************************
 618:Generated_Source\PSoC4/RX.c ****     *
 619:Generated_Source\PSoC4/RX.c ****     * Summary:
 620:Generated_Source\PSoC4/RX.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:Generated_Source\PSoC4/RX.c ****     *  condition.
 622:Generated_Source\PSoC4/RX.c ****     *
 623:Generated_Source\PSoC4/RX.c ****     * Parameters:
 624:Generated_Source\PSoC4/RX.c ****     *  None.
 625:Generated_Source\PSoC4/RX.c ****     *
 626:Generated_Source\PSoC4/RX.c ****     * Return:
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 22


 627:Generated_Source\PSoC4/RX.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:Generated_Source\PSoC4/RX.c ****     *  an error has occurred.
 629:Generated_Source\PSoC4/RX.c ****     *
 630:Generated_Source\PSoC4/RX.c ****     * Reentrant:
 631:Generated_Source\PSoC4/RX.c ****     *  No.
 632:Generated_Source\PSoC4/RX.c ****     *
 633:Generated_Source\PSoC4/RX.c ****     *******************************************************************************/
 634:Generated_Source\PSoC4/RX.c ****     uint16 RX_GetByte(void) 
 635:Generated_Source\PSoC4/RX.c ****     {
 565              		.loc 1 635 0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 0
 568              		@ frame_needed = 0, uses_anonymous_args = 0
 569 0000 10B5     		push	{r4, lr}
 570              		.cfi_def_cfa_offset 8
 571              		.cfi_offset 4, -8
 572              		.cfi_offset 14, -4
 636:Generated_Source\PSoC4/RX.c ****         
 637:Generated_Source\PSoC4/RX.c ****     #if (RX_RX_INTERRUPT_ENABLED)
 638:Generated_Source\PSoC4/RX.c ****         uint16 locErrorStatus;
 639:Generated_Source\PSoC4/RX.c ****         /* Protect variables that could change on interrupt */
 640:Generated_Source\PSoC4/RX.c ****         RX_DisableRxInt();
 573              		.loc 1 640 0
 574 0002 0020     		movs	r0, #0
 575 0004 FFF7FEFF 		bl	CyIntDisable
 576              	.LVL54:
 641:Generated_Source\PSoC4/RX.c ****         locErrorStatus = (uint16)RX_errorStatus;
 577              		.loc 1 641 0
 578 0008 064B     		ldr	r3, .L42
 579 000a 1C78     		ldrb	r4, [r3]
 580              	.LVL55:
 642:Generated_Source\PSoC4/RX.c ****         RX_errorStatus = 0u;
 581              		.loc 1 642 0
 582 000c 0022     		movs	r2, #0
 583 000e 1A70     		strb	r2, [r3]
 643:Generated_Source\PSoC4/RX.c ****         RX_EnableRxInt();
 584              		.loc 1 643 0
 585 0010 0020     		movs	r0, #0
 586 0012 FFF7FEFF 		bl	CyIntEnable
 587              	.LVL56:
 644:Generated_Source\PSoC4/RX.c ****         return ( (uint16)(locErrorStatus << 8u) | RX_ReadRxData() );
 588              		.loc 1 644 0
 589 0016 2402     		lsls	r4, r4, #8
 590              	.LVL57:
 591 0018 FFF7FEFF 		bl	RX_ReadRxData
 592              	.LVL58:
 593 001c 2043     		orrs	r0, r4
 594 001e 80B2     		uxth	r0, r0
 645:Generated_Source\PSoC4/RX.c ****     #else
 646:Generated_Source\PSoC4/RX.c ****         return ( ((uint16)RX_ReadRxStatus() << 8u) | RX_ReadRxData() );
 647:Generated_Source\PSoC4/RX.c ****     #endif /* RX_RX_INTERRUPT_ENABLED */
 648:Generated_Source\PSoC4/RX.c ****         
 649:Generated_Source\PSoC4/RX.c ****     }
 595              		.loc 1 649 0
 596              		@ sp needed
 597 0020 10BD     		pop	{r4, pc}
 598              	.L43:
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 23


 599 0022 C046     		.align	2
 600              	.L42:
 601 0024 00000000 		.word	.LANCHOR0
 602              		.cfi_endproc
 603              	.LFE11:
 604              		.size	RX_GetByte, .-RX_GetByte
 605              		.section	.text.RX_GetRxBufferSize,"ax",%progbits
 606              		.align	2
 607              		.global	RX_GetRxBufferSize
 608              		.code	16
 609              		.thumb_func
 610              		.type	RX_GetRxBufferSize, %function
 611              	RX_GetRxBufferSize:
 612              	.LFB12:
 650:Generated_Source\PSoC4/RX.c **** 
 651:Generated_Source\PSoC4/RX.c **** 
 652:Generated_Source\PSoC4/RX.c ****     /*******************************************************************************
 653:Generated_Source\PSoC4/RX.c ****     * Function Name: RX_GetRxBufferSize
 654:Generated_Source\PSoC4/RX.c ****     ********************************************************************************
 655:Generated_Source\PSoC4/RX.c ****     *
 656:Generated_Source\PSoC4/RX.c ****     * Summary:
 657:Generated_Source\PSoC4/RX.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:Generated_Source\PSoC4/RX.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:Generated_Source\PSoC4/RX.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:Generated_Source\PSoC4/RX.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:Generated_Source\PSoC4/RX.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:Generated_Source\PSoC4/RX.c ****     *    account.
 663:Generated_Source\PSoC4/RX.c ****     *
 664:Generated_Source\PSoC4/RX.c ****     * Parameters:
 665:Generated_Source\PSoC4/RX.c ****     *  None.
 666:Generated_Source\PSoC4/RX.c ****     *
 667:Generated_Source\PSoC4/RX.c ****     * Return:
 668:Generated_Source\PSoC4/RX.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:Generated_Source\PSoC4/RX.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:Generated_Source\PSoC4/RX.c ****     *
 671:Generated_Source\PSoC4/RX.c ****     * Global Variables:
 672:Generated_Source\PSoC4/RX.c ****     *  RX_rxBufferWrite - used to calculate left bytes.
 673:Generated_Source\PSoC4/RX.c ****     *  RX_rxBufferRead - used to calculate left bytes.
 674:Generated_Source\PSoC4/RX.c ****     *  RX_rxBufferLoopDetect - checked to decide left bytes amount.
 675:Generated_Source\PSoC4/RX.c ****     *
 676:Generated_Source\PSoC4/RX.c ****     * Reentrant:
 677:Generated_Source\PSoC4/RX.c ****     *  No.
 678:Generated_Source\PSoC4/RX.c ****     *
 679:Generated_Source\PSoC4/RX.c ****     * Theory:
 680:Generated_Source\PSoC4/RX.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:Generated_Source\PSoC4/RX.c ****     *
 682:Generated_Source\PSoC4/RX.c ****     *******************************************************************************/
 683:Generated_Source\PSoC4/RX.c ****     uint8 RX_GetRxBufferSize(void)
 684:Generated_Source\PSoC4/RX.c ****                                                             
 685:Generated_Source\PSoC4/RX.c ****     {
 613              		.loc 1 685 0
 614              		.cfi_startproc
 615              		@ args = 0, pretend = 0, frame = 0
 616              		@ frame_needed = 0, uses_anonymous_args = 0
 617 0000 10B5     		push	{r4, lr}
 618              		.cfi_def_cfa_offset 8
 619              		.cfi_offset 4, -8
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 24


 620              		.cfi_offset 14, -4
 686:Generated_Source\PSoC4/RX.c ****         uint8 size;
 687:Generated_Source\PSoC4/RX.c **** 
 688:Generated_Source\PSoC4/RX.c ****     #if (RX_RX_INTERRUPT_ENABLED)
 689:Generated_Source\PSoC4/RX.c **** 
 690:Generated_Source\PSoC4/RX.c ****         /* Protect variables that could change on interrupt */
 691:Generated_Source\PSoC4/RX.c ****         RX_DisableRxInt();
 621              		.loc 1 691 0
 622 0002 0020     		movs	r0, #0
 623 0004 FFF7FEFF 		bl	CyIntDisable
 624              	.LVL59:
 692:Generated_Source\PSoC4/RX.c **** 
 693:Generated_Source\PSoC4/RX.c ****         if(RX_rxBufferRead == RX_rxBufferWrite)
 625              		.loc 1 693 0
 626 0008 134B     		ldr	r3, .L49
 627 000a 9A78     		ldrb	r2, [r3, #2]
 628 000c D2B2     		uxtb	r2, r2
 629 000e DB78     		ldrb	r3, [r3, #3]
 630 0010 DBB2     		uxtb	r3, r3
 631 0012 9A42     		cmp	r2, r3
 632 0014 05D1     		bne	.L45
 694:Generated_Source\PSoC4/RX.c ****         {
 695:Generated_Source\PSoC4/RX.c ****             if(RX_rxBufferLoopDetect != 0u)
 633              		.loc 1 695 0
 634 0016 104B     		ldr	r3, .L49
 635 0018 1B79     		ldrb	r3, [r3, #4]
 636 001a 002B     		cmp	r3, #0
 637 001c 15D0     		beq	.L48
 696:Generated_Source\PSoC4/RX.c ****             {
 697:Generated_Source\PSoC4/RX.c ****                 size = RX_RX_BUFFER_SIZE;
 638              		.loc 1 697 0
 639 001e 1024     		movs	r4, #16
 640 0020 14E0     		b	.L46
 641              	.L45:
 698:Generated_Source\PSoC4/RX.c ****             }
 699:Generated_Source\PSoC4/RX.c ****             else
 700:Generated_Source\PSoC4/RX.c ****             {
 701:Generated_Source\PSoC4/RX.c ****                 size = 0u;
 702:Generated_Source\PSoC4/RX.c ****             }
 703:Generated_Source\PSoC4/RX.c ****         }
 704:Generated_Source\PSoC4/RX.c ****         else if(RX_rxBufferRead < RX_rxBufferWrite)
 642              		.loc 1 704 0
 643 0022 0D4B     		ldr	r3, .L49
 644 0024 9A78     		ldrb	r2, [r3, #2]
 645 0026 D2B2     		uxtb	r2, r2
 646 0028 DB78     		ldrb	r3, [r3, #3]
 647 002a DBB2     		uxtb	r3, r3
 648 002c 9A42     		cmp	r2, r3
 649 002e 05D2     		bcs	.L47
 705:Generated_Source\PSoC4/RX.c ****         {
 706:Generated_Source\PSoC4/RX.c ****             size = (RX_rxBufferWrite - RX_rxBufferRead);
 650              		.loc 1 706 0
 651 0030 094A     		ldr	r2, .L49
 652 0032 D378     		ldrb	r3, [r2, #3]
 653 0034 9478     		ldrb	r4, [r2, #2]
 654 0036 1C1B     		subs	r4, r3, r4
 655 0038 E4B2     		uxtb	r4, r4
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 25


 656              	.LVL60:
 657 003a 07E0     		b	.L46
 658              	.LVL61:
 659              	.L47:
 707:Generated_Source\PSoC4/RX.c ****         }
 708:Generated_Source\PSoC4/RX.c ****         else
 709:Generated_Source\PSoC4/RX.c ****         {
 710:Generated_Source\PSoC4/RX.c ****             size = (RX_RX_BUFFER_SIZE - RX_rxBufferRead) + RX_rxBufferWrite;
 660              		.loc 1 710 0
 661 003c 064A     		ldr	r2, .L49
 662 003e D378     		ldrb	r3, [r2, #3]
 663 0040 9478     		ldrb	r4, [r2, #2]
 664 0042 1C1B     		subs	r4, r3, r4
 665 0044 1034     		adds	r4, r4, #16
 666 0046 E4B2     		uxtb	r4, r4
 667              	.LVL62:
 668 0048 00E0     		b	.L46
 669              	.LVL63:
 670              	.L48:
 701:Generated_Source\PSoC4/RX.c ****             }
 671              		.loc 1 701 0
 672 004a 0024     		movs	r4, #0
 673              	.L46:
 674              	.LVL64:
 711:Generated_Source\PSoC4/RX.c ****         }
 712:Generated_Source\PSoC4/RX.c **** 
 713:Generated_Source\PSoC4/RX.c ****         RX_EnableRxInt();
 675              		.loc 1 713 0
 676 004c 0020     		movs	r0, #0
 677 004e FFF7FEFF 		bl	CyIntEnable
 678              	.LVL65:
 714:Generated_Source\PSoC4/RX.c **** 
 715:Generated_Source\PSoC4/RX.c ****     #else
 716:Generated_Source\PSoC4/RX.c **** 
 717:Generated_Source\PSoC4/RX.c ****         /* We can only know if there is data in the fifo. */
 718:Generated_Source\PSoC4/RX.c ****         size = ((RX_RXSTATUS_REG & RX_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 719:Generated_Source\PSoC4/RX.c **** 
 720:Generated_Source\PSoC4/RX.c ****     #endif /* (RX_RX_INTERRUPT_ENABLED) */
 721:Generated_Source\PSoC4/RX.c **** 
 722:Generated_Source\PSoC4/RX.c ****         return(size);
 723:Generated_Source\PSoC4/RX.c ****     }
 679              		.loc 1 723 0
 680 0052 2000     		movs	r0, r4
 681              		@ sp needed
 682              	.LVL66:
 683 0054 10BD     		pop	{r4, pc}
 684              	.L50:
 685 0056 C046     		.align	2
 686              	.L49:
 687 0058 00000000 		.word	.LANCHOR0
 688              		.cfi_endproc
 689              	.LFE12:
 690              		.size	RX_GetRxBufferSize, .-RX_GetRxBufferSize
 691              		.section	.text.RX_ClearRxBuffer,"ax",%progbits
 692              		.align	2
 693              		.global	RX_ClearRxBuffer
 694              		.code	16
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 26


 695              		.thumb_func
 696              		.type	RX_ClearRxBuffer, %function
 697              	RX_ClearRxBuffer:
 698              	.LFB13:
 724:Generated_Source\PSoC4/RX.c **** 
 725:Generated_Source\PSoC4/RX.c **** 
 726:Generated_Source\PSoC4/RX.c ****     /*******************************************************************************
 727:Generated_Source\PSoC4/RX.c ****     * Function Name: RX_ClearRxBuffer
 728:Generated_Source\PSoC4/RX.c ****     ********************************************************************************
 729:Generated_Source\PSoC4/RX.c ****     *
 730:Generated_Source\PSoC4/RX.c ****     * Summary:
 731:Generated_Source\PSoC4/RX.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:Generated_Source\PSoC4/RX.c ****     *
 733:Generated_Source\PSoC4/RX.c ****     * Parameters:
 734:Generated_Source\PSoC4/RX.c ****     *  None.
 735:Generated_Source\PSoC4/RX.c ****     *
 736:Generated_Source\PSoC4/RX.c ****     * Return:
 737:Generated_Source\PSoC4/RX.c ****     *  None.
 738:Generated_Source\PSoC4/RX.c ****     *
 739:Generated_Source\PSoC4/RX.c ****     * Global Variables:
 740:Generated_Source\PSoC4/RX.c ****     *  RX_rxBufferWrite - cleared to zero.
 741:Generated_Source\PSoC4/RX.c ****     *  RX_rxBufferRead - cleared to zero.
 742:Generated_Source\PSoC4/RX.c ****     *  RX_rxBufferLoopDetect - cleared to zero.
 743:Generated_Source\PSoC4/RX.c ****     *  RX_rxBufferOverflow - cleared to zero.
 744:Generated_Source\PSoC4/RX.c ****     *
 745:Generated_Source\PSoC4/RX.c ****     * Reentrant:
 746:Generated_Source\PSoC4/RX.c ****     *  No.
 747:Generated_Source\PSoC4/RX.c ****     *
 748:Generated_Source\PSoC4/RX.c ****     * Theory:
 749:Generated_Source\PSoC4/RX.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:Generated_Source\PSoC4/RX.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:Generated_Source\PSoC4/RX.c ****     *  have remained in the RAM.
 752:Generated_Source\PSoC4/RX.c ****     *
 753:Generated_Source\PSoC4/RX.c ****     * Side Effects:
 754:Generated_Source\PSoC4/RX.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:Generated_Source\PSoC4/RX.c ****     *
 756:Generated_Source\PSoC4/RX.c ****     *******************************************************************************/
 757:Generated_Source\PSoC4/RX.c ****     void RX_ClearRxBuffer(void) 
 758:Generated_Source\PSoC4/RX.c ****     {
 699              		.loc 1 758 0
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 0
 702              		@ frame_needed = 0, uses_anonymous_args = 0
 703 0000 10B5     		push	{r4, lr}
 704              		.cfi_def_cfa_offset 8
 705              		.cfi_offset 4, -8
 706              		.cfi_offset 14, -4
 759:Generated_Source\PSoC4/RX.c ****         uint8 enableInterrupts;
 760:Generated_Source\PSoC4/RX.c **** 
 761:Generated_Source\PSoC4/RX.c ****         /* Clear the HW FIFO */
 762:Generated_Source\PSoC4/RX.c ****         enableInterrupts = CyEnterCriticalSection();
 707              		.loc 1 762 0
 708 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 709              	.LVL67:
 763:Generated_Source\PSoC4/RX.c ****         RX_RXDATA_AUX_CTL_REG |= (uint8)  RX_RX_FIFO_CLR;
 710              		.loc 1 763 0
 711 0006 0C4A     		ldr	r2, .L52
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 27


 712 0008 1178     		ldrb	r1, [r2]
 713 000a 0123     		movs	r3, #1
 714 000c 0B43     		orrs	r3, r1
 715 000e DBB2     		uxtb	r3, r3
 716 0010 1370     		strb	r3, [r2]
 764:Generated_Source\PSoC4/RX.c ****         RX_RXDATA_AUX_CTL_REG &= (uint8) ~RX_RX_FIFO_CLR;
 717              		.loc 1 764 0
 718 0012 1378     		ldrb	r3, [r2]
 719 0014 0121     		movs	r1, #1
 720 0016 8B43     		bics	r3, r1
 721 0018 1370     		strb	r3, [r2]
 765:Generated_Source\PSoC4/RX.c ****         CyExitCriticalSection(enableInterrupts);
 722              		.loc 1 765 0
 723 001a FFF7FEFF 		bl	CyExitCriticalSection
 724              	.LVL68:
 766:Generated_Source\PSoC4/RX.c **** 
 767:Generated_Source\PSoC4/RX.c ****     #if (RX_RX_INTERRUPT_ENABLED)
 768:Generated_Source\PSoC4/RX.c **** 
 769:Generated_Source\PSoC4/RX.c ****         /* Protect variables that could change on interrupt. */
 770:Generated_Source\PSoC4/RX.c ****         RX_DisableRxInt();
 725              		.loc 1 770 0
 726 001e 0020     		movs	r0, #0
 727 0020 FFF7FEFF 		bl	CyIntDisable
 728              	.LVL69:
 771:Generated_Source\PSoC4/RX.c **** 
 772:Generated_Source\PSoC4/RX.c ****         RX_rxBufferRead = 0u;
 729              		.loc 1 772 0
 730 0024 054B     		ldr	r3, .L52+4
 731 0026 0022     		movs	r2, #0
 732 0028 9A70     		strb	r2, [r3, #2]
 773:Generated_Source\PSoC4/RX.c ****         RX_rxBufferWrite = 0u;
 733              		.loc 1 773 0
 734 002a DA70     		strb	r2, [r3, #3]
 774:Generated_Source\PSoC4/RX.c ****         RX_rxBufferLoopDetect = 0u;
 735              		.loc 1 774 0
 736 002c 1A71     		strb	r2, [r3, #4]
 775:Generated_Source\PSoC4/RX.c ****         RX_rxBufferOverflow = 0u;
 737              		.loc 1 775 0
 738 002e 5A71     		strb	r2, [r3, #5]
 776:Generated_Source\PSoC4/RX.c **** 
 777:Generated_Source\PSoC4/RX.c ****         RX_EnableRxInt();
 739              		.loc 1 777 0
 740 0030 0020     		movs	r0, #0
 741 0032 FFF7FEFF 		bl	CyIntEnable
 742              	.LVL70:
 778:Generated_Source\PSoC4/RX.c **** 
 779:Generated_Source\PSoC4/RX.c ****     #endif /* (RX_RX_INTERRUPT_ENABLED) */
 780:Generated_Source\PSoC4/RX.c **** 
 781:Generated_Source\PSoC4/RX.c ****     }
 743              		.loc 1 781 0
 744              		@ sp needed
 745 0036 10BD     		pop	{r4, pc}
 746              	.L53:
 747              		.align	2
 748              	.L52:
 749 0038 92000F40 		.word	1074725010
 750 003c 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 28


 751              		.cfi_endproc
 752              	.LFE13:
 753              		.size	RX_ClearRxBuffer, .-RX_ClearRxBuffer
 754              		.section	.text.RX_SetRxAddressMode,"ax",%progbits
 755              		.align	2
 756              		.global	RX_SetRxAddressMode
 757              		.code	16
 758              		.thumb_func
 759              		.type	RX_SetRxAddressMode, %function
 760              	RX_SetRxAddressMode:
 761              	.LFB14:
 782:Generated_Source\PSoC4/RX.c **** 
 783:Generated_Source\PSoC4/RX.c **** 
 784:Generated_Source\PSoC4/RX.c ****     /*******************************************************************************
 785:Generated_Source\PSoC4/RX.c ****     * Function Name: RX_SetRxAddressMode
 786:Generated_Source\PSoC4/RX.c ****     ********************************************************************************
 787:Generated_Source\PSoC4/RX.c ****     *
 788:Generated_Source\PSoC4/RX.c ****     * Summary:
 789:Generated_Source\PSoC4/RX.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:Generated_Source\PSoC4/RX.c ****     *  UART.
 791:Generated_Source\PSoC4/RX.c ****     *
 792:Generated_Source\PSoC4/RX.c ****     * Parameters:
 793:Generated_Source\PSoC4/RX.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:Generated_Source\PSoC4/RX.c ****     *  RX__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:Generated_Source\PSoC4/RX.c ****     *                                               detection
 796:Generated_Source\PSoC4/RX.c ****     *  RX__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:Generated_Source\PSoC4/RX.c ****     *                                               address detection
 798:Generated_Source\PSoC4/RX.c ****     *  RX__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:Generated_Source\PSoC4/RX.c ****     *                                               detection
 800:Generated_Source\PSoC4/RX.c ****     *  RX__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:Generated_Source\PSoC4/RX.c ****     *                                               address detection
 802:Generated_Source\PSoC4/RX.c ****     *  RX__B_UART__AM_NONE - No address detection
 803:Generated_Source\PSoC4/RX.c ****     *
 804:Generated_Source\PSoC4/RX.c ****     * Return:
 805:Generated_Source\PSoC4/RX.c ****     *  None.
 806:Generated_Source\PSoC4/RX.c ****     *
 807:Generated_Source\PSoC4/RX.c ****     * Global Variables:
 808:Generated_Source\PSoC4/RX.c ****     *  RX_rxAddressMode - the parameter stored in this variable for
 809:Generated_Source\PSoC4/RX.c ****     *   the farther usage in RX ISR.
 810:Generated_Source\PSoC4/RX.c ****     *  RX_rxAddressDetected - set to initial state (0).
 811:Generated_Source\PSoC4/RX.c ****     *
 812:Generated_Source\PSoC4/RX.c ****     *******************************************************************************/
 813:Generated_Source\PSoC4/RX.c ****     void RX_SetRxAddressMode(uint8 addressMode)
 814:Generated_Source\PSoC4/RX.c ****                                                         
 815:Generated_Source\PSoC4/RX.c ****     {
 762              		.loc 1 815 0
 763              		.cfi_startproc
 764              		@ args = 0, pretend = 0, frame = 0
 765              		@ frame_needed = 0, uses_anonymous_args = 0
 766              		@ link register save eliminated.
 767              	.LVL71:
 816:Generated_Source\PSoC4/RX.c ****         #if(RX_RXHW_ADDRESS_ENABLED)
 817:Generated_Source\PSoC4/RX.c ****             #if(RX_CONTROL_REG_REMOVED)
 818:Generated_Source\PSoC4/RX.c ****                 if(0u != addressMode)
 819:Generated_Source\PSoC4/RX.c ****                 {
 820:Generated_Source\PSoC4/RX.c ****                     /* Suppress compiler warning */
 821:Generated_Source\PSoC4/RX.c ****                 }
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 29


 822:Generated_Source\PSoC4/RX.c ****             #else /* RX_CONTROL_REG_REMOVED */
 823:Generated_Source\PSoC4/RX.c ****                 uint8 tmpCtrl;
 824:Generated_Source\PSoC4/RX.c ****                 tmpCtrl = RX_CONTROL_REG & (uint8)~RX_CTRL_RXADDR_MODE_MASK;
 825:Generated_Source\PSoC4/RX.c ****                 tmpCtrl |= (uint8)(addressMode << RX_CTRL_RXADDR_MODE0_SHIFT);
 826:Generated_Source\PSoC4/RX.c ****                 RX_CONTROL_REG = tmpCtrl;
 827:Generated_Source\PSoC4/RX.c **** 
 828:Generated_Source\PSoC4/RX.c ****                 #if(RX_RX_INTERRUPT_ENABLED && \
 829:Generated_Source\PSoC4/RX.c ****                    (RX_RXBUFFERSIZE > RX_FIFO_LENGTH) )
 830:Generated_Source\PSoC4/RX.c ****                     RX_rxAddressMode = addressMode;
 831:Generated_Source\PSoC4/RX.c ****                     RX_rxAddressDetected = 0u;
 832:Generated_Source\PSoC4/RX.c ****                 #endif /* End RX_RXBUFFERSIZE > RX_FIFO_LENGTH*/
 833:Generated_Source\PSoC4/RX.c ****             #endif /* End RX_CONTROL_REG_REMOVED */
 834:Generated_Source\PSoC4/RX.c ****         #else /* RX_RXHW_ADDRESS_ENABLED */
 835:Generated_Source\PSoC4/RX.c ****             if(0u != addressMode)
 836:Generated_Source\PSoC4/RX.c ****             {
 837:Generated_Source\PSoC4/RX.c ****                 /* Suppress compiler warning */
 838:Generated_Source\PSoC4/RX.c ****             }
 839:Generated_Source\PSoC4/RX.c ****         #endif /* End RX_RXHW_ADDRESS_ENABLED */
 840:Generated_Source\PSoC4/RX.c ****     }
 768              		.loc 1 840 0
 769              		@ sp needed
 770 0000 7047     		bx	lr
 771              		.cfi_endproc
 772              	.LFE14:
 773              		.size	RX_SetRxAddressMode, .-RX_SetRxAddressMode
 774 0002 C046     		.section	.text.RX_SetRxAddress1,"ax",%progbits
 775              		.align	2
 776              		.global	RX_SetRxAddress1
 777              		.code	16
 778              		.thumb_func
 779              		.type	RX_SetRxAddress1, %function
 780              	RX_SetRxAddress1:
 781              	.LFB15:
 841:Generated_Source\PSoC4/RX.c **** 
 842:Generated_Source\PSoC4/RX.c **** 
 843:Generated_Source\PSoC4/RX.c ****     /*******************************************************************************
 844:Generated_Source\PSoC4/RX.c ****     * Function Name: RX_SetRxAddress1
 845:Generated_Source\PSoC4/RX.c ****     ********************************************************************************
 846:Generated_Source\PSoC4/RX.c ****     *
 847:Generated_Source\PSoC4/RX.c ****     * Summary:
 848:Generated_Source\PSoC4/RX.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:Generated_Source\PSoC4/RX.c ****     *
 850:Generated_Source\PSoC4/RX.c ****     * Parameters:
 851:Generated_Source\PSoC4/RX.c ****     *  address: Address #1 for hardware address detection.
 852:Generated_Source\PSoC4/RX.c ****     *
 853:Generated_Source\PSoC4/RX.c ****     * Return:
 854:Generated_Source\PSoC4/RX.c ****     *  None.
 855:Generated_Source\PSoC4/RX.c ****     *
 856:Generated_Source\PSoC4/RX.c ****     *******************************************************************************/
 857:Generated_Source\PSoC4/RX.c ****     void RX_SetRxAddress1(uint8 address) 
 858:Generated_Source\PSoC4/RX.c ****     {
 782              		.loc 1 858 0
 783              		.cfi_startproc
 784              		@ args = 0, pretend = 0, frame = 0
 785              		@ frame_needed = 0, uses_anonymous_args = 0
 786              		@ link register save eliminated.
 787              	.LVL72:
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 30


 859:Generated_Source\PSoC4/RX.c ****         RX_RXADDRESS1_REG = address;
 788              		.loc 1 859 0
 789 0000 014B     		ldr	r3, .L56
 790 0002 1870     		strb	r0, [r3]
 860:Generated_Source\PSoC4/RX.c ****     }
 791              		.loc 1 860 0
 792              		@ sp needed
 793 0004 7047     		bx	lr
 794              	.L57:
 795 0006 C046     		.align	2
 796              	.L56:
 797 0008 22000F40 		.word	1074724898
 798              		.cfi_endproc
 799              	.LFE15:
 800              		.size	RX_SetRxAddress1, .-RX_SetRxAddress1
 801              		.section	.text.RX_SetRxAddress2,"ax",%progbits
 802              		.align	2
 803              		.global	RX_SetRxAddress2
 804              		.code	16
 805              		.thumb_func
 806              		.type	RX_SetRxAddress2, %function
 807              	RX_SetRxAddress2:
 808              	.LFB16:
 861:Generated_Source\PSoC4/RX.c **** 
 862:Generated_Source\PSoC4/RX.c **** 
 863:Generated_Source\PSoC4/RX.c ****     /*******************************************************************************
 864:Generated_Source\PSoC4/RX.c ****     * Function Name: RX_SetRxAddress2
 865:Generated_Source\PSoC4/RX.c ****     ********************************************************************************
 866:Generated_Source\PSoC4/RX.c ****     *
 867:Generated_Source\PSoC4/RX.c ****     * Summary:
 868:Generated_Source\PSoC4/RX.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:Generated_Source\PSoC4/RX.c ****     *
 870:Generated_Source\PSoC4/RX.c ****     * Parameters:
 871:Generated_Source\PSoC4/RX.c ****     *  address: Address #2 for hardware address detection.
 872:Generated_Source\PSoC4/RX.c ****     *
 873:Generated_Source\PSoC4/RX.c ****     * Return:
 874:Generated_Source\PSoC4/RX.c ****     *  None.
 875:Generated_Source\PSoC4/RX.c ****     *
 876:Generated_Source\PSoC4/RX.c ****     *******************************************************************************/
 877:Generated_Source\PSoC4/RX.c ****     void RX_SetRxAddress2(uint8 address) 
 878:Generated_Source\PSoC4/RX.c ****     {
 809              		.loc 1 878 0
 810              		.cfi_startproc
 811              		@ args = 0, pretend = 0, frame = 0
 812              		@ frame_needed = 0, uses_anonymous_args = 0
 813              		@ link register save eliminated.
 814              	.LVL73:
 879:Generated_Source\PSoC4/RX.c ****         RX_RXADDRESS2_REG = address;
 815              		.loc 1 879 0
 816 0000 014B     		ldr	r3, .L59
 817 0002 1870     		strb	r0, [r3]
 880:Generated_Source\PSoC4/RX.c ****     }
 818              		.loc 1 880 0
 819              		@ sp needed
 820 0004 7047     		bx	lr
 821              	.L60:
 822 0006 C046     		.align	2
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 31


 823              	.L59:
 824 0008 32000F40 		.word	1074724914
 825              		.cfi_endproc
 826              	.LFE16:
 827              		.size	RX_SetRxAddress2, .-RX_SetRxAddress2
 828              		.global	RX_rxBufferOverflow
 829              		.global	RX_rxBufferLoopDetect
 830              		.global	RX_rxBufferWrite
 831              		.global	RX_rxBufferRead
 832              		.comm	RX_rxBuffer,16,4
 833              		.global	RX_errorStatus
 834              		.global	RX_initVar
 835              		.bss
 836              		.set	.LANCHOR0,. + 0
 837              		.type	RX_errorStatus, %object
 838              		.size	RX_errorStatus, 1
 839              	RX_errorStatus:
 840 0000 00       		.space	1
 841              		.type	RX_initVar, %object
 842              		.size	RX_initVar, 1
 843              	RX_initVar:
 844 0001 00       		.space	1
 845              		.type	RX_rxBufferRead, %object
 846              		.size	RX_rxBufferRead, 1
 847              	RX_rxBufferRead:
 848 0002 00       		.space	1
 849              		.type	RX_rxBufferWrite, %object
 850              		.size	RX_rxBufferWrite, 1
 851              	RX_rxBufferWrite:
 852 0003 00       		.space	1
 853              		.type	RX_rxBufferLoopDetect, %object
 854              		.size	RX_rxBufferLoopDetect, 1
 855              	RX_rxBufferLoopDetect:
 856 0004 00       		.space	1
 857              		.type	RX_rxBufferOverflow, %object
 858              		.size	RX_rxBufferOverflow, 1
 859              	RX_rxBufferOverflow:
 860 0005 00       		.space	1
 861              		.text
 862              	.Letext0:
 863              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 864              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 865              		.file 4 "Generated_Source\\PSoC4\\RX_IntClock.h"
 866              		.section	.debug_info,"",%progbits
 867              	.Ldebug_info0:
 868 0000 A2050000 		.4byte	0x5a2
 869 0004 0400     		.2byte	0x4
 870 0006 00000000 		.4byte	.Ldebug_abbrev0
 871 000a 04       		.byte	0x4
 872 000b 01       		.uleb128 0x1
 873 000c 9F000000 		.4byte	.LASF59
 874 0010 0C       		.byte	0xc
 875 0011 76030000 		.4byte	.LASF60
 876 0015 1D000000 		.4byte	.LASF61
 877 0019 00000000 		.4byte	.Ldebug_ranges0+0
 878 001d 00000000 		.4byte	0
 879 0021 00000000 		.4byte	.Ldebug_line0
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 32


 880 0025 02       		.uleb128 0x2
 881 0026 01       		.byte	0x1
 882 0027 06       		.byte	0x6
 883 0028 68010000 		.4byte	.LASF0
 884 002c 02       		.uleb128 0x2
 885 002d 01       		.byte	0x1
 886 002e 08       		.byte	0x8
 887 002f 3B030000 		.4byte	.LASF1
 888 0033 02       		.uleb128 0x2
 889 0034 02       		.byte	0x2
 890 0035 05       		.byte	0x5
 891 0036 49030000 		.4byte	.LASF2
 892 003a 02       		.uleb128 0x2
 893 003b 02       		.byte	0x2
 894 003c 07       		.byte	0x7
 895 003d 57020000 		.4byte	.LASF3
 896 0041 02       		.uleb128 0x2
 897 0042 04       		.byte	0x4
 898 0043 05       		.byte	0x5
 899 0044 87010000 		.4byte	.LASF4
 900 0048 02       		.uleb128 0x2
 901 0049 04       		.byte	0x4
 902 004a 07       		.byte	0x7
 903 004b F5010000 		.4byte	.LASF5
 904 004f 02       		.uleb128 0x2
 905 0050 08       		.byte	0x8
 906 0051 05       		.byte	0x5
 907 0052 5A010000 		.4byte	.LASF6
 908 0056 02       		.uleb128 0x2
 909 0057 08       		.byte	0x8
 910 0058 07       		.byte	0x7
 911 0059 2D010000 		.4byte	.LASF7
 912 005d 03       		.uleb128 0x3
 913 005e 04       		.byte	0x4
 914 005f 05       		.byte	0x5
 915 0060 696E7400 		.ascii	"int\000"
 916 0064 02       		.uleb128 0x2
 917 0065 04       		.byte	0x4
 918 0066 07       		.byte	0x7
 919 0067 D9010000 		.4byte	.LASF8
 920 006b 04       		.uleb128 0x4
 921 006c 9D010000 		.4byte	.LASF9
 922 0070 02       		.byte	0x2
 923 0071 9801     		.2byte	0x198
 924 0073 2C000000 		.4byte	0x2c
 925 0077 04       		.uleb128 0x4
 926 0078 00000000 		.4byte	.LASF10
 927 007c 02       		.byte	0x2
 928 007d 9901     		.2byte	0x199
 929 007f 3A000000 		.4byte	0x3a
 930 0083 02       		.uleb128 0x2
 931 0084 04       		.byte	0x4
 932 0085 04       		.byte	0x4
 933 0086 30030000 		.4byte	.LASF11
 934 008a 02       		.uleb128 0x2
 935 008b 08       		.byte	0x8
 936 008c 04       		.byte	0x4
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 33


 937 008d AE010000 		.4byte	.LASF12
 938 0091 02       		.uleb128 0x2
 939 0092 01       		.byte	0x1
 940 0093 08       		.byte	0x8
 941 0094 92030000 		.4byte	.LASF13
 942 0098 04       		.uleb128 0x4
 943 0099 36030000 		.4byte	.LASF14
 944 009d 02       		.byte	0x2
 945 009e 4202     		.2byte	0x242
 946 00a0 A4000000 		.4byte	0xa4
 947 00a4 05       		.uleb128 0x5
 948 00a5 6B000000 		.4byte	0x6b
 949 00a9 02       		.uleb128 0x2
 950 00aa 08       		.byte	0x8
 951 00ab 04       		.byte	0x4
 952 00ac B2020000 		.4byte	.LASF15
 953 00b0 02       		.uleb128 0x2
 954 00b1 04       		.byte	0x4
 955 00b2 07       		.byte	0x7
 956 00b3 A9020000 		.4byte	.LASF16
 957 00b7 06       		.uleb128 0x6
 958 00b8 FD020000 		.4byte	.LASF17
 959 00bc 01       		.byte	0x1
 960 00bd 6A       		.byte	0x6a
 961 00be 00000000 		.4byte	.LFB2
 962 00c2 38000000 		.4byte	.LFE2-.LFB2
 963 00c6 01       		.uleb128 0x1
 964 00c7 9C       		.byte	0x9c
 965 00c8 F4000000 		.4byte	0xf4
 966 00cc 07       		.uleb128 0x7
 967 00cd 0A000000 		.4byte	.LVL0
 968 00d1 4D050000 		.4byte	0x54d
 969 00d5 DF000000 		.4byte	0xdf
 970 00d9 08       		.uleb128 0x8
 971 00da 01       		.uleb128 0x1
 972 00db 50       		.byte	0x50
 973 00dc 01       		.uleb128 0x1
 974 00dd 30       		.byte	0x30
 975 00de 00       		.byte	0
 976 00df 09       		.uleb128 0x9
 977 00e0 12000000 		.4byte	.LVL1
 978 00e4 58050000 		.4byte	0x558
 979 00e8 08       		.uleb128 0x8
 980 00e9 01       		.uleb128 0x1
 981 00ea 50       		.byte	0x50
 982 00eb 01       		.uleb128 0x1
 983 00ec 30       		.byte	0x30
 984 00ed 08       		.uleb128 0x8
 985 00ee 01       		.uleb128 0x1
 986 00ef 51       		.byte	0x51
 987 00f0 01       		.uleb128 0x1
 988 00f1 33       		.byte	0x33
 989 00f2 00       		.byte	0
 990 00f3 00       		.byte	0
 991 00f4 06       		.uleb128 0x6
 992 00f5 97030000 		.4byte	.LASF18
 993 00f9 01       		.byte	0x1
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 34


 994 00fa B7       		.byte	0xb7
 995 00fb 00000000 		.4byte	.LFB3
 996 00ff 3C000000 		.4byte	.LFE3-.LFB3
 997 0103 01       		.uleb128 0x1
 998 0104 9C       		.byte	0x9c
 999 0105 59010000 		.4byte	0x159
 1000 0109 0A       		.uleb128 0xa
 1001 010a C9030000 		.4byte	.LASF21
 1002 010e 01       		.byte	0x1
 1003 010f B9       		.byte	0xb9
 1004 0110 6B000000 		.4byte	0x6b
 1005 0114 00000000 		.4byte	.LLST0
 1006 0118 0B       		.uleb128 0xb
 1007 0119 06000000 		.4byte	.LVL2
 1008 011d 63050000 		.4byte	0x563
 1009 0121 07       		.uleb128 0x7
 1010 0122 26000000 		.4byte	.LVL4
 1011 0126 6E050000 		.4byte	0x56e
 1012 012a 34010000 		.4byte	0x134
 1013 012e 08       		.uleb128 0x8
 1014 012f 01       		.uleb128 0x1
 1015 0130 50       		.byte	0x50
 1016 0131 01       		.uleb128 0x1
 1017 0132 30       		.byte	0x30
 1018 0133 00       		.byte	0
 1019 0134 07       		.uleb128 0x7
 1020 0135 2C000000 		.4byte	.LVL5
 1021 0139 79050000 		.4byte	0x579
 1022 013d 48010000 		.4byte	0x148
 1023 0141 08       		.uleb128 0x8
 1024 0142 01       		.uleb128 0x1
 1025 0143 50       		.byte	0x50
 1026 0144 02       		.uleb128 0x2
 1027 0145 08       		.byte	0x8
 1028 0146 FF       		.byte	0xff
 1029 0147 00       		.byte	0
 1030 0148 09       		.uleb128 0x9
 1031 0149 32000000 		.4byte	.LVL6
 1032 014d 84050000 		.4byte	0x584
 1033 0151 08       		.uleb128 0x8
 1034 0152 01       		.uleb128 0x1
 1035 0153 50       		.byte	0x50
 1036 0154 02       		.uleb128 0x2
 1037 0155 74       		.byte	0x74
 1038 0156 00       		.sleb128 0
 1039 0157 00       		.byte	0
 1040 0158 00       		.byte	0
 1041 0159 06       		.uleb128 0x6
 1042 015a D2020000 		.4byte	.LASF19
 1043 015e 01       		.byte	0x1
 1044 015f 4C       		.byte	0x4c
 1045 0160 00000000 		.4byte	.LFB1
 1046 0164 20000000 		.4byte	.LFE1-.LFB1
 1047 0168 01       		.uleb128 0x1
 1048 0169 9C       		.byte	0x9c
 1049 016a 81010000 		.4byte	0x181
 1050 016e 0B       		.uleb128 0xb
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 35


 1051 016f 0E000000 		.4byte	.LVL8
 1052 0173 B7000000 		.4byte	0xb7
 1053 0177 0B       		.uleb128 0xb
 1054 0178 18000000 		.4byte	.LVL9
 1055 017c F4000000 		.4byte	0xf4
 1056 0180 00       		.byte	0
 1057 0181 06       		.uleb128 0x6
 1058 0182 74010000 		.4byte	.LASF20
 1059 0186 01       		.byte	0x1
 1060 0187 F0       		.byte	0xf0
 1061 0188 00000000 		.4byte	.LFB4
 1062 018c 38000000 		.4byte	.LFE4-.LFB4
 1063 0190 01       		.uleb128 0x1
 1064 0191 9C       		.byte	0x9c
 1065 0192 DB010000 		.4byte	0x1db
 1066 0196 0A       		.uleb128 0xa
 1067 0197 C9030000 		.4byte	.LASF21
 1068 019b 01       		.byte	0x1
 1069 019c F2       		.byte	0xf2
 1070 019d 6B000000 		.4byte	0x6b
 1071 01a1 13000000 		.4byte	.LLST1
 1072 01a5 0B       		.uleb128 0xb
 1073 01a6 06000000 		.4byte	.LVL10
 1074 01aa 63050000 		.4byte	0x563
 1075 01ae 0B       		.uleb128 0xb
 1076 01af 16000000 		.4byte	.LVL12
 1077 01b3 8F050000 		.4byte	0x58f
 1078 01b7 07       		.uleb128 0x7
 1079 01b8 26000000 		.4byte	.LVL13
 1080 01bc 9A050000 		.4byte	0x59a
 1081 01c0 CA010000 		.4byte	0x1ca
 1082 01c4 08       		.uleb128 0x8
 1083 01c5 01       		.uleb128 0x1
 1084 01c6 50       		.byte	0x50
 1085 01c7 01       		.uleb128 0x1
 1086 01c8 30       		.byte	0x30
 1087 01c9 00       		.byte	0
 1088 01ca 09       		.uleb128 0x9
 1089 01cb 2C000000 		.4byte	.LVL14
 1090 01cf 84050000 		.4byte	0x584
 1091 01d3 08       		.uleb128 0x8
 1092 01d4 01       		.uleb128 0x1
 1093 01d5 50       		.byte	0x50
 1094 01d6 02       		.uleb128 0x2
 1095 01d7 74       		.byte	0x74
 1096 01d8 00       		.sleb128 0
 1097 01d9 00       		.byte	0
 1098 01da 00       		.byte	0
 1099 01db 0C       		.uleb128 0xc
 1100 01dc 07020000 		.4byte	.LASF62
 1101 01e0 01       		.byte	0x1
 1102 01e1 2701     		.2byte	0x127
 1103 01e3 6B000000 		.4byte	0x6b
 1104 01e7 00000000 		.4byte	.LFB5
 1105 01eb 04000000 		.4byte	.LFE5-.LFB5
 1106 01ef 01       		.uleb128 0x1
 1107 01f0 9C       		.byte	0x9c
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 36


 1108 01f1 0D       		.uleb128 0xd
 1109 01f2 A1030000 		.4byte	.LASF22
 1110 01f6 01       		.byte	0x1
 1111 01f7 3F01     		.2byte	0x13f
 1112 01f9 00000000 		.4byte	.LFB6
 1113 01fd 02000000 		.4byte	.LFE6-.LFB6
 1114 0201 01       		.uleb128 0x1
 1115 0202 9C       		.byte	0x9c
 1116 0203 16020000 		.4byte	0x216
 1117 0207 0E       		.uleb128 0xe
 1118 0208 D1010000 		.4byte	.LASF24
 1119 020c 01       		.byte	0x1
 1120 020d 3F01     		.2byte	0x13f
 1121 020f 6B000000 		.4byte	0x6b
 1122 0213 01       		.uleb128 0x1
 1123 0214 50       		.byte	0x50
 1124 0215 00       		.byte	0
 1125 0216 0D       		.uleb128 0xd
 1126 0217 93020000 		.4byte	.LASF23
 1127 021b 01       		.byte	0x1
 1128 021c 6701     		.2byte	0x167
 1129 021e 00000000 		.4byte	.LFB7
 1130 0222 0C000000 		.4byte	.LFE7-.LFB7
 1131 0226 01       		.uleb128 0x1
 1132 0227 9C       		.byte	0x9c
 1133 0228 3B020000 		.4byte	0x23b
 1134 022c 0E       		.uleb128 0xe
 1135 022d 8C020000 		.4byte	.LASF25
 1136 0231 01       		.byte	0x1
 1137 0232 6701     		.2byte	0x167
 1138 0234 6B000000 		.4byte	0x6b
 1139 0238 01       		.uleb128 0x1
 1140 0239 50       		.byte	0x50
 1141 023a 00       		.byte	0
 1142 023b 0F       		.uleb128 0xf
 1143 023c DB020000 		.4byte	.LASF29
 1144 0240 01       		.byte	0x1
 1145 0241 8801     		.2byte	0x188
 1146 0243 6B000000 		.4byte	0x6b
 1147 0247 00000000 		.4byte	.LFB8
 1148 024b 5C000000 		.4byte	.LFE8-.LFB8
 1149 024f 01       		.uleb128 0x1
 1150 0250 9C       		.byte	0x9c
 1151 0251 A8020000 		.4byte	0x2a8
 1152 0255 10       		.uleb128 0x10
 1153 0256 6F030000 		.4byte	.LASF26
 1154 025a 01       		.byte	0x1
 1155 025b 8A01     		.2byte	0x18a
 1156 025d 6B000000 		.4byte	0x6b
 1157 0261 26000000 		.4byte	.LLST2
 1158 0265 10       		.uleb128 0x10
 1159 0266 B9030000 		.4byte	.LASF27
 1160 026a 01       		.byte	0x1
 1161 026b 8E01     		.2byte	0x18e
 1162 026d 6B000000 		.4byte	0x6b
 1163 0271 44000000 		.4byte	.LLST3
 1164 0275 10       		.uleb128 0x10
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 37


 1165 0276 05030000 		.4byte	.LASF28
 1166 027a 01       		.byte	0x1
 1167 027b 8F01     		.2byte	0x18f
 1168 027d 6B000000 		.4byte	0x6b
 1169 0281 89000000 		.4byte	.LLST4
 1170 0285 07       		.uleb128 0x7
 1171 0286 08000000 		.4byte	.LVL18
 1172 028a 9A050000 		.4byte	0x59a
 1173 028e 98020000 		.4byte	0x298
 1174 0292 08       		.uleb128 0x8
 1175 0293 01       		.uleb128 0x1
 1176 0294 50       		.byte	0x50
 1177 0295 01       		.uleb128 0x1
 1178 0296 30       		.byte	0x30
 1179 0297 00       		.byte	0
 1180 0298 09       		.uleb128 0x9
 1181 0299 4A000000 		.4byte	.LVL30
 1182 029d 6E050000 		.4byte	0x56e
 1183 02a1 08       		.uleb128 0x8
 1184 02a2 01       		.uleb128 0x1
 1185 02a3 50       		.byte	0x50
 1186 02a4 01       		.uleb128 0x1
 1187 02a5 30       		.byte	0x30
 1188 02a6 00       		.byte	0
 1189 02a7 00       		.byte	0
 1190 02a8 0F       		.uleb128 0xf
 1191 02a9 C1010000 		.4byte	.LASF30
 1192 02ad 01       		.byte	0x1
 1193 02ae E501     		.2byte	0x1e5
 1194 02b0 6B000000 		.4byte	0x6b
 1195 02b4 00000000 		.4byte	.LFB9
 1196 02b8 28000000 		.4byte	.LFE9-.LFB9
 1197 02bc 01       		.uleb128 0x1
 1198 02bd 9C       		.byte	0x9c
 1199 02be D3020000 		.4byte	0x2d3
 1200 02c2 10       		.uleb128 0x10
 1201 02c3 DA030000 		.4byte	.LASF31
 1202 02c7 01       		.byte	0x1
 1203 02c8 E701     		.2byte	0x1e7
 1204 02ca 6B000000 		.4byte	0x6b
 1205 02ce 9C000000 		.4byte	.LLST5
 1206 02d2 00       		.byte	0
 1207 02d3 0F       		.uleb128 0xf
 1208 02d4 7C010000 		.4byte	.LASF32
 1209 02d8 01       		.byte	0x1
 1210 02d9 1402     		.2byte	0x214
 1211 02db 6B000000 		.4byte	0x6b
 1212 02df 00000000 		.4byte	.LFB10
 1213 02e3 78000000 		.4byte	.LFE10-.LFB10
 1214 02e7 01       		.uleb128 0x1
 1215 02e8 9C       		.byte	0x9c
 1216 02e9 50030000 		.4byte	0x350
 1217 02ed 10       		.uleb128 0x10
 1218 02ee 6F030000 		.4byte	.LASF26
 1219 02f2 01       		.byte	0x1
 1220 02f3 1602     		.2byte	0x216
 1221 02f5 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 38


 1222 02f9 BA000000 		.4byte	.LLST6
 1223 02fd 10       		.uleb128 0x10
 1224 02fe 16030000 		.4byte	.LASF33
 1225 0302 01       		.byte	0x1
 1226 0303 1702     		.2byte	0x217
 1227 0305 6B000000 		.4byte	0x6b
 1228 0309 07010000 		.4byte	.LLST7
 1229 030d 10       		.uleb128 0x10
 1230 030e B9030000 		.4byte	.LASF27
 1231 0312 01       		.byte	0x1
 1232 0313 1A02     		.2byte	0x21a
 1233 0315 6B000000 		.4byte	0x6b
 1234 0319 1A010000 		.4byte	.LLST8
 1235 031d 10       		.uleb128 0x10
 1236 031e 05030000 		.4byte	.LASF28
 1237 0322 01       		.byte	0x1
 1238 0323 1B02     		.2byte	0x21b
 1239 0325 6B000000 		.4byte	0x6b
 1240 0329 5F010000 		.4byte	.LLST9
 1241 032d 07       		.uleb128 0x7
 1242 032e 08000000 		.4byte	.LVL36
 1243 0332 9A050000 		.4byte	0x59a
 1244 0336 40030000 		.4byte	0x340
 1245 033a 08       		.uleb128 0x8
 1246 033b 01       		.uleb128 0x1
 1247 033c 50       		.byte	0x50
 1248 033d 01       		.uleb128 0x1
 1249 033e 30       		.byte	0x30
 1250 033f 00       		.byte	0
 1251 0340 09       		.uleb128 0x9
 1252 0341 62000000 		.4byte	.LVL52
 1253 0345 6E050000 		.4byte	0x56e
 1254 0349 08       		.uleb128 0x8
 1255 034a 01       		.uleb128 0x1
 1256 034b 50       		.byte	0x50
 1257 034c 01       		.uleb128 0x1
 1258 034d 30       		.byte	0x30
 1259 034e 00       		.byte	0
 1260 034f 00       		.byte	0
 1261 0350 0F       		.uleb128 0xf
 1262 0351 64030000 		.4byte	.LASF34
 1263 0355 01       		.byte	0x1
 1264 0356 7A02     		.2byte	0x27a
 1265 0358 77000000 		.4byte	0x77
 1266 035c 00000000 		.4byte	.LFB11
 1267 0360 28000000 		.4byte	.LFE11-.LFB11
 1268 0364 01       		.uleb128 0x1
 1269 0365 9C       		.byte	0x9c
 1270 0366 AA030000 		.4byte	0x3aa
 1271 036a 10       		.uleb128 0x10
 1272 036b E6010000 		.4byte	.LASF35
 1273 036f 01       		.byte	0x1
 1274 0370 7E02     		.2byte	0x27e
 1275 0372 77000000 		.4byte	0x77
 1276 0376 72010000 		.4byte	.LLST10
 1277 037a 07       		.uleb128 0x7
 1278 037b 08000000 		.4byte	.LVL54
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 39


 1279 037f 9A050000 		.4byte	0x59a
 1280 0383 8D030000 		.4byte	0x38d
 1281 0387 08       		.uleb128 0x8
 1282 0388 01       		.uleb128 0x1
 1283 0389 50       		.byte	0x50
 1284 038a 01       		.uleb128 0x1
 1285 038b 30       		.byte	0x30
 1286 038c 00       		.byte	0
 1287 038d 07       		.uleb128 0x7
 1288 038e 16000000 		.4byte	.LVL56
 1289 0392 6E050000 		.4byte	0x56e
 1290 0396 A0030000 		.4byte	0x3a0
 1291 039a 08       		.uleb128 0x8
 1292 039b 01       		.uleb128 0x1
 1293 039c 50       		.byte	0x50
 1294 039d 01       		.uleb128 0x1
 1295 039e 30       		.byte	0x30
 1296 039f 00       		.byte	0
 1297 03a0 0B       		.uleb128 0xb
 1298 03a1 1C000000 		.4byte	.LVL58
 1299 03a5 3B020000 		.4byte	0x23b
 1300 03a9 00       		.byte	0
 1301 03aa 0F       		.uleb128 0xf
 1302 03ab 6A020000 		.4byte	.LASF36
 1303 03af 01       		.byte	0x1
 1304 03b0 AB02     		.2byte	0x2ab
 1305 03b2 6B000000 		.4byte	0x6b
 1306 03b6 00000000 		.4byte	.LFB12
 1307 03ba 5C000000 		.4byte	.LFE12-.LFB12
 1308 03be 01       		.uleb128 0x1
 1309 03bf 9C       		.byte	0x9c
 1310 03c0 F7030000 		.4byte	0x3f7
 1311 03c4 10       		.uleb128 0x10
 1312 03c5 52020000 		.4byte	.LASF37
 1313 03c9 01       		.byte	0x1
 1314 03ca AE02     		.2byte	0x2ae
 1315 03cc 6B000000 		.4byte	0x6b
 1316 03d0 85010000 		.4byte	.LLST11
 1317 03d4 07       		.uleb128 0x7
 1318 03d5 08000000 		.4byte	.LVL59
 1319 03d9 9A050000 		.4byte	0x59a
 1320 03dd E7030000 		.4byte	0x3e7
 1321 03e1 08       		.uleb128 0x8
 1322 03e2 01       		.uleb128 0x1
 1323 03e3 50       		.byte	0x50
 1324 03e4 01       		.uleb128 0x1
 1325 03e5 30       		.byte	0x30
 1326 03e6 00       		.byte	0
 1327 03e7 09       		.uleb128 0x9
 1328 03e8 52000000 		.4byte	.LVL65
 1329 03ec 6E050000 		.4byte	0x56e
 1330 03f0 08       		.uleb128 0x8
 1331 03f1 01       		.uleb128 0x1
 1332 03f2 50       		.byte	0x50
 1333 03f3 01       		.uleb128 0x1
 1334 03f4 30       		.byte	0x30
 1335 03f5 00       		.byte	0
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 40


 1336 03f6 00       		.byte	0
 1337 03f7 0D       		.uleb128 0xd
 1338 03f8 1E020000 		.4byte	.LASF38
 1339 03fc 01       		.byte	0x1
 1340 03fd F502     		.2byte	0x2f5
 1341 03ff 00000000 		.4byte	.LFB13
 1342 0403 40000000 		.4byte	.LFE13-.LFB13
 1343 0407 01       		.uleb128 0x1
 1344 0408 9C       		.byte	0x9c
 1345 0409 52040000 		.4byte	0x452
 1346 040d 10       		.uleb128 0x10
 1347 040e C9030000 		.4byte	.LASF21
 1348 0412 01       		.byte	0x1
 1349 0413 F702     		.2byte	0x2f7
 1350 0415 6B000000 		.4byte	0x6b
 1351 0419 AE010000 		.4byte	.LLST12
 1352 041d 0B       		.uleb128 0xb
 1353 041e 06000000 		.4byte	.LVL67
 1354 0422 63050000 		.4byte	0x563
 1355 0426 0B       		.uleb128 0xb
 1356 0427 1E000000 		.4byte	.LVL68
 1357 042b 84050000 		.4byte	0x584
 1358 042f 07       		.uleb128 0x7
 1359 0430 24000000 		.4byte	.LVL69
 1360 0434 9A050000 		.4byte	0x59a
 1361 0438 42040000 		.4byte	0x442
 1362 043c 08       		.uleb128 0x8
 1363 043d 01       		.uleb128 0x1
 1364 043e 50       		.byte	0x50
 1365 043f 01       		.uleb128 0x1
 1366 0440 30       		.byte	0x30
 1367 0441 00       		.byte	0
 1368 0442 09       		.uleb128 0x9
 1369 0443 36000000 		.4byte	.LVL70
 1370 0447 6E050000 		.4byte	0x56e
 1371 044b 08       		.uleb128 0x8
 1372 044c 01       		.uleb128 0x1
 1373 044d 50       		.byte	0x50
 1374 044e 01       		.uleb128 0x1
 1375 044f 30       		.byte	0x30
 1376 0450 00       		.byte	0
 1377 0451 00       		.byte	0
 1378 0452 0D       		.uleb128 0xd
 1379 0453 8B000000 		.4byte	.LASF39
 1380 0457 01       		.byte	0x1
 1381 0458 2D03     		.2byte	0x32d
 1382 045a 00000000 		.4byte	.LFB14
 1383 045e 02000000 		.4byte	.LFE14-.LFB14
 1384 0462 01       		.uleb128 0x1
 1385 0463 9C       		.byte	0x9c
 1386 0464 77040000 		.4byte	0x477
 1387 0468 0E       		.uleb128 0xe
 1388 0469 B5010000 		.4byte	.LASF40
 1389 046d 01       		.byte	0x1
 1390 046e 2D03     		.2byte	0x32d
 1391 0470 6B000000 		.4byte	0x6b
 1392 0474 01       		.uleb128 0x1
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 41


 1393 0475 50       		.byte	0x50
 1394 0476 00       		.byte	0
 1395 0477 0D       		.uleb128 0xd
 1396 0478 00040000 		.4byte	.LASF41
 1397 047c 01       		.byte	0x1
 1398 047d 5903     		.2byte	0x359
 1399 047f 00000000 		.4byte	.LFB15
 1400 0483 0C000000 		.4byte	.LFE15-.LFB15
 1401 0487 01       		.uleb128 0x1
 1402 0488 9C       		.byte	0x9c
 1403 0489 9C040000 		.4byte	0x49c
 1404 048d 0E       		.uleb128 0xe
 1405 048e BE020000 		.4byte	.LASF42
 1406 0492 01       		.byte	0x1
 1407 0493 5903     		.2byte	0x359
 1408 0495 6B000000 		.4byte	0x6b
 1409 0499 01       		.uleb128 0x1
 1410 049a 50       		.byte	0x50
 1411 049b 00       		.byte	0
 1412 049c 0D       		.uleb128 0xd
 1413 049d 11040000 		.4byte	.LASF43
 1414 04a1 01       		.byte	0x1
 1415 04a2 6D03     		.2byte	0x36d
 1416 04a4 00000000 		.4byte	.LFB16
 1417 04a8 0C000000 		.4byte	.LFE16-.LFB16
 1418 04ac 01       		.uleb128 0x1
 1419 04ad 9C       		.byte	0x9c
 1420 04ae C1040000 		.4byte	0x4c1
 1421 04b2 0E       		.uleb128 0xe
 1422 04b3 BE020000 		.4byte	.LASF42
 1423 04b7 01       		.byte	0x1
 1424 04b8 6D03     		.2byte	0x36d
 1425 04ba 6B000000 		.4byte	0x6b
 1426 04be 01       		.uleb128 0x1
 1427 04bf 50       		.byte	0x50
 1428 04c0 00       		.byte	0
 1429 04c1 11       		.uleb128 0x11
 1430 04c2 A3010000 		.4byte	.LASF44
 1431 04c6 01       		.byte	0x1
 1432 04c7 1B       		.byte	0x1b
 1433 04c8 6B000000 		.4byte	0x6b
 1434 04cc 05       		.uleb128 0x5
 1435 04cd 03       		.byte	0x3
 1436 04ce 00000000 		.4byte	RX_initVar
 1437 04d2 11       		.uleb128 0x11
 1438 04d3 F1030000 		.4byte	.LASF45
 1439 04d7 01       		.byte	0x1
 1440 04d8 24       		.byte	0x24
 1441 04d9 6B000000 		.4byte	0x6b
 1442 04dd 05       		.uleb128 0x5
 1443 04de 03       		.byte	0x3
 1444 04df 00000000 		.4byte	RX_errorStatus
 1445 04e3 12       		.uleb128 0x12
 1446 04e4 A4000000 		.4byte	0xa4
 1447 04e8 F3040000 		.4byte	0x4f3
 1448 04ec 13       		.uleb128 0x13
 1449 04ed B0000000 		.4byte	0xb0
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 42


 1450 04f1 0F       		.byte	0xf
 1451 04f2 00       		.byte	0
 1452 04f3 11       		.uleb128 0x11
 1453 04f4 46020000 		.4byte	.LASF46
 1454 04f8 01       		.byte	0x1
 1455 04f9 25       		.byte	0x25
 1456 04fa 04050000 		.4byte	0x504
 1457 04fe 05       		.uleb128 0x5
 1458 04ff 03       		.byte	0x3
 1459 0500 00000000 		.4byte	RX_rxBuffer
 1460 0504 05       		.uleb128 0x5
 1461 0505 E3040000 		.4byte	0x4e3
 1462 0509 11       		.uleb128 0x11
 1463 050a E1030000 		.4byte	.LASF47
 1464 050e 01       		.byte	0x1
 1465 050f 26       		.byte	0x26
 1466 0510 A4000000 		.4byte	0xa4
 1467 0514 05       		.uleb128 0x5
 1468 0515 03       		.byte	0x3
 1469 0516 00000000 		.4byte	RX_rxBufferRead
 1470 051a 11       		.uleb128 0x11
 1471 051b 53030000 		.4byte	.LASF48
 1472 051f 01       		.byte	0x1
 1473 0520 27       		.byte	0x27
 1474 0521 A4000000 		.4byte	0xa4
 1475 0525 05       		.uleb128 0x5
 1476 0526 03       		.byte	0x3
 1477 0527 00000000 		.4byte	RX_rxBufferWrite
 1478 052b 11       		.uleb128 0x11
 1479 052c 44010000 		.4byte	.LASF49
 1480 0530 01       		.byte	0x1
 1481 0531 28       		.byte	0x28
 1482 0532 A4000000 		.4byte	0xa4
 1483 0536 05       		.uleb128 0x5
 1484 0537 03       		.byte	0x3
 1485 0538 00000000 		.4byte	RX_rxBufferLoopDetect
 1486 053c 11       		.uleb128 0x11
 1487 053d E9020000 		.4byte	.LASF50
 1488 0541 01       		.byte	0x1
 1489 0542 29       		.byte	0x29
 1490 0543 A4000000 		.4byte	0xa4
 1491 0547 05       		.uleb128 0x5
 1492 0548 03       		.byte	0x3
 1493 0549 00000000 		.4byte	RX_rxBufferOverflow
 1494 054d 14       		.uleb128 0x14
 1495 054e 7D020000 		.4byte	.LASF51
 1496 0552 7D020000 		.4byte	.LASF51
 1497 0556 03       		.byte	0x3
 1498 0557 BB       		.byte	0xbb
 1499 0558 14       		.uleb128 0x14
 1500 0559 1F030000 		.4byte	.LASF52
 1501 055d 1F030000 		.4byte	.LASF52
 1502 0561 03       		.byte	0x3
 1503 0562 BE       		.byte	0xbe
 1504 0563 14       		.uleb128 0x14
 1505 0564 2F020000 		.4byte	.LASF53
 1506 0568 2F020000 		.4byte	.LASF53
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 43


 1507 056c 03       		.byte	0x3
 1508 056d E3       		.byte	0xe3
 1509 056e 14       		.uleb128 0x14
 1510 056f C6020000 		.4byte	.LASF54
 1511 0573 C6020000 		.4byte	.LASF54
 1512 0577 03       		.byte	0x3
 1513 0578 C1       		.byte	0xc1
 1514 0579 14       		.uleb128 0x14
 1515 057a 77000000 		.4byte	.LASF55
 1516 057e 77000000 		.4byte	.LASF55
 1517 0582 04       		.byte	0x4
 1518 0583 1D       		.byte	0x1d
 1519 0584 14       		.uleb128 0x14
 1520 0585 07000000 		.4byte	.LASF56
 1521 0589 07000000 		.4byte	.LASF56
 1522 058d 03       		.byte	0x3
 1523 058e E4       		.byte	0xe4
 1524 058f 14       		.uleb128 0x14
 1525 0590 22040000 		.4byte	.LASF57
 1526 0594 22040000 		.4byte	.LASF57
 1527 0598 04       		.byte	0x4
 1528 0599 27       		.byte	0x27
 1529 059a 14       		.uleb128 0x14
 1530 059b 90010000 		.4byte	.LASF58
 1531 059f 90010000 		.4byte	.LASF58
 1532 05a3 03       		.byte	0x3
 1533 05a4 C3       		.byte	0xc3
 1534 05a5 00       		.byte	0
 1535              		.section	.debug_abbrev,"",%progbits
 1536              	.Ldebug_abbrev0:
 1537 0000 01       		.uleb128 0x1
 1538 0001 11       		.uleb128 0x11
 1539 0002 01       		.byte	0x1
 1540 0003 25       		.uleb128 0x25
 1541 0004 0E       		.uleb128 0xe
 1542 0005 13       		.uleb128 0x13
 1543 0006 0B       		.uleb128 0xb
 1544 0007 03       		.uleb128 0x3
 1545 0008 0E       		.uleb128 0xe
 1546 0009 1B       		.uleb128 0x1b
 1547 000a 0E       		.uleb128 0xe
 1548 000b 55       		.uleb128 0x55
 1549 000c 17       		.uleb128 0x17
 1550 000d 11       		.uleb128 0x11
 1551 000e 01       		.uleb128 0x1
 1552 000f 10       		.uleb128 0x10
 1553 0010 17       		.uleb128 0x17
 1554 0011 00       		.byte	0
 1555 0012 00       		.byte	0
 1556 0013 02       		.uleb128 0x2
 1557 0014 24       		.uleb128 0x24
 1558 0015 00       		.byte	0
 1559 0016 0B       		.uleb128 0xb
 1560 0017 0B       		.uleb128 0xb
 1561 0018 3E       		.uleb128 0x3e
 1562 0019 0B       		.uleb128 0xb
 1563 001a 03       		.uleb128 0x3
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 44


 1564 001b 0E       		.uleb128 0xe
 1565 001c 00       		.byte	0
 1566 001d 00       		.byte	0
 1567 001e 03       		.uleb128 0x3
 1568 001f 24       		.uleb128 0x24
 1569 0020 00       		.byte	0
 1570 0021 0B       		.uleb128 0xb
 1571 0022 0B       		.uleb128 0xb
 1572 0023 3E       		.uleb128 0x3e
 1573 0024 0B       		.uleb128 0xb
 1574 0025 03       		.uleb128 0x3
 1575 0026 08       		.uleb128 0x8
 1576 0027 00       		.byte	0
 1577 0028 00       		.byte	0
 1578 0029 04       		.uleb128 0x4
 1579 002a 16       		.uleb128 0x16
 1580 002b 00       		.byte	0
 1581 002c 03       		.uleb128 0x3
 1582 002d 0E       		.uleb128 0xe
 1583 002e 3A       		.uleb128 0x3a
 1584 002f 0B       		.uleb128 0xb
 1585 0030 3B       		.uleb128 0x3b
 1586 0031 05       		.uleb128 0x5
 1587 0032 49       		.uleb128 0x49
 1588 0033 13       		.uleb128 0x13
 1589 0034 00       		.byte	0
 1590 0035 00       		.byte	0
 1591 0036 05       		.uleb128 0x5
 1592 0037 35       		.uleb128 0x35
 1593 0038 00       		.byte	0
 1594 0039 49       		.uleb128 0x49
 1595 003a 13       		.uleb128 0x13
 1596 003b 00       		.byte	0
 1597 003c 00       		.byte	0
 1598 003d 06       		.uleb128 0x6
 1599 003e 2E       		.uleb128 0x2e
 1600 003f 01       		.byte	0x1
 1601 0040 3F       		.uleb128 0x3f
 1602 0041 19       		.uleb128 0x19
 1603 0042 03       		.uleb128 0x3
 1604 0043 0E       		.uleb128 0xe
 1605 0044 3A       		.uleb128 0x3a
 1606 0045 0B       		.uleb128 0xb
 1607 0046 3B       		.uleb128 0x3b
 1608 0047 0B       		.uleb128 0xb
 1609 0048 27       		.uleb128 0x27
 1610 0049 19       		.uleb128 0x19
 1611 004a 11       		.uleb128 0x11
 1612 004b 01       		.uleb128 0x1
 1613 004c 12       		.uleb128 0x12
 1614 004d 06       		.uleb128 0x6
 1615 004e 40       		.uleb128 0x40
 1616 004f 18       		.uleb128 0x18
 1617 0050 9742     		.uleb128 0x2117
 1618 0052 19       		.uleb128 0x19
 1619 0053 01       		.uleb128 0x1
 1620 0054 13       		.uleb128 0x13
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 45


 1621 0055 00       		.byte	0
 1622 0056 00       		.byte	0
 1623 0057 07       		.uleb128 0x7
 1624 0058 898201   		.uleb128 0x4109
 1625 005b 01       		.byte	0x1
 1626 005c 11       		.uleb128 0x11
 1627 005d 01       		.uleb128 0x1
 1628 005e 31       		.uleb128 0x31
 1629 005f 13       		.uleb128 0x13
 1630 0060 01       		.uleb128 0x1
 1631 0061 13       		.uleb128 0x13
 1632 0062 00       		.byte	0
 1633 0063 00       		.byte	0
 1634 0064 08       		.uleb128 0x8
 1635 0065 8A8201   		.uleb128 0x410a
 1636 0068 00       		.byte	0
 1637 0069 02       		.uleb128 0x2
 1638 006a 18       		.uleb128 0x18
 1639 006b 9142     		.uleb128 0x2111
 1640 006d 18       		.uleb128 0x18
 1641 006e 00       		.byte	0
 1642 006f 00       		.byte	0
 1643 0070 09       		.uleb128 0x9
 1644 0071 898201   		.uleb128 0x4109
 1645 0074 01       		.byte	0x1
 1646 0075 11       		.uleb128 0x11
 1647 0076 01       		.uleb128 0x1
 1648 0077 31       		.uleb128 0x31
 1649 0078 13       		.uleb128 0x13
 1650 0079 00       		.byte	0
 1651 007a 00       		.byte	0
 1652 007b 0A       		.uleb128 0xa
 1653 007c 34       		.uleb128 0x34
 1654 007d 00       		.byte	0
 1655 007e 03       		.uleb128 0x3
 1656 007f 0E       		.uleb128 0xe
 1657 0080 3A       		.uleb128 0x3a
 1658 0081 0B       		.uleb128 0xb
 1659 0082 3B       		.uleb128 0x3b
 1660 0083 0B       		.uleb128 0xb
 1661 0084 49       		.uleb128 0x49
 1662 0085 13       		.uleb128 0x13
 1663 0086 02       		.uleb128 0x2
 1664 0087 17       		.uleb128 0x17
 1665 0088 00       		.byte	0
 1666 0089 00       		.byte	0
 1667 008a 0B       		.uleb128 0xb
 1668 008b 898201   		.uleb128 0x4109
 1669 008e 00       		.byte	0
 1670 008f 11       		.uleb128 0x11
 1671 0090 01       		.uleb128 0x1
 1672 0091 31       		.uleb128 0x31
 1673 0092 13       		.uleb128 0x13
 1674 0093 00       		.byte	0
 1675 0094 00       		.byte	0
 1676 0095 0C       		.uleb128 0xc
 1677 0096 2E       		.uleb128 0x2e
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 46


 1678 0097 00       		.byte	0
 1679 0098 3F       		.uleb128 0x3f
 1680 0099 19       		.uleb128 0x19
 1681 009a 03       		.uleb128 0x3
 1682 009b 0E       		.uleb128 0xe
 1683 009c 3A       		.uleb128 0x3a
 1684 009d 0B       		.uleb128 0xb
 1685 009e 3B       		.uleb128 0x3b
 1686 009f 05       		.uleb128 0x5
 1687 00a0 27       		.uleb128 0x27
 1688 00a1 19       		.uleb128 0x19
 1689 00a2 49       		.uleb128 0x49
 1690 00a3 13       		.uleb128 0x13
 1691 00a4 11       		.uleb128 0x11
 1692 00a5 01       		.uleb128 0x1
 1693 00a6 12       		.uleb128 0x12
 1694 00a7 06       		.uleb128 0x6
 1695 00a8 40       		.uleb128 0x40
 1696 00a9 18       		.uleb128 0x18
 1697 00aa 9742     		.uleb128 0x2117
 1698 00ac 19       		.uleb128 0x19
 1699 00ad 00       		.byte	0
 1700 00ae 00       		.byte	0
 1701 00af 0D       		.uleb128 0xd
 1702 00b0 2E       		.uleb128 0x2e
 1703 00b1 01       		.byte	0x1
 1704 00b2 3F       		.uleb128 0x3f
 1705 00b3 19       		.uleb128 0x19
 1706 00b4 03       		.uleb128 0x3
 1707 00b5 0E       		.uleb128 0xe
 1708 00b6 3A       		.uleb128 0x3a
 1709 00b7 0B       		.uleb128 0xb
 1710 00b8 3B       		.uleb128 0x3b
 1711 00b9 05       		.uleb128 0x5
 1712 00ba 27       		.uleb128 0x27
 1713 00bb 19       		.uleb128 0x19
 1714 00bc 11       		.uleb128 0x11
 1715 00bd 01       		.uleb128 0x1
 1716 00be 12       		.uleb128 0x12
 1717 00bf 06       		.uleb128 0x6
 1718 00c0 40       		.uleb128 0x40
 1719 00c1 18       		.uleb128 0x18
 1720 00c2 9742     		.uleb128 0x2117
 1721 00c4 19       		.uleb128 0x19
 1722 00c5 01       		.uleb128 0x1
 1723 00c6 13       		.uleb128 0x13
 1724 00c7 00       		.byte	0
 1725 00c8 00       		.byte	0
 1726 00c9 0E       		.uleb128 0xe
 1727 00ca 05       		.uleb128 0x5
 1728 00cb 00       		.byte	0
 1729 00cc 03       		.uleb128 0x3
 1730 00cd 0E       		.uleb128 0xe
 1731 00ce 3A       		.uleb128 0x3a
 1732 00cf 0B       		.uleb128 0xb
 1733 00d0 3B       		.uleb128 0x3b
 1734 00d1 05       		.uleb128 0x5
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 47


 1735 00d2 49       		.uleb128 0x49
 1736 00d3 13       		.uleb128 0x13
 1737 00d4 02       		.uleb128 0x2
 1738 00d5 18       		.uleb128 0x18
 1739 00d6 00       		.byte	0
 1740 00d7 00       		.byte	0
 1741 00d8 0F       		.uleb128 0xf
 1742 00d9 2E       		.uleb128 0x2e
 1743 00da 01       		.byte	0x1
 1744 00db 3F       		.uleb128 0x3f
 1745 00dc 19       		.uleb128 0x19
 1746 00dd 03       		.uleb128 0x3
 1747 00de 0E       		.uleb128 0xe
 1748 00df 3A       		.uleb128 0x3a
 1749 00e0 0B       		.uleb128 0xb
 1750 00e1 3B       		.uleb128 0x3b
 1751 00e2 05       		.uleb128 0x5
 1752 00e3 27       		.uleb128 0x27
 1753 00e4 19       		.uleb128 0x19
 1754 00e5 49       		.uleb128 0x49
 1755 00e6 13       		.uleb128 0x13
 1756 00e7 11       		.uleb128 0x11
 1757 00e8 01       		.uleb128 0x1
 1758 00e9 12       		.uleb128 0x12
 1759 00ea 06       		.uleb128 0x6
 1760 00eb 40       		.uleb128 0x40
 1761 00ec 18       		.uleb128 0x18
 1762 00ed 9742     		.uleb128 0x2117
 1763 00ef 19       		.uleb128 0x19
 1764 00f0 01       		.uleb128 0x1
 1765 00f1 13       		.uleb128 0x13
 1766 00f2 00       		.byte	0
 1767 00f3 00       		.byte	0
 1768 00f4 10       		.uleb128 0x10
 1769 00f5 34       		.uleb128 0x34
 1770 00f6 00       		.byte	0
 1771 00f7 03       		.uleb128 0x3
 1772 00f8 0E       		.uleb128 0xe
 1773 00f9 3A       		.uleb128 0x3a
 1774 00fa 0B       		.uleb128 0xb
 1775 00fb 3B       		.uleb128 0x3b
 1776 00fc 05       		.uleb128 0x5
 1777 00fd 49       		.uleb128 0x49
 1778 00fe 13       		.uleb128 0x13
 1779 00ff 02       		.uleb128 0x2
 1780 0100 17       		.uleb128 0x17
 1781 0101 00       		.byte	0
 1782 0102 00       		.byte	0
 1783 0103 11       		.uleb128 0x11
 1784 0104 34       		.uleb128 0x34
 1785 0105 00       		.byte	0
 1786 0106 03       		.uleb128 0x3
 1787 0107 0E       		.uleb128 0xe
 1788 0108 3A       		.uleb128 0x3a
 1789 0109 0B       		.uleb128 0xb
 1790 010a 3B       		.uleb128 0x3b
 1791 010b 0B       		.uleb128 0xb
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 48


 1792 010c 49       		.uleb128 0x49
 1793 010d 13       		.uleb128 0x13
 1794 010e 3F       		.uleb128 0x3f
 1795 010f 19       		.uleb128 0x19
 1796 0110 02       		.uleb128 0x2
 1797 0111 18       		.uleb128 0x18
 1798 0112 00       		.byte	0
 1799 0113 00       		.byte	0
 1800 0114 12       		.uleb128 0x12
 1801 0115 01       		.uleb128 0x1
 1802 0116 01       		.byte	0x1
 1803 0117 49       		.uleb128 0x49
 1804 0118 13       		.uleb128 0x13
 1805 0119 01       		.uleb128 0x1
 1806 011a 13       		.uleb128 0x13
 1807 011b 00       		.byte	0
 1808 011c 00       		.byte	0
 1809 011d 13       		.uleb128 0x13
 1810 011e 21       		.uleb128 0x21
 1811 011f 00       		.byte	0
 1812 0120 49       		.uleb128 0x49
 1813 0121 13       		.uleb128 0x13
 1814 0122 2F       		.uleb128 0x2f
 1815 0123 0B       		.uleb128 0xb
 1816 0124 00       		.byte	0
 1817 0125 00       		.byte	0
 1818 0126 14       		.uleb128 0x14
 1819 0127 2E       		.uleb128 0x2e
 1820 0128 00       		.byte	0
 1821 0129 3F       		.uleb128 0x3f
 1822 012a 19       		.uleb128 0x19
 1823 012b 3C       		.uleb128 0x3c
 1824 012c 19       		.uleb128 0x19
 1825 012d 6E       		.uleb128 0x6e
 1826 012e 0E       		.uleb128 0xe
 1827 012f 03       		.uleb128 0x3
 1828 0130 0E       		.uleb128 0xe
 1829 0131 3A       		.uleb128 0x3a
 1830 0132 0B       		.uleb128 0xb
 1831 0133 3B       		.uleb128 0x3b
 1832 0134 0B       		.uleb128 0xb
 1833 0135 00       		.byte	0
 1834 0136 00       		.byte	0
 1835 0137 00       		.byte	0
 1836              		.section	.debug_loc,"",%progbits
 1837              	.Ldebug_loc0:
 1838              	.LLST0:
 1839 0000 08000000 		.4byte	.LVL3
 1840 0004 32000000 		.4byte	.LVL7
 1841 0008 0100     		.2byte	0x1
 1842 000a 54       		.byte	0x54
 1843 000b 00000000 		.4byte	0
 1844 000f 00000000 		.4byte	0
 1845              	.LLST1:
 1846 0013 08000000 		.4byte	.LVL11
 1847 0017 2C000000 		.4byte	.LVL15
 1848 001b 0100     		.2byte	0x1
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 49


 1849 001d 54       		.byte	0x54
 1850 001e 00000000 		.4byte	0
 1851 0022 00000000 		.4byte	0
 1852              	.LLST2:
 1853 0026 22000000 		.4byte	.LVL21
 1854 002a 3E000000 		.4byte	.LVL27
 1855 002e 0100     		.2byte	0x1
 1856 0030 54       		.byte	0x54
 1857 0031 44000000 		.4byte	.LVL29
 1858 0035 4C000000 		.4byte	.LVL31
 1859 0039 0100     		.2byte	0x1
 1860 003b 54       		.byte	0x54
 1861 003c 00000000 		.4byte	0
 1862 0040 00000000 		.4byte	0
 1863              	.LLST3:
 1864 0044 0E000000 		.4byte	.LVL19
 1865 0048 24000000 		.4byte	.LVL22
 1866 004c 0100     		.2byte	0x1
 1867 004e 53       		.byte	0x53
 1868 004f 24000000 		.4byte	.LVL22
 1869 0053 26000000 		.4byte	.LVL23
 1870 0057 0300     		.2byte	0x3
 1871 0059 73       		.byte	0x73
 1872 005a 7F       		.sleb128 -1
 1873 005b 9F       		.byte	0x9f
 1874 005c 26000000 		.4byte	.LVL23
 1875 0060 32000000 		.4byte	.LVL25
 1876 0064 0100     		.2byte	0x1
 1877 0066 53       		.byte	0x53
 1878 0067 32000000 		.4byte	.LVL25
 1879 006b 3C000000 		.4byte	.LVL26
 1880 006f 0500     		.2byte	0x5
 1881 0071 03       		.byte	0x3
 1882 0072 00000000 		.4byte	RX_rxBufferRead
 1883 0076 3E000000 		.4byte	.LVL27
 1884 007a 40000000 		.4byte	.LVL28
 1885 007e 0100     		.2byte	0x1
 1886 0080 53       		.byte	0x53
 1887 0081 00000000 		.4byte	0
 1888 0085 00000000 		.4byte	0
 1889              	.LLST4:
 1890 0089 12000000 		.4byte	.LVL20
 1891 008d 49000000 		.4byte	.LVL30-1
 1892 0091 0100     		.2byte	0x1
 1893 0093 51       		.byte	0x51
 1894 0094 00000000 		.4byte	0
 1895 0098 00000000 		.4byte	0
 1896              	.LLST5:
 1897 009c 08000000 		.4byte	.LVL32
 1898 00a0 16000000 		.4byte	.LVL33
 1899 00a4 0100     		.2byte	0x1
 1900 00a6 50       		.byte	0x50
 1901 00a7 18000000 		.4byte	.LVL34
 1902 00ab 28000000 		.4byte	.LFE9
 1903 00af 0100     		.2byte	0x1
 1904 00b1 50       		.byte	0x50
 1905 00b2 00000000 		.4byte	0
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 50


 1906 00b6 00000000 		.4byte	0
 1907              	.LLST6:
 1908 00ba 02000000 		.4byte	.LVL35
 1909 00be 22000000 		.4byte	.LVL39
 1910 00c2 0200     		.2byte	0x2
 1911 00c4 30       		.byte	0x30
 1912 00c5 9F       		.byte	0x9f
 1913 00c6 22000000 		.4byte	.LVL39
 1914 00ca 3E000000 		.4byte	.LVL45
 1915 00ce 0100     		.2byte	0x1
 1916 00d0 54       		.byte	0x54
 1917 00d1 3E000000 		.4byte	.LVL45
 1918 00d5 4E000000 		.4byte	.LVL48
 1919 00d9 0200     		.2byte	0x2
 1920 00db 30       		.byte	0x30
 1921 00dc 9F       		.byte	0x9f
 1922 00dd 4E000000 		.4byte	.LVL48
 1923 00e1 56000000 		.4byte	.LVL49
 1924 00e5 0100     		.2byte	0x1
 1925 00e7 54       		.byte	0x54
 1926 00e8 56000000 		.4byte	.LVL49
 1927 00ec 5A000000 		.4byte	.LVL50
 1928 00f0 0200     		.2byte	0x2
 1929 00f2 30       		.byte	0x30
 1930 00f3 9F       		.byte	0x9f
 1931 00f4 5A000000 		.4byte	.LVL50
 1932 00f8 64000000 		.4byte	.LVL53
 1933 00fc 0100     		.2byte	0x1
 1934 00fe 54       		.byte	0x54
 1935 00ff 00000000 		.4byte	0
 1936 0103 00000000 		.4byte	0
 1937              	.LLST7:
 1938 0107 44000000 		.4byte	.LVL47
 1939 010b 5C000000 		.4byte	.LVL51
 1940 010f 0100     		.2byte	0x1
 1941 0111 53       		.byte	0x53
 1942 0112 00000000 		.4byte	0
 1943 0116 00000000 		.4byte	0
 1944              	.LLST8:
 1945 011a 0E000000 		.4byte	.LVL37
 1946 011e 24000000 		.4byte	.LVL40
 1947 0122 0100     		.2byte	0x1
 1948 0124 53       		.byte	0x53
 1949 0125 24000000 		.4byte	.LVL40
 1950 0129 26000000 		.4byte	.LVL41
 1951 012d 0300     		.2byte	0x3
 1952 012f 73       		.byte	0x73
 1953 0130 7F       		.sleb128 -1
 1954 0131 9F       		.byte	0x9f
 1955 0132 26000000 		.4byte	.LVL41
 1956 0136 32000000 		.4byte	.LVL43
 1957 013a 0100     		.2byte	0x1
 1958 013c 53       		.byte	0x53
 1959 013d 32000000 		.4byte	.LVL43
 1960 0141 3C000000 		.4byte	.LVL44
 1961 0145 0500     		.2byte	0x5
 1962 0147 03       		.byte	0x3
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 51


 1963 0148 00000000 		.4byte	RX_rxBufferRead
 1964 014c 3E000000 		.4byte	.LVL45
 1965 0150 40000000 		.4byte	.LVL46
 1966 0154 0100     		.2byte	0x1
 1967 0156 53       		.byte	0x53
 1968 0157 00000000 		.4byte	0
 1969 015b 00000000 		.4byte	0
 1970              	.LLST9:
 1971 015f 12000000 		.4byte	.LVL38
 1972 0163 61000000 		.4byte	.LVL52-1
 1973 0167 0100     		.2byte	0x1
 1974 0169 51       		.byte	0x51
 1975 016a 00000000 		.4byte	0
 1976 016e 00000000 		.4byte	0
 1977              	.LLST10:
 1978 0172 0C000000 		.4byte	.LVL55
 1979 0176 18000000 		.4byte	.LVL57
 1980 017a 0100     		.2byte	0x1
 1981 017c 54       		.byte	0x54
 1982 017d 00000000 		.4byte	0
 1983 0181 00000000 		.4byte	0
 1984              	.LLST11:
 1985 0185 3A000000 		.4byte	.LVL60
 1986 0189 3C000000 		.4byte	.LVL61
 1987 018d 0100     		.2byte	0x1
 1988 018f 54       		.byte	0x54
 1989 0190 48000000 		.4byte	.LVL62
 1990 0194 4A000000 		.4byte	.LVL63
 1991 0198 0100     		.2byte	0x1
 1992 019a 54       		.byte	0x54
 1993 019b 4C000000 		.4byte	.LVL64
 1994 019f 54000000 		.4byte	.LVL66
 1995 01a3 0100     		.2byte	0x1
 1996 01a5 54       		.byte	0x54
 1997 01a6 00000000 		.4byte	0
 1998 01aa 00000000 		.4byte	0
 1999              	.LLST12:
 2000 01ae 06000000 		.4byte	.LVL67
 2001 01b2 1D000000 		.4byte	.LVL68-1
 2002 01b6 0100     		.2byte	0x1
 2003 01b8 50       		.byte	0x50
 2004 01b9 00000000 		.4byte	0
 2005 01bd 00000000 		.4byte	0
 2006              		.section	.debug_aranges,"",%progbits
 2007 0000 94000000 		.4byte	0x94
 2008 0004 0200     		.2byte	0x2
 2009 0006 00000000 		.4byte	.Ldebug_info0
 2010 000a 04       		.byte	0x4
 2011 000b 00       		.byte	0
 2012 000c 0000     		.2byte	0
 2013 000e 0000     		.2byte	0
 2014 0010 00000000 		.4byte	.LFB2
 2015 0014 38000000 		.4byte	.LFE2-.LFB2
 2016 0018 00000000 		.4byte	.LFB3
 2017 001c 3C000000 		.4byte	.LFE3-.LFB3
 2018 0020 00000000 		.4byte	.LFB1
 2019 0024 20000000 		.4byte	.LFE1-.LFB1
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 52


 2020 0028 00000000 		.4byte	.LFB4
 2021 002c 38000000 		.4byte	.LFE4-.LFB4
 2022 0030 00000000 		.4byte	.LFB5
 2023 0034 04000000 		.4byte	.LFE5-.LFB5
 2024 0038 00000000 		.4byte	.LFB6
 2025 003c 02000000 		.4byte	.LFE6-.LFB6
 2026 0040 00000000 		.4byte	.LFB7
 2027 0044 0C000000 		.4byte	.LFE7-.LFB7
 2028 0048 00000000 		.4byte	.LFB8
 2029 004c 5C000000 		.4byte	.LFE8-.LFB8
 2030 0050 00000000 		.4byte	.LFB9
 2031 0054 28000000 		.4byte	.LFE9-.LFB9
 2032 0058 00000000 		.4byte	.LFB10
 2033 005c 78000000 		.4byte	.LFE10-.LFB10
 2034 0060 00000000 		.4byte	.LFB11
 2035 0064 28000000 		.4byte	.LFE11-.LFB11
 2036 0068 00000000 		.4byte	.LFB12
 2037 006c 5C000000 		.4byte	.LFE12-.LFB12
 2038 0070 00000000 		.4byte	.LFB13
 2039 0074 40000000 		.4byte	.LFE13-.LFB13
 2040 0078 00000000 		.4byte	.LFB14
 2041 007c 02000000 		.4byte	.LFE14-.LFB14
 2042 0080 00000000 		.4byte	.LFB15
 2043 0084 0C000000 		.4byte	.LFE15-.LFB15
 2044 0088 00000000 		.4byte	.LFB16
 2045 008c 0C000000 		.4byte	.LFE16-.LFB16
 2046 0090 00000000 		.4byte	0
 2047 0094 00000000 		.4byte	0
 2048              		.section	.debug_ranges,"",%progbits
 2049              	.Ldebug_ranges0:
 2050 0000 00000000 		.4byte	.LFB2
 2051 0004 38000000 		.4byte	.LFE2
 2052 0008 00000000 		.4byte	.LFB3
 2053 000c 3C000000 		.4byte	.LFE3
 2054 0010 00000000 		.4byte	.LFB1
 2055 0014 20000000 		.4byte	.LFE1
 2056 0018 00000000 		.4byte	.LFB4
 2057 001c 38000000 		.4byte	.LFE4
 2058 0020 00000000 		.4byte	.LFB5
 2059 0024 04000000 		.4byte	.LFE5
 2060 0028 00000000 		.4byte	.LFB6
 2061 002c 02000000 		.4byte	.LFE6
 2062 0030 00000000 		.4byte	.LFB7
 2063 0034 0C000000 		.4byte	.LFE7
 2064 0038 00000000 		.4byte	.LFB8
 2065 003c 5C000000 		.4byte	.LFE8
 2066 0040 00000000 		.4byte	.LFB9
 2067 0044 28000000 		.4byte	.LFE9
 2068 0048 00000000 		.4byte	.LFB10
 2069 004c 78000000 		.4byte	.LFE10
 2070 0050 00000000 		.4byte	.LFB11
 2071 0054 28000000 		.4byte	.LFE11
 2072 0058 00000000 		.4byte	.LFB12
 2073 005c 5C000000 		.4byte	.LFE12
 2074 0060 00000000 		.4byte	.LFB13
 2075 0064 40000000 		.4byte	.LFE13
 2076 0068 00000000 		.4byte	.LFB14
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 53


 2077 006c 02000000 		.4byte	.LFE14
 2078 0070 00000000 		.4byte	.LFB15
 2079 0074 0C000000 		.4byte	.LFE15
 2080 0078 00000000 		.4byte	.LFB16
 2081 007c 0C000000 		.4byte	.LFE16
 2082 0080 00000000 		.4byte	0
 2083 0084 00000000 		.4byte	0
 2084              		.section	.debug_line,"",%progbits
 2085              	.Ldebug_line0:
 2086 0000 F6010000 		.section	.debug_str,"MS",%progbits,1
 2086      02005B00 
 2086      00000201 
 2086      FB0E0D00 
 2086      01010101 
 2087              	.LASF10:
 2088 0000 75696E74 		.ascii	"uint16\000"
 2088      313600
 2089              	.LASF56:
 2090 0007 43794578 		.ascii	"CyExitCriticalSection\000"
 2090      69744372 
 2090      69746963 
 2090      616C5365 
 2090      6374696F 
 2091              	.LASF61:
 2092 001d 433A5C55 		.ascii	"C:\\Users\\Henry Alberto\\Documents\\GitHub\\Psoc_M"
 2092      73657273 
 2092      5C48656E 
 2092      72792041 
 2092      6C626572 
 2093 004b 6F64756C 		.ascii	"odular\\Optimization_Algorithms\\Module.cydsn\000"
 2093      61725C4F 
 2093      7074696D 
 2093      697A6174 
 2093      696F6E5F 
 2094              	.LASF55:
 2095 0077 52585F49 		.ascii	"RX_IntClock_StartEx\000"
 2095      6E74436C 
 2095      6F636B5F 
 2095      53746172 
 2095      74457800 
 2096              	.LASF39:
 2097 008b 52585F53 		.ascii	"RX_SetRxAddressMode\000"
 2097      65745278 
 2097      41646472 
 2097      6573734D 
 2097      6F646500 
 2098              	.LASF59:
 2099 009f 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2099      43313120 
 2099      352E342E 
 2099      31203230 
 2099      31363036 
 2100 00d2 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2100      20726576 
 2100      6973696F 
 2100      6E203233 
 2100      37373135 
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 54


 2101 0105 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2101      66756E63 
 2101      74696F6E 
 2101      2D736563 
 2101      74696F6E 
 2102              	.LASF7:
 2103 012d 6C6F6E67 		.ascii	"long long unsigned int\000"
 2103      206C6F6E 
 2103      6720756E 
 2103      7369676E 
 2103      65642069 
 2104              	.LASF49:
 2105 0144 52585F72 		.ascii	"RX_rxBufferLoopDetect\000"
 2105      78427566 
 2105      6665724C 
 2105      6F6F7044 
 2105      65746563 
 2106              	.LASF6:
 2107 015a 6C6F6E67 		.ascii	"long long int\000"
 2107      206C6F6E 
 2107      6720696E 
 2107      7400
 2108              	.LASF0:
 2109 0168 7369676E 		.ascii	"signed char\000"
 2109      65642063 
 2109      68617200 
 2110              	.LASF20:
 2111 0174 52585F53 		.ascii	"RX_Stop\000"
 2111      746F7000 
 2112              	.LASF32:
 2113 017c 52585F47 		.ascii	"RX_GetChar\000"
 2113      65744368 
 2113      617200
 2114              	.LASF4:
 2115 0187 6C6F6E67 		.ascii	"long int\000"
 2115      20696E74 
 2115      00
 2116              	.LASF58:
 2117 0190 4379496E 		.ascii	"CyIntDisable\000"
 2117      74446973 
 2117      61626C65 
 2117      00
 2118              	.LASF9:
 2119 019d 75696E74 		.ascii	"uint8\000"
 2119      3800
 2120              	.LASF44:
 2121 01a3 52585F69 		.ascii	"RX_initVar\000"
 2121      6E697456 
 2121      617200
 2122              	.LASF12:
 2123 01ae 646F7562 		.ascii	"double\000"
 2123      6C6500
 2124              	.LASF40:
 2125 01b5 61646472 		.ascii	"addressMode\000"
 2125      6573734D 
 2125      6F646500 
 2126              	.LASF30:
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 55


 2127 01c1 52585F52 		.ascii	"RX_ReadRxStatus\000"
 2127      65616452 
 2127      78537461 
 2127      74757300 
 2128              	.LASF24:
 2129 01d1 636F6E74 		.ascii	"control\000"
 2129      726F6C00 
 2130              	.LASF8:
 2131 01d9 756E7369 		.ascii	"unsigned int\000"
 2131      676E6564 
 2131      20696E74 
 2131      00
 2132              	.LASF35:
 2133 01e6 6C6F6345 		.ascii	"locErrorStatus\000"
 2133      72726F72 
 2133      53746174 
 2133      757300
 2134              	.LASF5:
 2135 01f5 6C6F6E67 		.ascii	"long unsigned int\000"
 2135      20756E73 
 2135      69676E65 
 2135      6420696E 
 2135      7400
 2136              	.LASF62:
 2137 0207 52585F52 		.ascii	"RX_ReadControlRegister\000"
 2137      65616443 
 2137      6F6E7472 
 2137      6F6C5265 
 2137      67697374 
 2138              	.LASF38:
 2139 021e 52585F43 		.ascii	"RX_ClearRxBuffer\000"
 2139      6C656172 
 2139      52784275 
 2139      66666572 
 2139      00
 2140              	.LASF53:
 2141 022f 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2141      74657243 
 2141      72697469 
 2141      63616C53 
 2141      65637469 
 2142              	.LASF46:
 2143 0246 52585F72 		.ascii	"RX_rxBuffer\000"
 2143      78427566 
 2143      66657200 
 2144              	.LASF37:
 2145 0252 73697A65 		.ascii	"size\000"
 2145      00
 2146              	.LASF3:
 2147 0257 73686F72 		.ascii	"short unsigned int\000"
 2147      7420756E 
 2147      7369676E 
 2147      65642069 
 2147      6E7400
 2148              	.LASF36:
 2149 026a 52585F47 		.ascii	"RX_GetRxBufferSize\000"
 2149      65745278 
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 56


 2149      42756666 
 2149      65725369 
 2149      7A6500
 2150              	.LASF51:
 2151 027d 4379496E 		.ascii	"CyIntSetVector\000"
 2151      74536574 
 2151      56656374 
 2151      6F7200
 2152              	.LASF25:
 2153 028c 696E7453 		.ascii	"intSrc\000"
 2153      726300
 2154              	.LASF23:
 2155 0293 52585F53 		.ascii	"RX_SetRxInterruptMode\000"
 2155      65745278 
 2155      496E7465 
 2155      72727570 
 2155      744D6F64 
 2156              	.LASF16:
 2157 02a9 73697A65 		.ascii	"sizetype\000"
 2157      74797065 
 2157      00
 2158              	.LASF15:
 2159 02b2 6C6F6E67 		.ascii	"long double\000"
 2159      20646F75 
 2159      626C6500 
 2160              	.LASF42:
 2161 02be 61646472 		.ascii	"address\000"
 2161      65737300 
 2162              	.LASF54:
 2163 02c6 4379496E 		.ascii	"CyIntEnable\000"
 2163      74456E61 
 2163      626C6500 
 2164              	.LASF19:
 2165 02d2 52585F53 		.ascii	"RX_Start\000"
 2165      74617274 
 2165      00
 2166              	.LASF29:
 2167 02db 52585F52 		.ascii	"RX_ReadRxData\000"
 2167      65616452 
 2167      78446174 
 2167      6100
 2168              	.LASF50:
 2169 02e9 52585F72 		.ascii	"RX_rxBufferOverflow\000"
 2169      78427566 
 2169      6665724F 
 2169      76657266 
 2169      6C6F7700 
 2170              	.LASF17:
 2171 02fd 52585F49 		.ascii	"RX_Init\000"
 2171      6E697400 
 2172              	.LASF28:
 2173 0305 6C6F6352 		.ascii	"locRxBufferWrite\000"
 2173      78427566 
 2173      66657257 
 2173      72697465 
 2173      00
 2174              	.LASF33:
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 57


 2175 0316 72785374 		.ascii	"rxStatus\000"
 2175      61747573 
 2175      00
 2176              	.LASF52:
 2177 031f 4379496E 		.ascii	"CyIntSetPriority\000"
 2177      74536574 
 2177      5072696F 
 2177      72697479 
 2177      00
 2178              	.LASF11:
 2179 0330 666C6F61 		.ascii	"float\000"
 2179      7400
 2180              	.LASF14:
 2181 0336 72656738 		.ascii	"reg8\000"
 2181      00
 2182              	.LASF1:
 2183 033b 756E7369 		.ascii	"unsigned char\000"
 2183      676E6564 
 2183      20636861 
 2183      7200
 2184              	.LASF2:
 2185 0349 73686F72 		.ascii	"short int\000"
 2185      7420696E 
 2185      7400
 2186              	.LASF48:
 2187 0353 52585F72 		.ascii	"RX_rxBufferWrite\000"
 2187      78427566 
 2187      66657257 
 2187      72697465 
 2187      00
 2188              	.LASF34:
 2189 0364 52585F47 		.ascii	"RX_GetByte\000"
 2189      65744279 
 2189      746500
 2190              	.LASF26:
 2191 036f 72784461 		.ascii	"rxData\000"
 2191      746100
 2192              	.LASF60:
 2193 0376 47656E65 		.ascii	"Generated_Source\\PSoC4\\RX.c\000"
 2193      72617465 
 2193      645F536F 
 2193      75726365 
 2193      5C50536F 
 2194              	.LASF13:
 2195 0392 63686172 		.ascii	"char\000"
 2195      00
 2196              	.LASF18:
 2197 0397 52585F45 		.ascii	"RX_Enable\000"
 2197      6E61626C 
 2197      6500
 2198              	.LASF22:
 2199 03a1 52585F57 		.ascii	"RX_WriteControlRegister\000"
 2199      72697465 
 2199      436F6E74 
 2199      726F6C52 
 2199      65676973 
 2200              	.LASF27:
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccILqUSp.s 			page 58


 2201 03b9 6C6F6352 		.ascii	"locRxBufferRead\000"
 2201      78427566 
 2201      66657252 
 2201      65616400 
 2202              	.LASF21:
 2203 03c9 656E6162 		.ascii	"enableInterrupts\000"
 2203      6C65496E 
 2203      74657272 
 2203      75707473 
 2203      00
 2204              	.LASF31:
 2205 03da 73746174 		.ascii	"status\000"
 2205      757300
 2206              	.LASF47:
 2207 03e1 52585F72 		.ascii	"RX_rxBufferRead\000"
 2207      78427566 
 2207      66657252 
 2207      65616400 
 2208              	.LASF45:
 2209 03f1 52585F65 		.ascii	"RX_errorStatus\000"
 2209      72726F72 
 2209      53746174 
 2209      757300
 2210              	.LASF41:
 2211 0400 52585F53 		.ascii	"RX_SetRxAddress1\000"
 2211      65745278 
 2211      41646472 
 2211      65737331 
 2211      00
 2212              	.LASF43:
 2213 0411 52585F53 		.ascii	"RX_SetRxAddress2\000"
 2213      65745278 
 2213      41646472 
 2213      65737332 
 2213      00
 2214              	.LASF57:
 2215 0422 52585F49 		.ascii	"RX_IntClock_Stop\000"
 2215      6E74436C 
 2215      6F636B5F 
 2215      53746F70 
 2215      00
 2216              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
