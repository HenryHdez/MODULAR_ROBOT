ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CAN_TX_RX_func.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CAN_SendMsg,"ax",%progbits
  20              		.align	2
  21              		.global	CAN_SendMsg
  22              		.code	16
  23              		.thumb_func
  24              		.type	CAN_SendMsg, %function
  25              	CAN_SendMsg:
  26              	.LFB1:
  27              		.file 1 "CAN_TX_RX_func.c"
   1:CAN_TX_RX_func.c **** /*******************************************************************************
   2:CAN_TX_RX_func.c **** * File Name: CAN_TX_RX_func.c
   3:CAN_TX_RX_func.c **** * Version 3.0
   4:CAN_TX_RX_func.c **** *
   5:CAN_TX_RX_func.c **** * Description:
   6:CAN_TX_RX_func.c **** *  There are functions process "Full" Receive and Transmit mailboxes:
   7:CAN_TX_RX_func.c **** *     - CAN_SendMsg0-7();
   8:CAN_TX_RX_func.c **** *     - CAN_ReceiveMsg0-15();
   9:CAN_TX_RX_func.c **** *  Transmission of message, and receive routine for "Basic" mailboxes:
  10:CAN_TX_RX_func.c **** *     - CAN_SendMsg();
  11:CAN_TX_RX_func.c **** *     - CAN_TxCancel();
  12:CAN_TX_RX_func.c **** *     - CAN_ReceiveMsg();
  13:CAN_TX_RX_func.c **** *
  14:CAN_TX_RX_func.c **** *  Note:
  15:CAN_TX_RX_func.c **** *   None
  16:CAN_TX_RX_func.c **** *
  17:CAN_TX_RX_func.c **** ********************************************************************************
  18:CAN_TX_RX_func.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  19:CAN_TX_RX_func.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:CAN_TX_RX_func.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:CAN_TX_RX_func.c **** * the software package with which this file was provided.
  22:CAN_TX_RX_func.c **** *******************************************************************************/
  23:CAN_TX_RX_func.c **** 
  24:CAN_TX_RX_func.c **** #include "CAN.h"
  25:CAN_TX_RX_func.c **** #include "cyapicallbacks.h"
  26:CAN_TX_RX_func.c **** 
  27:CAN_TX_RX_func.c **** /* `#START TX_RX_FUNCTION` */
  28:CAN_TX_RX_func.c **** extern uint8 dato_enviado[8];
  29:CAN_TX_RX_func.c **** extern uint8 dato_enviado_1[8];
  30:CAN_TX_RX_func.c **** extern uint8 dato_enviado_2[8];
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 2


  31:CAN_TX_RX_func.c **** extern uint8 mailbox0[8];
  32:CAN_TX_RX_func.c **** extern uint8 mailbox1[8];
  33:CAN_TX_RX_func.c **** extern uint8 mailbox2[8];
  34:CAN_TX_RX_func.c **** /* `#END` */
  35:CAN_TX_RX_func.c **** 
  36:CAN_TX_RX_func.c **** 
  37:CAN_TX_RX_func.c **** /*******************************************************************************
  38:CAN_TX_RX_func.c **** * FUNCTION NAME:   CAN_SendMsg
  39:CAN_TX_RX_func.c **** ********************************************************************************
  40:CAN_TX_RX_func.c **** *
  41:CAN_TX_RX_func.c **** * Summary:
  42:CAN_TX_RX_func.c **** *  This function is Send Message from one of Basic mailboxes. The function loops
  43:CAN_TX_RX_func.c **** *  through the transmit message buffer designed as Basic CAN mailboxes for the
  44:CAN_TX_RX_func.c **** *  first free available and sends from it. The number of retries is limited.
  45:CAN_TX_RX_func.c **** *
  46:CAN_TX_RX_func.c **** * Parameters:
  47:CAN_TX_RX_func.c **** *  message: The pointer to a structure that contains all required data to send
  48:CAN_TX_RX_func.c **** *           messages.
  49:CAN_TX_RX_func.c **** *
  50:CAN_TX_RX_func.c **** * Return:
  51:CAN_TX_RX_func.c **** *  Indication if message has been sent.
  52:CAN_TX_RX_func.c **** *   Define                             Description
  53:CAN_TX_RX_func.c **** *    CYRET_SUCCESS                      The function passed successfully
  54:CAN_TX_RX_func.c **** *    CAN_FAIL              The function failed
  55:CAN_TX_RX_func.c **** *
  56:CAN_TX_RX_func.c **** *******************************************************************************/
  57:CAN_TX_RX_func.c **** uint8 CAN_SendMsg(const CAN_TX_MSG *message) 
  58:CAN_TX_RX_func.c **** {
  28              		.loc 1 58 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  34              		.cfi_def_cfa_offset 24
  35              		.cfi_offset 3, -24
  36              		.cfi_offset 4, -20
  37              		.cfi_offset 5, -16
  38              		.cfi_offset 6, -12
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 4F46     		mov	r7, r9
  42 0004 4646     		mov	r6, r8
  43 0006 C0B4     		push	{r6, r7}
  44              		.cfi_def_cfa_offset 32
  45              		.cfi_offset 8, -32
  46              		.cfi_offset 9, -28
  47 0008 0600     		movs	r6, r0
  48              	.LVL1:
  59:CAN_TX_RX_func.c ****     uint8 i, j, shift;
  60:CAN_TX_RX_func.c ****     uint8 retry = 0u;
  61:CAN_TX_RX_func.c ****     uint8 result = CAN_FAIL;
  49              		.loc 1 61 0
  50 000a 0120     		movs	r0, #1
  51              	.LVL2:
  60:CAN_TX_RX_func.c ****     uint8 result = CAN_FAIL;
  52              		.loc 1 60 0
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 3


  53 000c 0023     		movs	r3, #0
  54 000e 9846     		mov	r8, r3
  62:CAN_TX_RX_func.c ****     uint32 regTemp;
  63:CAN_TX_RX_func.c **** 
  64:CAN_TX_RX_func.c ****     while (retry < CAN_RETRY_NUMBER)
  55              		.loc 1 64 0
  56 0010 94E0     		b	.L2
  57              	.LVL3:
  58              	.L18:
  65:CAN_TX_RX_func.c ****     {
  66:CAN_TX_RX_func.c ****         shift = 1u;    /* Start from first mailbox */
  67:CAN_TX_RX_func.c ****         for (i = 0u; i < CAN_NUMBER_OF_TX_MAILBOXES; i++)
  68:CAN_TX_RX_func.c ****         {
  69:CAN_TX_RX_func.c ****             /* Find Basic TX mailboxes */
  70:CAN_TX_RX_func.c ****             if ((CAN_TX_MAILBOX_TYPE & shift) == 0u)
  59              		.loc 1 70 0
  60 0012 0B23     		movs	r3, #11
  61 0014 2B42     		tst	r3, r5
  62 0016 7FD1     		bne	.L3
  71:CAN_TX_RX_func.c ****             {
  72:CAN_TX_RX_func.c ****                 /* Find free mailbox */
  73:CAN_TX_RX_func.c ****                 #if (CY_PSOC3 || CY_PSOC5)
  74:CAN_TX_RX_func.c ****                     if ((CAN_BUF_SR_REG.byte[2] & shift) == 0u)
  75:CAN_TX_RX_func.c ****                 #else  /* CY_PSOC4 */
  76:CAN_TX_RX_func.c ****                     if ((CAN_BUF_SR_REG &
  63              		.loc 1 76 0
  64 0018 4C4B     		ldr	r3, .L23
  65 001a 1B68     		ldr	r3, [r3]
  77:CAN_TX_RX_func.c ****                         (uint32) ((uint32) shift << CAN_TWO_BYTE_OFFSET)) == 0u)
  66              		.loc 1 77 0
  67 001c 2A04     		lsls	r2, r5, #16
  76:CAN_TX_RX_func.c ****                         (uint32) ((uint32) shift << CAN_TWO_BYTE_OFFSET)) == 0u)
  68              		.loc 1 76 0
  69 001e 1A42     		tst	r2, r3
  70 0020 7AD1     		bne	.L3
  71              	.LVL4:
  78:CAN_TX_RX_func.c ****                 #endif /* CY_PSOC3 || CY_PSOC5 */
  79:CAN_TX_RX_func.c ****                     {
  80:CAN_TX_RX_func.c ****                         regTemp = 0u;
  81:CAN_TX_RX_func.c **** 
  82:CAN_TX_RX_func.c ****                         /* Set message parameters */
  83:CAN_TX_RX_func.c ****                         if (message->rtr != CAN_STANDARD_MESSAGE)
  72              		.loc 1 83 0
  73 0022 3379     		ldrb	r3, [r6, #4]
  74 0024 002B     		cmp	r3, #0
  75 0026 01D1     		bne	.L21
  80:CAN_TX_RX_func.c **** 
  76              		.loc 1 80 0
  77 0028 0027     		movs	r7, #0
  78 002a 01E0     		b	.L4
  79              	.L21:
  84:CAN_TX_RX_func.c ****                         {
  85:CAN_TX_RX_func.c ****                             regTemp = CAN_TX_RTR_MASK;    /* RTR message Enable */
  80              		.loc 1 85 0
  81 002c 8027     		movs	r7, #128
  82 002e BF03     		lsls	r7, r7, #14
  83              	.L4:
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 4


  84              	.LVL5:
  86:CAN_TX_RX_func.c ****                         }
  87:CAN_TX_RX_func.c **** 
  88:CAN_TX_RX_func.c ****                         if (message->ide == CAN_STANDARD_MESSAGE)
  85              		.loc 1 88 0
  86 0030 7379     		ldrb	r3, [r6, #5]
  87 0032 002B     		cmp	r3, #0
  88 0034 07D1     		bne	.L5
  89:CAN_TX_RX_func.c ****                         {
  90:CAN_TX_RX_func.c ****                             CAN_SET_TX_ID_STANDARD_MSG(i, message->id);
  89              		.loc 1 90 0
  90 0036 2301     		lsls	r3, r4, #4
  91 0038 454A     		ldr	r2, .L23+4
  92 003a 9446     		mov	ip, r2
  93 003c 6344     		add	r3, r3, ip
  94 003e 3268     		ldr	r2, [r6]
  95 0040 5205     		lsls	r2, r2, #21
  96 0042 5A60     		str	r2, [r3, #4]
  97 0044 09E0     		b	.L6
  98              	.L5:
  91:CAN_TX_RX_func.c ****                         }
  92:CAN_TX_RX_func.c ****                         else
  93:CAN_TX_RX_func.c ****                         {
  94:CAN_TX_RX_func.c ****                             regTemp |= CAN_TX_IDE_MASK;
  99              		.loc 1 94 0
 100 0046 8023     		movs	r3, #128
 101 0048 5B03     		lsls	r3, r3, #13
 102 004a 1F43     		orrs	r7, r3
 103              	.LVL6:
  95:CAN_TX_RX_func.c ****                             CAN_SET_TX_ID_EXTENDED_MSG(i, message->id);
 104              		.loc 1 95 0
 105 004c 2301     		lsls	r3, r4, #4
 106 004e 404A     		ldr	r2, .L23+4
 107 0050 9446     		mov	ip, r2
 108 0052 6344     		add	r3, r3, ip
 109 0054 3268     		ldr	r2, [r6]
 110 0056 D200     		lsls	r2, r2, #3
 111 0058 5A60     		str	r2, [r3, #4]
 112              	.L6:
  96:CAN_TX_RX_func.c ****                         }
  97:CAN_TX_RX_func.c **** 
  98:CAN_TX_RX_func.c ****                         if (message->dlc < CAN_TX_DLC_MAX_VALUE)
 113              		.loc 1 98 0
 114 005a B379     		ldrb	r3, [r6, #6]
 115 005c 072B     		cmp	r3, #7
 116 005e 03D8     		bhi	.L7
  99:CAN_TX_RX_func.c ****                         {
 100:CAN_TX_RX_func.c ****                             regTemp |= ((uint32) message->dlc) << CAN_TWO_BYTE_OFFSET;
 117              		.loc 1 100 0
 118 0060 1B04     		lsls	r3, r3, #16
 119 0062 1F43     		orrs	r7, r3
 120              	.LVL7:
 121 0064 B946     		mov	r9, r7
 122              	.LVL8:
 123 0066 03E0     		b	.L8
 124              	.L7:
 101:CAN_TX_RX_func.c ****                         }
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 5


 102:CAN_TX_RX_func.c ****                         else
 103:CAN_TX_RX_func.c ****                         {
 104:CAN_TX_RX_func.c ****                             regTemp |= CAN_TX_DLC_UPPER_VALUE;
 125              		.loc 1 104 0
 126 0068 8023     		movs	r3, #128
 127 006a 1B03     		lsls	r3, r3, #12
 128 006c 1F43     		orrs	r7, r3
 129              	.LVL9:
 130 006e B946     		mov	r9, r7
 131              	.LVL10:
 132              	.L8:
 105:CAN_TX_RX_func.c ****                         }
 106:CAN_TX_RX_func.c **** 
 107:CAN_TX_RX_func.c ****                         if (message->irq != CAN_TRANSMIT_INT_DISABLE)
 133              		.loc 1 107 0
 134 0070 F379     		ldrb	r3, [r6, #7]
 135 0072 002B     		cmp	r3, #0
 136 0074 03D0     		beq	.L9
 108:CAN_TX_RX_func.c ****                         {
 109:CAN_TX_RX_func.c ****                             regTemp |= CAN_TX_INT_ENABLE_MASK;    /* Transmit Interrupt Enable */
 137              		.loc 1 109 0
 138 0076 0423     		movs	r3, #4
 139 0078 4A46     		mov	r2, r9
 140 007a 1A43     		orrs	r2, r3
 141 007c 9146     		mov	r9, r2
 142              	.LVL11:
 143              	.L9:
 110:CAN_TX_RX_func.c ****                         }
 111:CAN_TX_RX_func.c **** 
 112:CAN_TX_RX_func.c ****                         for (j = 0u; (j < message->dlc) && (j < CAN_TX_DLC_MAX_VALUE); j++)
 144              		.loc 1 112 0
 145 007e 0023     		movs	r3, #0
 146 0080 2AE0     		b	.L10
 147              	.LVL12:
 148              	.L14:
 113:CAN_TX_RX_func.c ****                         {
 114:CAN_TX_RX_func.c ****                             #if (CY_PSOC3 || CY_PSOC5)
 115:CAN_TX_RX_func.c ****                                 CAN_TX_DATA_BYTE(i, j) = message->msg->byte[j];
 116:CAN_TX_RX_func.c ****                             #else /* CY_PSOC4 */
 117:CAN_TX_RX_func.c ****                                 CAN_TX_DATA_BYTE(i, j, message->msg->byte[j]);
 149              		.loc 1 117 0
 150 0082 032B     		cmp	r3, #3
 151 0084 13D9     		bls	.L11
 152              		.loc 1 117 0 is_stmt 0 discriminator 1
 153 0086 2001     		lsls	r0, r4, #4
 154 0088 324A     		ldr	r2, .L23+8
 155 008a 9446     		mov	ip, r2
 156 008c 6044     		add	r0, r0, ip
 157 008e 0268     		ldr	r2, [r0]
 158 0090 9446     		mov	ip, r2
 159 0092 5907     		lsls	r1, r3, #29
 160 0094 CA1A     		subs	r2, r1, r3
 161 0096 D100     		lsls	r1, r2, #3
 162 0098 3831     		adds	r1, r1, #56
 163 009a FF22     		movs	r2, #255
 164 009c 8A40     		lsls	r2, r2, r1
 165 009e 6746     		mov	r7, ip
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 6


 166 00a0 9743     		bics	r7, r2
 167 00a2 F268     		ldr	r2, [r6, #12]
 168 00a4 D25C     		ldrb	r2, [r2, r3]
 169 00a6 8A40     		lsls	r2, r2, r1
 170 00a8 3A43     		orrs	r2, r7
 171 00aa 0260     		str	r2, [r0]
 172 00ac 12E0     		b	.L12
 173              	.L11:
 174              		.loc 1 117 0 discriminator 2
 175 00ae 2001     		lsls	r0, r4, #4
 176 00b0 274A     		ldr	r2, .L23+4
 177 00b2 9446     		mov	ip, r2
 178 00b4 6044     		add	r0, r0, ip
 179 00b6 8268     		ldr	r2, [r0, #8]
 180 00b8 9446     		mov	ip, r2
 181 00ba 5907     		lsls	r1, r3, #29
 182 00bc CA1A     		subs	r2, r1, r3
 183 00be D100     		lsls	r1, r2, #3
 184 00c0 1831     		adds	r1, r1, #24
 185 00c2 FF22     		movs	r2, #255
 186 00c4 8A40     		lsls	r2, r2, r1
 187 00c6 6746     		mov	r7, ip
 188 00c8 9743     		bics	r7, r2
 189 00ca F268     		ldr	r2, [r6, #12]
 190 00cc D25C     		ldrb	r2, [r2, r3]
 191 00ce 8A40     		lsls	r2, r2, r1
 192 00d0 3A43     		orrs	r2, r7
 193 00d2 8260     		str	r2, [r0, #8]
 194              	.L12:
 112:CAN_TX_RX_func.c ****                         {
 195              		.loc 1 112 0 is_stmt 1 discriminator 2
 196 00d4 0133     		adds	r3, r3, #1
 197              	.LVL13:
 198 00d6 DBB2     		uxtb	r3, r3
 199              	.LVL14:
 200              	.L10:
 112:CAN_TX_RX_func.c ****                         {
 201              		.loc 1 112 0 is_stmt 0 discriminator 1
 202 00d8 B279     		ldrb	r2, [r6, #6]
 203 00da 9342     		cmp	r3, r2
 204 00dc 01D2     		bcs	.L13
 112:CAN_TX_RX_func.c ****                         {
 205              		.loc 1 112 0 discriminator 3
 206 00de 072B     		cmp	r3, #7
 207 00e0 CFD9     		bls	.L14
 208              	.L13:
 118:CAN_TX_RX_func.c ****                             #endif /* CY_PSOC3 || CY_PSOC5 */
 119:CAN_TX_RX_func.c ****                         }
 120:CAN_TX_RX_func.c **** 
 121:CAN_TX_RX_func.c ****                         /* Disable isr */
 122:CAN_TX_RX_func.c ****     CyIntDisable(CAN_ISR_NUMBER);
 209              		.loc 1 122 0 is_stmt 1
 210 00e2 1B20     		movs	r0, #27
 211 00e4 FFF7FEFF 		bl	CyIntDisable
 212              	.LVL15:
 123:CAN_TX_RX_func.c **** 
 124:CAN_TX_RX_func.c ****                         /* WPN[23] and WPN[3] set to 1 for write to CAN Control reg */
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 7


 125:CAN_TX_RX_func.c ****                         CY_SET_REG32(CAN_TX_CMD_PTR(i), (regTemp | CAN_TX_WPN_SET));
 213              		.loc 1 125 0
 214 00e8 2301     		lsls	r3, r4, #4
 215 00ea 194A     		ldr	r2, .L23+4
 216 00ec 9446     		mov	ip, r2
 217 00ee 6344     		add	r3, r3, ip
 218 00f0 194A     		ldr	r2, .L23+12
 219 00f2 4F46     		mov	r7, r9
 220 00f4 1743     		orrs	r7, r2
 221 00f6 1F60     		str	r7, [r3]
 126:CAN_TX_RX_func.c **** 
 127:CAN_TX_RX_func.c ****                         #if (CY_PSOC3 || CY_PSOC5)
 128:CAN_TX_RX_func.c ****                             CY_SET_REG32(CAN_TX_CMD_PTR(i), CAN_SEND_MESSAGE);
 129:CAN_TX_RX_func.c ****                         #else /* CY_PSOC4 */
 130:CAN_TX_RX_func.c ****                             if (message->sst != CAN_STANDARD_MESSAGE)
 222              		.loc 1 130 0
 223 00f8 327A     		ldrb	r2, [r6, #8]
 224 00fa 002A     		cmp	r2, #0
 225 00fc 04D0     		beq	.L15
 131:CAN_TX_RX_func.c ****                             {
 132:CAN_TX_RX_func.c ****                                 /* Single Shot Transmission */
 133:CAN_TX_RX_func.c ****                                 CAN_TX_CMD_REG(i) |= CAN_SEND_MESSAGE |
 226              		.loc 1 133 0
 227 00fe 1968     		ldr	r1, [r3]
 228 0100 0322     		movs	r2, #3
 229 0102 0A43     		orrs	r2, r1
 230 0104 1A60     		str	r2, [r3]
 231 0106 03E0     		b	.L16
 232              	.L15:
 134:CAN_TX_RX_func.c ****                                 CAN_TX_ABORT_MASK;
 135:CAN_TX_RX_func.c ****                             }
 136:CAN_TX_RX_func.c ****                             else
 137:CAN_TX_RX_func.c ****                             {
 138:CAN_TX_RX_func.c ****                                 CAN_TX_CMD_REG(i) |= CAN_SEND_MESSAGE;
 233              		.loc 1 138 0
 234 0108 1968     		ldr	r1, [r3]
 235 010a 0122     		movs	r2, #1
 236 010c 0A43     		orrs	r2, r1
 237 010e 1A60     		str	r2, [r3]
 238              	.L16:
 139:CAN_TX_RX_func.c ****                             }
 140:CAN_TX_RX_func.c ****                         #endif /* CY_PSOC3 || CY_PSOC5 */
 141:CAN_TX_RX_func.c **** 
 142:CAN_TX_RX_func.c ****                         /* Enable isr */
 143:CAN_TX_RX_func.c ****     CyIntEnable(CAN_ISR_NUMBER);
 239              		.loc 1 143 0
 240 0110 1B20     		movs	r0, #27
 241 0112 FFF7FEFF 		bl	CyIntEnable
 242              	.LVL16:
 144:CAN_TX_RX_func.c **** 
 145:CAN_TX_RX_func.c ****                         result = CYRET_SUCCESS;
 243              		.loc 1 145 0
 244 0116 0020     		movs	r0, #0
 245              	.LVL17:
 246              	.L3:
 146:CAN_TX_RX_func.c ****                     }
 147:CAN_TX_RX_func.c ****             }
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 8


 148:CAN_TX_RX_func.c ****             shift <<= 1u;
 247              		.loc 1 148 0
 248 0118 6D00     		lsls	r5, r5, #1
 249              	.LVL18:
 250 011a EDB2     		uxtb	r5, r5
 251              	.LVL19:
 149:CAN_TX_RX_func.c ****             if (result == CYRET_SUCCESS)
 252              		.loc 1 149 0
 253 011c 0028     		cmp	r0, #0
 254 011e 07D0     		beq	.L17
  67:CAN_TX_RX_func.c ****         {
 255              		.loc 1 67 0 discriminator 2
 256 0120 0134     		adds	r4, r4, #1
 257              	.LVL20:
 258 0122 E4B2     		uxtb	r4, r4
 259              	.LVL21:
 260 0124 01E0     		b	.L20
 261              	.LVL22:
 262              	.L22:
 263 0126 0125     		movs	r5, #1
 264 0128 0024     		movs	r4, #0
 265              	.L20:
 266              	.LVL23:
  67:CAN_TX_RX_func.c ****         {
 267              		.loc 1 67 0 is_stmt 0 discriminator 1
 268 012a 072C     		cmp	r4, #7
 269 012c 00D8     		bhi	.LCB273
 270 012e 70E7     		b	.L18	@long jump
 271              	.LCB273:
 272              	.L17:
 150:CAN_TX_RX_func.c ****             {
 151:CAN_TX_RX_func.c ****                 break;
 152:CAN_TX_RX_func.c ****             }
 153:CAN_TX_RX_func.c ****         }
 154:CAN_TX_RX_func.c ****         if (result == CYRET_SUCCESS)
 273              		.loc 1 154 0 is_stmt 1
 274 0130 0028     		cmp	r0, #0
 275 0132 06D0     		beq	.L19
 155:CAN_TX_RX_func.c ****         {
 156:CAN_TX_RX_func.c ****             break;
 157:CAN_TX_RX_func.c ****         }
 158:CAN_TX_RX_func.c ****         else
 159:CAN_TX_RX_func.c ****         {
 160:CAN_TX_RX_func.c ****             retry++;
 276              		.loc 1 160 0
 277 0134 4346     		mov	r3, r8
 278 0136 0133     		adds	r3, r3, #1
 279 0138 DBB2     		uxtb	r3, r3
 280 013a 9846     		mov	r8, r3
 281              	.LVL24:
 282              	.L2:
  64:CAN_TX_RX_func.c ****     {
 283              		.loc 1 64 0
 284 013c 4346     		mov	r3, r8
 285 013e 022B     		cmp	r3, #2
 286 0140 F1D9     		bls	.L22
 287              	.L19:
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 9


 161:CAN_TX_RX_func.c ****         }
 162:CAN_TX_RX_func.c ****     }
 163:CAN_TX_RX_func.c **** 
 164:CAN_TX_RX_func.c ****     return (result);
 165:CAN_TX_RX_func.c **** }
 288              		.loc 1 165 0
 289              		@ sp needed
 290              	.LVL25:
 291              	.LVL26:
 292 0142 0CBC     		pop	{r2, r3}
 293 0144 9046     		mov	r8, r2
 294 0146 9946     		mov	r9, r3
 295 0148 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 296              	.L24:
 297 014a C046     		.align	2
 298              	.L23:
 299 014c 08002E40 		.word	1076756488
 300 0150 20002E40 		.word	1076756512
 301 0154 2C002E40 		.word	1076756524
 302 0158 08008000 		.word	8388616
 303              		.cfi_endproc
 304              	.LFE1:
 305              		.size	CAN_SendMsg, .-CAN_SendMsg
 306              		.section	.text.CAN_TxCancel,"ax",%progbits
 307              		.align	2
 308              		.global	CAN_TxCancel
 309              		.code	16
 310              		.thumb_func
 311              		.type	CAN_TxCancel, %function
 312              	CAN_TxCancel:
 313              	.LFB2:
 166:CAN_TX_RX_func.c **** 
 167:CAN_TX_RX_func.c **** 
 168:CAN_TX_RX_func.c **** /*******************************************************************************
 169:CAN_TX_RX_func.c **** * FUNCTION NAME:   CAN_TxCancel
 170:CAN_TX_RX_func.c **** ********************************************************************************
 171:CAN_TX_RX_func.c **** *
 172:CAN_TX_RX_func.c **** * Summary:
 173:CAN_TX_RX_func.c **** *  This function cancels transmission of a message that has been queued to be
 174:CAN_TX_RX_func.c **** *  transmitted. Values between 0 and 7 are valid.
 175:CAN_TX_RX_func.c **** *
 176:CAN_TX_RX_func.c **** * Parameters:
 177:CAN_TX_RX_func.c **** *  bufferId: The mailbox number.
 178:CAN_TX_RX_func.c **** *
 179:CAN_TX_RX_func.c **** * Return:
 180:CAN_TX_RX_func.c **** *  None.
 181:CAN_TX_RX_func.c **** *
 182:CAN_TX_RX_func.c **** *******************************************************************************/
 183:CAN_TX_RX_func.c **** void CAN_TxCancel(uint8 bufferId) 
 184:CAN_TX_RX_func.c **** {
 314              		.loc 1 184 0
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 0
 317              		@ frame_needed = 0, uses_anonymous_args = 0
 318              		@ link register save eliminated.
 319              	.LVL27:
 185:CAN_TX_RX_func.c ****     if (bufferId < CAN_NUMBER_OF_TX_MAILBOXES)
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 10


 320              		.loc 1 185 0
 321 0000 0728     		cmp	r0, #7
 322 0002 09D8     		bhi	.L25
 186:CAN_TX_RX_func.c ****     {
 187:CAN_TX_RX_func.c ****         CAN_TX_ABORT_MESSAGE(bufferId);
 323              		.loc 1 187 0
 324 0004 0001     		lsls	r0, r0, #4
 325              	.LVL28:
 326 0006 054B     		ldr	r3, .L27
 327 0008 9C46     		mov	ip, r3
 328 000a 6044     		add	r0, r0, ip
 329 000c 0368     		ldr	r3, [r0]
 330 000e 0322     		movs	r2, #3
 331 0010 9343     		bics	r3, r2
 332 0012 013A     		subs	r2, r2, #1
 333 0014 1343     		orrs	r3, r2
 334 0016 0360     		str	r3, [r0]
 335              	.L25:
 188:CAN_TX_RX_func.c ****     }
 189:CAN_TX_RX_func.c **** }
 336              		.loc 1 189 0
 337              		@ sp needed
 338 0018 7047     		bx	lr
 339              	.L28:
 340 001a C046     		.align	2
 341              	.L27:
 342 001c 20002E40 		.word	1076756512
 343              		.cfi_endproc
 344              	.LFE2:
 345              		.size	CAN_TxCancel, .-CAN_TxCancel
 346              		.section	.text.CAN_SendMsg0,"ax",%progbits
 347              		.align	2
 348              		.global	CAN_SendMsg0
 349              		.code	16
 350              		.thumb_func
 351              		.type	CAN_SendMsg0, %function
 352              	CAN_SendMsg0:
 353              	.LFB3:
 190:CAN_TX_RX_func.c **** 
 191:CAN_TX_RX_func.c **** 
 192:CAN_TX_RX_func.c **** #if (CAN_TX0_FUNC_ENABLE)
 193:CAN_TX_RX_func.c ****     /*******************************************************************************
 194:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg0
 195:CAN_TX_RX_func.c ****     ********************************************************************************
 196:CAN_TX_RX_func.c ****     *
 197:CAN_TX_RX_func.c ****     * Summary:
 198:CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 0. The function checks
 199:CAN_TX_RX_func.c ****     *  if mailbox 0 doesn't already have un-transmitted messages waiting for
 200:CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 201:CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 202:CAN_TX_RX_func.c ****     *
 203:CAN_TX_RX_func.c ****     * Parameters:
 204:CAN_TX_RX_func.c ****     *  None.
 205:CAN_TX_RX_func.c ****     *
 206:CAN_TX_RX_func.c ****     * Return:
 207:CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 208:CAN_TX_RX_func.c ****     *   Define                             Description
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 11


 209:CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 210:CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 211:CAN_TX_RX_func.c ****     *
 212:CAN_TX_RX_func.c ****     *******************************************************************************/
 213:CAN_TX_RX_func.c ****     uint8 CAN_SendMsg0(void) 
 214:CAN_TX_RX_func.c ****     {
 354              		.loc 1 214 0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 0
 357              		@ frame_needed = 0, uses_anonymous_args = 0
 358 0000 70B5     		push	{r4, r5, r6, lr}
 359              		.cfi_def_cfa_offset 16
 360              		.cfi_offset 4, -16
 361              		.cfi_offset 5, -12
 362              		.cfi_offset 6, -8
 363              		.cfi_offset 14, -4
 364              	.LVL29:
 215:CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 216:CAN_TX_RX_func.c **** 
 217:CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 218:CAN_TX_RX_func.c ****             if ((CAN_TX[0u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 219:CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 220:CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(0u) & CAN_TX_REQUEST_PENDING) != 0u)
 365              		.loc 1 220 0
 366 0002 234B     		ldr	r3, .L32
 367 0004 1B68     		ldr	r3, [r3]
 368 0006 DB07     		lsls	r3, r3, #31
 369 0008 3FD4     		bmi	.L31
 221:CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 222:CAN_TX_RX_func.c ****             {
 223:CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 224:CAN_TX_RX_func.c ****             }
 225:CAN_TX_RX_func.c ****             else
 226:CAN_TX_RX_func.c ****             {
 227:CAN_TX_RX_func.c ****                 /* `#START MESSAGE_0_TRASMITTED` */
 228:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(0,0,dato_enviado[0]);
 370              		.loc 1 228 0
 371 000a 224B     		ldr	r3, .L32+4
 372 000c 1968     		ldr	r1, [r3]
 373 000e 0902     		lsls	r1, r1, #8
 374 0010 090A     		lsrs	r1, r1, #8
 375 0012 214A     		ldr	r2, .L32+8
 376 0014 1078     		ldrb	r0, [r2]
 377 0016 0006     		lsls	r0, r0, #24
 378 0018 0143     		orrs	r1, r0
 379 001a 1960     		str	r1, [r3]
 229:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(0,1,dato_enviado[1]);
 380              		.loc 1 229 0
 381 001c 1968     		ldr	r1, [r3]
 382 001e 1F48     		ldr	r0, .L32+12
 383 0020 0140     		ands	r1, r0
 384 0022 0C00     		movs	r4, r1
 385 0024 5178     		ldrb	r1, [r2, #1]
 386 0026 0904     		lsls	r1, r1, #16
 387 0028 2143     		orrs	r1, r4
 388 002a 1960     		str	r1, [r3]
 230:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(0,2,dato_enviado[2]);
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 12


 389              		.loc 1 230 0
 390 002c 1C68     		ldr	r4, [r3]
 391 002e 1C49     		ldr	r1, .L32+16
 392 0030 0C40     		ands	r4, r1
 393 0032 2500     		movs	r5, r4
 394 0034 9478     		ldrb	r4, [r2, #2]
 395 0036 2402     		lsls	r4, r4, #8
 396 0038 2C43     		orrs	r4, r5
 397 003a 1C60     		str	r4, [r3]
 231:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(0,3,dato_enviado[3]);
 398              		.loc 1 231 0
 399 003c 1C68     		ldr	r4, [r3]
 400 003e FF26     		movs	r6, #255
 401 0040 B443     		bics	r4, r6
 402 0042 D578     		ldrb	r5, [r2, #3]
 403 0044 2C43     		orrs	r4, r5
 404 0046 1C60     		str	r4, [r3]
 232:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(0,4,dato_enviado[4]);
 405              		.loc 1 232 0
 406 0048 164B     		ldr	r3, .L32+20
 407 004a 1C68     		ldr	r4, [r3]
 408 004c 2402     		lsls	r4, r4, #8
 409 004e 240A     		lsrs	r4, r4, #8
 410 0050 1579     		ldrb	r5, [r2, #4]
 411 0052 2D06     		lsls	r5, r5, #24
 412 0054 2C43     		orrs	r4, r5
 413 0056 1C60     		str	r4, [r3]
 233:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(0,5,dato_enviado[5]);
 414              		.loc 1 233 0
 415 0058 1C68     		ldr	r4, [r3]
 416 005a 2040     		ands	r0, r4
 417 005c 5479     		ldrb	r4, [r2, #5]
 418 005e 2404     		lsls	r4, r4, #16
 419 0060 2043     		orrs	r0, r4
 420 0062 1860     		str	r0, [r3]
 234:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(0,6,dato_enviado[6]);
 421              		.loc 1 234 0
 422 0064 1868     		ldr	r0, [r3]
 423 0066 0140     		ands	r1, r0
 424 0068 9079     		ldrb	r0, [r2, #6]
 425 006a 0002     		lsls	r0, r0, #8
 426 006c 0143     		orrs	r1, r0
 427 006e 1960     		str	r1, [r3]
 235:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(0,7,dato_enviado[7]);                           
 428              		.loc 1 235 0
 429 0070 1868     		ldr	r0, [r3]
 430 0072 B043     		bics	r0, r6
 431 0074 D179     		ldrb	r1, [r2, #7]
 432 0076 0200     		movs	r2, r0
 433 0078 0A43     		orrs	r2, r1
 434 007a 1A60     		str	r2, [r3]
 236:CAN_TX_RX_func.c ****                 /* `#END` */
 237:CAN_TX_RX_func.c **** 
 238:CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_0_CALLBACK
 239:CAN_TX_RX_func.c ****                     CAN_SendMsg_0_Callback();
 240:CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_0_CALLBACK */
 241:CAN_TX_RX_func.c **** 
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 13


 242:CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(0u),
 435              		.loc 1 242 0
 436 007c 044A     		ldr	r2, .L32
 437 007e 1168     		ldr	r1, [r2]
 438 0080 0123     		movs	r3, #1
 439 0082 0B43     		orrs	r3, r1
 440 0084 1360     		str	r3, [r2]
 215:CAN_TX_RX_func.c **** 
 441              		.loc 1 215 0
 442 0086 0020     		movs	r0, #0
 443 0088 00E0     		b	.L30
 444              	.L31:
 223:CAN_TX_RX_func.c ****             }
 445              		.loc 1 223 0
 446 008a 0120     		movs	r0, #1
 447              	.L30:
 448              	.LVL30:
 243:CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(0u)) | CAN_SEND_MESSAGE);
 244:CAN_TX_RX_func.c ****             }
 245:CAN_TX_RX_func.c **** 
 246:CAN_TX_RX_func.c ****         return (result);
 247:CAN_TX_RX_func.c ****     }
 449              		.loc 1 247 0
 450              		@ sp needed
 451 008c 70BD     		pop	{r4, r5, r6, pc}
 452              	.L33:
 453 008e C046     		.align	2
 454              	.L32:
 455 0090 20002E40 		.word	1076756512
 456 0094 28002E40 		.word	1076756520
 457 0098 00000000 		.word	dato_enviado
 458 009c FFFF00FF 		.word	-16711681
 459 00a0 FF00FFFF 		.word	-65281
 460 00a4 2C002E40 		.word	1076756524
 461              		.cfi_endproc
 462              	.LFE3:
 463              		.size	CAN_SendMsg0, .-CAN_SendMsg0
 464              		.section	.text.CAN_SendMsg1,"ax",%progbits
 465              		.align	2
 466              		.global	CAN_SendMsg1
 467              		.code	16
 468              		.thumb_func
 469              		.type	CAN_SendMsg1, %function
 470              	CAN_SendMsg1:
 471              	.LFB4:
 248:CAN_TX_RX_func.c **** #endif /* CAN_TX0_FUNC_ENABLE */
 249:CAN_TX_RX_func.c **** 
 250:CAN_TX_RX_func.c **** 
 251:CAN_TX_RX_func.c **** #if (CAN_TX1_FUNC_ENABLE)
 252:CAN_TX_RX_func.c ****     /*******************************************************************************
 253:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg1
 254:CAN_TX_RX_func.c ****     ********************************************************************************
 255:CAN_TX_RX_func.c ****     *
 256:CAN_TX_RX_func.c ****     * Summary:
 257:CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 1. The function checks
 258:CAN_TX_RX_func.c ****     *  if mailbox 1 doesn't already have un-transmitted messages waiting for
 259:CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 14


 260:CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 261:CAN_TX_RX_func.c ****     *
 262:CAN_TX_RX_func.c ****     * Parameters:
 263:CAN_TX_RX_func.c ****     *  None.
 264:CAN_TX_RX_func.c ****     *
 265:CAN_TX_RX_func.c ****     * Return:
 266:CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 267:CAN_TX_RX_func.c ****     *   Define                             Description
 268:CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 269:CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 270:CAN_TX_RX_func.c ****     *
 271:CAN_TX_RX_func.c ****     *******************************************************************************/
 272:CAN_TX_RX_func.c ****     uint8 CAN_SendMsg1(void) 
 273:CAN_TX_RX_func.c ****     {
 472              		.loc 1 273 0
 473              		.cfi_startproc
 474              		@ args = 0, pretend = 0, frame = 0
 475              		@ frame_needed = 0, uses_anonymous_args = 0
 476 0000 70B5     		push	{r4, r5, r6, lr}
 477              		.cfi_def_cfa_offset 16
 478              		.cfi_offset 4, -16
 479              		.cfi_offset 5, -12
 480              		.cfi_offset 6, -8
 481              		.cfi_offset 14, -4
 482              	.LVL31:
 274:CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 275:CAN_TX_RX_func.c **** 
 276:CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 277:CAN_TX_RX_func.c ****             if ((CAN_TX[1u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 278:CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 279:CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(1u) & CAN_TX_REQUEST_PENDING) != 0u)
 483              		.loc 1 279 0
 484 0002 234B     		ldr	r3, .L37
 485 0004 1B68     		ldr	r3, [r3]
 486 0006 DB07     		lsls	r3, r3, #31
 487 0008 3FD4     		bmi	.L36
 280:CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 281:CAN_TX_RX_func.c ****             {
 282:CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 283:CAN_TX_RX_func.c ****             }
 284:CAN_TX_RX_func.c ****             else
 285:CAN_TX_RX_func.c ****             {
 286:CAN_TX_RX_func.c ****                 /* `#START MESSAGE_1_TRASMITTED` */
 287:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(1,0,dato_enviado_1[0]);
 488              		.loc 1 287 0
 489 000a 224B     		ldr	r3, .L37+4
 490 000c 1968     		ldr	r1, [r3]
 491 000e 0902     		lsls	r1, r1, #8
 492 0010 090A     		lsrs	r1, r1, #8
 493 0012 214A     		ldr	r2, .L37+8
 494 0014 1078     		ldrb	r0, [r2]
 495 0016 0006     		lsls	r0, r0, #24
 496 0018 0143     		orrs	r1, r0
 497 001a 1960     		str	r1, [r3]
 288:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(1,1,dato_enviado_1[1]);
 498              		.loc 1 288 0
 499 001c 1968     		ldr	r1, [r3]
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 15


 500 001e 1F48     		ldr	r0, .L37+12
 501 0020 0140     		ands	r1, r0
 502 0022 0C00     		movs	r4, r1
 503 0024 5178     		ldrb	r1, [r2, #1]
 504 0026 0904     		lsls	r1, r1, #16
 505 0028 2143     		orrs	r1, r4
 506 002a 1960     		str	r1, [r3]
 289:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(1,2,dato_enviado_1[2]);
 507              		.loc 1 289 0
 508 002c 1C68     		ldr	r4, [r3]
 509 002e 1C49     		ldr	r1, .L37+16
 510 0030 0C40     		ands	r4, r1
 511 0032 2500     		movs	r5, r4
 512 0034 9478     		ldrb	r4, [r2, #2]
 513 0036 2402     		lsls	r4, r4, #8
 514 0038 2C43     		orrs	r4, r5
 515 003a 1C60     		str	r4, [r3]
 290:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(1,3,dato_enviado_1[3]);
 516              		.loc 1 290 0
 517 003c 1C68     		ldr	r4, [r3]
 518 003e FF26     		movs	r6, #255
 519 0040 B443     		bics	r4, r6
 520 0042 D578     		ldrb	r5, [r2, #3]
 521 0044 2C43     		orrs	r4, r5
 522 0046 1C60     		str	r4, [r3]
 291:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(1,4,dato_enviado_1[4]);
 523              		.loc 1 291 0
 524 0048 164B     		ldr	r3, .L37+20
 525 004a 1C68     		ldr	r4, [r3]
 526 004c 2402     		lsls	r4, r4, #8
 527 004e 240A     		lsrs	r4, r4, #8
 528 0050 1579     		ldrb	r5, [r2, #4]
 529 0052 2D06     		lsls	r5, r5, #24
 530 0054 2C43     		orrs	r4, r5
 531 0056 1C60     		str	r4, [r3]
 292:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(1,5,dato_enviado_1[5]);
 532              		.loc 1 292 0
 533 0058 1C68     		ldr	r4, [r3]
 534 005a 2040     		ands	r0, r4
 535 005c 5479     		ldrb	r4, [r2, #5]
 536 005e 2404     		lsls	r4, r4, #16
 537 0060 2043     		orrs	r0, r4
 538 0062 1860     		str	r0, [r3]
 293:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(1,6,dato_enviado_1[6]);
 539              		.loc 1 293 0
 540 0064 1868     		ldr	r0, [r3]
 541 0066 0140     		ands	r1, r0
 542 0068 9079     		ldrb	r0, [r2, #6]
 543 006a 0002     		lsls	r0, r0, #8
 544 006c 0143     		orrs	r1, r0
 545 006e 1960     		str	r1, [r3]
 294:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(1,7,dato_enviado_1[7]);
 546              		.loc 1 294 0
 547 0070 1868     		ldr	r0, [r3]
 548 0072 B043     		bics	r0, r6
 549 0074 D179     		ldrb	r1, [r2, #7]
 550 0076 0200     		movs	r2, r0
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 16


 551 0078 0A43     		orrs	r2, r1
 552 007a 1A60     		str	r2, [r3]
 295:CAN_TX_RX_func.c ****                 /* `#END` */
 296:CAN_TX_RX_func.c **** 
 297:CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_1_CALLBACK
 298:CAN_TX_RX_func.c ****                     CAN_SendMsg_1_Callback();
 299:CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_1_CALLBACK */
 300:CAN_TX_RX_func.c **** 
 301:CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(1u),
 553              		.loc 1 301 0
 554 007c 044A     		ldr	r2, .L37
 555 007e 1168     		ldr	r1, [r2]
 556 0080 0123     		movs	r3, #1
 557 0082 0B43     		orrs	r3, r1
 558 0084 1360     		str	r3, [r2]
 274:CAN_TX_RX_func.c **** 
 559              		.loc 1 274 0
 560 0086 0020     		movs	r0, #0
 561 0088 00E0     		b	.L35
 562              	.L36:
 282:CAN_TX_RX_func.c ****             }
 563              		.loc 1 282 0
 564 008a 0120     		movs	r0, #1
 565              	.L35:
 566              	.LVL32:
 302:CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(1u)) | CAN_SEND_MESSAGE);
 303:CAN_TX_RX_func.c ****             }
 304:CAN_TX_RX_func.c **** 
 305:CAN_TX_RX_func.c ****         return (result);
 306:CAN_TX_RX_func.c ****     }
 567              		.loc 1 306 0
 568              		@ sp needed
 569 008c 70BD     		pop	{r4, r5, r6, pc}
 570              	.L38:
 571 008e C046     		.align	2
 572              	.L37:
 573 0090 30002E40 		.word	1076756528
 574 0094 38002E40 		.word	1076756536
 575 0098 00000000 		.word	dato_enviado_1
 576 009c FFFF00FF 		.word	-16711681
 577 00a0 FF00FFFF 		.word	-65281
 578 00a4 3C002E40 		.word	1076756540
 579              		.cfi_endproc
 580              	.LFE4:
 581              		.size	CAN_SendMsg1, .-CAN_SendMsg1
 582              		.section	.text.CAN_SendMsg3,"ax",%progbits
 583              		.align	2
 584              		.global	CAN_SendMsg3
 585              		.code	16
 586              		.thumb_func
 587              		.type	CAN_SendMsg3, %function
 588              	CAN_SendMsg3:
 589              	.LFB5:
 307:CAN_TX_RX_func.c **** #endif /* CAN_TX1_FUNC_ENABLE */
 308:CAN_TX_RX_func.c **** 
 309:CAN_TX_RX_func.c **** 
 310:CAN_TX_RX_func.c **** #if (CAN_TX2_FUNC_ENABLE)
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 17


 311:CAN_TX_RX_func.c ****     /*******************************************************************************
 312:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg2
 313:CAN_TX_RX_func.c ****     ********************************************************************************
 314:CAN_TX_RX_func.c ****     *
 315:CAN_TX_RX_func.c ****     * Summary:
 316:CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 2. The function checks
 317:CAN_TX_RX_func.c ****     *  if mailbox 2 doesn't already have un-transmitted messages waiting for
 318:CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 319:CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 320:CAN_TX_RX_func.c ****     *
 321:CAN_TX_RX_func.c ****     * Parameters:
 322:CAN_TX_RX_func.c ****     *  None.
 323:CAN_TX_RX_func.c ****     *
 324:CAN_TX_RX_func.c ****     * Return:
 325:CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 326:CAN_TX_RX_func.c ****     *   Define                             Description
 327:CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 328:CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 329:CAN_TX_RX_func.c ****     *
 330:CAN_TX_RX_func.c ****     *******************************************************************************/
 331:CAN_TX_RX_func.c ****     uint8 CAN_SendMsg2(void) 
 332:CAN_TX_RX_func.c ****     {
 333:CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 334:CAN_TX_RX_func.c **** 
 335:CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 336:CAN_TX_RX_func.c ****             if ((CAN_TX[2u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 337:CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 338:CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(2u) & CAN_TX_REQUEST_PENDING) != 0u)
 339:CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 340:CAN_TX_RX_func.c ****             {
 341:CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 342:CAN_TX_RX_func.c ****             }
 343:CAN_TX_RX_func.c ****             else
 344:CAN_TX_RX_func.c ****             {
 345:CAN_TX_RX_func.c ****                 /* `#START MESSAGE_2_TRASMITTED` */
 346:CAN_TX_RX_func.c **** 
 347:CAN_TX_RX_func.c ****                 /* `#END` */
 348:CAN_TX_RX_func.c **** 
 349:CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_2_CALLBACK
 350:CAN_TX_RX_func.c ****                     CAN_SendMsg_2_Callback();
 351:CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_2_CALLBACK */
 352:CAN_TX_RX_func.c **** 
 353:CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(2u),
 354:CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(2u)) | CAN_SEND_MESSAGE);
 355:CAN_TX_RX_func.c ****             }
 356:CAN_TX_RX_func.c **** 
 357:CAN_TX_RX_func.c ****         return (result);
 358:CAN_TX_RX_func.c ****     }
 359:CAN_TX_RX_func.c **** #endif /* CAN_TX2_FUNC_ENABLE */
 360:CAN_TX_RX_func.c **** 
 361:CAN_TX_RX_func.c **** 
 362:CAN_TX_RX_func.c **** #if (CAN_TX3_FUNC_ENABLE)
 363:CAN_TX_RX_func.c ****     /*******************************************************************************
 364:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg3
 365:CAN_TX_RX_func.c ****     ********************************************************************************
 366:CAN_TX_RX_func.c ****     *
 367:CAN_TX_RX_func.c ****     * Summary:
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 18


 368:CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 3. The function checks
 369:CAN_TX_RX_func.c ****     *  if mailbox 3 doesn't already have un-transmitted messages waiting for
 370:CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 371:CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 372:CAN_TX_RX_func.c ****     *
 373:CAN_TX_RX_func.c ****     * Parameters:
 374:CAN_TX_RX_func.c ****     *  None.
 375:CAN_TX_RX_func.c ****     *
 376:CAN_TX_RX_func.c ****     * Return:
 377:CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 378:CAN_TX_RX_func.c ****     *   Define                             Description
 379:CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 380:CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 381:CAN_TX_RX_func.c ****     *
 382:CAN_TX_RX_func.c ****     *******************************************************************************/
 383:CAN_TX_RX_func.c ****     uint8 CAN_SendMsg3(void) 
 384:CAN_TX_RX_func.c ****     {
 590              		.loc 1 384 0
 591              		.cfi_startproc
 592              		@ args = 0, pretend = 0, frame = 0
 593              		@ frame_needed = 0, uses_anonymous_args = 0
 594              		@ link register save eliminated.
 595              	.LVL33:
 385:CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 386:CAN_TX_RX_func.c **** 
 387:CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 388:CAN_TX_RX_func.c ****             if ((CAN_TX[3u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 389:CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 390:CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(3u) & CAN_TX_REQUEST_PENDING) != 0u)
 596              		.loc 1 390 0
 597 0000 0E4B     		ldr	r3, .L42
 598 0002 1B68     		ldr	r3, [r3]
 599 0004 DB07     		lsls	r3, r3, #31
 600 0006 16D4     		bmi	.L41
 391:CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 392:CAN_TX_RX_func.c ****             {
 393:CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 394:CAN_TX_RX_func.c ****             }
 395:CAN_TX_RX_func.c ****             else
 396:CAN_TX_RX_func.c ****             {
 397:CAN_TX_RX_func.c ****                 /* `#START MESSAGE_3_TRASMITTED` */
 398:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(3,0,dato_enviado_2[0]);
 601              		.loc 1 398 0
 602 0008 0D49     		ldr	r1, .L42+4
 603 000a 0B68     		ldr	r3, [r1]
 604 000c 1B02     		lsls	r3, r3, #8
 605 000e 1B0A     		lsrs	r3, r3, #8
 606 0010 0C48     		ldr	r0, .L42+8
 607 0012 0278     		ldrb	r2, [r0]
 608 0014 1206     		lsls	r2, r2, #24
 609 0016 1343     		orrs	r3, r2
 610 0018 0B60     		str	r3, [r1]
 399:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(3,1,dato_enviado_2[1]);
 611              		.loc 1 399 0
 612 001a 0A68     		ldr	r2, [r1]
 613 001c 0A4B     		ldr	r3, .L42+12
 614 001e 1340     		ands	r3, r2
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 19


 615 0020 4278     		ldrb	r2, [r0, #1]
 616 0022 1204     		lsls	r2, r2, #16
 617 0024 1343     		orrs	r3, r2
 618 0026 0B60     		str	r3, [r1]
 400:CAN_TX_RX_func.c ****                 /* `#END` */
 401:CAN_TX_RX_func.c **** 
 402:CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_3_CALLBACK
 403:CAN_TX_RX_func.c ****                     CAN_SendMsg_3_Callback();
 404:CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_3_CALLBACK */
 405:CAN_TX_RX_func.c **** 
 406:CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(3u),
 619              		.loc 1 406 0
 620 0028 044A     		ldr	r2, .L42
 621 002a 1168     		ldr	r1, [r2]
 622 002c 0123     		movs	r3, #1
 623 002e 0B43     		orrs	r3, r1
 624 0030 1360     		str	r3, [r2]
 385:CAN_TX_RX_func.c **** 
 625              		.loc 1 385 0
 626 0032 0020     		movs	r0, #0
 627 0034 00E0     		b	.L40
 628              	.L41:
 393:CAN_TX_RX_func.c ****             }
 629              		.loc 1 393 0
 630 0036 0120     		movs	r0, #1
 631              	.L40:
 632              	.LVL34:
 407:CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(3u)) | CAN_SEND_MESSAGE);
 408:CAN_TX_RX_func.c ****             }
 409:CAN_TX_RX_func.c **** 
 410:CAN_TX_RX_func.c ****         return (result);
 411:CAN_TX_RX_func.c ****     }
 633              		.loc 1 411 0
 634              		@ sp needed
 635 0038 7047     		bx	lr
 636              	.L43:
 637 003a C046     		.align	2
 638              	.L42:
 639 003c 50002E40 		.word	1076756560
 640 0040 58002E40 		.word	1076756568
 641 0044 00000000 		.word	dato_enviado_2
 642 0048 FFFF00FF 		.word	-16711681
 643              		.cfi_endproc
 644              	.LFE5:
 645              		.size	CAN_SendMsg3, .-CAN_SendMsg3
 646              		.section	.text.CAN_ReceiveMsg,"ax",%progbits
 647              		.align	2
 648              		.global	CAN_ReceiveMsg
 649              		.code	16
 650              		.thumb_func
 651              		.type	CAN_ReceiveMsg, %function
 652              	CAN_ReceiveMsg:
 653              	.LFB6:
 412:CAN_TX_RX_func.c **** #endif /* CAN_TX3_FUNC_ENABLE */
 413:CAN_TX_RX_func.c **** 
 414:CAN_TX_RX_func.c **** 
 415:CAN_TX_RX_func.c **** #if (CAN_TX4_FUNC_ENABLE)
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 20


 416:CAN_TX_RX_func.c ****     /*******************************************************************************
 417:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg4
 418:CAN_TX_RX_func.c ****     ********************************************************************************
 419:CAN_TX_RX_func.c ****     *
 420:CAN_TX_RX_func.c ****     * Summary:
 421:CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 4. The function checks
 422:CAN_TX_RX_func.c ****     *  if mailbox 4 doesn't already have un-transmitted messages waiting for
 423:CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 424:CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 425:CAN_TX_RX_func.c ****     *
 426:CAN_TX_RX_func.c ****     * Parameters:
 427:CAN_TX_RX_func.c ****     *  None.
 428:CAN_TX_RX_func.c ****     *
 429:CAN_TX_RX_func.c ****     * Return:
 430:CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 431:CAN_TX_RX_func.c ****     *   Define                             Description
 432:CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 433:CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 434:CAN_TX_RX_func.c ****     *
 435:CAN_TX_RX_func.c ****     *******************************************************************************/
 436:CAN_TX_RX_func.c ****     uint8 CAN_SendMsg4(void) 
 437:CAN_TX_RX_func.c ****     {
 438:CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 439:CAN_TX_RX_func.c **** 
 440:CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 441:CAN_TX_RX_func.c ****             if ((CAN_TX[4u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 442:CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 443:CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(4u) & CAN_TX_REQUEST_PENDING) != 0u)
 444:CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 445:CAN_TX_RX_func.c ****             {
 446:CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 447:CAN_TX_RX_func.c ****             }
 448:CAN_TX_RX_func.c ****             else
 449:CAN_TX_RX_func.c ****             {
 450:CAN_TX_RX_func.c ****                 /* `#START MESSAGE_4_TRASMITTED` */
 451:CAN_TX_RX_func.c **** 
 452:CAN_TX_RX_func.c ****                 /* `#END` */
 453:CAN_TX_RX_func.c **** 
 454:CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_4_CALLBACK
 455:CAN_TX_RX_func.c ****                     CAN_SendMsg_4_Callback();
 456:CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_4_CALLBACK */
 457:CAN_TX_RX_func.c **** 
 458:CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(4u),
 459:CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(4u)) | CAN_SEND_MESSAGE);
 460:CAN_TX_RX_func.c ****             }
 461:CAN_TX_RX_func.c **** 
 462:CAN_TX_RX_func.c ****         return (result);
 463:CAN_TX_RX_func.c ****     }
 464:CAN_TX_RX_func.c **** #endif /* CAN_TX4_FUNC_ENABLE */
 465:CAN_TX_RX_func.c **** 
 466:CAN_TX_RX_func.c **** 
 467:CAN_TX_RX_func.c **** #if (CAN_TX5_FUNC_ENABLE)
 468:CAN_TX_RX_func.c ****     /*******************************************************************************
 469:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg5
 470:CAN_TX_RX_func.c ****     ********************************************************************************
 471:CAN_TX_RX_func.c ****     *
 472:CAN_TX_RX_func.c ****     * Summary:
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 21


 473:CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 5. The function checks
 474:CAN_TX_RX_func.c ****     *  if mailbox 5 doesn't already have un-transmitted messages waiting for
 475:CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 476:CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 477:CAN_TX_RX_func.c ****     *
 478:CAN_TX_RX_func.c ****     * Parameters:
 479:CAN_TX_RX_func.c ****     *  None.
 480:CAN_TX_RX_func.c ****     *
 481:CAN_TX_RX_func.c ****     * Return:
 482:CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 483:CAN_TX_RX_func.c ****     *   Define                             Description
 484:CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 485:CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 486:CAN_TX_RX_func.c ****     *
 487:CAN_TX_RX_func.c ****     *******************************************************************************/
 488:CAN_TX_RX_func.c ****     uint8 CAN_SendMsg5(void) 
 489:CAN_TX_RX_func.c ****     {
 490:CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 491:CAN_TX_RX_func.c **** 
 492:CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 493:CAN_TX_RX_func.c ****             if ((CAN_TX[5u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 494:CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 495:CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(5u) & CAN_TX_REQUEST_PENDING) != 0u)
 496:CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 497:CAN_TX_RX_func.c ****             {
 498:CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 499:CAN_TX_RX_func.c ****             }
 500:CAN_TX_RX_func.c ****             else
 501:CAN_TX_RX_func.c ****             {
 502:CAN_TX_RX_func.c ****                 /* `#START MESSAGE_5_TRASMITTED` */
 503:CAN_TX_RX_func.c **** 
 504:CAN_TX_RX_func.c ****                 /* `#END` */
 505:CAN_TX_RX_func.c **** 
 506:CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_5_CALLBACK
 507:CAN_TX_RX_func.c ****                     CAN_SendMsg_5_Callback();
 508:CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_5_CALLBACK */
 509:CAN_TX_RX_func.c **** 
 510:CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(5u),
 511:CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(5u)) | CAN_SEND_MESSAGE);
 512:CAN_TX_RX_func.c ****             }
 513:CAN_TX_RX_func.c **** 
 514:CAN_TX_RX_func.c ****         return (result);
 515:CAN_TX_RX_func.c ****     }
 516:CAN_TX_RX_func.c **** #endif /* CAN_TX5_FUNC_ENABLE */
 517:CAN_TX_RX_func.c **** 
 518:CAN_TX_RX_func.c **** 
 519:CAN_TX_RX_func.c **** #if (CAN_TX6_FUNC_ENABLE)
 520:CAN_TX_RX_func.c ****     /*******************************************************************************
 521:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg6
 522:CAN_TX_RX_func.c ****     ********************************************************************************
 523:CAN_TX_RX_func.c ****     *
 524:CAN_TX_RX_func.c ****     * Summary:
 525:CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 6. The function checks
 526:CAN_TX_RX_func.c ****     *  if mailbox 6 doesn't already have un-transmitted messages waiting for
 527:CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 528:CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 529:CAN_TX_RX_func.c ****     *
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 22


 530:CAN_TX_RX_func.c ****     * Parameters:
 531:CAN_TX_RX_func.c ****     *  None.
 532:CAN_TX_RX_func.c ****     *
 533:CAN_TX_RX_func.c ****     * Return:
 534:CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 535:CAN_TX_RX_func.c ****     *   Define                             Description
 536:CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 537:CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 538:CAN_TX_RX_func.c ****     *
 539:CAN_TX_RX_func.c ****     *******************************************************************************/
 540:CAN_TX_RX_func.c ****     uint8 CAN_SendMsg6(void) 
 541:CAN_TX_RX_func.c ****     {
 542:CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 543:CAN_TX_RX_func.c **** 
 544:CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 545:CAN_TX_RX_func.c ****             if ((CAN_TX[6u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 546:CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 547:CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(6u) & CAN_TX_REQUEST_PENDING) != 0u)
 548:CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 549:CAN_TX_RX_func.c ****             {
 550:CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 551:CAN_TX_RX_func.c ****             }
 552:CAN_TX_RX_func.c ****             else
 553:CAN_TX_RX_func.c ****             {
 554:CAN_TX_RX_func.c ****                 /* `#START MESSAGE_6_TRASMITTED` */
 555:CAN_TX_RX_func.c **** 
 556:CAN_TX_RX_func.c ****                 /* `#END` */
 557:CAN_TX_RX_func.c **** 
 558:CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_6_CALLBACK
 559:CAN_TX_RX_func.c ****                     CAN_SendMsg_6_Callback();
 560:CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_6_CALLBACK */
 561:CAN_TX_RX_func.c **** 
 562:CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(6u),
 563:CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(6u)) | CAN_SEND_MESSAGE);
 564:CAN_TX_RX_func.c ****             }
 565:CAN_TX_RX_func.c **** 
 566:CAN_TX_RX_func.c ****         return (result);
 567:CAN_TX_RX_func.c ****     }
 568:CAN_TX_RX_func.c **** #endif /* CAN_TX6_FUNC_ENABLE */
 569:CAN_TX_RX_func.c **** 
 570:CAN_TX_RX_func.c **** 
 571:CAN_TX_RX_func.c **** #if (CAN_TX7_FUNC_ENABLE)
 572:CAN_TX_RX_func.c ****     /*******************************************************************************
 573:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg7)
 574:CAN_TX_RX_func.c ****     ********************************************************************************
 575:CAN_TX_RX_func.c ****     *
 576:CAN_TX_RX_func.c ****     * Summary:
 577:CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 7. The function checks
 578:CAN_TX_RX_func.c ****     *  if mailbox 7 doesn't already have un-transmitted messages waiting for
 579:CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 580:CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 581:CAN_TX_RX_func.c ****     *
 582:CAN_TX_RX_func.c ****     * Parameters:
 583:CAN_TX_RX_func.c ****     *  None.
 584:CAN_TX_RX_func.c ****     *
 585:CAN_TX_RX_func.c ****     * Return:
 586:CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 23


 587:CAN_TX_RX_func.c ****     *   Define                             Description
 588:CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 589:CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 590:CAN_TX_RX_func.c ****     *
 591:CAN_TX_RX_func.c ****     *******************************************************************************/
 592:CAN_TX_RX_func.c ****     uint8 CAN_SendMsg7(void) 
 593:CAN_TX_RX_func.c ****     {
 594:CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 595:CAN_TX_RX_func.c **** 
 596:CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 597:CAN_TX_RX_func.c ****             if ((CAN_TX[7u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 598:CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 599:CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(7u) & CAN_TX_REQUEST_PENDING) != 0u)
 600:CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 601:CAN_TX_RX_func.c ****             {
 602:CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 603:CAN_TX_RX_func.c ****             }
 604:CAN_TX_RX_func.c ****             else
 605:CAN_TX_RX_func.c ****             {
 606:CAN_TX_RX_func.c ****                 /* `#START MESSAGE_7_TRASMITTED` */
 607:CAN_TX_RX_func.c **** 
 608:CAN_TX_RX_func.c ****                 /* `#END` */
 609:CAN_TX_RX_func.c **** 
 610:CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_7_CALLBACK
 611:CAN_TX_RX_func.c ****                     CAN_SendMsg_7_Callback();
 612:CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_7_CALLBACK */
 613:CAN_TX_RX_func.c **** 
 614:CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(7u),
 615:CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(7u)) | CAN_SEND_MESSAGE);
 616:CAN_TX_RX_func.c ****             }
 617:CAN_TX_RX_func.c **** 
 618:CAN_TX_RX_func.c ****         return (result);
 619:CAN_TX_RX_func.c ****     }
 620:CAN_TX_RX_func.c **** #endif /* CAN_TX7_FUNC_ENABLE */
 621:CAN_TX_RX_func.c **** 
 622:CAN_TX_RX_func.c **** 
 623:CAN_TX_RX_func.c **** /*******************************************************************************
 624:CAN_TX_RX_func.c **** * FUNCTION NAME:   CAN_ReceiveMsg
 625:CAN_TX_RX_func.c **** ********************************************************************************
 626:CAN_TX_RX_func.c **** *
 627:CAN_TX_RX_func.c **** * Summary:
 628:CAN_TX_RX_func.c **** *  This function is the entry point to Receive Message Interrupt for Basic
 629:CAN_TX_RX_func.c **** *  mailboxes. Clears the Receive particular Message interrupt flag. Generated
 630:CAN_TX_RX_func.c **** *  only if one of the Receive mailboxes is designed as Basic.
 631:CAN_TX_RX_func.c **** *
 632:CAN_TX_RX_func.c **** * Parameters:
 633:CAN_TX_RX_func.c **** *  rxMailbox: The mailbox number that trig Receive Message Interrupt.
 634:CAN_TX_RX_func.c **** *
 635:CAN_TX_RX_func.c **** * Return:
 636:CAN_TX_RX_func.c **** *  None.
 637:CAN_TX_RX_func.c **** *
 638:CAN_TX_RX_func.c **** * Reentrant:
 639:CAN_TX_RX_func.c **** *  Depends on the Customer code.
 640:CAN_TX_RX_func.c **** *
 641:CAN_TX_RX_func.c **** *******************************************************************************/
 642:CAN_TX_RX_func.c **** void CAN_ReceiveMsg(uint8 rxMailbox) 
 643:CAN_TX_RX_func.c **** {
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 24


 654              		.loc 1 643 0
 655              		.cfi_startproc
 656              		@ args = 0, pretend = 0, frame = 0
 657              		@ frame_needed = 0, uses_anonymous_args = 0
 658              		@ link register save eliminated.
 659              	.LVL35:
 644:CAN_TX_RX_func.c ****     #if (CY_PSOC3 || CY_PSOC5)
 645:CAN_TX_RX_func.c ****         if ((CAN_RX[rxMailbox].rxcmd.byte[0u] & CAN_RX_ACK_MSG) != 0u)
 646:CAN_TX_RX_func.c ****     #else  /* CY_PSOC4 */
 647:CAN_TX_RX_func.c ****         if ((CAN_RX_CMD_REG(rxMailbox) & CAN_RX_ACK_MSG) != 0u)
 660              		.loc 1 647 0
 661 0000 4001     		lsls	r0, r0, #5
 662              	.LVL36:
 663 0002 054B     		ldr	r3, .L46
 664 0004 9C46     		mov	ip, r3
 665 0006 6044     		add	r0, r0, ip
 666 0008 0368     		ldr	r3, [r0]
 667 000a DB07     		lsls	r3, r3, #31
 668 000c 03D5     		bpl	.L44
 648:CAN_TX_RX_func.c ****     #endif /* CY_PSOC3 || CY_PSOC5 */
 649:CAN_TX_RX_func.c ****         {
 650:CAN_TX_RX_func.c ****             /* `#START MESSAGE_BASIC_RECEIVED` */
 651:CAN_TX_RX_func.c **** 
 652:CAN_TX_RX_func.c ****             /* `#END` */
 653:CAN_TX_RX_func.c **** 
 654:CAN_TX_RX_func.c ****             #ifdef CAN_RECEIVE_MSG_CALLBACK
 655:CAN_TX_RX_func.c ****                 CAN_ReceiveMsg_Callback();
 656:CAN_TX_RX_func.c ****             #endif /* CAN_RECEIVE_MSG_CALLBACK */
 657:CAN_TX_RX_func.c **** 
 658:CAN_TX_RX_func.c ****             #if (CY_PSOC3 || CY_PSOC5)
 659:CAN_TX_RX_func.c ****                 CAN_RX[rxMailbox].rxcmd.byte[0u] |= CAN_RX_ACK_MSG;
 660:CAN_TX_RX_func.c ****             #else  /* CY_PSOC4 */
 661:CAN_TX_RX_func.c ****                 CAN_RX_CMD_REG(rxMailbox) |= CAN_RX_ACK_MSG;
 669              		.loc 1 661 0
 670 000e 0268     		ldr	r2, [r0]
 671 0010 0123     		movs	r3, #1
 672 0012 1343     		orrs	r3, r2
 673 0014 0360     		str	r3, [r0]
 674              	.L44:
 662:CAN_TX_RX_func.c ****             #endif /* CY_PSOC3 || CY_PSOC5 */
 663:CAN_TX_RX_func.c ****         }
 664:CAN_TX_RX_func.c **** }
 675              		.loc 1 664 0
 676              		@ sp needed
 677 0016 7047     		bx	lr
 678              	.L47:
 679              		.align	2
 680              	.L46:
 681 0018 A0002E40 		.word	1076756640
 682              		.cfi_endproc
 683              	.LFE6:
 684              		.size	CAN_ReceiveMsg, .-CAN_ReceiveMsg
 685              		.section	.text.CAN_ReceiveMsg0,"ax",%progbits
 686              		.align	2
 687              		.global	CAN_ReceiveMsg0
 688              		.code	16
 689              		.thumb_func
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 25


 690              		.type	CAN_ReceiveMsg0, %function
 691              	CAN_ReceiveMsg0:
 692              	.LFB7:
 665:CAN_TX_RX_func.c **** 
 666:CAN_TX_RX_func.c **** 
 667:CAN_TX_RX_func.c **** #if (CAN_RX0_FUNC_ENABLE)
 668:CAN_TX_RX_func.c ****     /*******************************************************************************
 669:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_ReceiveMsg0
 670:CAN_TX_RX_func.c ****     ********************************************************************************
 671:CAN_TX_RX_func.c ****     *
 672:CAN_TX_RX_func.c ****     * Summary:
 673:CAN_TX_RX_func.c ****     *  This function is the entry point to Receive Message 0 Interrupt. Clears the
 674:CAN_TX_RX_func.c ****     *  Receive Message 0 interrupt flag. Generated only for the Receive mailbox
 675:CAN_TX_RX_func.c ****     *  designed as Full.
 676:CAN_TX_RX_func.c ****     *
 677:CAN_TX_RX_func.c ****     * Parameters:
 678:CAN_TX_RX_func.c ****     *  None.
 679:CAN_TX_RX_func.c ****     *
 680:CAN_TX_RX_func.c ****     * Return:
 681:CAN_TX_RX_func.c ****     *  None.
 682:CAN_TX_RX_func.c ****     *
 683:CAN_TX_RX_func.c ****     * Reentrant:
 684:CAN_TX_RX_func.c ****     *  Depends on the Customer code.
 685:CAN_TX_RX_func.c ****     *
 686:CAN_TX_RX_func.c ****     *******************************************************************************/
 687:CAN_TX_RX_func.c ****     void CAN_ReceiveMsg0(void) 
 688:CAN_TX_RX_func.c ****     {
 693              		.loc 1 688 0
 694              		.cfi_startproc
 695              		@ args = 0, pretend = 0, frame = 0
 696              		@ frame_needed = 0, uses_anonymous_args = 0
 697              		@ link register save eliminated.
 689:CAN_TX_RX_func.c ****         /* `#START MESSAGE_0_RECEIVED` */
 690:CAN_TX_RX_func.c ****   
 691:CAN_TX_RX_func.c ****         mailbox0[0]=CAN_RX_DATA_BYTE1(0);
 698              		.loc 1 691 0
 699 0000 0F4A     		ldr	r2, .L49
 700 0002 1168     		ldr	r1, [r2]
 701 0004 090E     		lsrs	r1, r1, #24
 702 0006 0F4B     		ldr	r3, .L49+4
 703 0008 1970     		strb	r1, [r3]
 692:CAN_TX_RX_func.c ****         mailbox0[1]=CAN_RX_DATA_BYTE2(0);
 704              		.loc 1 692 0
 705 000a 1168     		ldr	r1, [r2]
 706 000c 090C     		lsrs	r1, r1, #16
 707 000e 5970     		strb	r1, [r3, #1]
 693:CAN_TX_RX_func.c ****         mailbox0[2]=CAN_RX_DATA_BYTE3(0);
 708              		.loc 1 693 0
 709 0010 1168     		ldr	r1, [r2]
 710 0012 090A     		lsrs	r1, r1, #8
 711 0014 9970     		strb	r1, [r3, #2]
 694:CAN_TX_RX_func.c ****         mailbox0[3]=CAN_RX_DATA_BYTE4(0);
 712              		.loc 1 694 0
 713 0016 1268     		ldr	r2, [r2]
 714 0018 DA70     		strb	r2, [r3, #3]
 695:CAN_TX_RX_func.c ****         mailbox0[4]=CAN_RX_DATA_BYTE5(0);
 715              		.loc 1 695 0
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 26


 716 001a 0B4A     		ldr	r2, .L49+8
 717 001c 1168     		ldr	r1, [r2]
 718 001e 090E     		lsrs	r1, r1, #24
 719 0020 1971     		strb	r1, [r3, #4]
 696:CAN_TX_RX_func.c ****         mailbox0[5]=CAN_RX_DATA_BYTE6(0);
 720              		.loc 1 696 0
 721 0022 1168     		ldr	r1, [r2]
 722 0024 090C     		lsrs	r1, r1, #16
 723 0026 5971     		strb	r1, [r3, #5]
 697:CAN_TX_RX_func.c ****         mailbox0[6]=CAN_RX_DATA_BYTE7(0);
 724              		.loc 1 697 0
 725 0028 1168     		ldr	r1, [r2]
 726 002a 090A     		lsrs	r1, r1, #8
 727 002c 9971     		strb	r1, [r3, #6]
 698:CAN_TX_RX_func.c ****         mailbox0[7]=CAN_RX_DATA_BYTE8(0);
 728              		.loc 1 698 0
 729 002e 1268     		ldr	r2, [r2]
 730 0030 DA71     		strb	r2, [r3, #7]
 699:CAN_TX_RX_func.c ****       
 700:CAN_TX_RX_func.c ****         
 701:CAN_TX_RX_func.c ****         
 702:CAN_TX_RX_func.c ****         /* `#END` */
 703:CAN_TX_RX_func.c **** 
 704:CAN_TX_RX_func.c ****         #ifdef CAN_RECEIVE_MSG_0_CALLBACK
 705:CAN_TX_RX_func.c ****             CAN_ReceiveMsg_0_Callback();
 706:CAN_TX_RX_func.c ****         #endif /* CAN_RECEIVE_MSG_0_CALLBACK */
 707:CAN_TX_RX_func.c **** 
 708:CAN_TX_RX_func.c ****         CAN_RX_ACK_MESSAGE(0u);
 731              		.loc 1 708 0
 732 0032 064A     		ldr	r2, .L49+12
 733 0034 1168     		ldr	r1, [r2]
 734 0036 0123     		movs	r3, #1
 735 0038 0B43     		orrs	r3, r1
 736 003a 1360     		str	r3, [r2]
 709:CAN_TX_RX_func.c ****     }
 737              		.loc 1 709 0
 738              		@ sp needed
 739 003c 7047     		bx	lr
 740              	.L50:
 741 003e C046     		.align	2
 742              	.L49:
 743 0040 A8002E40 		.word	1076756648
 744 0044 00000000 		.word	mailbox0
 745 0048 AC002E40 		.word	1076756652
 746 004c A0002E40 		.word	1076756640
 747              		.cfi_endproc
 748              	.LFE7:
 749              		.size	CAN_ReceiveMsg0, .-CAN_ReceiveMsg0
 750              		.section	.text.CAN_ReceiveMsg1,"ax",%progbits
 751              		.align	2
 752              		.global	CAN_ReceiveMsg1
 753              		.code	16
 754              		.thumb_func
 755              		.type	CAN_ReceiveMsg1, %function
 756              	CAN_ReceiveMsg1:
 757              	.LFB8:
 710:CAN_TX_RX_func.c **** #endif /* CAN_RX0_FUNC_ENABLE */
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 27


 711:CAN_TX_RX_func.c **** 
 712:CAN_TX_RX_func.c **** 
 713:CAN_TX_RX_func.c **** #if (CAN_RX1_FUNC_ENABLE)
 714:CAN_TX_RX_func.c ****     /*******************************************************************************
 715:CAN_TX_RX_func.c ****     * FUNCTION NAME:    CAN_ReceiveMsg1
 716:CAN_TX_RX_func.c ****     ********************************************************************************
 717:CAN_TX_RX_func.c ****     *
 718:CAN_TX_RX_func.c ****     * Summary:
 719:CAN_TX_RX_func.c ****     *  This function is the entry point to Receive Message 1 Interrupt. Clears the
 720:CAN_TX_RX_func.c ****     *  Receive Message 1 interrupt flag. Generated only for the Receive mailbox
 721:CAN_TX_RX_func.c ****     *  designed as Full.
 722:CAN_TX_RX_func.c ****     *
 723:CAN_TX_RX_func.c ****     * Parameters:
 724:CAN_TX_RX_func.c ****     *  None.
 725:CAN_TX_RX_func.c ****     *
 726:CAN_TX_RX_func.c ****     * Return:
 727:CAN_TX_RX_func.c ****     *  None.
 728:CAN_TX_RX_func.c ****     *
 729:CAN_TX_RX_func.c ****     * Reentrant:
 730:CAN_TX_RX_func.c ****     *  Depends on the Customer code.
 731:CAN_TX_RX_func.c ****     *
 732:CAN_TX_RX_func.c ****     *******************************************************************************/
 733:CAN_TX_RX_func.c ****     void CAN_ReceiveMsg1(void) 
 734:CAN_TX_RX_func.c ****     {
 758              		.loc 1 734 0
 759              		.cfi_startproc
 760              		@ args = 0, pretend = 0, frame = 0
 761              		@ frame_needed = 0, uses_anonymous_args = 0
 762              		@ link register save eliminated.
 735:CAN_TX_RX_func.c ****         /* `#START MESSAGE_1_RECEIVED` */
 736:CAN_TX_RX_func.c ****             mailbox1[0]=CAN_RX_DATA_BYTE1(1);
 763              		.loc 1 736 0
 764 0000 0F4A     		ldr	r2, .L52
 765 0002 1168     		ldr	r1, [r2]
 766 0004 090E     		lsrs	r1, r1, #24
 767 0006 0F4B     		ldr	r3, .L52+4
 768 0008 1970     		strb	r1, [r3]
 737:CAN_TX_RX_func.c ****             mailbox1[1]=CAN_RX_DATA_BYTE2(1);
 769              		.loc 1 737 0
 770 000a 1168     		ldr	r1, [r2]
 771 000c 090C     		lsrs	r1, r1, #16
 772 000e 5970     		strb	r1, [r3, #1]
 738:CAN_TX_RX_func.c ****             mailbox1[2]=CAN_RX_DATA_BYTE3(1);
 773              		.loc 1 738 0
 774 0010 1168     		ldr	r1, [r2]
 775 0012 090A     		lsrs	r1, r1, #8
 776 0014 9970     		strb	r1, [r3, #2]
 739:CAN_TX_RX_func.c ****             mailbox1[3]=CAN_RX_DATA_BYTE4(1);
 777              		.loc 1 739 0
 778 0016 1268     		ldr	r2, [r2]
 779 0018 DA70     		strb	r2, [r3, #3]
 740:CAN_TX_RX_func.c ****             mailbox1[4]=CAN_RX_DATA_BYTE5(1);
 780              		.loc 1 740 0
 781 001a 0B4A     		ldr	r2, .L52+8
 782 001c 1168     		ldr	r1, [r2]
 783 001e 090E     		lsrs	r1, r1, #24
 784 0020 1971     		strb	r1, [r3, #4]
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 28


 741:CAN_TX_RX_func.c ****             mailbox1[5]=CAN_RX_DATA_BYTE6(1);
 785              		.loc 1 741 0
 786 0022 1168     		ldr	r1, [r2]
 787 0024 090C     		lsrs	r1, r1, #16
 788 0026 5971     		strb	r1, [r3, #5]
 742:CAN_TX_RX_func.c ****             mailbox1[6]=CAN_RX_DATA_BYTE7(1);
 789              		.loc 1 742 0
 790 0028 1168     		ldr	r1, [r2]
 791 002a 090A     		lsrs	r1, r1, #8
 792 002c 9971     		strb	r1, [r3, #6]
 743:CAN_TX_RX_func.c ****             mailbox1[7]=CAN_RX_DATA_BYTE8(1);
 793              		.loc 1 743 0
 794 002e 1268     		ldr	r2, [r2]
 795 0030 DA71     		strb	r2, [r3, #7]
 744:CAN_TX_RX_func.c ****         /* `#END` */
 745:CAN_TX_RX_func.c **** 
 746:CAN_TX_RX_func.c ****         #ifdef CAN_RECEIVE_MSG_1_CALLBACK
 747:CAN_TX_RX_func.c ****             CAN_ReceiveMsg_1_Callback();
 748:CAN_TX_RX_func.c ****         #endif /* CAN_RECEIVE_MSG_1_CALLBACK */
 749:CAN_TX_RX_func.c **** 
 750:CAN_TX_RX_func.c ****         CAN_RX_ACK_MESSAGE(1u);
 796              		.loc 1 750 0
 797 0032 064A     		ldr	r2, .L52+12
 798 0034 1168     		ldr	r1, [r2]
 799 0036 0123     		movs	r3, #1
 800 0038 0B43     		orrs	r3, r1
 801 003a 1360     		str	r3, [r2]
 751:CAN_TX_RX_func.c ****     }
 802              		.loc 1 751 0
 803              		@ sp needed
 804 003c 7047     		bx	lr
 805              	.L53:
 806 003e C046     		.align	2
 807              	.L52:
 808 0040 C8002E40 		.word	1076756680
 809 0044 00000000 		.word	mailbox1
 810 0048 CC002E40 		.word	1076756684
 811 004c C0002E40 		.word	1076756672
 812              		.cfi_endproc
 813              	.LFE8:
 814              		.size	CAN_ReceiveMsg1, .-CAN_ReceiveMsg1
 815              		.section	.text.CAN_ReceiveMsg2,"ax",%progbits
 816              		.align	2
 817              		.global	CAN_ReceiveMsg2
 818              		.code	16
 819              		.thumb_func
 820              		.type	CAN_ReceiveMsg2, %function
 821              	CAN_ReceiveMsg2:
 822              	.LFB9:
 752:CAN_TX_RX_func.c **** #endif /* CAN_RX1_FUNC_ENABLE */
 753:CAN_TX_RX_func.c **** 
 754:CAN_TX_RX_func.c **** 
 755:CAN_TX_RX_func.c **** #if (CAN_RX2_FUNC_ENABLE)
 756:CAN_TX_RX_func.c ****     /*******************************************************************************
 757:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_ReceiveMsg2
 758:CAN_TX_RX_func.c ****     ********************************************************************************
 759:CAN_TX_RX_func.c ****     *
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 29


 760:CAN_TX_RX_func.c ****     * Summary:
 761:CAN_TX_RX_func.c ****     *  This function is the entry point to Receive Message 2 Interrupt. Clears the
 762:CAN_TX_RX_func.c ****     *  Receive Message 2 interrupt flag. Generated only for the Receive mailbox
 763:CAN_TX_RX_func.c ****     *  designed as Full.
 764:CAN_TX_RX_func.c ****     *
 765:CAN_TX_RX_func.c ****     * Parameters:
 766:CAN_TX_RX_func.c ****     *  None.
 767:CAN_TX_RX_func.c ****     *
 768:CAN_TX_RX_func.c ****     * Return:
 769:CAN_TX_RX_func.c ****     *  None.
 770:CAN_TX_RX_func.c ****     *
 771:CAN_TX_RX_func.c ****     * Reentrant:
 772:CAN_TX_RX_func.c ****     *  Depends on the Customer code.
 773:CAN_TX_RX_func.c ****     *
 774:CAN_TX_RX_func.c ****     *******************************************************************************/
 775:CAN_TX_RX_func.c ****     void CAN_ReceiveMsg2(void) 
 776:CAN_TX_RX_func.c ****     {
 823              		.loc 1 776 0
 824              		.cfi_startproc
 825              		@ args = 0, pretend = 0, frame = 0
 826              		@ frame_needed = 0, uses_anonymous_args = 0
 827              		@ link register save eliminated.
 777:CAN_TX_RX_func.c ****         /* `#START MESSAGE_2_RECEIVED` */
 778:CAN_TX_RX_func.c ****             mailbox2[0]=CAN_RX_DATA_BYTE1(2);
 828              		.loc 1 778 0
 829 0000 0F4A     		ldr	r2, .L55
 830 0002 1168     		ldr	r1, [r2]
 831 0004 090E     		lsrs	r1, r1, #24
 832 0006 0F4B     		ldr	r3, .L55+4
 833 0008 1970     		strb	r1, [r3]
 779:CAN_TX_RX_func.c ****             mailbox2[1]=CAN_RX_DATA_BYTE2(2);
 834              		.loc 1 779 0
 835 000a 1168     		ldr	r1, [r2]
 836 000c 090C     		lsrs	r1, r1, #16
 837 000e 5970     		strb	r1, [r3, #1]
 780:CAN_TX_RX_func.c ****             mailbox2[2]=CAN_RX_DATA_BYTE3(2);
 838              		.loc 1 780 0
 839 0010 1168     		ldr	r1, [r2]
 840 0012 090A     		lsrs	r1, r1, #8
 841 0014 9970     		strb	r1, [r3, #2]
 781:CAN_TX_RX_func.c ****             mailbox2[3]=CAN_RX_DATA_BYTE4(2);
 842              		.loc 1 781 0
 843 0016 1268     		ldr	r2, [r2]
 844 0018 DA70     		strb	r2, [r3, #3]
 782:CAN_TX_RX_func.c ****             mailbox2[4]=CAN_RX_DATA_BYTE5(2);
 845              		.loc 1 782 0
 846 001a 0B4A     		ldr	r2, .L55+8
 847 001c 1168     		ldr	r1, [r2]
 848 001e 090E     		lsrs	r1, r1, #24
 849 0020 1971     		strb	r1, [r3, #4]
 783:CAN_TX_RX_func.c ****             mailbox2[5]=CAN_RX_DATA_BYTE6(2);
 850              		.loc 1 783 0
 851 0022 1168     		ldr	r1, [r2]
 852 0024 090C     		lsrs	r1, r1, #16
 853 0026 5971     		strb	r1, [r3, #5]
 784:CAN_TX_RX_func.c ****             mailbox2[6]=CAN_RX_DATA_BYTE7(2);
 854              		.loc 1 784 0
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 30


 855 0028 1168     		ldr	r1, [r2]
 856 002a 090A     		lsrs	r1, r1, #8
 857 002c 9971     		strb	r1, [r3, #6]
 785:CAN_TX_RX_func.c ****             mailbox2[7]=CAN_RX_DATA_BYTE8(2);    
 858              		.loc 1 785 0
 859 002e 1268     		ldr	r2, [r2]
 860 0030 DA71     		strb	r2, [r3, #7]
 786:CAN_TX_RX_func.c ****         /* `#END` */
 787:CAN_TX_RX_func.c **** 
 788:CAN_TX_RX_func.c ****         #ifdef CAN_RECEIVE_MSG_2_CALLBACK
 789:CAN_TX_RX_func.c ****             CAN_ReceiveMsg_2_Callback();
 790:CAN_TX_RX_func.c ****         #endif /* CAN_RECEIVE_MSG_2_CALLBACK */
 791:CAN_TX_RX_func.c **** 
 792:CAN_TX_RX_func.c ****         CAN_RX_ACK_MESSAGE(2u);
 861              		.loc 1 792 0
 862 0032 064A     		ldr	r2, .L55+12
 863 0034 1168     		ldr	r1, [r2]
 864 0036 0123     		movs	r3, #1
 865 0038 0B43     		orrs	r3, r1
 866 003a 1360     		str	r3, [r2]
 793:CAN_TX_RX_func.c ****     }
 867              		.loc 1 793 0
 868              		@ sp needed
 869 003c 7047     		bx	lr
 870              	.L56:
 871 003e C046     		.align	2
 872              	.L55:
 873 0040 E8002E40 		.word	1076756712
 874 0044 00000000 		.word	mailbox2
 875 0048 EC002E40 		.word	1076756716
 876 004c E0002E40 		.word	1076756704
 877              		.cfi_endproc
 878              	.LFE9:
 879              		.size	CAN_ReceiveMsg2, .-CAN_ReceiveMsg2
 880              		.text
 881              	.Letext0:
 882              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 883              		.file 3 "Generated_Source\\PSoC4/CAN.h"
 884              		.file 4 "Generated_Source\\PSoC4/CyLib.h"
 885              		.section	.debug_info,"",%progbits
 886              	.Ldebug_info0:
 887 0000 71040000 		.4byte	0x471
 888 0004 0400     		.2byte	0x4
 889 0006 00000000 		.4byte	.Ldebug_abbrev0
 890 000a 04       		.byte	0x4
 891 000b 01       		.uleb128 0x1
 892 000c 00000000 		.4byte	.LASF59
 893 0010 0C       		.byte	0xc
 894 0011 01030000 		.4byte	.LASF60
 895 0015 C8010000 		.4byte	.LASF61
 896 0019 00000000 		.4byte	.Ldebug_ranges0+0
 897 001d 00000000 		.4byte	0
 898 0021 00000000 		.4byte	.Ldebug_line0
 899 0025 02       		.uleb128 0x2
 900 0026 01       		.byte	0x1
 901 0027 06       		.byte	0x6
 902 0028 C0000000 		.4byte	.LASF0
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 31


 903 002c 02       		.uleb128 0x2
 904 002d 01       		.byte	0x1
 905 002e 08       		.byte	0x8
 906 002f 6B020000 		.4byte	.LASF1
 907 0033 02       		.uleb128 0x2
 908 0034 02       		.byte	0x2
 909 0035 05       		.byte	0x5
 910 0036 79020000 		.4byte	.LASF2
 911 003a 02       		.uleb128 0x2
 912 003b 02       		.byte	0x2
 913 003c 07       		.byte	0x7
 914 003d 90010000 		.4byte	.LASF3
 915 0041 02       		.uleb128 0x2
 916 0042 04       		.byte	0x4
 917 0043 05       		.byte	0x5
 918 0044 E7000000 		.4byte	.LASF4
 919 0048 02       		.uleb128 0x2
 920 0049 04       		.byte	0x4
 921 004a 07       		.byte	0x7
 922 004b 61010000 		.4byte	.LASF5
 923 004f 02       		.uleb128 0x2
 924 0050 08       		.byte	0x8
 925 0051 05       		.byte	0x5
 926 0052 B2000000 		.4byte	.LASF6
 927 0056 02       		.uleb128 0x2
 928 0057 08       		.byte	0x8
 929 0058 07       		.byte	0x7
 930 0059 8E000000 		.4byte	.LASF7
 931 005d 03       		.uleb128 0x3
 932 005e 04       		.byte	0x4
 933 005f 05       		.byte	0x5
 934 0060 696E7400 		.ascii	"int\000"
 935 0064 02       		.uleb128 0x2
 936 0065 04       		.byte	0x4
 937 0066 07       		.byte	0x7
 938 0067 54010000 		.4byte	.LASF8
 939 006b 04       		.uleb128 0x4
 940 006c 04010000 		.4byte	.LASF9
 941 0070 02       		.byte	0x2
 942 0071 9801     		.2byte	0x198
 943 0073 2C000000 		.4byte	0x2c
 944 0077 04       		.uleb128 0x4
 945 0078 1D010000 		.4byte	.LASF10
 946 007c 02       		.byte	0x2
 947 007d 9A01     		.2byte	0x19a
 948 007f 48000000 		.4byte	0x48
 949 0083 02       		.uleb128 0x2
 950 0084 04       		.byte	0x4
 951 0085 04       		.byte	0x4
 952 0086 60020000 		.4byte	.LASF11
 953 008a 02       		.uleb128 0x2
 954 008b 08       		.byte	0x8
 955 008c 04       		.byte	0x4
 956 008d 10010000 		.4byte	.LASF12
 957 0091 02       		.uleb128 0x2
 958 0092 01       		.byte	0x1
 959 0093 08       		.byte	0x8
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 32


 960 0094 B0020000 		.4byte	.LASF13
 961 0098 04       		.uleb128 0x4
 962 0099 66020000 		.4byte	.LASF14
 963 009d 02       		.byte	0x2
 964 009e 4202     		.2byte	0x242
 965 00a0 A4000000 		.4byte	0xa4
 966 00a4 05       		.uleb128 0x5
 967 00a5 6B000000 		.4byte	0x6b
 968 00a9 04       		.uleb128 0x4
 969 00aa C2010000 		.4byte	.LASF15
 970 00ae 02       		.byte	0x2
 971 00af 4402     		.2byte	0x244
 972 00b1 B5000000 		.4byte	0xb5
 973 00b5 05       		.uleb128 0x5
 974 00b6 77000000 		.4byte	0x77
 975 00ba 02       		.uleb128 0x2
 976 00bb 08       		.byte	0x8
 977 00bc 04       		.byte	0x4
 978 00bd 41020000 		.4byte	.LASF16
 979 00c1 02       		.uleb128 0x2
 980 00c2 04       		.byte	0x4
 981 00c3 07       		.byte	0x7
 982 00c4 38020000 		.4byte	.LASF17
 983 00c8 06       		.uleb128 0x6
 984 00c9 08       		.byte	0x8
 985 00ca 03       		.byte	0x3
 986 00cb 6F       		.byte	0x6f
 987 00cc DD000000 		.4byte	0xdd
 988 00d0 07       		.uleb128 0x7
 989 00d1 31010000 		.4byte	.LASF19
 990 00d5 03       		.byte	0x3
 991 00d6 71       		.byte	0x71
 992 00d7 DD000000 		.4byte	0xdd
 993 00db 00       		.byte	0
 994 00dc 00       		.byte	0
 995 00dd 08       		.uleb128 0x8
 996 00de 6B000000 		.4byte	0x6b
 997 00e2 ED000000 		.4byte	0xed
 998 00e6 09       		.uleb128 0x9
 999 00e7 C1000000 		.4byte	0xc1
 1000 00eb 07       		.byte	0x7
 1001 00ec 00       		.byte	0
 1002 00ed 0A       		.uleb128 0xa
 1003 00ee 8F020000 		.4byte	.LASF18
 1004 00f2 03       		.byte	0x3
 1005 00f3 72       		.byte	0x72
 1006 00f4 C8000000 		.4byte	0xc8
 1007 00f8 06       		.uleb128 0x6
 1008 00f9 08       		.byte	0x8
 1009 00fa 03       		.byte	0x3
 1010 00fb 75       		.byte	0x75
 1011 00fc 0D010000 		.4byte	0x10d
 1012 0100 07       		.uleb128 0x7
 1013 0101 31010000 		.4byte	.LASF19
 1014 0105 03       		.byte	0x3
 1015 0106 77       		.byte	0x77
 1016 0107 1D010000 		.4byte	0x11d
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 33


 1017 010b 00       		.byte	0
 1018 010c 00       		.byte	0
 1019 010d 08       		.uleb128 0x8
 1020 010e 98000000 		.4byte	0x98
 1021 0112 1D010000 		.4byte	0x11d
 1022 0116 09       		.uleb128 0x9
 1023 0117 C1000000 		.4byte	0xc1
 1024 011b 07       		.byte	0x7
 1025 011c 00       		.byte	0
 1026 011d 05       		.uleb128 0x5
 1027 011e 0D010000 		.4byte	0x10d
 1028 0122 0A       		.uleb128 0xa
 1029 0123 C2020000 		.4byte	.LASF20
 1030 0127 03       		.byte	0x3
 1031 0128 78       		.byte	0x78
 1032 0129 F8000000 		.4byte	0xf8
 1033 012d 06       		.uleb128 0x6
 1034 012e 04       		.byte	0x4
 1035 012f 03       		.byte	0x3
 1036 0130 7B       		.byte	0x7b
 1037 0131 42010000 		.4byte	0x142
 1038 0135 07       		.uleb128 0x7
 1039 0136 31010000 		.4byte	.LASF19
 1040 013a 03       		.byte	0x3
 1041 013b 7D       		.byte	0x7d
 1042 013c 52010000 		.4byte	0x152
 1043 0140 00       		.byte	0
 1044 0141 00       		.byte	0
 1045 0142 08       		.uleb128 0x8
 1046 0143 98000000 		.4byte	0x98
 1047 0147 52010000 		.4byte	0x152
 1048 014b 09       		.uleb128 0x9
 1049 014c C1000000 		.4byte	0xc1
 1050 0150 03       		.byte	0x3
 1051 0151 00       		.byte	0
 1052 0152 05       		.uleb128 0x5
 1053 0153 42010000 		.4byte	0x142
 1054 0157 0A       		.uleb128 0xa
 1055 0158 2D020000 		.4byte	.LASF21
 1056 015c 03       		.byte	0x3
 1057 015d 7E       		.byte	0x7e
 1058 015e 2D010000 		.4byte	0x12d
 1059 0162 06       		.uleb128 0x6
 1060 0163 10       		.byte	0x10
 1061 0164 03       		.byte	0x3
 1062 0165 81       		.byte	0x81
 1063 0166 BE010000 		.4byte	0x1be
 1064 016a 0B       		.uleb128 0xb
 1065 016b 696400   		.ascii	"id\000"
 1066 016e 03       		.byte	0x3
 1067 016f 83       		.byte	0x83
 1068 0170 77000000 		.4byte	0x77
 1069 0174 00       		.byte	0
 1070 0175 0B       		.uleb128 0xb
 1071 0176 72747200 		.ascii	"rtr\000"
 1072 017a 03       		.byte	0x3
 1073 017b 84       		.byte	0x84
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 34


 1074 017c 6B000000 		.4byte	0x6b
 1075 0180 04       		.byte	0x4
 1076 0181 0B       		.uleb128 0xb
 1077 0182 69646500 		.ascii	"ide\000"
 1078 0186 03       		.byte	0x3
 1079 0187 85       		.byte	0x85
 1080 0188 6B000000 		.4byte	0x6b
 1081 018c 05       		.byte	0x5
 1082 018d 0B       		.uleb128 0xb
 1083 018e 646C6300 		.ascii	"dlc\000"
 1084 0192 03       		.byte	0x3
 1085 0193 86       		.byte	0x86
 1086 0194 6B000000 		.4byte	0x6b
 1087 0198 06       		.byte	0x6
 1088 0199 0B       		.uleb128 0xb
 1089 019a 69727100 		.ascii	"irq\000"
 1090 019e 03       		.byte	0x3
 1091 019f 87       		.byte	0x87
 1092 01a0 6B000000 		.4byte	0x6b
 1093 01a4 07       		.byte	0x7
 1094 01a5 0B       		.uleb128 0xb
 1095 01a6 73737400 		.ascii	"sst\000"
 1096 01aa 03       		.byte	0x3
 1097 01ab 89       		.byte	0x89
 1098 01ac 6B000000 		.4byte	0x6b
 1099 01b0 08       		.byte	0x8
 1100 01b1 0B       		.uleb128 0xb
 1101 01b2 6D736700 		.ascii	"msg\000"
 1102 01b6 03       		.byte	0x3
 1103 01b7 8B       		.byte	0x8b
 1104 01b8 BE010000 		.4byte	0x1be
 1105 01bc 0C       		.byte	0xc
 1106 01bd 00       		.byte	0
 1107 01be 0C       		.uleb128 0xc
 1108 01bf 04       		.byte	0x4
 1109 01c0 ED000000 		.4byte	0xed
 1110 01c4 0A       		.uleb128 0xa
 1111 01c5 18030000 		.4byte	.LASF22
 1112 01c9 03       		.byte	0x3
 1113 01ca 8C       		.byte	0x8c
 1114 01cb 62010000 		.4byte	0x162
 1115 01cf 06       		.uleb128 0x6
 1116 01d0 20       		.byte	0x20
 1117 01d1 03       		.byte	0x3
 1118 01d2 A0       		.byte	0xa0
 1119 01d3 2C020000 		.4byte	0x22c
 1120 01d7 07       		.uleb128 0x7
 1121 01d8 12030000 		.4byte	.LASF23
 1122 01dc 03       		.byte	0x3
 1123 01dd A2       		.byte	0xa2
 1124 01de 57010000 		.4byte	0x157
 1125 01e2 00       		.byte	0
 1126 01e3 07       		.uleb128 0x7
 1127 01e4 4D020000 		.4byte	.LASF24
 1128 01e8 03       		.byte	0x3
 1129 01e9 A3       		.byte	0xa3
 1130 01ea 57010000 		.4byte	0x157
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 35


 1131 01ee 04       		.byte	0x4
 1132 01ef 07       		.uleb128 0x7
 1133 01f0 FD000000 		.4byte	.LASF25
 1134 01f4 03       		.byte	0x3
 1135 01f5 A4       		.byte	0xa4
 1136 01f6 22010000 		.4byte	0x122
 1137 01fa 08       		.byte	0x8
 1138 01fb 07       		.uleb128 0x7
 1139 01fc 0A010000 		.4byte	.LASF26
 1140 0200 03       		.byte	0x3
 1141 0201 A5       		.byte	0xa5
 1142 0202 57010000 		.4byte	0x157
 1143 0206 10       		.byte	0x10
 1144 0207 07       		.uleb128 0x7
 1145 0208 28030000 		.4byte	.LASF27
 1146 020c 03       		.byte	0x3
 1147 020d A6       		.byte	0xa6
 1148 020e 57010000 		.4byte	0x157
 1149 0212 14       		.byte	0x14
 1150 0213 07       		.uleb128 0x7
 1151 0214 AB000000 		.4byte	.LASF28
 1152 0218 03       		.byte	0x3
 1153 0219 A7       		.byte	0xa7
 1154 021a 57010000 		.4byte	0x157
 1155 021e 18       		.byte	0x18
 1156 021f 07       		.uleb128 0x7
 1157 0220 2E030000 		.4byte	.LASF29
 1158 0224 03       		.byte	0x3
 1159 0225 A8       		.byte	0xa8
 1160 0226 57010000 		.4byte	0x157
 1161 022a 1C       		.byte	0x1c
 1162 022b 00       		.byte	0
 1163 022c 0A       		.uleb128 0xa
 1164 022d A3010000 		.4byte	.LASF30
 1165 0231 03       		.byte	0x3
 1166 0232 A9       		.byte	0xa9
 1167 0233 CF010000 		.4byte	0x1cf
 1168 0237 06       		.uleb128 0x6
 1169 0238 10       		.byte	0x10
 1170 0239 03       		.byte	0x3
 1171 023a AC       		.byte	0xac
 1172 023b 64020000 		.4byte	0x264
 1173 023f 07       		.uleb128 0x7
 1174 0240 A5000000 		.4byte	.LASF31
 1175 0244 03       		.byte	0x3
 1176 0245 AE       		.byte	0xae
 1177 0246 57010000 		.4byte	0x157
 1178 024a 00       		.byte	0
 1179 024b 07       		.uleb128 0x7
 1180 024c 23030000 		.4byte	.LASF32
 1181 0250 03       		.byte	0x3
 1182 0251 AF       		.byte	0xaf
 1183 0252 57010000 		.4byte	0x157
 1184 0256 04       		.byte	0x4
 1185 0257 07       		.uleb128 0x7
 1186 0258 BB010000 		.4byte	.LASF33
 1187 025c 03       		.byte	0x3
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 36


 1188 025d B0       		.byte	0xb0
 1189 025e 22010000 		.4byte	0x122
 1190 0262 08       		.byte	0x8
 1191 0263 00       		.byte	0
 1192 0264 0A       		.uleb128 0xa
 1193 0265 A2020000 		.4byte	.LASF34
 1194 0269 03       		.byte	0x3
 1195 026a B1       		.byte	0xb1
 1196 026b 37020000 		.4byte	0x237
 1197 026f 0D       		.uleb128 0xd
 1198 0270 73010000 		.4byte	.LASF41
 1199 0274 01       		.byte	0x1
 1200 0275 39       		.byte	0x39
 1201 0276 6B000000 		.4byte	0x6b
 1202 027a 00000000 		.4byte	.LFB1
 1203 027e 5C010000 		.4byte	.LFE1-.LFB1
 1204 0282 01       		.uleb128 0x1
 1205 0283 9C       		.byte	0x9c
 1206 0284 10030000 		.4byte	0x310
 1207 0288 0E       		.uleb128 0xe
 1208 0289 58020000 		.4byte	.LASF39
 1209 028d 01       		.byte	0x1
 1210 028e 39       		.byte	0x39
 1211 028f 10030000 		.4byte	0x310
 1212 0293 00000000 		.4byte	.LLST0
 1213 0297 0F       		.uleb128 0xf
 1214 0298 6900     		.ascii	"i\000"
 1215 029a 01       		.byte	0x1
 1216 029b 3B       		.byte	0x3b
 1217 029c 6B000000 		.4byte	0x6b
 1218 02a0 2C000000 		.4byte	.LLST1
 1219 02a4 0F       		.uleb128 0xf
 1220 02a5 6A00     		.ascii	"j\000"
 1221 02a7 01       		.byte	0x1
 1222 02a8 3B       		.byte	0x3b
 1223 02a9 6B000000 		.4byte	0x6b
 1224 02ad 55000000 		.4byte	.LLST2
 1225 02b1 10       		.uleb128 0x10
 1226 02b2 17010000 		.4byte	.LASF35
 1227 02b6 01       		.byte	0x1
 1228 02b7 3B       		.byte	0x3b
 1229 02b8 6B000000 		.4byte	0x6b
 1230 02bc 7F000000 		.4byte	.LLST3
 1231 02c0 10       		.uleb128 0x10
 1232 02c1 52020000 		.4byte	.LASF36
 1233 02c5 01       		.byte	0x1
 1234 02c6 3C       		.byte	0x3c
 1235 02c7 6B000000 		.4byte	0x6b
 1236 02cb A8000000 		.4byte	.LLST4
 1237 02cf 10       		.uleb128 0x10
 1238 02d0 6B030000 		.4byte	.LASF37
 1239 02d4 01       		.byte	0x1
 1240 02d5 3D       		.byte	0x3d
 1241 02d6 6B000000 		.4byte	0x6b
 1242 02da C7000000 		.4byte	.LLST5
 1243 02de 10       		.uleb128 0x10
 1244 02df 88010000 		.4byte	.LASF38
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 37


 1245 02e3 01       		.byte	0x1
 1246 02e4 3E       		.byte	0x3e
 1247 02e5 77000000 		.4byte	0x77
 1248 02e9 FD000000 		.4byte	.LLST6
 1249 02ed 11       		.uleb128 0x11
 1250 02ee E8000000 		.4byte	.LVL15
 1251 02f2 5E040000 		.4byte	0x45e
 1252 02f6 00030000 		.4byte	0x300
 1253 02fa 12       		.uleb128 0x12
 1254 02fb 01       		.uleb128 0x1
 1255 02fc 50       		.byte	0x50
 1256 02fd 01       		.uleb128 0x1
 1257 02fe 4B       		.byte	0x4b
 1258 02ff 00       		.byte	0
 1259 0300 13       		.uleb128 0x13
 1260 0301 16010000 		.4byte	.LVL16
 1261 0305 69040000 		.4byte	0x469
 1262 0309 12       		.uleb128 0x12
 1263 030a 01       		.uleb128 0x1
 1264 030b 50       		.byte	0x50
 1265 030c 01       		.uleb128 0x1
 1266 030d 4B       		.byte	0x4b
 1267 030e 00       		.byte	0
 1268 030f 00       		.byte	0
 1269 0310 0C       		.uleb128 0xc
 1270 0311 04       		.byte	0x4
 1271 0312 16030000 		.4byte	0x316
 1272 0316 14       		.uleb128 0x14
 1273 0317 C4010000 		.4byte	0x1c4
 1274 031b 15       		.uleb128 0x15
 1275 031c 24010000 		.4byte	.LASF45
 1276 0320 01       		.byte	0x1
 1277 0321 B7       		.byte	0xb7
 1278 0322 00000000 		.4byte	.LFB2
 1279 0326 20000000 		.4byte	.LFE2-.LFB2
 1280 032a 01       		.uleb128 0x1
 1281 032b 9C       		.byte	0x9c
 1282 032c 40030000 		.4byte	0x340
 1283 0330 0E       		.uleb128 0xe
 1284 0331 7F010000 		.4byte	.LASF40
 1285 0335 01       		.byte	0x1
 1286 0336 B7       		.byte	0xb7
 1287 0337 6B000000 		.4byte	0x6b
 1288 033b 3D010000 		.4byte	.LLST7
 1289 033f 00       		.byte	0
 1290 0340 0D       		.uleb128 0xd
 1291 0341 35030000 		.4byte	.LASF42
 1292 0345 01       		.byte	0x1
 1293 0346 D5       		.byte	0xd5
 1294 0347 6B000000 		.4byte	0x6b
 1295 034b 00000000 		.4byte	.LFB3
 1296 034f A8000000 		.4byte	.LFE3-.LFB3
 1297 0353 01       		.uleb128 0x1
 1298 0354 9C       		.byte	0x9c
 1299 0355 69030000 		.4byte	0x369
 1300 0359 10       		.uleb128 0x10
 1301 035a 6B030000 		.4byte	.LASF37
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 38


 1302 035e 01       		.byte	0x1
 1303 035f D7       		.byte	0xd7
 1304 0360 6B000000 		.4byte	0x6b
 1305 0364 5E010000 		.4byte	.LLST8
 1306 0368 00       		.byte	0
 1307 0369 16       		.uleb128 0x16
 1308 036a 42030000 		.4byte	.LASF43
 1309 036e 01       		.byte	0x1
 1310 036f 1001     		.2byte	0x110
 1311 0371 6B000000 		.4byte	0x6b
 1312 0375 00000000 		.4byte	.LFB4
 1313 0379 A8000000 		.4byte	.LFE4-.LFB4
 1314 037d 01       		.uleb128 0x1
 1315 037e 9C       		.byte	0x9c
 1316 037f 94030000 		.4byte	0x394
 1317 0383 17       		.uleb128 0x17
 1318 0384 6B030000 		.4byte	.LASF37
 1319 0388 01       		.byte	0x1
 1320 0389 1201     		.2byte	0x112
 1321 038b 6B000000 		.4byte	0x6b
 1322 038f 7D010000 		.4byte	.LLST9
 1323 0393 00       		.byte	0
 1324 0394 16       		.uleb128 0x16
 1325 0395 4F030000 		.4byte	.LASF44
 1326 0399 01       		.byte	0x1
 1327 039a 7F01     		.2byte	0x17f
 1328 039c 6B000000 		.4byte	0x6b
 1329 03a0 00000000 		.4byte	.LFB5
 1330 03a4 4C000000 		.4byte	.LFE5-.LFB5
 1331 03a8 01       		.uleb128 0x1
 1332 03a9 9C       		.byte	0x9c
 1333 03aa BF030000 		.4byte	0x3bf
 1334 03ae 17       		.uleb128 0x17
 1335 03af 6B030000 		.4byte	.LASF37
 1336 03b3 01       		.byte	0x1
 1337 03b4 8101     		.2byte	0x181
 1338 03b6 6B000000 		.4byte	0x6b
 1339 03ba 9C010000 		.4byte	.LLST10
 1340 03be 00       		.byte	0
 1341 03bf 18       		.uleb128 0x18
 1342 03c0 5C030000 		.4byte	.LASF46
 1343 03c4 01       		.byte	0x1
 1344 03c5 8202     		.2byte	0x282
 1345 03c7 00000000 		.4byte	.LFB6
 1346 03cb 1C000000 		.4byte	.LFE6-.LFB6
 1347 03cf 01       		.uleb128 0x1
 1348 03d0 9C       		.byte	0x9c
 1349 03d1 E6030000 		.4byte	0x3e6
 1350 03d5 19       		.uleb128 0x19
 1351 03d6 B1010000 		.4byte	.LASF47
 1352 03da 01       		.byte	0x1
 1353 03db 8202     		.2byte	0x282
 1354 03dd 6B000000 		.4byte	0x6b
 1355 03e1 BB010000 		.4byte	.LLST11
 1356 03e5 00       		.byte	0
 1357 03e6 1A       		.uleb128 0x1a
 1358 03e7 F1020000 		.4byte	.LASF48
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 39


 1359 03eb 01       		.byte	0x1
 1360 03ec AF02     		.2byte	0x2af
 1361 03ee 00000000 		.4byte	.LFB7
 1362 03f2 50000000 		.4byte	.LFE7-.LFB7
 1363 03f6 01       		.uleb128 0x1
 1364 03f7 9C       		.byte	0x9c
 1365 03f8 1A       		.uleb128 0x1a
 1366 03f9 D1020000 		.4byte	.LASF49
 1367 03fd 01       		.byte	0x1
 1368 03fe DD02     		.2byte	0x2dd
 1369 0400 00000000 		.4byte	.LFB8
 1370 0404 50000000 		.4byte	.LFE8-.LFB8
 1371 0408 01       		.uleb128 0x1
 1372 0409 9C       		.byte	0x9c
 1373 040a 1A       		.uleb128 0x1a
 1374 040b E1020000 		.4byte	.LASF50
 1375 040f 01       		.byte	0x1
 1376 0410 0703     		.2byte	0x307
 1377 0412 00000000 		.4byte	.LFB9
 1378 0416 50000000 		.4byte	.LFE9-.LFB9
 1379 041a 01       		.uleb128 0x1
 1380 041b 9C       		.byte	0x9c
 1381 041c 1B       		.uleb128 0x1b
 1382 041d B5020000 		.4byte	.LASF51
 1383 0421 01       		.byte	0x1
 1384 0422 1C       		.byte	0x1c
 1385 0423 DD000000 		.4byte	0xdd
 1386 0427 1B       		.uleb128 0x1b
 1387 0428 36010000 		.4byte	.LASF52
 1388 042c 01       		.byte	0x1
 1389 042d 1D       		.byte	0x1d
 1390 042e DD000000 		.4byte	0xdd
 1391 0432 1B       		.uleb128 0x1b
 1392 0433 45010000 		.4byte	.LASF53
 1393 0437 01       		.byte	0x1
 1394 0438 1E       		.byte	0x1e
 1395 0439 DD000000 		.4byte	0xdd
 1396 043d 1B       		.uleb128 0x1b
 1397 043e CC000000 		.4byte	.LASF54
 1398 0442 01       		.byte	0x1
 1399 0443 1F       		.byte	0x1f
 1400 0444 DD000000 		.4byte	0xdd
 1401 0448 1B       		.uleb128 0x1b
 1402 0449 D5000000 		.4byte	.LASF55
 1403 044d 01       		.byte	0x1
 1404 044e 20       		.byte	0x20
 1405 044f DD000000 		.4byte	0xdd
 1406 0453 1B       		.uleb128 0x1b
 1407 0454 DE000000 		.4byte	.LASF56
 1408 0458 01       		.byte	0x1
 1409 0459 21       		.byte	0x21
 1410 045a DD000000 		.4byte	0xdd
 1411 045e 1C       		.uleb128 0x1c
 1412 045f F0000000 		.4byte	.LASF57
 1413 0463 F0000000 		.4byte	.LASF57
 1414 0467 04       		.byte	0x4
 1415 0468 C3       		.byte	0xc3
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 40


 1416 0469 1C       		.uleb128 0x1c
 1417 046a 83020000 		.4byte	.LASF58
 1418 046e 83020000 		.4byte	.LASF58
 1419 0472 04       		.byte	0x4
 1420 0473 C1       		.byte	0xc1
 1421 0474 00       		.byte	0
 1422              		.section	.debug_abbrev,"",%progbits
 1423              	.Ldebug_abbrev0:
 1424 0000 01       		.uleb128 0x1
 1425 0001 11       		.uleb128 0x11
 1426 0002 01       		.byte	0x1
 1427 0003 25       		.uleb128 0x25
 1428 0004 0E       		.uleb128 0xe
 1429 0005 13       		.uleb128 0x13
 1430 0006 0B       		.uleb128 0xb
 1431 0007 03       		.uleb128 0x3
 1432 0008 0E       		.uleb128 0xe
 1433 0009 1B       		.uleb128 0x1b
 1434 000a 0E       		.uleb128 0xe
 1435 000b 55       		.uleb128 0x55
 1436 000c 17       		.uleb128 0x17
 1437 000d 11       		.uleb128 0x11
 1438 000e 01       		.uleb128 0x1
 1439 000f 10       		.uleb128 0x10
 1440 0010 17       		.uleb128 0x17
 1441 0011 00       		.byte	0
 1442 0012 00       		.byte	0
 1443 0013 02       		.uleb128 0x2
 1444 0014 24       		.uleb128 0x24
 1445 0015 00       		.byte	0
 1446 0016 0B       		.uleb128 0xb
 1447 0017 0B       		.uleb128 0xb
 1448 0018 3E       		.uleb128 0x3e
 1449 0019 0B       		.uleb128 0xb
 1450 001a 03       		.uleb128 0x3
 1451 001b 0E       		.uleb128 0xe
 1452 001c 00       		.byte	0
 1453 001d 00       		.byte	0
 1454 001e 03       		.uleb128 0x3
 1455 001f 24       		.uleb128 0x24
 1456 0020 00       		.byte	0
 1457 0021 0B       		.uleb128 0xb
 1458 0022 0B       		.uleb128 0xb
 1459 0023 3E       		.uleb128 0x3e
 1460 0024 0B       		.uleb128 0xb
 1461 0025 03       		.uleb128 0x3
 1462 0026 08       		.uleb128 0x8
 1463 0027 00       		.byte	0
 1464 0028 00       		.byte	0
 1465 0029 04       		.uleb128 0x4
 1466 002a 16       		.uleb128 0x16
 1467 002b 00       		.byte	0
 1468 002c 03       		.uleb128 0x3
 1469 002d 0E       		.uleb128 0xe
 1470 002e 3A       		.uleb128 0x3a
 1471 002f 0B       		.uleb128 0xb
 1472 0030 3B       		.uleb128 0x3b
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 41


 1473 0031 05       		.uleb128 0x5
 1474 0032 49       		.uleb128 0x49
 1475 0033 13       		.uleb128 0x13
 1476 0034 00       		.byte	0
 1477 0035 00       		.byte	0
 1478 0036 05       		.uleb128 0x5
 1479 0037 35       		.uleb128 0x35
 1480 0038 00       		.byte	0
 1481 0039 49       		.uleb128 0x49
 1482 003a 13       		.uleb128 0x13
 1483 003b 00       		.byte	0
 1484 003c 00       		.byte	0
 1485 003d 06       		.uleb128 0x6
 1486 003e 13       		.uleb128 0x13
 1487 003f 01       		.byte	0x1
 1488 0040 0B       		.uleb128 0xb
 1489 0041 0B       		.uleb128 0xb
 1490 0042 3A       		.uleb128 0x3a
 1491 0043 0B       		.uleb128 0xb
 1492 0044 3B       		.uleb128 0x3b
 1493 0045 0B       		.uleb128 0xb
 1494 0046 01       		.uleb128 0x1
 1495 0047 13       		.uleb128 0x13
 1496 0048 00       		.byte	0
 1497 0049 00       		.byte	0
 1498 004a 07       		.uleb128 0x7
 1499 004b 0D       		.uleb128 0xd
 1500 004c 00       		.byte	0
 1501 004d 03       		.uleb128 0x3
 1502 004e 0E       		.uleb128 0xe
 1503 004f 3A       		.uleb128 0x3a
 1504 0050 0B       		.uleb128 0xb
 1505 0051 3B       		.uleb128 0x3b
 1506 0052 0B       		.uleb128 0xb
 1507 0053 49       		.uleb128 0x49
 1508 0054 13       		.uleb128 0x13
 1509 0055 38       		.uleb128 0x38
 1510 0056 0B       		.uleb128 0xb
 1511 0057 00       		.byte	0
 1512 0058 00       		.byte	0
 1513 0059 08       		.uleb128 0x8
 1514 005a 01       		.uleb128 0x1
 1515 005b 01       		.byte	0x1
 1516 005c 49       		.uleb128 0x49
 1517 005d 13       		.uleb128 0x13
 1518 005e 01       		.uleb128 0x1
 1519 005f 13       		.uleb128 0x13
 1520 0060 00       		.byte	0
 1521 0061 00       		.byte	0
 1522 0062 09       		.uleb128 0x9
 1523 0063 21       		.uleb128 0x21
 1524 0064 00       		.byte	0
 1525 0065 49       		.uleb128 0x49
 1526 0066 13       		.uleb128 0x13
 1527 0067 2F       		.uleb128 0x2f
 1528 0068 0B       		.uleb128 0xb
 1529 0069 00       		.byte	0
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 42


 1530 006a 00       		.byte	0
 1531 006b 0A       		.uleb128 0xa
 1532 006c 16       		.uleb128 0x16
 1533 006d 00       		.byte	0
 1534 006e 03       		.uleb128 0x3
 1535 006f 0E       		.uleb128 0xe
 1536 0070 3A       		.uleb128 0x3a
 1537 0071 0B       		.uleb128 0xb
 1538 0072 3B       		.uleb128 0x3b
 1539 0073 0B       		.uleb128 0xb
 1540 0074 49       		.uleb128 0x49
 1541 0075 13       		.uleb128 0x13
 1542 0076 00       		.byte	0
 1543 0077 00       		.byte	0
 1544 0078 0B       		.uleb128 0xb
 1545 0079 0D       		.uleb128 0xd
 1546 007a 00       		.byte	0
 1547 007b 03       		.uleb128 0x3
 1548 007c 08       		.uleb128 0x8
 1549 007d 3A       		.uleb128 0x3a
 1550 007e 0B       		.uleb128 0xb
 1551 007f 3B       		.uleb128 0x3b
 1552 0080 0B       		.uleb128 0xb
 1553 0081 49       		.uleb128 0x49
 1554 0082 13       		.uleb128 0x13
 1555 0083 38       		.uleb128 0x38
 1556 0084 0B       		.uleb128 0xb
 1557 0085 00       		.byte	0
 1558 0086 00       		.byte	0
 1559 0087 0C       		.uleb128 0xc
 1560 0088 0F       		.uleb128 0xf
 1561 0089 00       		.byte	0
 1562 008a 0B       		.uleb128 0xb
 1563 008b 0B       		.uleb128 0xb
 1564 008c 49       		.uleb128 0x49
 1565 008d 13       		.uleb128 0x13
 1566 008e 00       		.byte	0
 1567 008f 00       		.byte	0
 1568 0090 0D       		.uleb128 0xd
 1569 0091 2E       		.uleb128 0x2e
 1570 0092 01       		.byte	0x1
 1571 0093 3F       		.uleb128 0x3f
 1572 0094 19       		.uleb128 0x19
 1573 0095 03       		.uleb128 0x3
 1574 0096 0E       		.uleb128 0xe
 1575 0097 3A       		.uleb128 0x3a
 1576 0098 0B       		.uleb128 0xb
 1577 0099 3B       		.uleb128 0x3b
 1578 009a 0B       		.uleb128 0xb
 1579 009b 27       		.uleb128 0x27
 1580 009c 19       		.uleb128 0x19
 1581 009d 49       		.uleb128 0x49
 1582 009e 13       		.uleb128 0x13
 1583 009f 11       		.uleb128 0x11
 1584 00a0 01       		.uleb128 0x1
 1585 00a1 12       		.uleb128 0x12
 1586 00a2 06       		.uleb128 0x6
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 43


 1587 00a3 40       		.uleb128 0x40
 1588 00a4 18       		.uleb128 0x18
 1589 00a5 9742     		.uleb128 0x2117
 1590 00a7 19       		.uleb128 0x19
 1591 00a8 01       		.uleb128 0x1
 1592 00a9 13       		.uleb128 0x13
 1593 00aa 00       		.byte	0
 1594 00ab 00       		.byte	0
 1595 00ac 0E       		.uleb128 0xe
 1596 00ad 05       		.uleb128 0x5
 1597 00ae 00       		.byte	0
 1598 00af 03       		.uleb128 0x3
 1599 00b0 0E       		.uleb128 0xe
 1600 00b1 3A       		.uleb128 0x3a
 1601 00b2 0B       		.uleb128 0xb
 1602 00b3 3B       		.uleb128 0x3b
 1603 00b4 0B       		.uleb128 0xb
 1604 00b5 49       		.uleb128 0x49
 1605 00b6 13       		.uleb128 0x13
 1606 00b7 02       		.uleb128 0x2
 1607 00b8 17       		.uleb128 0x17
 1608 00b9 00       		.byte	0
 1609 00ba 00       		.byte	0
 1610 00bb 0F       		.uleb128 0xf
 1611 00bc 34       		.uleb128 0x34
 1612 00bd 00       		.byte	0
 1613 00be 03       		.uleb128 0x3
 1614 00bf 08       		.uleb128 0x8
 1615 00c0 3A       		.uleb128 0x3a
 1616 00c1 0B       		.uleb128 0xb
 1617 00c2 3B       		.uleb128 0x3b
 1618 00c3 0B       		.uleb128 0xb
 1619 00c4 49       		.uleb128 0x49
 1620 00c5 13       		.uleb128 0x13
 1621 00c6 02       		.uleb128 0x2
 1622 00c7 17       		.uleb128 0x17
 1623 00c8 00       		.byte	0
 1624 00c9 00       		.byte	0
 1625 00ca 10       		.uleb128 0x10
 1626 00cb 34       		.uleb128 0x34
 1627 00cc 00       		.byte	0
 1628 00cd 03       		.uleb128 0x3
 1629 00ce 0E       		.uleb128 0xe
 1630 00cf 3A       		.uleb128 0x3a
 1631 00d0 0B       		.uleb128 0xb
 1632 00d1 3B       		.uleb128 0x3b
 1633 00d2 0B       		.uleb128 0xb
 1634 00d3 49       		.uleb128 0x49
 1635 00d4 13       		.uleb128 0x13
 1636 00d5 02       		.uleb128 0x2
 1637 00d6 17       		.uleb128 0x17
 1638 00d7 00       		.byte	0
 1639 00d8 00       		.byte	0
 1640 00d9 11       		.uleb128 0x11
 1641 00da 898201   		.uleb128 0x4109
 1642 00dd 01       		.byte	0x1
 1643 00de 11       		.uleb128 0x11
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 44


 1644 00df 01       		.uleb128 0x1
 1645 00e0 31       		.uleb128 0x31
 1646 00e1 13       		.uleb128 0x13
 1647 00e2 01       		.uleb128 0x1
 1648 00e3 13       		.uleb128 0x13
 1649 00e4 00       		.byte	0
 1650 00e5 00       		.byte	0
 1651 00e6 12       		.uleb128 0x12
 1652 00e7 8A8201   		.uleb128 0x410a
 1653 00ea 00       		.byte	0
 1654 00eb 02       		.uleb128 0x2
 1655 00ec 18       		.uleb128 0x18
 1656 00ed 9142     		.uleb128 0x2111
 1657 00ef 18       		.uleb128 0x18
 1658 00f0 00       		.byte	0
 1659 00f1 00       		.byte	0
 1660 00f2 13       		.uleb128 0x13
 1661 00f3 898201   		.uleb128 0x4109
 1662 00f6 01       		.byte	0x1
 1663 00f7 11       		.uleb128 0x11
 1664 00f8 01       		.uleb128 0x1
 1665 00f9 31       		.uleb128 0x31
 1666 00fa 13       		.uleb128 0x13
 1667 00fb 00       		.byte	0
 1668 00fc 00       		.byte	0
 1669 00fd 14       		.uleb128 0x14
 1670 00fe 26       		.uleb128 0x26
 1671 00ff 00       		.byte	0
 1672 0100 49       		.uleb128 0x49
 1673 0101 13       		.uleb128 0x13
 1674 0102 00       		.byte	0
 1675 0103 00       		.byte	0
 1676 0104 15       		.uleb128 0x15
 1677 0105 2E       		.uleb128 0x2e
 1678 0106 01       		.byte	0x1
 1679 0107 3F       		.uleb128 0x3f
 1680 0108 19       		.uleb128 0x19
 1681 0109 03       		.uleb128 0x3
 1682 010a 0E       		.uleb128 0xe
 1683 010b 3A       		.uleb128 0x3a
 1684 010c 0B       		.uleb128 0xb
 1685 010d 3B       		.uleb128 0x3b
 1686 010e 0B       		.uleb128 0xb
 1687 010f 27       		.uleb128 0x27
 1688 0110 19       		.uleb128 0x19
 1689 0111 11       		.uleb128 0x11
 1690 0112 01       		.uleb128 0x1
 1691 0113 12       		.uleb128 0x12
 1692 0114 06       		.uleb128 0x6
 1693 0115 40       		.uleb128 0x40
 1694 0116 18       		.uleb128 0x18
 1695 0117 9742     		.uleb128 0x2117
 1696 0119 19       		.uleb128 0x19
 1697 011a 01       		.uleb128 0x1
 1698 011b 13       		.uleb128 0x13
 1699 011c 00       		.byte	0
 1700 011d 00       		.byte	0
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 45


 1701 011e 16       		.uleb128 0x16
 1702 011f 2E       		.uleb128 0x2e
 1703 0120 01       		.byte	0x1
 1704 0121 3F       		.uleb128 0x3f
 1705 0122 19       		.uleb128 0x19
 1706 0123 03       		.uleb128 0x3
 1707 0124 0E       		.uleb128 0xe
 1708 0125 3A       		.uleb128 0x3a
 1709 0126 0B       		.uleb128 0xb
 1710 0127 3B       		.uleb128 0x3b
 1711 0128 05       		.uleb128 0x5
 1712 0129 27       		.uleb128 0x27
 1713 012a 19       		.uleb128 0x19
 1714 012b 49       		.uleb128 0x49
 1715 012c 13       		.uleb128 0x13
 1716 012d 11       		.uleb128 0x11
 1717 012e 01       		.uleb128 0x1
 1718 012f 12       		.uleb128 0x12
 1719 0130 06       		.uleb128 0x6
 1720 0131 40       		.uleb128 0x40
 1721 0132 18       		.uleb128 0x18
 1722 0133 9742     		.uleb128 0x2117
 1723 0135 19       		.uleb128 0x19
 1724 0136 01       		.uleb128 0x1
 1725 0137 13       		.uleb128 0x13
 1726 0138 00       		.byte	0
 1727 0139 00       		.byte	0
 1728 013a 17       		.uleb128 0x17
 1729 013b 34       		.uleb128 0x34
 1730 013c 00       		.byte	0
 1731 013d 03       		.uleb128 0x3
 1732 013e 0E       		.uleb128 0xe
 1733 013f 3A       		.uleb128 0x3a
 1734 0140 0B       		.uleb128 0xb
 1735 0141 3B       		.uleb128 0x3b
 1736 0142 05       		.uleb128 0x5
 1737 0143 49       		.uleb128 0x49
 1738 0144 13       		.uleb128 0x13
 1739 0145 02       		.uleb128 0x2
 1740 0146 17       		.uleb128 0x17
 1741 0147 00       		.byte	0
 1742 0148 00       		.byte	0
 1743 0149 18       		.uleb128 0x18
 1744 014a 2E       		.uleb128 0x2e
 1745 014b 01       		.byte	0x1
 1746 014c 3F       		.uleb128 0x3f
 1747 014d 19       		.uleb128 0x19
 1748 014e 03       		.uleb128 0x3
 1749 014f 0E       		.uleb128 0xe
 1750 0150 3A       		.uleb128 0x3a
 1751 0151 0B       		.uleb128 0xb
 1752 0152 3B       		.uleb128 0x3b
 1753 0153 05       		.uleb128 0x5
 1754 0154 27       		.uleb128 0x27
 1755 0155 19       		.uleb128 0x19
 1756 0156 11       		.uleb128 0x11
 1757 0157 01       		.uleb128 0x1
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 46


 1758 0158 12       		.uleb128 0x12
 1759 0159 06       		.uleb128 0x6
 1760 015a 40       		.uleb128 0x40
 1761 015b 18       		.uleb128 0x18
 1762 015c 9742     		.uleb128 0x2117
 1763 015e 19       		.uleb128 0x19
 1764 015f 01       		.uleb128 0x1
 1765 0160 13       		.uleb128 0x13
 1766 0161 00       		.byte	0
 1767 0162 00       		.byte	0
 1768 0163 19       		.uleb128 0x19
 1769 0164 05       		.uleb128 0x5
 1770 0165 00       		.byte	0
 1771 0166 03       		.uleb128 0x3
 1772 0167 0E       		.uleb128 0xe
 1773 0168 3A       		.uleb128 0x3a
 1774 0169 0B       		.uleb128 0xb
 1775 016a 3B       		.uleb128 0x3b
 1776 016b 05       		.uleb128 0x5
 1777 016c 49       		.uleb128 0x49
 1778 016d 13       		.uleb128 0x13
 1779 016e 02       		.uleb128 0x2
 1780 016f 17       		.uleb128 0x17
 1781 0170 00       		.byte	0
 1782 0171 00       		.byte	0
 1783 0172 1A       		.uleb128 0x1a
 1784 0173 2E       		.uleb128 0x2e
 1785 0174 00       		.byte	0
 1786 0175 3F       		.uleb128 0x3f
 1787 0176 19       		.uleb128 0x19
 1788 0177 03       		.uleb128 0x3
 1789 0178 0E       		.uleb128 0xe
 1790 0179 3A       		.uleb128 0x3a
 1791 017a 0B       		.uleb128 0xb
 1792 017b 3B       		.uleb128 0x3b
 1793 017c 05       		.uleb128 0x5
 1794 017d 27       		.uleb128 0x27
 1795 017e 19       		.uleb128 0x19
 1796 017f 11       		.uleb128 0x11
 1797 0180 01       		.uleb128 0x1
 1798 0181 12       		.uleb128 0x12
 1799 0182 06       		.uleb128 0x6
 1800 0183 40       		.uleb128 0x40
 1801 0184 18       		.uleb128 0x18
 1802 0185 9742     		.uleb128 0x2117
 1803 0187 19       		.uleb128 0x19
 1804 0188 00       		.byte	0
 1805 0189 00       		.byte	0
 1806 018a 1B       		.uleb128 0x1b
 1807 018b 34       		.uleb128 0x34
 1808 018c 00       		.byte	0
 1809 018d 03       		.uleb128 0x3
 1810 018e 0E       		.uleb128 0xe
 1811 018f 3A       		.uleb128 0x3a
 1812 0190 0B       		.uleb128 0xb
 1813 0191 3B       		.uleb128 0x3b
 1814 0192 0B       		.uleb128 0xb
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 47


 1815 0193 49       		.uleb128 0x49
 1816 0194 13       		.uleb128 0x13
 1817 0195 3F       		.uleb128 0x3f
 1818 0196 19       		.uleb128 0x19
 1819 0197 3C       		.uleb128 0x3c
 1820 0198 19       		.uleb128 0x19
 1821 0199 00       		.byte	0
 1822 019a 00       		.byte	0
 1823 019b 1C       		.uleb128 0x1c
 1824 019c 2E       		.uleb128 0x2e
 1825 019d 00       		.byte	0
 1826 019e 3F       		.uleb128 0x3f
 1827 019f 19       		.uleb128 0x19
 1828 01a0 3C       		.uleb128 0x3c
 1829 01a1 19       		.uleb128 0x19
 1830 01a2 6E       		.uleb128 0x6e
 1831 01a3 0E       		.uleb128 0xe
 1832 01a4 03       		.uleb128 0x3
 1833 01a5 0E       		.uleb128 0xe
 1834 01a6 3A       		.uleb128 0x3a
 1835 01a7 0B       		.uleb128 0xb
 1836 01a8 3B       		.uleb128 0x3b
 1837 01a9 0B       		.uleb128 0xb
 1838 01aa 00       		.byte	0
 1839 01ab 00       		.byte	0
 1840 01ac 00       		.byte	0
 1841              		.section	.debug_loc,"",%progbits
 1842              	.Ldebug_loc0:
 1843              	.LLST0:
 1844 0000 00000000 		.4byte	.LVL0
 1845 0004 0C000000 		.4byte	.LVL2
 1846 0008 0100     		.2byte	0x1
 1847 000a 50       		.byte	0x50
 1848 000b 0C000000 		.4byte	.LVL2
 1849 000f 42010000 		.4byte	.LVL25
 1850 0013 0100     		.2byte	0x1
 1851 0015 56       		.byte	0x56
 1852 0016 42010000 		.4byte	.LVL25
 1853 001a 5C010000 		.4byte	.LFE1
 1854 001e 0400     		.2byte	0x4
 1855 0020 F3       		.byte	0xf3
 1856 0021 01       		.uleb128 0x1
 1857 0022 50       		.byte	0x50
 1858 0023 9F       		.byte	0x9f
 1859 0024 00000000 		.4byte	0
 1860 0028 00000000 		.4byte	0
 1861              	.LLST1:
 1862 002c 12000000 		.4byte	.LVL3
 1863 0030 22010000 		.4byte	.LVL20
 1864 0034 0100     		.2byte	0x1
 1865 0036 54       		.byte	0x54
 1866 0037 24010000 		.4byte	.LVL21
 1867 003b 26010000 		.4byte	.LVL22
 1868 003f 0100     		.2byte	0x1
 1869 0041 54       		.byte	0x54
 1870 0042 2A010000 		.4byte	.LVL23
 1871 0046 3C010000 		.4byte	.LVL24
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 48


 1872 004a 0100     		.2byte	0x1
 1873 004c 54       		.byte	0x54
 1874 004d 00000000 		.4byte	0
 1875 0051 00000000 		.4byte	0
 1876              	.LLST2:
 1877 0055 7E000000 		.4byte	.LVL11
 1878 0059 82000000 		.4byte	.LVL12
 1879 005d 0200     		.2byte	0x2
 1880 005f 30       		.byte	0x30
 1881 0060 9F       		.byte	0x9f
 1882 0061 82000000 		.4byte	.LVL12
 1883 0065 D6000000 		.4byte	.LVL13
 1884 0069 0100     		.2byte	0x1
 1885 006b 53       		.byte	0x53
 1886 006c D8000000 		.4byte	.LVL14
 1887 0070 E7000000 		.4byte	.LVL15-1
 1888 0074 0100     		.2byte	0x1
 1889 0076 53       		.byte	0x53
 1890 0077 00000000 		.4byte	0
 1891 007b 00000000 		.4byte	0
 1892              	.LLST3:
 1893 007f 12000000 		.4byte	.LVL3
 1894 0083 1A010000 		.4byte	.LVL18
 1895 0087 0100     		.2byte	0x1
 1896 0089 55       		.byte	0x55
 1897 008a 1C010000 		.4byte	.LVL19
 1898 008e 26010000 		.4byte	.LVL22
 1899 0092 0100     		.2byte	0x1
 1900 0094 55       		.byte	0x55
 1901 0095 2A010000 		.4byte	.LVL23
 1902 0099 3C010000 		.4byte	.LVL24
 1903 009d 0100     		.2byte	0x1
 1904 009f 55       		.byte	0x55
 1905 00a0 00000000 		.4byte	0
 1906 00a4 00000000 		.4byte	0
 1907              	.LLST4:
 1908 00a8 0A000000 		.4byte	.LVL1
 1909 00ac 12000000 		.4byte	.LVL3
 1910 00b0 0200     		.2byte	0x2
 1911 00b2 30       		.byte	0x30
 1912 00b3 9F       		.byte	0x9f
 1913 00b4 12000000 		.4byte	.LVL3
 1914 00b8 42010000 		.4byte	.LVL26
 1915 00bc 0100     		.2byte	0x1
 1916 00be 58       		.byte	0x58
 1917 00bf 00000000 		.4byte	0
 1918 00c3 00000000 		.4byte	0
 1919              	.LLST5:
 1920 00c7 0A000000 		.4byte	.LVL1
 1921 00cb 12000000 		.4byte	.LVL3
 1922 00cf 0200     		.2byte	0x2
 1923 00d1 31       		.byte	0x31
 1924 00d2 9F       		.byte	0x9f
 1925 00d3 12000000 		.4byte	.LVL3
 1926 00d7 82000000 		.4byte	.LVL12
 1927 00db 0100     		.2byte	0x1
 1928 00dd 50       		.byte	0x50
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 49


 1929 00de 16010000 		.4byte	.LVL16
 1930 00e2 18010000 		.4byte	.LVL17
 1931 00e6 0200     		.2byte	0x2
 1932 00e8 30       		.byte	0x30
 1933 00e9 9F       		.byte	0x9f
 1934 00ea 18010000 		.4byte	.LVL17
 1935 00ee 5C010000 		.4byte	.LFE1
 1936 00f2 0100     		.2byte	0x1
 1937 00f4 50       		.byte	0x50
 1938 00f5 00000000 		.4byte	0
 1939 00f9 00000000 		.4byte	0
 1940              	.LLST6:
 1941 00fd 22000000 		.4byte	.LVL4
 1942 0101 30000000 		.4byte	.LVL5
 1943 0105 0200     		.2byte	0x2
 1944 0107 30       		.byte	0x30
 1945 0108 9F       		.byte	0x9f
 1946 0109 30000000 		.4byte	.LVL5
 1947 010d 64000000 		.4byte	.LVL7
 1948 0111 0100     		.2byte	0x1
 1949 0113 57       		.byte	0x57
 1950 0114 66000000 		.4byte	.LVL8
 1951 0118 6E000000 		.4byte	.LVL9
 1952 011c 0100     		.2byte	0x1
 1953 011e 57       		.byte	0x57
 1954 011f 70000000 		.4byte	.LVL10
 1955 0123 7E000000 		.4byte	.LVL11
 1956 0127 0100     		.2byte	0x1
 1957 0129 57       		.byte	0x57
 1958 012a 7E000000 		.4byte	.LVL11
 1959 012e 18010000 		.4byte	.LVL17
 1960 0132 0100     		.2byte	0x1
 1961 0134 59       		.byte	0x59
 1962 0135 00000000 		.4byte	0
 1963 0139 00000000 		.4byte	0
 1964              	.LLST7:
 1965 013d 00000000 		.4byte	.LVL27
 1966 0141 06000000 		.4byte	.LVL28
 1967 0145 0100     		.2byte	0x1
 1968 0147 50       		.byte	0x50
 1969 0148 06000000 		.4byte	.LVL28
 1970 014c 20000000 		.4byte	.LFE2
 1971 0150 0400     		.2byte	0x4
 1972 0152 F3       		.byte	0xf3
 1973 0153 01       		.uleb128 0x1
 1974 0154 50       		.byte	0x50
 1975 0155 9F       		.byte	0x9f
 1976 0156 00000000 		.4byte	0
 1977 015a 00000000 		.4byte	0
 1978              	.LLST8:
 1979 015e 02000000 		.4byte	.LVL29
 1980 0162 8C000000 		.4byte	.LVL30
 1981 0166 0200     		.2byte	0x2
 1982 0168 30       		.byte	0x30
 1983 0169 9F       		.byte	0x9f
 1984 016a 8C000000 		.4byte	.LVL30
 1985 016e A8000000 		.4byte	.LFE3
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 50


 1986 0172 0100     		.2byte	0x1
 1987 0174 50       		.byte	0x50
 1988 0175 00000000 		.4byte	0
 1989 0179 00000000 		.4byte	0
 1990              	.LLST9:
 1991 017d 02000000 		.4byte	.LVL31
 1992 0181 8C000000 		.4byte	.LVL32
 1993 0185 0200     		.2byte	0x2
 1994 0187 30       		.byte	0x30
 1995 0188 9F       		.byte	0x9f
 1996 0189 8C000000 		.4byte	.LVL32
 1997 018d A8000000 		.4byte	.LFE4
 1998 0191 0100     		.2byte	0x1
 1999 0193 50       		.byte	0x50
 2000 0194 00000000 		.4byte	0
 2001 0198 00000000 		.4byte	0
 2002              	.LLST10:
 2003 019c 00000000 		.4byte	.LVL33
 2004 01a0 38000000 		.4byte	.LVL34
 2005 01a4 0200     		.2byte	0x2
 2006 01a6 30       		.byte	0x30
 2007 01a7 9F       		.byte	0x9f
 2008 01a8 38000000 		.4byte	.LVL34
 2009 01ac 4C000000 		.4byte	.LFE5
 2010 01b0 0100     		.2byte	0x1
 2011 01b2 50       		.byte	0x50
 2012 01b3 00000000 		.4byte	0
 2013 01b7 00000000 		.4byte	0
 2014              	.LLST11:
 2015 01bb 00000000 		.4byte	.LVL35
 2016 01bf 02000000 		.4byte	.LVL36
 2017 01c3 0100     		.2byte	0x1
 2018 01c5 50       		.byte	0x50
 2019 01c6 02000000 		.4byte	.LVL36
 2020 01ca 1C000000 		.4byte	.LFE6
 2021 01ce 0400     		.2byte	0x4
 2022 01d0 F3       		.byte	0xf3
 2023 01d1 01       		.uleb128 0x1
 2024 01d2 50       		.byte	0x50
 2025 01d3 9F       		.byte	0x9f
 2026 01d4 00000000 		.4byte	0
 2027 01d8 00000000 		.4byte	0
 2028              		.section	.debug_aranges,"",%progbits
 2029 0000 5C000000 		.4byte	0x5c
 2030 0004 0200     		.2byte	0x2
 2031 0006 00000000 		.4byte	.Ldebug_info0
 2032 000a 04       		.byte	0x4
 2033 000b 00       		.byte	0
 2034 000c 0000     		.2byte	0
 2035 000e 0000     		.2byte	0
 2036 0010 00000000 		.4byte	.LFB1
 2037 0014 5C010000 		.4byte	.LFE1-.LFB1
 2038 0018 00000000 		.4byte	.LFB2
 2039 001c 20000000 		.4byte	.LFE2-.LFB2
 2040 0020 00000000 		.4byte	.LFB3
 2041 0024 A8000000 		.4byte	.LFE3-.LFB3
 2042 0028 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 51


 2043 002c A8000000 		.4byte	.LFE4-.LFB4
 2044 0030 00000000 		.4byte	.LFB5
 2045 0034 4C000000 		.4byte	.LFE5-.LFB5
 2046 0038 00000000 		.4byte	.LFB6
 2047 003c 1C000000 		.4byte	.LFE6-.LFB6
 2048 0040 00000000 		.4byte	.LFB7
 2049 0044 50000000 		.4byte	.LFE7-.LFB7
 2050 0048 00000000 		.4byte	.LFB8
 2051 004c 50000000 		.4byte	.LFE8-.LFB8
 2052 0050 00000000 		.4byte	.LFB9
 2053 0054 50000000 		.4byte	.LFE9-.LFB9
 2054 0058 00000000 		.4byte	0
 2055 005c 00000000 		.4byte	0
 2056              		.section	.debug_ranges,"",%progbits
 2057              	.Ldebug_ranges0:
 2058 0000 00000000 		.4byte	.LFB1
 2059 0004 5C010000 		.4byte	.LFE1
 2060 0008 00000000 		.4byte	.LFB2
 2061 000c 20000000 		.4byte	.LFE2
 2062 0010 00000000 		.4byte	.LFB3
 2063 0014 A8000000 		.4byte	.LFE3
 2064 0018 00000000 		.4byte	.LFB4
 2065 001c A8000000 		.4byte	.LFE4
 2066 0020 00000000 		.4byte	.LFB5
 2067 0024 4C000000 		.4byte	.LFE5
 2068 0028 00000000 		.4byte	.LFB6
 2069 002c 1C000000 		.4byte	.LFE6
 2070 0030 00000000 		.4byte	.LFB7
 2071 0034 50000000 		.4byte	.LFE7
 2072 0038 00000000 		.4byte	.LFB8
 2073 003c 50000000 		.4byte	.LFE8
 2074 0040 00000000 		.4byte	.LFB9
 2075 0044 50000000 		.4byte	.LFE9
 2076 0048 00000000 		.4byte	0
 2077 004c 00000000 		.4byte	0
 2078              		.section	.debug_line,"",%progbits
 2079              	.Ldebug_line0:
 2080 0000 A4010000 		.section	.debug_str,"MS",%progbits,1
 2080      02005F00 
 2080      00000201 
 2080      FB0E0D00 
 2080      01010101 
 2081              	.LASF59:
 2082 0000 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2082      43313120 
 2082      352E342E 
 2082      31203230 
 2082      31363036 
 2083 0033 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2083      20726576 
 2083      6973696F 
 2083      6E203233 
 2083      37373135 
 2084 0066 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2084      66756E63 
 2084      74696F6E 
 2084      2D736563 
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 52


 2084      74696F6E 
 2085              	.LASF7:
 2086 008e 6C6F6E67 		.ascii	"long long unsigned int\000"
 2086      206C6F6E 
 2086      6720756E 
 2086      7369676E 
 2086      65642069 
 2087              	.LASF31:
 2088 00a5 7478636D 		.ascii	"txcmd\000"
 2088      6400
 2089              	.LASF28:
 2090 00ab 7278616D 		.ascii	"rxamrd\000"
 2090      726400
 2091              	.LASF6:
 2092 00b2 6C6F6E67 		.ascii	"long long int\000"
 2092      206C6F6E 
 2092      6720696E 
 2092      7400
 2093              	.LASF0:
 2094 00c0 7369676E 		.ascii	"signed char\000"
 2094      65642063 
 2094      68617200 
 2095              	.LASF54:
 2096 00cc 6D61696C 		.ascii	"mailbox0\000"
 2096      626F7830 
 2096      00
 2097              	.LASF55:
 2098 00d5 6D61696C 		.ascii	"mailbox1\000"
 2098      626F7831 
 2098      00
 2099              	.LASF56:
 2100 00de 6D61696C 		.ascii	"mailbox2\000"
 2100      626F7832 
 2100      00
 2101              	.LASF4:
 2102 00e7 6C6F6E67 		.ascii	"long int\000"
 2102      20696E74 
 2102      00
 2103              	.LASF57:
 2104 00f0 4379496E 		.ascii	"CyIntDisable\000"
 2104      74446973 
 2104      61626C65 
 2104      00
 2105              	.LASF25:
 2106 00fd 72786461 		.ascii	"rxdata\000"
 2106      746100
 2107              	.LASF9:
 2108 0104 75696E74 		.ascii	"uint8\000"
 2108      3800
 2109              	.LASF26:
 2110 010a 7278616D 		.ascii	"rxamr\000"
 2110      7200
 2111              	.LASF12:
 2112 0110 646F7562 		.ascii	"double\000"
 2112      6C6500
 2113              	.LASF35:
 2114 0117 73686966 		.ascii	"shift\000"
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 53


 2114      7400
 2115              	.LASF10:
 2116 011d 75696E74 		.ascii	"uint32\000"
 2116      333200
 2117              	.LASF45:
 2118 0124 43414E5F 		.ascii	"CAN_TxCancel\000"
 2118      54784361 
 2118      6E63656C 
 2118      00
 2119              	.LASF19:
 2120 0131 62797465 		.ascii	"byte\000"
 2120      00
 2121              	.LASF52:
 2122 0136 6461746F 		.ascii	"dato_enviado_1\000"
 2122      5F656E76 
 2122      6961646F 
 2122      5F3100
 2123              	.LASF53:
 2124 0145 6461746F 		.ascii	"dato_enviado_2\000"
 2124      5F656E76 
 2124      6961646F 
 2124      5F3200
 2125              	.LASF8:
 2126 0154 756E7369 		.ascii	"unsigned int\000"
 2126      676E6564 
 2126      20696E74 
 2126      00
 2127              	.LASF5:
 2128 0161 6C6F6E67 		.ascii	"long unsigned int\000"
 2128      20756E73 
 2128      69676E65 
 2128      6420696E 
 2128      7400
 2129              	.LASF41:
 2130 0173 43414E5F 		.ascii	"CAN_SendMsg\000"
 2130      53656E64 
 2130      4D736700 
 2131              	.LASF40:
 2132 017f 62756666 		.ascii	"bufferId\000"
 2132      65724964 
 2132      00
 2133              	.LASF38:
 2134 0188 72656754 		.ascii	"regTemp\000"
 2134      656D7000 
 2135              	.LASF3:
 2136 0190 73686F72 		.ascii	"short unsigned int\000"
 2136      7420756E 
 2136      7369676E 
 2136      65642069 
 2136      6E7400
 2137              	.LASF30:
 2138 01a3 43414E5F 		.ascii	"CAN_RX_STRUCT\000"
 2138      52585F53 
 2138      54525543 
 2138      5400
 2139              	.LASF47:
 2140 01b1 72784D61 		.ascii	"rxMailbox\000"
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 54


 2140      696C626F 
 2140      7800
 2141              	.LASF33:
 2142 01bb 74786461 		.ascii	"txdata\000"
 2142      746100
 2143              	.LASF15:
 2144 01c2 72656733 		.ascii	"reg32\000"
 2144      3200
 2145              	.LASF61:
 2146 01c8 433A5C55 		.ascii	"C:\\Users\\Henry Alberto\\Documents\\GitHub\\Psoc_M"
 2146      73657273 
 2146      5C48656E 
 2146      72792041 
 2146      6C626572 
 2147 01f6 6F64756C 		.ascii	"odular\\Optimization_Algorithms\\Genetic_Algorithm."
 2147      61725C4F 
 2147      7074696D 
 2147      697A6174 
 2147      696F6E5F 
 2148 0227 63796473 		.ascii	"cydsn\000"
 2148      6E00
 2149              	.LASF21:
 2150 022d 43414E5F 		.ascii	"CAN_REG_32\000"
 2150      5245475F 
 2150      333200
 2151              	.LASF17:
 2152 0238 73697A65 		.ascii	"sizetype\000"
 2152      74797065 
 2152      00
 2153              	.LASF16:
 2154 0241 6C6F6E67 		.ascii	"long double\000"
 2154      20646F75 
 2154      626C6500 
 2155              	.LASF24:
 2156 024d 72786964 		.ascii	"rxid\000"
 2156      00
 2157              	.LASF36:
 2158 0252 72657472 		.ascii	"retry\000"
 2158      7900
 2159              	.LASF39:
 2160 0258 6D657373 		.ascii	"message\000"
 2160      61676500 
 2161              	.LASF11:
 2162 0260 666C6F61 		.ascii	"float\000"
 2162      7400
 2163              	.LASF14:
 2164 0266 72656738 		.ascii	"reg8\000"
 2164      00
 2165              	.LASF1:
 2166 026b 756E7369 		.ascii	"unsigned char\000"
 2166      676E6564 
 2166      20636861 
 2166      7200
 2167              	.LASF2:
 2168 0279 73686F72 		.ascii	"short int\000"
 2168      7420696E 
 2168      7400
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 55


 2169              	.LASF58:
 2170 0283 4379496E 		.ascii	"CyIntEnable\000"
 2170      74456E61 
 2170      626C6500 
 2171              	.LASF18:
 2172 028f 43414E5F 		.ascii	"CAN_DATA_BYTES_MSG\000"
 2172      44415441 
 2172      5F425954 
 2172      45535F4D 
 2172      534700
 2173              	.LASF34:
 2174 02a2 43414E5F 		.ascii	"CAN_TX_STRUCT\000"
 2174      54585F53 
 2174      54525543 
 2174      5400
 2175              	.LASF13:
 2176 02b0 63686172 		.ascii	"char\000"
 2176      00
 2177              	.LASF51:
 2178 02b5 6461746F 		.ascii	"dato_enviado\000"
 2178      5F656E76 
 2178      6961646F 
 2178      00
 2179              	.LASF20:
 2180 02c2 43414E5F 		.ascii	"CAN_DATA_BYTES\000"
 2180      44415441 
 2180      5F425954 
 2180      455300
 2181              	.LASF49:
 2182 02d1 43414E5F 		.ascii	"CAN_ReceiveMsg1\000"
 2182      52656365 
 2182      6976654D 
 2182      73673100 
 2183              	.LASF50:
 2184 02e1 43414E5F 		.ascii	"CAN_ReceiveMsg2\000"
 2184      52656365 
 2184      6976654D 
 2184      73673200 
 2185              	.LASF48:
 2186 02f1 43414E5F 		.ascii	"CAN_ReceiveMsg0\000"
 2186      52656365 
 2186      6976654D 
 2186      73673000 
 2187              	.LASF60:
 2188 0301 43414E5F 		.ascii	"CAN_TX_RX_func.c\000"
 2188      54585F52 
 2188      585F6675 
 2188      6E632E63 
 2188      00
 2189              	.LASF23:
 2190 0312 7278636D 		.ascii	"rxcmd\000"
 2190      6400
 2191              	.LASF22:
 2192 0318 43414E5F 		.ascii	"CAN_TX_MSG\000"
 2192      54585F4D 
 2192      534700
 2193              	.LASF32:
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccsFdL3v.s 			page 56


 2194 0323 74786964 		.ascii	"txid\000"
 2194      00
 2195              	.LASF27:
 2196 0328 72786163 		.ascii	"rxacr\000"
 2196      7200
 2197              	.LASF29:
 2198 032e 72786163 		.ascii	"rxacrd\000"
 2198      726400
 2199              	.LASF42:
 2200 0335 43414E5F 		.ascii	"CAN_SendMsg0\000"
 2200      53656E64 
 2200      4D736730 
 2200      00
 2201              	.LASF43:
 2202 0342 43414E5F 		.ascii	"CAN_SendMsg1\000"
 2202      53656E64 
 2202      4D736731 
 2202      00
 2203              	.LASF44:
 2204 034f 43414E5F 		.ascii	"CAN_SendMsg3\000"
 2204      53656E64 
 2204      4D736733 
 2204      00
 2205              	.LASF46:
 2206 035c 43414E5F 		.ascii	"CAN_ReceiveMsg\000"
 2206      52656365 
 2206      6976654D 
 2206      736700
 2207              	.LASF37:
 2208 036b 72657375 		.ascii	"result\000"
 2208      6C7400
 2209              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
