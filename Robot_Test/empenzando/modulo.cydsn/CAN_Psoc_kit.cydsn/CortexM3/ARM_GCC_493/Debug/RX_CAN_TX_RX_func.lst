ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccThor7S.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"RX_CAN_TX_RX_func.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.RX_CAN_SendMsg,"ax",%progbits
  19              		.align	2
  20              		.global	RX_CAN_SendMsg
  21              		.thumb
  22              		.thumb_func
  23              		.type	RX_CAN_SendMsg, %function
  24              	RX_CAN_SendMsg:
  25              	.LFB0:
  26              		.file 1 "Generated_Source\\PSoC5\\RX_CAN_TX_RX_func.c"
   1:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** * File Name: RX_CAN_TX_RX_func.c
   3:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** * Version 3.0
   4:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *
   5:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** * Description:
   6:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *  There are functions process "Full" Receive and Transmit mailboxes:
   7:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *     - RX_CAN_SendMsg0-7();
   8:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *     - RX_CAN_ReceiveMsg0-15();
   9:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *  Transmission of message, and receive routine for "Basic" mailboxes:
  10:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *     - RX_CAN_SendMsg();
  11:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *     - RX_CAN_TxCancel();
  12:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *     - RX_CAN_ReceiveMsg();
  13:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *
  14:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *  Note:
  15:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *   None
  16:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *
  17:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** ********************************************************************************
  18:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *******************************************************************************/
  23:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
  24:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** #include "RX_CAN.h"
  25:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** #include "cyapicallbacks.h"
  26:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
  27:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** /* `#START TX_RX_FUNCTION` */
  28:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** extern uint8 dato_recibido[8];
  29:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** extern uint8 dato_enviado;
  30:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** /* `#END` */
  31:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccThor7S.s 			page 2


  32:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
  33:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** /*******************************************************************************
  34:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** * FUNCTION NAME:   RX_CAN_SendMsg
  35:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** ********************************************************************************
  36:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *
  37:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** * Summary:
  38:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *  This function is Send Message from one of Basic mailboxes. The function loops
  39:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *  through the transmit message buffer designed as Basic CAN mailboxes for the
  40:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *  first free available and sends from it. The number of retries is limited.
  41:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *
  42:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** * Parameters:
  43:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *  message: The pointer to a structure that contains all required data to send
  44:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *           messages.
  45:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *
  46:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** * Return:
  47:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *  Indication if message has been sent.
  48:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *   Define                             Description
  49:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *    CYRET_SUCCESS                      The function passed successfully
  50:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *    RX_CAN_FAIL              The function failed
  51:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *
  52:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *******************************************************************************/
  53:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** uint8 RX_CAN_SendMsg(const RX_CAN_TX_MSG *message) 
  54:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** {
  27              		.loc 1 54 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  33              		.cfi_def_cfa_offset 20
  34              		.cfi_offset 4, -20
  35              		.cfi_offset 5, -16
  36              		.cfi_offset 6, -12
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39              	.LVL1:
  55:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     uint8 i, j, shift;
  56:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     uint8 retry = 0u;
  57:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     uint8 result = RX_CAN_FAIL;
  40              		.loc 1 57 0
  41 0002 0121     		movs	r1, #1
  56:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     uint8 result = RX_CAN_FAIL;
  42              		.loc 1 56 0
  43 0004 0026     		movs	r6, #0
  58:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     uint32 regTemp;
  59:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
  60:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     while (retry < RX_CAN_RETRY_NUMBER)
  44              		.loc 1 60 0
  45 0006 5DE0     		b	.L2
  46              	.LVL2:
  47              	.L16:
  61:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     {
  62:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         shift = 1u;    /* Start from first mailbox */
  63:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         for (i = 0u; i < RX_CAN_NUMBER_OF_TX_MAILBOXES; i++)
  64:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         {
  65:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             /* Find Basic TX mailboxes */
  66:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             if ((RX_CAN_TX_MAILBOX_TYPE & shift) == 0u)
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccThor7S.s 			page 3


  48              		.loc 1 66 0
  49 0008 17F0010F 		tst	r7, #1
  50 000c 4DD1     		bne	.L3
  67:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             {
  68:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 /* Find free mailbox */
  69:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 #if (CY_PSOC3 || CY_PSOC5)
  70:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                     if ((RX_CAN_BUF_SR_REG.byte[2] & shift) == 0u)
  51              		.loc 1 70 0
  52 000e 2F4B     		ldr	r3, .L22
  53 0010 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
  54 0012 3B42     		tst	r3, r7
  55 0014 49D1     		bne	.L3
  56              	.LVL3:
  71:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 #else  /* CY_PSOC4 */
  72:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                     if ((RX_CAN_BUF_SR_REG &
  73:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                         (uint32) ((uint32) shift << RX_CAN_TWO_BYTE_OFFSET)) == 0u)
  74:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 #endif /* CY_PSOC3 || CY_PSOC5 */
  75:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                     {
  76:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                         regTemp = 0u;
  77:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
  78:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                         /* Set message parameters */
  79:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                         if (message->rtr != RX_CAN_STANDARD_MESSAGE)
  57              		.loc 1 79 0
  58 0016 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  59 0018 0BB1     		cbz	r3, .L4
  80:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                         {
  81:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                             regTemp = RX_CAN_TX_RTR_MASK;    /* RTR message Enable */
  60              		.loc 1 81 0
  61 001a 4FF40013 		mov	r3, #2097152
  62              	.L4:
  63              	.LVL4:
  82:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                         }
  83:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
  84:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                         if (message->ide == RX_CAN_STANDARD_MESSAGE)
  64              		.loc 1 84 0
  65 001e 4179     		ldrb	r1, [r0, #5]	@ zero_extendqisi2
  66              	.LVL5:
  67 0020 31B9     		cbnz	r1, .L5
  85:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                         {
  86:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                             RX_CAN_SET_TX_ID_STANDARD_MSG(i, message->id);
  68              		.loc 1 86 0
  69 0022 2B49     		ldr	r1, .L22+4
  70 0024 01EB0211 		add	r1, r1, r2, lsl #4
  71 0028 0468     		ldr	r4, [r0]
  72 002a 6405     		lsls	r4, r4, #21
  73 002c 4C60     		str	r4, [r1, #4]
  74 002e 07E0     		b	.L6
  75              	.L5:
  87:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                         }
  88:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                         else
  89:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                         {
  90:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                             regTemp |= RX_CAN_TX_IDE_MASK;
  76              		.loc 1 90 0
  77 0030 43F48013 		orr	r3, r3, #1048576
  78              	.LVL6:
  91:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                             RX_CAN_SET_TX_ID_EXTENDED_MSG(i, message->id);
  79              		.loc 1 91 0
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccThor7S.s 			page 4


  80 0034 2649     		ldr	r1, .L22+4
  81 0036 01EB0211 		add	r1, r1, r2, lsl #4
  82 003a 0468     		ldr	r4, [r0]
  83 003c E400     		lsls	r4, r4, #3
  84 003e 4C60     		str	r4, [r1, #4]
  85              	.L6:
  92:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                         }
  93:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
  94:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                         if (message->dlc < RX_CAN_TX_DLC_MAX_VALUE)
  86              		.loc 1 94 0
  87 0040 90F806E0 		ldrb	lr, [r0, #6]	@ zero_extendqisi2
  88 0044 BEF1070F 		cmp	lr, #7
  89 0048 02D8     		bhi	.L7
  95:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                         {
  96:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                             regTemp |= ((uint32) message->dlc) << RX_CAN_TWO_BYTE_OFFSET;
  90              		.loc 1 96 0
  91 004a 43EA0E4E 		orr	lr, r3, lr, lsl #16
  92              	.LVL7:
  93 004e 01E0     		b	.L8
  94              	.LVL8:
  95              	.L7:
  97:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                         }
  98:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                         else
  99:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                         {
 100:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                             regTemp |= RX_CAN_TX_DLC_UPPER_VALUE;
  96              		.loc 1 100 0
  97 0050 43F4002E 		orr	lr, r3, #524288
  98              	.LVL9:
  99              	.L8:
 101:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                         }
 102:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 103:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                         if (message->irq != RX_CAN_TRANSMIT_INT_DISABLE)
 100              		.loc 1 103 0
 101 0054 C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 102 0056 0BB1     		cbz	r3, .L9
 104:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                         {
 105:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                             regTemp |= RX_CAN_TX_INT_ENABLE_MASK;    /* Transmit Interrupt Enable *
 103              		.loc 1 105 0
 104 0058 4EF0040E 		orr	lr, lr, #4
 105              	.LVL10:
 106              	.L9:
 106:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                         }
 107:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 108:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                         for (j = 0u; (j < message->dlc) && (j < RX_CAN_TX_DLC_MAX_VALUE); j++)
 107              		.loc 1 108 0
 108 005c 0023     		movs	r3, #0
 109 005e 0FE0     		b	.L10
 110              	.LVL11:
 111              	.L14:
 109:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                         {
 110:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                             #if (CY_PSOC3 || CY_PSOC5)
 111:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                                 RX_CAN_TX_DATA_BYTE(i, j) = message->msg->byte[j];
 112              		.loc 1 111 0
 113 0060 1B49     		ldr	r1, .L22+4
 114 0062 01EB0214 		add	r4, r1, r2, lsl #4
 115 0066 032B     		cmp	r3, #3
 116 0068 02D9     		bls	.L11
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccThor7S.s 			page 5


 117              		.loc 1 111 0 is_stmt 0 discriminator 1
 118 006a C3F10B01 		rsb	r1, r3, #11
 119 006e 01E0     		b	.L12
 120              	.L11:
 121              		.loc 1 111 0 discriminator 2
 122 0070 C3F10301 		rsb	r1, r3, #3
 123              	.L12:
 124              		.loc 1 111 0 discriminator 4
 125 0074 8568     		ldr	r5, [r0, #8]
 126 0076 ED5C     		ldrb	r5, [r5, r3]	@ zero_extendqisi2
 127 0078 2144     		add	r1, r1, r4
 128 007a 0D72     		strb	r5, [r1, #8]
 108:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                         {
 129              		.loc 1 108 0 is_stmt 1 discriminator 4
 130 007c 0133     		adds	r3, r3, #1
 131              	.LVL12:
 132 007e DBB2     		uxtb	r3, r3
 133              	.LVL13:
 134              	.L10:
 108:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                         {
 135              		.loc 1 108 0 is_stmt 0 discriminator 2
 136 0080 8179     		ldrb	r1, [r0, #6]	@ zero_extendqisi2
 137 0082 9942     		cmp	r1, r3
 138 0084 01D9     		bls	.L13
 108:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                         {
 139              		.loc 1 108 0 discriminator 3
 140 0086 072B     		cmp	r3, #7
 141 0088 EAD9     		bls	.L14
 142              	.L13:
 112:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                             #else /* CY_PSOC4 */
 113:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                                 RX_CAN_TX_DATA_BYTE(i, j, message->msg->byte[j]);
 114:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                             #endif /* CY_PSOC3 || CY_PSOC5 */
 115:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                         }
 116:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 117:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                         /* Disable isr */
 118:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     CyIntDisable(RX_CAN_ISR_NUMBER);
 143              		.loc 1 118 0 is_stmt 1
 144 008a 4FF48034 		mov	r4, #65536
 145 008e 114B     		ldr	r3, .L22+8
 146              	.LVL14:
 147 0090 1C60     		str	r4, [r3]
 119:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 120:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                         /* WPN[23] and WPN[3] set to 1 for write to CAN Control reg */
 121:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                         CY_SET_REG32(RX_CAN_TX_CMD_PTR(i), (regTemp | RX_CAN_TX_WPN_SET));
 148              		.loc 1 121 0
 149 0092 1101     		lsls	r1, r2, #4
 150 0094 0E4D     		ldr	r5, .L22+4
 151 0096 4EF40003 		orr	r3, lr, #8388608
 152 009a 43F00803 		orr	r3, r3, #8
 153 009e 4B51     		str	r3, [r1, r5]
 122:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 123:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                         #if (CY_PSOC3 || CY_PSOC5)
 124:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                             CY_SET_REG32(RX_CAN_TX_CMD_PTR(i), RX_CAN_SEND_MESSAGE);
 154              		.loc 1 124 0
 155 00a0 0123     		movs	r3, #1
 156 00a2 4B51     		str	r3, [r1, r5]
 125:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                         #else /* CY_PSOC4 */
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccThor7S.s 			page 6


 126:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                             if (message->sst != RX_CAN_STANDARD_MESSAGE)
 127:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                             {
 128:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                                 /* Single Shot Transmission */
 129:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                                 RX_CAN_TX_CMD_REG(i) |= RX_CAN_SEND_MESSAGE |
 130:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                                 RX_CAN_TX_ABORT_MASK;
 131:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                             }
 132:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                             else
 133:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                             {
 134:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                                 RX_CAN_TX_CMD_REG(i) |= RX_CAN_SEND_MESSAGE;
 135:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                             }
 136:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                         #endif /* CY_PSOC3 || CY_PSOC5 */
 137:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 138:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                         /* Enable isr */
 139:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     CyIntEnable(RX_CAN_ISR_NUMBER);
 157              		.loc 1 139 0
 158 00a4 0C4B     		ldr	r3, .L22+12
 159 00a6 1C60     		str	r4, [r3]
 160              	.LVL15:
 140:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 141:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                         result = CYRET_SUCCESS;
 161              		.loc 1 141 0
 162 00a8 0021     		movs	r1, #0
 163              	.LVL16:
 164              	.L3:
 142:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                     }
 143:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             }
 144:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             shift <<= 1u;
 165              		.loc 1 144 0
 166 00aa 7B00     		lsls	r3, r7, #1
 167 00ac DFB2     		uxtb	r7, r3
 168              	.LVL17:
 145:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             if (result == CYRET_SUCCESS)
 169              		.loc 1 145 0
 170 00ae 31B1     		cbz	r1, .L15
  63:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         {
 171              		.loc 1 63 0 discriminator 2
 172 00b0 0132     		adds	r2, r2, #1
 173              	.LVL18:
 174 00b2 D2B2     		uxtb	r2, r2
 175              	.LVL19:
 176 00b4 01E0     		b	.L18
 177              	.LVL20:
 178              	.L20:
 179 00b6 0127     		movs	r7, #1
 180 00b8 0022     		movs	r2, #0
 181              	.L18:
 182              	.LVL21:
  63:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         {
 183              		.loc 1 63 0 is_stmt 0 discriminator 1
 184 00ba 072A     		cmp	r2, #7
 185 00bc A4D9     		bls	.L16
 186              	.L15:
 146:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             {
 147:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 break;
 148:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             }
 149:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         }
 150:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         if (result == CYRET_SUCCESS)
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccThor7S.s 			page 7


 187              		.loc 1 150 0 is_stmt 1
 188 00be 19B1     		cbz	r1, .L17
 151:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         {
 152:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             break;
 153:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         }
 154:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         else
 155:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         {
 156:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             retry++;
 189              		.loc 1 156 0
 190 00c0 0136     		adds	r6, r6, #1
 191              	.LVL22:
 192 00c2 F6B2     		uxtb	r6, r6
 193              	.LVL23:
 194              	.L2:
  60:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     {
 195              		.loc 1 60 0
 196 00c4 022E     		cmp	r6, #2
 197 00c6 F6D9     		bls	.L20
 198              	.L17:
 157:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         }
 158:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     }
 159:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 160:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     return (result);
 161:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** }
 199              		.loc 1 161 0
 200 00c8 0846     		mov	r0, r1
 201              	.LVL24:
 202 00ca F0BD     		pop	{r4, r5, r6, r7, pc}
 203              	.LVL25:
 204              	.L23:
 205              		.align	2
 206              	.L22:
 207 00cc 08A00040 		.word	1073782792
 208 00d0 20A00040 		.word	1073782816
 209 00d4 80E100E0 		.word	-536813184
 210 00d8 00E100E0 		.word	-536813312
 211              		.cfi_endproc
 212              	.LFE0:
 213              		.size	RX_CAN_SendMsg, .-RX_CAN_SendMsg
 214              		.section	.text.RX_CAN_TxCancel,"ax",%progbits
 215              		.align	2
 216              		.global	RX_CAN_TxCancel
 217              		.thumb
 218              		.thumb_func
 219              		.type	RX_CAN_TxCancel, %function
 220              	RX_CAN_TxCancel:
 221              	.LFB1:
 162:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 163:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 164:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** /*******************************************************************************
 165:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** * FUNCTION NAME:   RX_CAN_TxCancel
 166:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** ********************************************************************************
 167:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *
 168:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** * Summary:
 169:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *  This function cancels transmission of a message that has been queued to be
 170:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *  transmitted. Values between 0 and 7 are valid.
 171:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccThor7S.s 			page 8


 172:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** * Parameters:
 173:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *  bufferId: The mailbox number.
 174:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *
 175:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** * Return:
 176:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *  None.
 177:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *
 178:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *******************************************************************************/
 179:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** void RX_CAN_TxCancel(uint8 bufferId) 
 180:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** {
 222              		.loc 1 180 0
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 0
 225              		@ frame_needed = 0, uses_anonymous_args = 0
 226              		@ link register save eliminated.
 227              	.LVL26:
 181:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     if (bufferId < RX_CAN_NUMBER_OF_TX_MAILBOXES)
 228              		.loc 1 181 0
 229 0000 0728     		cmp	r0, #7
 230 0002 07D8     		bhi	.L24
 182:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     {
 183:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         RX_CAN_TX_ABORT_MESSAGE(bufferId);
 231              		.loc 1 183 0
 232 0004 0001     		lsls	r0, r0, #4
 233              	.LVL27:
 234 0006 044A     		ldr	r2, .L26
 235 0008 835C     		ldrb	r3, [r0, r2]	@ zero_extendqisi2
 236 000a 03F0FC03 		and	r3, r3, #252
 237 000e 43F00203 		orr	r3, r3, #2
 238 0012 8354     		strb	r3, [r0, r2]
 239              	.L24:
 240 0014 7047     		bx	lr
 241              	.L27:
 242 0016 00BF     		.align	2
 243              	.L26:
 244 0018 20A00040 		.word	1073782816
 245              		.cfi_endproc
 246              	.LFE1:
 247              		.size	RX_CAN_TxCancel, .-RX_CAN_TxCancel
 248              		.section	.text.RX_CAN_SendMsg0,"ax",%progbits
 249              		.align	2
 250              		.global	RX_CAN_SendMsg0
 251              		.thumb
 252              		.thumb_func
 253              		.type	RX_CAN_SendMsg0, %function
 254              	RX_CAN_SendMsg0:
 255              	.LFB2:
 184:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     }
 185:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** }
 186:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 187:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 188:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** #if (RX_CAN_TX0_FUNC_ENABLE)
 189:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     /*******************************************************************************
 190:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     * FUNCTION NAME:   RX_CAN_SendMsg0
 191:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     ********************************************************************************
 192:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *
 193:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     * Summary:
 194:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 0. The function checks
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccThor7S.s 			page 9


 195:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  if mailbox 0 doesn't already have un-transmitted messages waiting for
 196:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 197:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 198:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *
 199:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     * Parameters:
 200:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  None.
 201:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *
 202:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     * Return:
 203:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 204:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *   Define                             Description
 205:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 206:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *    RX_CAN_FAIL              The function failed
 207:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *
 208:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *******************************************************************************/
 209:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     uint8 RX_CAN_SendMsg0(void) 
 210:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     {
 256              		.loc 1 210 0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260              		@ link register save eliminated.
 261              	.LVL28:
 211:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 212:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 213:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 214:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             if ((RX_CAN_TX[0u].txcmd.byte[0u] & RX_CAN_TX_REQUEST_PENDING) != 0u)
 262              		.loc 1 214 0
 263 0000 074B     		ldr	r3, .L31
 264 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 265 0004 13F0010F 		tst	r3, #1
 266 0008 08D1     		bne	.L30
 215:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 216:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             if ((RX_CAN_TX_CMD_REG(0u) & RX_CAN_TX_REQUEST_PENDING) != 0u)
 217:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 218:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             {
 219:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 result = RX_CAN_FAIL;
 220:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             }
 221:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             else
 222:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             {
 223:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 /* `#START MESSAGE_0_TRASMITTED` */
 224:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 RX_CAN_TX_DATA_BYTE1(0)=127;
 267              		.loc 1 224 0
 268 000a 054B     		ldr	r3, .L31
 269 000c 7F22     		movs	r2, #127
 270 000e DA72     		strb	r2, [r3, #11]
 225:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** //                 RX_CAN_TX_DATA_BYTE2(0)=250;
 226:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** //                 RX_CAN_TX_DATA_BYTE3(0)=2;
 227:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** //                 RX_CAN_TX_DATA_BYTE4(0)=10;
 228:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** //                 RX_CAN_TX_DATA_BYTE5(0)=1;
 229:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** //                 RX_CAN_TX_DATA_BYTE6(0)=dato_enviado;
 230:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 /* `#END` */
 231:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 232:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 #ifdef RX_CAN_SEND_MSG_0_CALLBACK
 233:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                     RX_CAN_SendMsg_0_Callback();
 234:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 #endif /* RX_CAN_SEND_MSG_0_CALLBACK */
 235:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 236:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 CY_SET_REG32(RX_CAN_TX_CMD_PTR(0u),
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccThor7S.s 			page 10


 271              		.loc 1 236 0
 272 0010 1A68     		ldr	r2, [r3]
 273 0012 42F00102 		orr	r2, r2, #1
 274 0016 1A60     		str	r2, [r3]
 211:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 275              		.loc 1 211 0
 276 0018 0020     		movs	r0, #0
 277 001a 7047     		bx	lr
 278              	.L30:
 219:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             }
 279              		.loc 1 219 0
 280 001c 0120     		movs	r0, #1
 281              	.LVL29:
 237:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 CY_GET_REG32(RX_CAN_TX_CMD_PTR(0u)) | RX_CAN_SEND_MESSAGE);
 238:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             }
 239:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 240:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         return (result);
 241:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     }
 282              		.loc 1 241 0
 283 001e 7047     		bx	lr
 284              	.L32:
 285              		.align	2
 286              	.L31:
 287 0020 20A00040 		.word	1073782816
 288              		.cfi_endproc
 289              	.LFE2:
 290              		.size	RX_CAN_SendMsg0, .-RX_CAN_SendMsg0
 291              		.section	.text.RX_CAN_ReceiveMsg,"ax",%progbits
 292              		.align	2
 293              		.global	RX_CAN_ReceiveMsg
 294              		.thumb
 295              		.thumb_func
 296              		.type	RX_CAN_ReceiveMsg, %function
 297              	RX_CAN_ReceiveMsg:
 298              	.LFB3:
 242:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** #endif /* RX_CAN_TX0_FUNC_ENABLE */
 243:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 244:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 245:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** #if (RX_CAN_TX1_FUNC_ENABLE)
 246:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     /*******************************************************************************
 247:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     * FUNCTION NAME:   RX_CAN_SendMsg1
 248:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     ********************************************************************************
 249:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *
 250:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     * Summary:
 251:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 1. The function checks
 252:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  if mailbox 1 doesn't already have un-transmitted messages waiting for
 253:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 254:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 255:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *
 256:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     * Parameters:
 257:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  None.
 258:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *
 259:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     * Return:
 260:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 261:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *   Define                             Description
 262:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 263:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *    RX_CAN_FAIL              The function failed
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccThor7S.s 			page 11


 264:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *
 265:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *******************************************************************************/
 266:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     uint8 RX_CAN_SendMsg1(void) 
 267:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     {
 268:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 269:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 270:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 271:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             if ((RX_CAN_TX[1u].txcmd.byte[0u] & RX_CAN_TX_REQUEST_PENDING) != 0u)
 272:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 273:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             if ((RX_CAN_TX_CMD_REG(1u) & RX_CAN_TX_REQUEST_PENDING) != 0u)
 274:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 275:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             {
 276:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 result = RX_CAN_FAIL;
 277:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             }
 278:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             else
 279:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             {
 280:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 /* `#START MESSAGE_1_TRASMITTED` */
 281:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 282:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 /* `#END` */
 283:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 284:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 #ifdef RX_CAN_SEND_MSG_1_CALLBACK
 285:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                     RX_CAN_SendMsg_1_Callback();
 286:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 #endif /* RX_CAN_SEND_MSG_1_CALLBACK */
 287:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 288:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 CY_SET_REG32(RX_CAN_TX_CMD_PTR(1u),
 289:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 CY_GET_REG32(RX_CAN_TX_CMD_PTR(1u)) | RX_CAN_SEND_MESSAGE);
 290:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             }
 291:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 292:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         return (result);
 293:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     }
 294:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** #endif /* RX_CAN_TX1_FUNC_ENABLE */
 295:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 296:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 297:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** #if (RX_CAN_TX2_FUNC_ENABLE)
 298:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     /*******************************************************************************
 299:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     * FUNCTION NAME:   RX_CAN_SendMsg2
 300:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     ********************************************************************************
 301:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *
 302:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     * Summary:
 303:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 2. The function checks
 304:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  if mailbox 2 doesn't already have un-transmitted messages waiting for
 305:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 306:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 307:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *
 308:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     * Parameters:
 309:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  None.
 310:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *
 311:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     * Return:
 312:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 313:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *   Define                             Description
 314:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 315:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *    RX_CAN_FAIL              The function failed
 316:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *
 317:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *******************************************************************************/
 318:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     uint8 RX_CAN_SendMsg2(void) 
 319:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     {
 320:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccThor7S.s 			page 12


 321:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 322:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 323:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             if ((RX_CAN_TX[2u].txcmd.byte[0u] & RX_CAN_TX_REQUEST_PENDING) != 0u)
 324:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 325:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             if ((RX_CAN_TX_CMD_REG(2u) & RX_CAN_TX_REQUEST_PENDING) != 0u)
 326:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 327:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             {
 328:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 result = RX_CAN_FAIL;
 329:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             }
 330:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             else
 331:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             {
 332:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 /* `#START MESSAGE_2_TRASMITTED` */
 333:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 334:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 /* `#END` */
 335:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 336:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 #ifdef RX_CAN_SEND_MSG_2_CALLBACK
 337:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                     RX_CAN_SendMsg_2_Callback();
 338:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 #endif /* RX_CAN_SEND_MSG_2_CALLBACK */
 339:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 340:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 CY_SET_REG32(RX_CAN_TX_CMD_PTR(2u),
 341:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 CY_GET_REG32(RX_CAN_TX_CMD_PTR(2u)) | RX_CAN_SEND_MESSAGE);
 342:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             }
 343:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 344:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         return (result);
 345:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     }
 346:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** #endif /* RX_CAN_TX2_FUNC_ENABLE */
 347:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 348:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 349:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** #if (RX_CAN_TX3_FUNC_ENABLE)
 350:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     /*******************************************************************************
 351:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     * FUNCTION NAME:   RX_CAN_SendMsg3
 352:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     ********************************************************************************
 353:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *
 354:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     * Summary:
 355:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 3. The function checks
 356:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  if mailbox 3 doesn't already have un-transmitted messages waiting for
 357:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 358:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 359:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *
 360:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     * Parameters:
 361:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  None.
 362:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *
 363:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     * Return:
 364:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 365:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *   Define                             Description
 366:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 367:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *    RX_CAN_FAIL              The function failed
 368:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *
 369:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *******************************************************************************/
 370:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     uint8 RX_CAN_SendMsg3(void) 
 371:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     {
 372:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 373:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 374:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 375:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             if ((RX_CAN_TX[3u].txcmd.byte[0u] & RX_CAN_TX_REQUEST_PENDING) != 0u)
 376:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 377:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             if ((RX_CAN_TX_CMD_REG(3u) & RX_CAN_TX_REQUEST_PENDING) != 0u)
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccThor7S.s 			page 13


 378:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 379:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             {
 380:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 result = RX_CAN_FAIL;
 381:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             }
 382:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             else
 383:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             {
 384:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 /* `#START MESSAGE_3_TRASMITTED` */
 385:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 386:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 /* `#END` */
 387:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 388:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 #ifdef RX_CAN_SEND_MSG_3_CALLBACK
 389:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                     RX_CAN_SendMsg_3_Callback();
 390:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 #endif /* RX_CAN_SEND_MSG_3_CALLBACK */
 391:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 392:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 CY_SET_REG32(RX_CAN_TX_CMD_PTR(3u),
 393:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 CY_GET_REG32(RX_CAN_TX_CMD_PTR(3u)) | RX_CAN_SEND_MESSAGE);
 394:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             }
 395:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 396:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         return (result);
 397:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     }
 398:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** #endif /* RX_CAN_TX3_FUNC_ENABLE */
 399:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 400:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 401:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** #if (RX_CAN_TX4_FUNC_ENABLE)
 402:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     /*******************************************************************************
 403:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     * FUNCTION NAME:   RX_CAN_SendMsg4
 404:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     ********************************************************************************
 405:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *
 406:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     * Summary:
 407:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 4. The function checks
 408:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  if mailbox 4 doesn't already have un-transmitted messages waiting for
 409:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 410:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 411:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *
 412:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     * Parameters:
 413:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  None.
 414:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *
 415:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     * Return:
 416:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 417:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *   Define                             Description
 418:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 419:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *    RX_CAN_FAIL              The function failed
 420:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *
 421:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *******************************************************************************/
 422:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     uint8 RX_CAN_SendMsg4(void) 
 423:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     {
 424:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 425:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 426:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 427:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             if ((RX_CAN_TX[4u].txcmd.byte[0u] & RX_CAN_TX_REQUEST_PENDING) != 0u)
 428:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 429:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             if ((RX_CAN_TX_CMD_REG(4u) & RX_CAN_TX_REQUEST_PENDING) != 0u)
 430:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 431:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             {
 432:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 result = RX_CAN_FAIL;
 433:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             }
 434:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             else
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccThor7S.s 			page 14


 435:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             {
 436:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 /* `#START MESSAGE_4_TRASMITTED` */
 437:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 438:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 /* `#END` */
 439:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 440:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 #ifdef RX_CAN_SEND_MSG_4_CALLBACK
 441:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                     RX_CAN_SendMsg_4_Callback();
 442:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 #endif /* RX_CAN_SEND_MSG_4_CALLBACK */
 443:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 444:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 CY_SET_REG32(RX_CAN_TX_CMD_PTR(4u),
 445:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 CY_GET_REG32(RX_CAN_TX_CMD_PTR(4u)) | RX_CAN_SEND_MESSAGE);
 446:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             }
 447:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 448:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         return (result);
 449:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     }
 450:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** #endif /* RX_CAN_TX4_FUNC_ENABLE */
 451:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 452:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 453:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** #if (RX_CAN_TX5_FUNC_ENABLE)
 454:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     /*******************************************************************************
 455:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     * FUNCTION NAME:   RX_CAN_SendMsg5
 456:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     ********************************************************************************
 457:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *
 458:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     * Summary:
 459:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 5. The function checks
 460:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  if mailbox 5 doesn't already have un-transmitted messages waiting for
 461:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 462:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 463:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *
 464:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     * Parameters:
 465:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  None.
 466:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *
 467:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     * Return:
 468:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 469:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *   Define                             Description
 470:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 471:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *    RX_CAN_FAIL              The function failed
 472:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *
 473:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *******************************************************************************/
 474:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     uint8 RX_CAN_SendMsg5(void) 
 475:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     {
 476:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 477:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 478:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 479:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             if ((RX_CAN_TX[5u].txcmd.byte[0u] & RX_CAN_TX_REQUEST_PENDING) != 0u)
 480:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 481:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             if ((RX_CAN_TX_CMD_REG(5u) & RX_CAN_TX_REQUEST_PENDING) != 0u)
 482:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 483:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             {
 484:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 result = RX_CAN_FAIL;
 485:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             }
 486:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             else
 487:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             {
 488:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 /* `#START MESSAGE_5_TRASMITTED` */
 489:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 490:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 /* `#END` */
 491:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccThor7S.s 			page 15


 492:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 #ifdef RX_CAN_SEND_MSG_5_CALLBACK
 493:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                     RX_CAN_SendMsg_5_Callback();
 494:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 #endif /* RX_CAN_SEND_MSG_5_CALLBACK */
 495:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 496:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 CY_SET_REG32(RX_CAN_TX_CMD_PTR(5u),
 497:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 CY_GET_REG32(RX_CAN_TX_CMD_PTR(5u)) | RX_CAN_SEND_MESSAGE);
 498:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             }
 499:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 500:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         return (result);
 501:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     }
 502:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** #endif /* RX_CAN_TX5_FUNC_ENABLE */
 503:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 504:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 505:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** #if (RX_CAN_TX6_FUNC_ENABLE)
 506:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     /*******************************************************************************
 507:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     * FUNCTION NAME:   RX_CAN_SendMsg6
 508:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     ********************************************************************************
 509:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *
 510:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     * Summary:
 511:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 6. The function checks
 512:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  if mailbox 6 doesn't already have un-transmitted messages waiting for
 513:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 514:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 515:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *
 516:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     * Parameters:
 517:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  None.
 518:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *
 519:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     * Return:
 520:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 521:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *   Define                             Description
 522:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 523:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *    RX_CAN_FAIL              The function failed
 524:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *
 525:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *******************************************************************************/
 526:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     uint8 RX_CAN_SendMsg6(void) 
 527:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     {
 528:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 529:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 530:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 531:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             if ((RX_CAN_TX[6u].txcmd.byte[0u] & RX_CAN_TX_REQUEST_PENDING) != 0u)
 532:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 533:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             if ((RX_CAN_TX_CMD_REG(6u) & RX_CAN_TX_REQUEST_PENDING) != 0u)
 534:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 535:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             {
 536:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 result = RX_CAN_FAIL;
 537:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             }
 538:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             else
 539:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             {
 540:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 /* `#START MESSAGE_6_TRASMITTED` */
 541:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 542:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 /* `#END` */
 543:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 544:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 #ifdef RX_CAN_SEND_MSG_6_CALLBACK
 545:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                     RX_CAN_SendMsg_6_Callback();
 546:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 #endif /* RX_CAN_SEND_MSG_6_CALLBACK */
 547:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 548:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 CY_SET_REG32(RX_CAN_TX_CMD_PTR(6u),
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccThor7S.s 			page 16


 549:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 CY_GET_REG32(RX_CAN_TX_CMD_PTR(6u)) | RX_CAN_SEND_MESSAGE);
 550:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             }
 551:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 552:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         return (result);
 553:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     }
 554:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** #endif /* RX_CAN_TX6_FUNC_ENABLE */
 555:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 556:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 557:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** #if (RX_CAN_TX7_FUNC_ENABLE)
 558:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     /*******************************************************************************
 559:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     * FUNCTION NAME:   RX_CAN_SendMsg7)
 560:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     ********************************************************************************
 561:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *
 562:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     * Summary:
 563:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 7. The function checks
 564:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  if mailbox 7 doesn't already have un-transmitted messages waiting for
 565:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 566:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 567:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *
 568:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     * Parameters:
 569:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  None.
 570:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *
 571:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     * Return:
 572:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 573:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *   Define                             Description
 574:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 575:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *    RX_CAN_FAIL              The function failed
 576:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *
 577:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *******************************************************************************/
 578:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     uint8 RX_CAN_SendMsg7(void) 
 579:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     {
 580:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 581:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 582:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 583:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             if ((RX_CAN_TX[7u].txcmd.byte[0u] & RX_CAN_TX_REQUEST_PENDING) != 0u)
 584:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 585:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             if ((RX_CAN_TX_CMD_REG(7u) & RX_CAN_TX_REQUEST_PENDING) != 0u)
 586:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 587:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             {
 588:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 result = RX_CAN_FAIL;
 589:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             }
 590:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             else
 591:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             {
 592:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 /* `#START MESSAGE_7_TRASMITTED` */
 593:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 594:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 /* `#END` */
 595:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 596:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 #ifdef RX_CAN_SEND_MSG_7_CALLBACK
 597:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                     RX_CAN_SendMsg_7_Callback();
 598:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 #endif /* RX_CAN_SEND_MSG_7_CALLBACK */
 599:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 600:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 CY_SET_REG32(RX_CAN_TX_CMD_PTR(7u),
 601:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 CY_GET_REG32(RX_CAN_TX_CMD_PTR(7u)) | RX_CAN_SEND_MESSAGE);
 602:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             }
 603:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 604:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         return (result);
 605:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     }
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccThor7S.s 			page 17


 606:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** #endif /* RX_CAN_TX7_FUNC_ENABLE */
 607:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 608:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 609:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** /*******************************************************************************
 610:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** * FUNCTION NAME:   RX_CAN_ReceiveMsg
 611:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** ********************************************************************************
 612:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *
 613:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** * Summary:
 614:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *  This function is the entry point to Receive Message Interrupt for Basic
 615:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *  mailboxes. Clears the Receive particular Message interrupt flag. Generated
 616:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *  only if one of the Receive mailboxes is designed as Basic.
 617:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *
 618:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** * Parameters:
 619:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *  rxMailbox: The mailbox number that trig Receive Message Interrupt.
 620:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *
 621:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** * Return:
 622:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *  None.
 623:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *
 624:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** * Reentrant:
 625:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *  Depends on the Customer code.
 626:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *
 627:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** *******************************************************************************/
 628:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** void RX_CAN_ReceiveMsg(uint8 rxMailbox) 
 629:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** {
 299              		.loc 1 629 0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 0
 302              		@ frame_needed = 0, uses_anonymous_args = 0
 303              		@ link register save eliminated.
 304              	.LVL30:
 630:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     #if (CY_PSOC3 || CY_PSOC5)
 631:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         if ((RX_CAN_RX[rxMailbox].rxcmd.byte[0u] & RX_CAN_RX_ACK_MSG) != 0u)
 305              		.loc 1 631 0
 306 0000 4001     		lsls	r0, r0, #5
 307              	.LVL31:
 308 0002 054B     		ldr	r3, .L35
 309 0004 C25C     		ldrb	r2, [r0, r3]	@ zero_extendqisi2
 310 0006 12F0010F 		tst	r2, #1
 311 000a 03D0     		beq	.L33
 632:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     #else  /* CY_PSOC4 */
 633:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         if ((RX_CAN_RX_CMD_REG(rxMailbox) & RX_CAN_RX_ACK_MSG) != 0u)
 634:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     #endif /* CY_PSOC3 || CY_PSOC5 */
 635:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         {
 636:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             /* `#START MESSAGE_BASIC_RECEIVED` */
 637:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             
 638:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             /* `#END` */
 639:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 640:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             #ifdef RX_CAN_RECEIVE_MSG_CALLBACK
 641:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 RX_CAN_ReceiveMsg_Callback();
 642:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             #endif /* RX_CAN_RECEIVE_MSG_CALLBACK */
 643:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 644:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             #if (CY_PSOC3 || CY_PSOC5)
 645:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 RX_CAN_RX[rxMailbox].rxcmd.byte[0u] |= RX_CAN_RX_ACK_MSG;
 312              		.loc 1 645 0
 313 000c C25C     		ldrb	r2, [r0, r3]	@ zero_extendqisi2
 314 000e 42F00102 		orr	r2, r2, #1
 315 0012 C254     		strb	r2, [r0, r3]
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccThor7S.s 			page 18


 316              	.L33:
 317 0014 7047     		bx	lr
 318              	.L36:
 319 0016 00BF     		.align	2
 320              	.L35:
 321 0018 A0A00040 		.word	1073782944
 322              		.cfi_endproc
 323              	.LFE3:
 324              		.size	RX_CAN_ReceiveMsg, .-RX_CAN_ReceiveMsg
 325              		.section	.text.RX_CAN_ReceiveMsg0,"ax",%progbits
 326              		.align	2
 327              		.global	RX_CAN_ReceiveMsg0
 328              		.thumb
 329              		.thumb_func
 330              		.type	RX_CAN_ReceiveMsg0, %function
 331              	RX_CAN_ReceiveMsg0:
 332              	.LFB4:
 646:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             #else  /* CY_PSOC4 */
 647:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****                 RX_CAN_RX_CMD_REG(rxMailbox) |= RX_CAN_RX_ACK_MSG;
 648:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             #endif /* CY_PSOC3 || CY_PSOC5 */
 649:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         }
 650:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** }
 651:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 652:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 653:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** #if (RX_CAN_RX0_FUNC_ENABLE)
 654:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     /*******************************************************************************
 655:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     * FUNCTION NAME:   RX_CAN_ReceiveMsg0
 656:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     ********************************************************************************
 657:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *
 658:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     * Summary:
 659:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  This function is the entry point to Receive Message 0 Interrupt. Clears the
 660:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  Receive Message 0 interrupt flag. Generated only for the Receive mailbox
 661:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  designed as Full.
 662:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *
 663:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     * Parameters:
 664:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  None.
 665:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *
 666:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     * Return:
 667:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  None.
 668:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *
 669:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     * Reentrant:
 670:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *  Depends on the Customer code.
 671:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *
 672:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     *******************************************************************************/
 673:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     void RX_CAN_ReceiveMsg0(void) 
 674:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****     {
 333              		.loc 1 674 0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 0
 336              		@ frame_needed = 0, uses_anonymous_args = 0
 337              		@ link register save eliminated.
 675:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         /* `#START MESSAGE_0_RECEIVED` */
 676:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****           dato_recibido[0]=RX_CAN_RX_DATA_BYTE(0,0);
 338              		.loc 1 676 0
 339 0000 0B4B     		ldr	r3, .L38
 340 0002 D97A     		ldrb	r1, [r3, #11]	@ zero_extendqisi2
 341 0004 0B4A     		ldr	r2, .L38+4
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccThor7S.s 			page 19


 342 0006 1170     		strb	r1, [r2]
 677:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****           dato_recibido[1]=RX_CAN_RX_DATA_BYTE(0,1);
 343              		.loc 1 677 0
 344 0008 997A     		ldrb	r1, [r3, #10]	@ zero_extendqisi2
 345 000a 5170     		strb	r1, [r2, #1]
 678:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****           dato_recibido[2]=RX_CAN_RX_DATA_BYTE(0,2);
 346              		.loc 1 678 0
 347 000c 597A     		ldrb	r1, [r3, #9]	@ zero_extendqisi2
 348 000e 9170     		strb	r1, [r2, #2]
 679:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****           dato_recibido[3]=RX_CAN_RX_DATA_BYTE(0,3);
 349              		.loc 1 679 0
 350 0010 197A     		ldrb	r1, [r3, #8]	@ zero_extendqisi2
 351 0012 D170     		strb	r1, [r2, #3]
 680:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****           dato_recibido[4]=RX_CAN_RX_DATA_BYTE(0,4);
 352              		.loc 1 680 0
 353 0014 D97B     		ldrb	r1, [r3, #15]	@ zero_extendqisi2
 354 0016 1171     		strb	r1, [r2, #4]
 681:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****           dato_recibido[5]=RX_CAN_RX_DATA_BYTE(0,5);
 355              		.loc 1 681 0
 356 0018 997B     		ldrb	r1, [r3, #14]	@ zero_extendqisi2
 357 001a 5171     		strb	r1, [r2, #5]
 682:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****           dato_recibido[6]=RX_CAN_RX_DATA_BYTE(0,6);
 358              		.loc 1 682 0
 359 001c 597B     		ldrb	r1, [r3, #13]	@ zero_extendqisi2
 360 001e 9171     		strb	r1, [r2, #6]
 683:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****           dato_recibido[7]=RX_CAN_RX_DATA_BYTE(0,7);
 361              		.loc 1 683 0
 362 0020 197B     		ldrb	r1, [r3, #12]	@ zero_extendqisi2
 363 0022 D171     		strb	r1, [r2, #7]
 684:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         /* `#END` */
 685:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 686:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         #ifdef RX_CAN_RECEIVE_MSG_0_CALLBACK
 687:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****             RX_CAN_ReceiveMsg_0_Callback();
 688:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         #endif /* RX_CAN_RECEIVE_MSG_0_CALLBACK */
 689:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c **** 
 690:Generated_Source\PSoC5/RX_CAN_TX_RX_func.c ****         RX_CAN_RX[0u].rxcmd.byte[0u] |= RX_CAN_RX_ACK_MSG;
 364              		.loc 1 690 0
 365 0024 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 366 0026 42F00102 		orr	r2, r2, #1
 367 002a 1A70     		strb	r2, [r3]
 368 002c 7047     		bx	lr
 369              	.L39:
 370 002e 00BF     		.align	2
 371              	.L38:
 372 0030 A0A00040 		.word	1073782944
 373 0034 00000000 		.word	dato_recibido
 374              		.cfi_endproc
 375              	.LFE4:
 376              		.size	RX_CAN_ReceiveMsg0, .-RX_CAN_ReceiveMsg0
 377              		.text
 378              	.Letext0:
 379              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 380              		.file 3 "Generated_Source\\PSoC5\\RX_CAN.h"
 381              		.section	.debug_info,"",%progbits
 382              	.Ldebug_info0:
 383 0000 75030000 		.4byte	0x375
 384 0004 0400     		.2byte	0x4
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccThor7S.s 			page 20


 385 0006 00000000 		.4byte	.Ldebug_abbrev0
 386 000a 04       		.byte	0x4
 387 000b 01       		.uleb128 0x1
 388 000c 29010000 		.4byte	.LASF45
 389 0010 01       		.byte	0x1
 390 0011 4A020000 		.4byte	.LASF46
 391 0015 9E020000 		.4byte	.LASF47
 392 0019 00000000 		.4byte	.Ldebug_ranges0+0
 393 001d 00000000 		.4byte	0
 394 0021 00000000 		.4byte	.Ldebug_line0
 395 0025 02       		.uleb128 0x2
 396 0026 01       		.byte	0x1
 397 0027 06       		.byte	0x6
 398 0028 D3020000 		.4byte	.LASF0
 399 002c 02       		.uleb128 0x2
 400 002d 01       		.byte	0x1
 401 002e 08       		.byte	0x8
 402 002f AD000000 		.4byte	.LASF1
 403 0033 02       		.uleb128 0x2
 404 0034 02       		.byte	0x2
 405 0035 05       		.byte	0x5
 406 0036 18010000 		.4byte	.LASF2
 407 003a 02       		.uleb128 0x2
 408 003b 02       		.byte	0x2
 409 003c 07       		.byte	0x7
 410 003d 3B000000 		.4byte	.LASF3
 411 0041 02       		.uleb128 0x2
 412 0042 04       		.byte	0x4
 413 0043 05       		.byte	0x5
 414 0044 95020000 		.4byte	.LASF4
 415 0048 02       		.uleb128 0x2
 416 0049 04       		.byte	0x4
 417 004a 07       		.byte	0x7
 418 004b D2000000 		.4byte	.LASF5
 419 004f 02       		.uleb128 0x2
 420 0050 08       		.byte	0x8
 421 0051 05       		.byte	0x5
 422 0052 00000000 		.4byte	.LASF6
 423 0056 02       		.uleb128 0x2
 424 0057 08       		.byte	0x8
 425 0058 07       		.byte	0x7
 426 0059 C4010000 		.4byte	.LASF7
 427 005d 03       		.uleb128 0x3
 428 005e 04       		.byte	0x4
 429 005f 05       		.byte	0x5
 430 0060 696E7400 		.ascii	"int\000"
 431 0064 02       		.uleb128 0x2
 432 0065 04       		.byte	0x4
 433 0066 07       		.byte	0x7
 434 0067 B7010000 		.4byte	.LASF8
 435 006b 04       		.uleb128 0x4
 436 006c E4000000 		.4byte	.LASF9
 437 0070 02       		.byte	0x2
 438 0071 9201     		.2byte	0x192
 439 0073 2C000000 		.4byte	0x2c
 440 0077 04       		.uleb128 0x4
 441 0078 22010000 		.4byte	.LASF10
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccThor7S.s 			page 21


 442 007c 02       		.byte	0x2
 443 007d 9401     		.2byte	0x194
 444 007f 48000000 		.4byte	0x48
 445 0083 02       		.uleb128 0x2
 446 0084 04       		.byte	0x4
 447 0085 04       		.byte	0x4
 448 0086 96000000 		.4byte	.LASF11
 449 008a 02       		.uleb128 0x2
 450 008b 08       		.byte	0x8
 451 008c 04       		.byte	0x4
 452 008d 61000000 		.4byte	.LASF12
 453 0091 02       		.uleb128 0x2
 454 0092 01       		.byte	0x1
 455 0093 08       		.byte	0x8
 456 0094 54000000 		.4byte	.LASF13
 457 0098 04       		.uleb128 0x4
 458 0099 C7000000 		.4byte	.LASF14
 459 009d 02       		.byte	0x2
 460 009e 3C02     		.2byte	0x23c
 461 00a0 A4000000 		.4byte	0xa4
 462 00a4 05       		.uleb128 0x5
 463 00a5 6B000000 		.4byte	0x6b
 464 00a9 04       		.uleb128 0x4
 465 00aa BB000000 		.4byte	.LASF15
 466 00ae 02       		.byte	0x2
 467 00af 3E02     		.2byte	0x23e
 468 00b1 B5000000 		.4byte	0xb5
 469 00b5 05       		.uleb128 0x5
 470 00b6 77000000 		.4byte	0x77
 471 00ba 02       		.uleb128 0x2
 472 00bb 04       		.byte	0x4
 473 00bc 07       		.byte	0x7
 474 00bd 2C020000 		.4byte	.LASF16
 475 00c1 06       		.uleb128 0x6
 476 00c2 08       		.byte	0x8
 477 00c3 03       		.byte	0x3
 478 00c4 6F       		.byte	0x6f
 479 00c5 D6000000 		.4byte	0xd6
 480 00c9 07       		.uleb128 0x7
 481 00ca 68000000 		.4byte	.LASF18
 482 00ce 03       		.byte	0x3
 483 00cf 71       		.byte	0x71
 484 00d0 D6000000 		.4byte	0xd6
 485 00d4 00       		.byte	0
 486 00d5 00       		.byte	0
 487 00d6 08       		.uleb128 0x8
 488 00d7 6B000000 		.4byte	0x6b
 489 00db E6000000 		.4byte	0xe6
 490 00df 09       		.uleb128 0x9
 491 00e0 BA000000 		.4byte	0xba
 492 00e4 07       		.byte	0x7
 493 00e5 00       		.byte	0
 494 00e6 0A       		.uleb128 0xa
 495 00e7 07020000 		.4byte	.LASF17
 496 00eb 03       		.byte	0x3
 497 00ec 72       		.byte	0x72
 498 00ed C1000000 		.4byte	0xc1
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccThor7S.s 			page 22


 499 00f1 06       		.uleb128 0x6
 500 00f2 08       		.byte	0x8
 501 00f3 03       		.byte	0x3
 502 00f4 75       		.byte	0x75
 503 00f5 06010000 		.4byte	0x106
 504 00f9 07       		.uleb128 0x7
 505 00fa 68000000 		.4byte	.LASF18
 506 00fe 03       		.byte	0x3
 507 00ff 77       		.byte	0x77
 508 0100 16010000 		.4byte	0x116
 509 0104 00       		.byte	0
 510 0105 00       		.byte	0
 511 0106 08       		.uleb128 0x8
 512 0107 98000000 		.4byte	0x98
 513 010b 16010000 		.4byte	0x116
 514 010f 09       		.uleb128 0x9
 515 0110 BA000000 		.4byte	0xba
 516 0114 07       		.byte	0x7
 517 0115 00       		.byte	0
 518 0116 05       		.uleb128 0x5
 519 0117 06010000 		.4byte	0x106
 520 011b 0A       		.uleb128 0xa
 521 011c DB010000 		.4byte	.LASF19
 522 0120 03       		.byte	0x3
 523 0121 78       		.byte	0x78
 524 0122 F1000000 		.4byte	0xf1
 525 0126 06       		.uleb128 0x6
 526 0127 04       		.byte	0x4
 527 0128 03       		.byte	0x3
 528 0129 7B       		.byte	0x7b
 529 012a 3B010000 		.4byte	0x13b
 530 012e 07       		.uleb128 0x7
 531 012f 68000000 		.4byte	.LASF18
 532 0133 03       		.byte	0x3
 533 0134 7D       		.byte	0x7d
 534 0135 4B010000 		.4byte	0x14b
 535 0139 00       		.byte	0
 536 013a 00       		.byte	0
 537 013b 08       		.uleb128 0x8
 538 013c 98000000 		.4byte	0x98
 539 0140 4B010000 		.4byte	0x14b
 540 0144 09       		.uleb128 0x9
 541 0145 BA000000 		.4byte	0xba
 542 0149 03       		.byte	0x3
 543 014a 00       		.byte	0
 544 014b 05       		.uleb128 0x5
 545 014c 3B010000 		.4byte	0x13b
 546 0150 0A       		.uleb128 0xa
 547 0151 19000000 		.4byte	.LASF20
 548 0155 03       		.byte	0x3
 549 0156 7E       		.byte	0x7e
 550 0157 26010000 		.4byte	0x126
 551 015b 06       		.uleb128 0x6
 552 015c 0C       		.byte	0xc
 553 015d 03       		.byte	0x3
 554 015e 81       		.byte	0x81
 555 015f AB010000 		.4byte	0x1ab
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccThor7S.s 			page 23


 556 0163 0B       		.uleb128 0xb
 557 0164 696400   		.ascii	"id\000"
 558 0167 03       		.byte	0x3
 559 0168 83       		.byte	0x83
 560 0169 77000000 		.4byte	0x77
 561 016d 00       		.byte	0
 562 016e 0B       		.uleb128 0xb
 563 016f 72747200 		.ascii	"rtr\000"
 564 0173 03       		.byte	0x3
 565 0174 84       		.byte	0x84
 566 0175 6B000000 		.4byte	0x6b
 567 0179 04       		.byte	0x4
 568 017a 0B       		.uleb128 0xb
 569 017b 69646500 		.ascii	"ide\000"
 570 017f 03       		.byte	0x3
 571 0180 85       		.byte	0x85
 572 0181 6B000000 		.4byte	0x6b
 573 0185 05       		.byte	0x5
 574 0186 0B       		.uleb128 0xb
 575 0187 646C6300 		.ascii	"dlc\000"
 576 018b 03       		.byte	0x3
 577 018c 86       		.byte	0x86
 578 018d 6B000000 		.4byte	0x6b
 579 0191 06       		.byte	0x6
 580 0192 0B       		.uleb128 0xb
 581 0193 69727100 		.ascii	"irq\000"
 582 0197 03       		.byte	0x3
 583 0198 87       		.byte	0x87
 584 0199 6B000000 		.4byte	0x6b
 585 019d 07       		.byte	0x7
 586 019e 0B       		.uleb128 0xb
 587 019f 6D736700 		.ascii	"msg\000"
 588 01a3 03       		.byte	0x3
 589 01a4 8B       		.byte	0x8b
 590 01a5 AB010000 		.4byte	0x1ab
 591 01a9 08       		.byte	0x8
 592 01aa 00       		.byte	0
 593 01ab 0C       		.uleb128 0xc
 594 01ac 04       		.byte	0x4
 595 01ad E6000000 		.4byte	0xe6
 596 01b1 0A       		.uleb128 0xa
 597 01b2 3C020000 		.4byte	.LASF21
 598 01b6 03       		.byte	0x3
 599 01b7 8C       		.byte	0x8c
 600 01b8 5B010000 		.4byte	0x15b
 601 01bc 06       		.uleb128 0x6
 602 01bd 20       		.byte	0x20
 603 01be 03       		.byte	0x3
 604 01bf A0       		.byte	0xa0
 605 01c0 19020000 		.4byte	0x219
 606 01c4 07       		.uleb128 0x7
 607 01c5 CC000000 		.4byte	.LASF22
 608 01c9 03       		.byte	0x3
 609 01ca A2       		.byte	0xa2
 610 01cb 50010000 		.4byte	0x150
 611 01cf 00       		.byte	0
 612 01d0 07       		.uleb128 0x7
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccThor7S.s 			page 24


 613 01d1 EA000000 		.4byte	.LASF23
 614 01d5 03       		.byte	0x3
 615 01d6 A3       		.byte	0xa3
 616 01d7 50010000 		.4byte	0x150
 617 01db 04       		.byte	0x4
 618 01dc 07       		.uleb128 0x7
 619 01dd 6D000000 		.4byte	.LASF24
 620 01e1 03       		.byte	0x3
 621 01e2 A4       		.byte	0xa4
 622 01e3 1B010000 		.4byte	0x11b
 623 01e7 08       		.byte	0x8
 624 01e8 07       		.uleb128 0x7
 625 01e9 27000000 		.4byte	.LASF25
 626 01ed 03       		.byte	0x3
 627 01ee A5       		.byte	0xa5
 628 01ef 50010000 		.4byte	0x150
 629 01f3 10       		.byte	0x10
 630 01f4 07       		.uleb128 0x7
 631 01f5 88020000 		.4byte	.LASF26
 632 01f9 03       		.byte	0x3
 633 01fa A6       		.byte	0xa6
 634 01fb 50010000 		.4byte	0x150
 635 01ff 14       		.byte	0x14
 636 0200 07       		.uleb128 0x7
 637 0201 35020000 		.4byte	.LASF27
 638 0205 03       		.byte	0x3
 639 0206 A7       		.byte	0xa7
 640 0207 50010000 		.4byte	0x150
 641 020b 18       		.byte	0x18
 642 020c 07       		.uleb128 0x7
 643 020d 8E020000 		.4byte	.LASF28
 644 0211 03       		.byte	0x3
 645 0212 A8       		.byte	0xa8
 646 0213 50010000 		.4byte	0x150
 647 0217 1C       		.byte	0x1c
 648 0218 00       		.byte	0
 649 0219 0A       		.uleb128 0xa
 650 021a 9C000000 		.4byte	.LASF29
 651 021e 03       		.byte	0x3
 652 021f A9       		.byte	0xa9
 653 0220 BC010000 		.4byte	0x1bc
 654 0224 06       		.uleb128 0x6
 655 0225 10       		.byte	0x10
 656 0226 03       		.byte	0x3
 657 0227 AC       		.byte	0xac
 658 0228 51020000 		.4byte	0x251
 659 022c 07       		.uleb128 0x7
 660 022d 4E000000 		.4byte	.LASF30
 661 0231 03       		.byte	0x3
 662 0232 AE       		.byte	0xae
 663 0233 50010000 		.4byte	0x150
 664 0237 00       		.byte	0
 665 0238 07       		.uleb128 0x7
 666 0239 14000000 		.4byte	.LASF31
 667 023d 03       		.byte	0x3
 668 023e AF       		.byte	0xaf
 669 023f 50010000 		.4byte	0x150
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccThor7S.s 			page 25


 670 0243 04       		.byte	0x4
 671 0244 07       		.uleb128 0x7
 672 0245 DF020000 		.4byte	.LASF32
 673 0249 03       		.byte	0x3
 674 024a B0       		.byte	0xb0
 675 024b 1B010000 		.4byte	0x11b
 676 024f 08       		.byte	0x8
 677 0250 00       		.byte	0
 678 0251 0A       		.uleb128 0xa
 679 0252 FF000000 		.4byte	.LASF33
 680 0256 03       		.byte	0x3
 681 0257 B1       		.byte	0xb1
 682 0258 24020000 		.4byte	0x224
 683 025c 0D       		.uleb128 0xd
 684 025d 1D020000 		.4byte	.LASF40
 685 0261 01       		.byte	0x1
 686 0262 35       		.byte	0x35
 687 0263 6B000000 		.4byte	0x6b
 688 0267 00000000 		.4byte	.LFB0
 689 026b DC000000 		.4byte	.LFE0-.LFB0
 690 026f 01       		.uleb128 0x1
 691 0270 9C       		.byte	0x9c
 692 0271 DB020000 		.4byte	0x2db
 693 0275 0E       		.uleb128 0xe
 694 0276 59000000 		.4byte	.LASF38
 695 027a 01       		.byte	0x1
 696 027b 35       		.byte	0x35
 697 027c DB020000 		.4byte	0x2db
 698 0280 00000000 		.4byte	.LLST0
 699 0284 0F       		.uleb128 0xf
 700 0285 6900     		.ascii	"i\000"
 701 0287 01       		.byte	0x1
 702 0288 37       		.byte	0x37
 703 0289 6B000000 		.4byte	0x6b
 704 028d 21000000 		.4byte	.LLST1
 705 0291 0F       		.uleb128 0xf
 706 0292 6A00     		.ascii	"j\000"
 707 0294 01       		.byte	0x1
 708 0295 37       		.byte	0x37
 709 0296 6B000000 		.4byte	0x6b
 710 029a 4A000000 		.4byte	.LLST2
 711 029e 10       		.uleb128 0x10
 712 029f 0E000000 		.4byte	.LASF34
 713 02a3 01       		.byte	0x1
 714 02a4 37       		.byte	0x37
 715 02a5 6B000000 		.4byte	0x6b
 716 02a9 74000000 		.4byte	.LLST3
 717 02ad 10       		.uleb128 0x10
 718 02ae C1000000 		.4byte	.LASF35
 719 02b2 01       		.byte	0x1
 720 02b3 38       		.byte	0x38
 721 02b4 6B000000 		.4byte	0x6b
 722 02b8 92000000 		.4byte	.LLST4
 723 02bc 10       		.uleb128 0x10
 724 02bd ED010000 		.4byte	.LASF36
 725 02c1 01       		.byte	0x1
 726 02c2 39       		.byte	0x39
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccThor7S.s 			page 26


 727 02c3 6B000000 		.4byte	0x6b
 728 02c7 BC000000 		.4byte	.LLST5
 729 02cb 10       		.uleb128 0x10
 730 02cc 10010000 		.4byte	.LASF37
 731 02d0 01       		.byte	0x1
 732 02d1 3A       		.byte	0x3a
 733 02d2 77000000 		.4byte	0x77
 734 02d6 F2000000 		.4byte	.LLST6
 735 02da 00       		.byte	0
 736 02db 0C       		.uleb128 0xc
 737 02dc 04       		.byte	0x4
 738 02dd E1020000 		.4byte	0x2e1
 739 02e1 11       		.uleb128 0x11
 740 02e2 B1010000 		.4byte	0x1b1
 741 02e6 12       		.uleb128 0x12
 742 02e7 EF000000 		.4byte	.LASF42
 743 02eb 01       		.byte	0x1
 744 02ec B3       		.byte	0xb3
 745 02ed 00000000 		.4byte	.LFB1
 746 02f1 1C000000 		.4byte	.LFE1-.LFB1
 747 02f5 01       		.uleb128 0x1
 748 02f6 9C       		.byte	0x9c
 749 02f7 0B030000 		.4byte	0x30b
 750 02fb 0E       		.uleb128 0xe
 751 02fc 75020000 		.4byte	.LASF39
 752 0300 01       		.byte	0x1
 753 0301 B3       		.byte	0xb3
 754 0302 6B000000 		.4byte	0x6b
 755 0306 32010000 		.4byte	.LLST7
 756 030a 00       		.byte	0
 757 030b 0D       		.uleb128 0xd
 758 030c 86000000 		.4byte	.LASF41
 759 0310 01       		.byte	0x1
 760 0311 D1       		.byte	0xd1
 761 0312 6B000000 		.4byte	0x6b
 762 0316 00000000 		.4byte	.LFB2
 763 031a 24000000 		.4byte	.LFE2-.LFB2
 764 031e 01       		.uleb128 0x1
 765 031f 9C       		.byte	0x9c
 766 0320 34030000 		.4byte	0x334
 767 0324 10       		.uleb128 0x10
 768 0325 ED010000 		.4byte	.LASF36
 769 0329 01       		.byte	0x1
 770 032a D3       		.byte	0xd3
 771 032b 6B000000 		.4byte	0x6b
 772 032f 53010000 		.4byte	.LLST8
 773 0333 00       		.byte	0
 774 0334 13       		.uleb128 0x13
 775 0335 74000000 		.4byte	.LASF43
 776 0339 01       		.byte	0x1
 777 033a 7402     		.2byte	0x274
 778 033c 00000000 		.4byte	.LFB3
 779 0340 1C000000 		.4byte	.LFE3-.LFB3
 780 0344 01       		.uleb128 0x1
 781 0345 9C       		.byte	0x9c
 782 0346 5B030000 		.4byte	0x35b
 783 034a 14       		.uleb128 0x14
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccThor7S.s 			page 27


 784 034b 7E020000 		.4byte	.LASF44
 785 034f 01       		.byte	0x1
 786 0350 7402     		.2byte	0x274
 787 0352 6B000000 		.4byte	0x6b
 788 0356 72010000 		.4byte	.LLST9
 789 035a 00       		.byte	0
 790 035b 15       		.uleb128 0x15
 791 035c F4010000 		.4byte	.LASF48
 792 0360 01       		.byte	0x1
 793 0361 A102     		.2byte	0x2a1
 794 0363 00000000 		.4byte	.LFB4
 795 0367 38000000 		.4byte	.LFE4-.LFB4
 796 036b 01       		.uleb128 0x1
 797 036c 9C       		.byte	0x9c
 798 036d 16       		.uleb128 0x16
 799 036e 2D000000 		.4byte	.LASF49
 800 0372 01       		.byte	0x1
 801 0373 1C       		.byte	0x1c
 802 0374 D6000000 		.4byte	0xd6
 803 0378 00       		.byte	0
 804              		.section	.debug_abbrev,"",%progbits
 805              	.Ldebug_abbrev0:
 806 0000 01       		.uleb128 0x1
 807 0001 11       		.uleb128 0x11
 808 0002 01       		.byte	0x1
 809 0003 25       		.uleb128 0x25
 810 0004 0E       		.uleb128 0xe
 811 0005 13       		.uleb128 0x13
 812 0006 0B       		.uleb128 0xb
 813 0007 03       		.uleb128 0x3
 814 0008 0E       		.uleb128 0xe
 815 0009 1B       		.uleb128 0x1b
 816 000a 0E       		.uleb128 0xe
 817 000b 55       		.uleb128 0x55
 818 000c 17       		.uleb128 0x17
 819 000d 11       		.uleb128 0x11
 820 000e 01       		.uleb128 0x1
 821 000f 10       		.uleb128 0x10
 822 0010 17       		.uleb128 0x17
 823 0011 00       		.byte	0
 824 0012 00       		.byte	0
 825 0013 02       		.uleb128 0x2
 826 0014 24       		.uleb128 0x24
 827 0015 00       		.byte	0
 828 0016 0B       		.uleb128 0xb
 829 0017 0B       		.uleb128 0xb
 830 0018 3E       		.uleb128 0x3e
 831 0019 0B       		.uleb128 0xb
 832 001a 03       		.uleb128 0x3
 833 001b 0E       		.uleb128 0xe
 834 001c 00       		.byte	0
 835 001d 00       		.byte	0
 836 001e 03       		.uleb128 0x3
 837 001f 24       		.uleb128 0x24
 838 0020 00       		.byte	0
 839 0021 0B       		.uleb128 0xb
 840 0022 0B       		.uleb128 0xb
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccThor7S.s 			page 28


 841 0023 3E       		.uleb128 0x3e
 842 0024 0B       		.uleb128 0xb
 843 0025 03       		.uleb128 0x3
 844 0026 08       		.uleb128 0x8
 845 0027 00       		.byte	0
 846 0028 00       		.byte	0
 847 0029 04       		.uleb128 0x4
 848 002a 16       		.uleb128 0x16
 849 002b 00       		.byte	0
 850 002c 03       		.uleb128 0x3
 851 002d 0E       		.uleb128 0xe
 852 002e 3A       		.uleb128 0x3a
 853 002f 0B       		.uleb128 0xb
 854 0030 3B       		.uleb128 0x3b
 855 0031 05       		.uleb128 0x5
 856 0032 49       		.uleb128 0x49
 857 0033 13       		.uleb128 0x13
 858 0034 00       		.byte	0
 859 0035 00       		.byte	0
 860 0036 05       		.uleb128 0x5
 861 0037 35       		.uleb128 0x35
 862 0038 00       		.byte	0
 863 0039 49       		.uleb128 0x49
 864 003a 13       		.uleb128 0x13
 865 003b 00       		.byte	0
 866 003c 00       		.byte	0
 867 003d 06       		.uleb128 0x6
 868 003e 13       		.uleb128 0x13
 869 003f 01       		.byte	0x1
 870 0040 0B       		.uleb128 0xb
 871 0041 0B       		.uleb128 0xb
 872 0042 3A       		.uleb128 0x3a
 873 0043 0B       		.uleb128 0xb
 874 0044 3B       		.uleb128 0x3b
 875 0045 0B       		.uleb128 0xb
 876 0046 01       		.uleb128 0x1
 877 0047 13       		.uleb128 0x13
 878 0048 00       		.byte	0
 879 0049 00       		.byte	0
 880 004a 07       		.uleb128 0x7
 881 004b 0D       		.uleb128 0xd
 882 004c 00       		.byte	0
 883 004d 03       		.uleb128 0x3
 884 004e 0E       		.uleb128 0xe
 885 004f 3A       		.uleb128 0x3a
 886 0050 0B       		.uleb128 0xb
 887 0051 3B       		.uleb128 0x3b
 888 0052 0B       		.uleb128 0xb
 889 0053 49       		.uleb128 0x49
 890 0054 13       		.uleb128 0x13
 891 0055 38       		.uleb128 0x38
 892 0056 0B       		.uleb128 0xb
 893 0057 00       		.byte	0
 894 0058 00       		.byte	0
 895 0059 08       		.uleb128 0x8
 896 005a 01       		.uleb128 0x1
 897 005b 01       		.byte	0x1
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccThor7S.s 			page 29


 898 005c 49       		.uleb128 0x49
 899 005d 13       		.uleb128 0x13
 900 005e 01       		.uleb128 0x1
 901 005f 13       		.uleb128 0x13
 902 0060 00       		.byte	0
 903 0061 00       		.byte	0
 904 0062 09       		.uleb128 0x9
 905 0063 21       		.uleb128 0x21
 906 0064 00       		.byte	0
 907 0065 49       		.uleb128 0x49
 908 0066 13       		.uleb128 0x13
 909 0067 2F       		.uleb128 0x2f
 910 0068 0B       		.uleb128 0xb
 911 0069 00       		.byte	0
 912 006a 00       		.byte	0
 913 006b 0A       		.uleb128 0xa
 914 006c 16       		.uleb128 0x16
 915 006d 00       		.byte	0
 916 006e 03       		.uleb128 0x3
 917 006f 0E       		.uleb128 0xe
 918 0070 3A       		.uleb128 0x3a
 919 0071 0B       		.uleb128 0xb
 920 0072 3B       		.uleb128 0x3b
 921 0073 0B       		.uleb128 0xb
 922 0074 49       		.uleb128 0x49
 923 0075 13       		.uleb128 0x13
 924 0076 00       		.byte	0
 925 0077 00       		.byte	0
 926 0078 0B       		.uleb128 0xb
 927 0079 0D       		.uleb128 0xd
 928 007a 00       		.byte	0
 929 007b 03       		.uleb128 0x3
 930 007c 08       		.uleb128 0x8
 931 007d 3A       		.uleb128 0x3a
 932 007e 0B       		.uleb128 0xb
 933 007f 3B       		.uleb128 0x3b
 934 0080 0B       		.uleb128 0xb
 935 0081 49       		.uleb128 0x49
 936 0082 13       		.uleb128 0x13
 937 0083 38       		.uleb128 0x38
 938 0084 0B       		.uleb128 0xb
 939 0085 00       		.byte	0
 940 0086 00       		.byte	0
 941 0087 0C       		.uleb128 0xc
 942 0088 0F       		.uleb128 0xf
 943 0089 00       		.byte	0
 944 008a 0B       		.uleb128 0xb
 945 008b 0B       		.uleb128 0xb
 946 008c 49       		.uleb128 0x49
 947 008d 13       		.uleb128 0x13
 948 008e 00       		.byte	0
 949 008f 00       		.byte	0
 950 0090 0D       		.uleb128 0xd
 951 0091 2E       		.uleb128 0x2e
 952 0092 01       		.byte	0x1
 953 0093 3F       		.uleb128 0x3f
 954 0094 19       		.uleb128 0x19
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccThor7S.s 			page 30


 955 0095 03       		.uleb128 0x3
 956 0096 0E       		.uleb128 0xe
 957 0097 3A       		.uleb128 0x3a
 958 0098 0B       		.uleb128 0xb
 959 0099 3B       		.uleb128 0x3b
 960 009a 0B       		.uleb128 0xb
 961 009b 27       		.uleb128 0x27
 962 009c 19       		.uleb128 0x19
 963 009d 49       		.uleb128 0x49
 964 009e 13       		.uleb128 0x13
 965 009f 11       		.uleb128 0x11
 966 00a0 01       		.uleb128 0x1
 967 00a1 12       		.uleb128 0x12
 968 00a2 06       		.uleb128 0x6
 969 00a3 40       		.uleb128 0x40
 970 00a4 18       		.uleb128 0x18
 971 00a5 9742     		.uleb128 0x2117
 972 00a7 19       		.uleb128 0x19
 973 00a8 01       		.uleb128 0x1
 974 00a9 13       		.uleb128 0x13
 975 00aa 00       		.byte	0
 976 00ab 00       		.byte	0
 977 00ac 0E       		.uleb128 0xe
 978 00ad 05       		.uleb128 0x5
 979 00ae 00       		.byte	0
 980 00af 03       		.uleb128 0x3
 981 00b0 0E       		.uleb128 0xe
 982 00b1 3A       		.uleb128 0x3a
 983 00b2 0B       		.uleb128 0xb
 984 00b3 3B       		.uleb128 0x3b
 985 00b4 0B       		.uleb128 0xb
 986 00b5 49       		.uleb128 0x49
 987 00b6 13       		.uleb128 0x13
 988 00b7 02       		.uleb128 0x2
 989 00b8 17       		.uleb128 0x17
 990 00b9 00       		.byte	0
 991 00ba 00       		.byte	0
 992 00bb 0F       		.uleb128 0xf
 993 00bc 34       		.uleb128 0x34
 994 00bd 00       		.byte	0
 995 00be 03       		.uleb128 0x3
 996 00bf 08       		.uleb128 0x8
 997 00c0 3A       		.uleb128 0x3a
 998 00c1 0B       		.uleb128 0xb
 999 00c2 3B       		.uleb128 0x3b
 1000 00c3 0B       		.uleb128 0xb
 1001 00c4 49       		.uleb128 0x49
 1002 00c5 13       		.uleb128 0x13
 1003 00c6 02       		.uleb128 0x2
 1004 00c7 17       		.uleb128 0x17
 1005 00c8 00       		.byte	0
 1006 00c9 00       		.byte	0
 1007 00ca 10       		.uleb128 0x10
 1008 00cb 34       		.uleb128 0x34
 1009 00cc 00       		.byte	0
 1010 00cd 03       		.uleb128 0x3
 1011 00ce 0E       		.uleb128 0xe
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccThor7S.s 			page 31


 1012 00cf 3A       		.uleb128 0x3a
 1013 00d0 0B       		.uleb128 0xb
 1014 00d1 3B       		.uleb128 0x3b
 1015 00d2 0B       		.uleb128 0xb
 1016 00d3 49       		.uleb128 0x49
 1017 00d4 13       		.uleb128 0x13
 1018 00d5 02       		.uleb128 0x2
 1019 00d6 17       		.uleb128 0x17
 1020 00d7 00       		.byte	0
 1021 00d8 00       		.byte	0
 1022 00d9 11       		.uleb128 0x11
 1023 00da 26       		.uleb128 0x26
 1024 00db 00       		.byte	0
 1025 00dc 49       		.uleb128 0x49
 1026 00dd 13       		.uleb128 0x13
 1027 00de 00       		.byte	0
 1028 00df 00       		.byte	0
 1029 00e0 12       		.uleb128 0x12
 1030 00e1 2E       		.uleb128 0x2e
 1031 00e2 01       		.byte	0x1
 1032 00e3 3F       		.uleb128 0x3f
 1033 00e4 19       		.uleb128 0x19
 1034 00e5 03       		.uleb128 0x3
 1035 00e6 0E       		.uleb128 0xe
 1036 00e7 3A       		.uleb128 0x3a
 1037 00e8 0B       		.uleb128 0xb
 1038 00e9 3B       		.uleb128 0x3b
 1039 00ea 0B       		.uleb128 0xb
 1040 00eb 27       		.uleb128 0x27
 1041 00ec 19       		.uleb128 0x19
 1042 00ed 11       		.uleb128 0x11
 1043 00ee 01       		.uleb128 0x1
 1044 00ef 12       		.uleb128 0x12
 1045 00f0 06       		.uleb128 0x6
 1046 00f1 40       		.uleb128 0x40
 1047 00f2 18       		.uleb128 0x18
 1048 00f3 9742     		.uleb128 0x2117
 1049 00f5 19       		.uleb128 0x19
 1050 00f6 01       		.uleb128 0x1
 1051 00f7 13       		.uleb128 0x13
 1052 00f8 00       		.byte	0
 1053 00f9 00       		.byte	0
 1054 00fa 13       		.uleb128 0x13
 1055 00fb 2E       		.uleb128 0x2e
 1056 00fc 01       		.byte	0x1
 1057 00fd 3F       		.uleb128 0x3f
 1058 00fe 19       		.uleb128 0x19
 1059 00ff 03       		.uleb128 0x3
 1060 0100 0E       		.uleb128 0xe
 1061 0101 3A       		.uleb128 0x3a
 1062 0102 0B       		.uleb128 0xb
 1063 0103 3B       		.uleb128 0x3b
 1064 0104 05       		.uleb128 0x5
 1065 0105 27       		.uleb128 0x27
 1066 0106 19       		.uleb128 0x19
 1067 0107 11       		.uleb128 0x11
 1068 0108 01       		.uleb128 0x1
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccThor7S.s 			page 32


 1069 0109 12       		.uleb128 0x12
 1070 010a 06       		.uleb128 0x6
 1071 010b 40       		.uleb128 0x40
 1072 010c 18       		.uleb128 0x18
 1073 010d 9742     		.uleb128 0x2117
 1074 010f 19       		.uleb128 0x19
 1075 0110 01       		.uleb128 0x1
 1076 0111 13       		.uleb128 0x13
 1077 0112 00       		.byte	0
 1078 0113 00       		.byte	0
 1079 0114 14       		.uleb128 0x14
 1080 0115 05       		.uleb128 0x5
 1081 0116 00       		.byte	0
 1082 0117 03       		.uleb128 0x3
 1083 0118 0E       		.uleb128 0xe
 1084 0119 3A       		.uleb128 0x3a
 1085 011a 0B       		.uleb128 0xb
 1086 011b 3B       		.uleb128 0x3b
 1087 011c 05       		.uleb128 0x5
 1088 011d 49       		.uleb128 0x49
 1089 011e 13       		.uleb128 0x13
 1090 011f 02       		.uleb128 0x2
 1091 0120 17       		.uleb128 0x17
 1092 0121 00       		.byte	0
 1093 0122 00       		.byte	0
 1094 0123 15       		.uleb128 0x15
 1095 0124 2E       		.uleb128 0x2e
 1096 0125 00       		.byte	0
 1097 0126 3F       		.uleb128 0x3f
 1098 0127 19       		.uleb128 0x19
 1099 0128 03       		.uleb128 0x3
 1100 0129 0E       		.uleb128 0xe
 1101 012a 3A       		.uleb128 0x3a
 1102 012b 0B       		.uleb128 0xb
 1103 012c 3B       		.uleb128 0x3b
 1104 012d 05       		.uleb128 0x5
 1105 012e 27       		.uleb128 0x27
 1106 012f 19       		.uleb128 0x19
 1107 0130 11       		.uleb128 0x11
 1108 0131 01       		.uleb128 0x1
 1109 0132 12       		.uleb128 0x12
 1110 0133 06       		.uleb128 0x6
 1111 0134 40       		.uleb128 0x40
 1112 0135 18       		.uleb128 0x18
 1113 0136 9742     		.uleb128 0x2117
 1114 0138 19       		.uleb128 0x19
 1115 0139 00       		.byte	0
 1116 013a 00       		.byte	0
 1117 013b 16       		.uleb128 0x16
 1118 013c 34       		.uleb128 0x34
 1119 013d 00       		.byte	0
 1120 013e 03       		.uleb128 0x3
 1121 013f 0E       		.uleb128 0xe
 1122 0140 3A       		.uleb128 0x3a
 1123 0141 0B       		.uleb128 0xb
 1124 0142 3B       		.uleb128 0x3b
 1125 0143 0B       		.uleb128 0xb
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccThor7S.s 			page 33


 1126 0144 49       		.uleb128 0x49
 1127 0145 13       		.uleb128 0x13
 1128 0146 3F       		.uleb128 0x3f
 1129 0147 19       		.uleb128 0x19
 1130 0148 3C       		.uleb128 0x3c
 1131 0149 19       		.uleb128 0x19
 1132 014a 00       		.byte	0
 1133 014b 00       		.byte	0
 1134 014c 00       		.byte	0
 1135              		.section	.debug_loc,"",%progbits
 1136              	.Ldebug_loc0:
 1137              	.LLST0:
 1138 0000 00000000 		.4byte	.LVL0
 1139 0004 CA000000 		.4byte	.LVL24
 1140 0008 0100     		.2byte	0x1
 1141 000a 50       		.byte	0x50
 1142 000b CA000000 		.4byte	.LVL24
 1143 000f DC000000 		.4byte	.LFE0
 1144 0013 0400     		.2byte	0x4
 1145 0015 F3       		.byte	0xf3
 1146 0016 01       		.uleb128 0x1
 1147 0017 50       		.byte	0x50
 1148 0018 9F       		.byte	0x9f
 1149 0019 00000000 		.4byte	0
 1150 001d 00000000 		.4byte	0
 1151              	.LLST1:
 1152 0021 08000000 		.4byte	.LVL2
 1153 0025 B2000000 		.4byte	.LVL18
 1154 0029 0100     		.2byte	0x1
 1155 002b 52       		.byte	0x52
 1156 002c B4000000 		.4byte	.LVL19
 1157 0030 B6000000 		.4byte	.LVL20
 1158 0034 0100     		.2byte	0x1
 1159 0036 52       		.byte	0x52
 1160 0037 BA000000 		.4byte	.LVL21
 1161 003b C4000000 		.4byte	.LVL23
 1162 003f 0100     		.2byte	0x1
 1163 0041 52       		.byte	0x52
 1164 0042 00000000 		.4byte	0
 1165 0046 00000000 		.4byte	0
 1166              	.LLST2:
 1167 004a 5C000000 		.4byte	.LVL10
 1168 004e 60000000 		.4byte	.LVL11
 1169 0052 0200     		.2byte	0x2
 1170 0054 30       		.byte	0x30
 1171 0055 9F       		.byte	0x9f
 1172 0056 60000000 		.4byte	.LVL11
 1173 005a 7E000000 		.4byte	.LVL12
 1174 005e 0100     		.2byte	0x1
 1175 0060 53       		.byte	0x53
 1176 0061 80000000 		.4byte	.LVL13
 1177 0065 90000000 		.4byte	.LVL14
 1178 0069 0100     		.2byte	0x1
 1179 006b 53       		.byte	0x53
 1180 006c 00000000 		.4byte	0
 1181 0070 00000000 		.4byte	0
 1182              	.LLST3:
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccThor7S.s 			page 34


 1183 0074 08000000 		.4byte	.LVL2
 1184 0078 B6000000 		.4byte	.LVL20
 1185 007c 0100     		.2byte	0x1
 1186 007e 57       		.byte	0x57
 1187 007f BA000000 		.4byte	.LVL21
 1188 0083 C4000000 		.4byte	.LVL23
 1189 0087 0100     		.2byte	0x1
 1190 0089 57       		.byte	0x57
 1191 008a 00000000 		.4byte	0
 1192 008e 00000000 		.4byte	0
 1193              	.LLST4:
 1194 0092 02000000 		.4byte	.LVL1
 1195 0096 08000000 		.4byte	.LVL2
 1196 009a 0200     		.2byte	0x2
 1197 009c 30       		.byte	0x30
 1198 009d 9F       		.byte	0x9f
 1199 009e 08000000 		.4byte	.LVL2
 1200 00a2 C2000000 		.4byte	.LVL22
 1201 00a6 0100     		.2byte	0x1
 1202 00a8 56       		.byte	0x56
 1203 00a9 C4000000 		.4byte	.LVL23
 1204 00ad CC000000 		.4byte	.LVL25
 1205 00b1 0100     		.2byte	0x1
 1206 00b3 56       		.byte	0x56
 1207 00b4 00000000 		.4byte	0
 1208 00b8 00000000 		.4byte	0
 1209              	.LLST5:
 1210 00bc 02000000 		.4byte	.LVL1
 1211 00c0 08000000 		.4byte	.LVL2
 1212 00c4 0200     		.2byte	0x2
 1213 00c6 31       		.byte	0x31
 1214 00c7 9F       		.byte	0x9f
 1215 00c8 08000000 		.4byte	.LVL2
 1216 00cc 20000000 		.4byte	.LVL5
 1217 00d0 0100     		.2byte	0x1
 1218 00d2 51       		.byte	0x51
 1219 00d3 A8000000 		.4byte	.LVL15
 1220 00d7 AA000000 		.4byte	.LVL16
 1221 00db 0200     		.2byte	0x2
 1222 00dd 30       		.byte	0x30
 1223 00de 9F       		.byte	0x9f
 1224 00df AA000000 		.4byte	.LVL16
 1225 00e3 DC000000 		.4byte	.LFE0
 1226 00e7 0100     		.2byte	0x1
 1227 00e9 51       		.byte	0x51
 1228 00ea 00000000 		.4byte	0
 1229 00ee 00000000 		.4byte	0
 1230              	.LLST6:
 1231 00f2 16000000 		.4byte	.LVL3
 1232 00f6 1E000000 		.4byte	.LVL4
 1233 00fa 0200     		.2byte	0x2
 1234 00fc 30       		.byte	0x30
 1235 00fd 9F       		.byte	0x9f
 1236 00fe 1E000000 		.4byte	.LVL4
 1237 0102 4E000000 		.4byte	.LVL7
 1238 0106 0100     		.2byte	0x1
 1239 0108 53       		.byte	0x53
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccThor7S.s 			page 35


 1240 0109 4E000000 		.4byte	.LVL7
 1241 010d 50000000 		.4byte	.LVL8
 1242 0111 0100     		.2byte	0x1
 1243 0113 5E       		.byte	0x5e
 1244 0114 50000000 		.4byte	.LVL8
 1245 0118 54000000 		.4byte	.LVL9
 1246 011c 0100     		.2byte	0x1
 1247 011e 53       		.byte	0x53
 1248 011f 54000000 		.4byte	.LVL9
 1249 0123 AA000000 		.4byte	.LVL16
 1250 0127 0100     		.2byte	0x1
 1251 0129 5E       		.byte	0x5e
 1252 012a 00000000 		.4byte	0
 1253 012e 00000000 		.4byte	0
 1254              	.LLST7:
 1255 0132 00000000 		.4byte	.LVL26
 1256 0136 06000000 		.4byte	.LVL27
 1257 013a 0100     		.2byte	0x1
 1258 013c 50       		.byte	0x50
 1259 013d 06000000 		.4byte	.LVL27
 1260 0141 1C000000 		.4byte	.LFE1
 1261 0145 0400     		.2byte	0x4
 1262 0147 F3       		.byte	0xf3
 1263 0148 01       		.uleb128 0x1
 1264 0149 50       		.byte	0x50
 1265 014a 9F       		.byte	0x9f
 1266 014b 00000000 		.4byte	0
 1267 014f 00000000 		.4byte	0
 1268              	.LLST8:
 1269 0153 00000000 		.4byte	.LVL28
 1270 0157 1E000000 		.4byte	.LVL29
 1271 015b 0200     		.2byte	0x2
 1272 015d 30       		.byte	0x30
 1273 015e 9F       		.byte	0x9f
 1274 015f 1E000000 		.4byte	.LVL29
 1275 0163 24000000 		.4byte	.LFE2
 1276 0167 0100     		.2byte	0x1
 1277 0169 50       		.byte	0x50
 1278 016a 00000000 		.4byte	0
 1279 016e 00000000 		.4byte	0
 1280              	.LLST9:
 1281 0172 00000000 		.4byte	.LVL30
 1282 0176 02000000 		.4byte	.LVL31
 1283 017a 0100     		.2byte	0x1
 1284 017c 50       		.byte	0x50
 1285 017d 02000000 		.4byte	.LVL31
 1286 0181 1C000000 		.4byte	.LFE3
 1287 0185 0400     		.2byte	0x4
 1288 0187 F3       		.byte	0xf3
 1289 0188 01       		.uleb128 0x1
 1290 0189 50       		.byte	0x50
 1291 018a 9F       		.byte	0x9f
 1292 018b 00000000 		.4byte	0
 1293 018f 00000000 		.4byte	0
 1294              		.section	.debug_aranges,"",%progbits
 1295 0000 3C000000 		.4byte	0x3c
 1296 0004 0200     		.2byte	0x2
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccThor7S.s 			page 36


 1297 0006 00000000 		.4byte	.Ldebug_info0
 1298 000a 04       		.byte	0x4
 1299 000b 00       		.byte	0
 1300 000c 0000     		.2byte	0
 1301 000e 0000     		.2byte	0
 1302 0010 00000000 		.4byte	.LFB0
 1303 0014 DC000000 		.4byte	.LFE0-.LFB0
 1304 0018 00000000 		.4byte	.LFB1
 1305 001c 1C000000 		.4byte	.LFE1-.LFB1
 1306 0020 00000000 		.4byte	.LFB2
 1307 0024 24000000 		.4byte	.LFE2-.LFB2
 1308 0028 00000000 		.4byte	.LFB3
 1309 002c 1C000000 		.4byte	.LFE3-.LFB3
 1310 0030 00000000 		.4byte	.LFB4
 1311 0034 38000000 		.4byte	.LFE4-.LFB4
 1312 0038 00000000 		.4byte	0
 1313 003c 00000000 		.4byte	0
 1314              		.section	.debug_ranges,"",%progbits
 1315              	.Ldebug_ranges0:
 1316 0000 00000000 		.4byte	.LFB0
 1317 0004 DC000000 		.4byte	.LFE0
 1318 0008 00000000 		.4byte	.LFB1
 1319 000c 1C000000 		.4byte	.LFE1
 1320 0010 00000000 		.4byte	.LFB2
 1321 0014 24000000 		.4byte	.LFE2
 1322 0018 00000000 		.4byte	.LFB3
 1323 001c 1C000000 		.4byte	.LFE3
 1324 0020 00000000 		.4byte	.LFB4
 1325 0024 38000000 		.4byte	.LFE4
 1326 0028 00000000 		.4byte	0
 1327 002c 00000000 		.4byte	0
 1328              		.section	.debug_line,"",%progbits
 1329              	.Ldebug_line0:
 1330 0000 29010000 		.section	.debug_str,"MS",%progbits,1
 1330      02005A00 
 1330      00000201 
 1330      FB0E0D00 
 1330      01010101 
 1331              	.LASF6:
 1332 0000 6C6F6E67 		.ascii	"long long int\000"
 1332      206C6F6E 
 1332      6720696E 
 1332      7400
 1333              	.LASF34:
 1334 000e 73686966 		.ascii	"shift\000"
 1334      7400
 1335              	.LASF31:
 1336 0014 74786964 		.ascii	"txid\000"
 1336      00
 1337              	.LASF20:
 1338 0019 52585F43 		.ascii	"RX_CAN_REG_32\000"
 1338      414E5F52 
 1338      45475F33 
 1338      3200
 1339              	.LASF25:
 1340 0027 7278616D 		.ascii	"rxamr\000"
 1340      7200
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccThor7S.s 			page 37


 1341              	.LASF49:
 1342 002d 6461746F 		.ascii	"dato_recibido\000"
 1342      5F726563 
 1342      69626964 
 1342      6F00
 1343              	.LASF3:
 1344 003b 73686F72 		.ascii	"short unsigned int\000"
 1344      7420756E 
 1344      7369676E 
 1344      65642069 
 1344      6E7400
 1345              	.LASF30:
 1346 004e 7478636D 		.ascii	"txcmd\000"
 1346      6400
 1347              	.LASF13:
 1348 0054 63686172 		.ascii	"char\000"
 1348      00
 1349              	.LASF38:
 1350 0059 6D657373 		.ascii	"message\000"
 1350      61676500 
 1351              	.LASF12:
 1352 0061 646F7562 		.ascii	"double\000"
 1352      6C6500
 1353              	.LASF18:
 1354 0068 62797465 		.ascii	"byte\000"
 1354      00
 1355              	.LASF24:
 1356 006d 72786461 		.ascii	"rxdata\000"
 1356      746100
 1357              	.LASF43:
 1358 0074 52585F43 		.ascii	"RX_CAN_ReceiveMsg\000"
 1358      414E5F52 
 1358      65636569 
 1358      76654D73 
 1358      6700
 1359              	.LASF41:
 1360 0086 52585F43 		.ascii	"RX_CAN_SendMsg0\000"
 1360      414E5F53 
 1360      656E644D 
 1360      73673000 
 1361              	.LASF11:
 1362 0096 666C6F61 		.ascii	"float\000"
 1362      7400
 1363              	.LASF29:
 1364 009c 52585F43 		.ascii	"RX_CAN_RX_STRUCT\000"
 1364      414E5F52 
 1364      585F5354 
 1364      52554354 
 1364      00
 1365              	.LASF1:
 1366 00ad 756E7369 		.ascii	"unsigned char\000"
 1366      676E6564 
 1366      20636861 
 1366      7200
 1367              	.LASF15:
 1368 00bb 72656733 		.ascii	"reg32\000"
 1368      3200
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccThor7S.s 			page 38


 1369              	.LASF35:
 1370 00c1 72657472 		.ascii	"retry\000"
 1370      7900
 1371              	.LASF14:
 1372 00c7 72656738 		.ascii	"reg8\000"
 1372      00
 1373              	.LASF22:
 1374 00cc 7278636D 		.ascii	"rxcmd\000"
 1374      6400
 1375              	.LASF5:
 1376 00d2 6C6F6E67 		.ascii	"long unsigned int\000"
 1376      20756E73 
 1376      69676E65 
 1376      6420696E 
 1376      7400
 1377              	.LASF9:
 1378 00e4 75696E74 		.ascii	"uint8\000"
 1378      3800
 1379              	.LASF23:
 1380 00ea 72786964 		.ascii	"rxid\000"
 1380      00
 1381              	.LASF42:
 1382 00ef 52585F43 		.ascii	"RX_CAN_TxCancel\000"
 1382      414E5F54 
 1382      7843616E 
 1382      63656C00 
 1383              	.LASF33:
 1384 00ff 52585F43 		.ascii	"RX_CAN_TX_STRUCT\000"
 1384      414E5F54 
 1384      585F5354 
 1384      52554354 
 1384      00
 1385              	.LASF37:
 1386 0110 72656754 		.ascii	"regTemp\000"
 1386      656D7000 
 1387              	.LASF2:
 1388 0118 73686F72 		.ascii	"short int\000"
 1388      7420696E 
 1388      7400
 1389              	.LASF10:
 1390 0122 75696E74 		.ascii	"uint32\000"
 1390      333200
 1391              	.LASF45:
 1392 0129 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1392      4320342E 
 1392      392E3320 
 1392      32303135 
 1392      30333033 
 1393 015c 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1393      20726576 
 1393      6973696F 
 1393      6E203232 
 1393      31323230 
 1394 018f 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1394      66756E63 
 1394      74696F6E 
 1394      2D736563 
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccThor7S.s 			page 39


 1394      74696F6E 
 1395              	.LASF8:
 1396 01b7 756E7369 		.ascii	"unsigned int\000"
 1396      676E6564 
 1396      20696E74 
 1396      00
 1397              	.LASF7:
 1398 01c4 6C6F6E67 		.ascii	"long long unsigned int\000"
 1398      206C6F6E 
 1398      6720756E 
 1398      7369676E 
 1398      65642069 
 1399              	.LASF19:
 1400 01db 52585F43 		.ascii	"RX_CAN_DATA_BYTES\000"
 1400      414E5F44 
 1400      4154415F 
 1400      42595445 
 1400      5300
 1401              	.LASF36:
 1402 01ed 72657375 		.ascii	"result\000"
 1402      6C7400
 1403              	.LASF48:
 1404 01f4 52585F43 		.ascii	"RX_CAN_ReceiveMsg0\000"
 1404      414E5F52 
 1404      65636569 
 1404      76654D73 
 1404      673000
 1405              	.LASF17:
 1406 0207 52585F43 		.ascii	"RX_CAN_DATA_BYTES_MSG\000"
 1406      414E5F44 
 1406      4154415F 
 1406      42595445 
 1406      535F4D53 
 1407              	.LASF40:
 1408 021d 52585F43 		.ascii	"RX_CAN_SendMsg\000"
 1408      414E5F53 
 1408      656E644D 
 1408      736700
 1409              	.LASF16:
 1410 022c 73697A65 		.ascii	"sizetype\000"
 1410      74797065 
 1410      00
 1411              	.LASF27:
 1412 0235 7278616D 		.ascii	"rxamrd\000"
 1412      726400
 1413              	.LASF21:
 1414 023c 52585F43 		.ascii	"RX_CAN_TX_MSG\000"
 1414      414E5F54 
 1414      585F4D53 
 1414      4700
 1415              	.LASF46:
 1416 024a 47656E65 		.ascii	"Generated_Source\\PSoC5\\RX_CAN_TX_RX_func.c\000"
 1416      72617465 
 1416      645F536F 
 1416      75726365 
 1416      5C50536F 
 1417              	.LASF39:
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccThor7S.s 			page 40


 1418 0275 62756666 		.ascii	"bufferId\000"
 1418      65724964 
 1418      00
 1419              	.LASF44:
 1420 027e 72784D61 		.ascii	"rxMailbox\000"
 1420      696C626F 
 1420      7800
 1421              	.LASF26:
 1422 0288 72786163 		.ascii	"rxacr\000"
 1422      7200
 1423              	.LASF28:
 1424 028e 72786163 		.ascii	"rxacrd\000"
 1424      726400
 1425              	.LASF4:
 1426 0295 6C6F6E67 		.ascii	"long int\000"
 1426      20696E74 
 1426      00
 1427              	.LASF47:
 1428 029e 443A5C68 		.ascii	"D:\\henrry\\empenzando\\modulo.cydsn\\CAN_Psoc_kit."
 1428      656E7272 
 1428      795C656D 
 1428      70656E7A 
 1428      616E646F 
 1429 02cd 63796473 		.ascii	"cydsn\000"
 1429      6E00
 1430              	.LASF0:
 1431 02d3 7369676E 		.ascii	"signed char\000"
 1431      65642063 
 1431      68617200 
 1432              	.LASF32:
 1433 02df 74786461 		.ascii	"txdata\000"
 1433      746100
 1434              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
