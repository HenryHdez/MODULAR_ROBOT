ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"RX.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.RX_Init,"ax",%progbits
  18              		.align	2
  19              		.global	RX_Init
  20              		.code	16
  21              		.thumb_func
  22              		.type	RX_Init, %function
  23              	RX_Init:
  24              	.LFB2:
  25              		.file 1 "Generated_Source\\PSoC4\\RX.c"
   1:Generated_Source\PSoC4/RX.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/RX.c **** * File Name: RX.c
   3:Generated_Source\PSoC4/RX.c **** * Version 2.50
   4:Generated_Source\PSoC4/RX.c **** *
   5:Generated_Source\PSoC4/RX.c **** * Description:
   6:Generated_Source\PSoC4/RX.c **** *  This file provides all API functionality of the UART component
   7:Generated_Source\PSoC4/RX.c **** *
   8:Generated_Source\PSoC4/RX.c **** * Note:
   9:Generated_Source\PSoC4/RX.c **** *
  10:Generated_Source\PSoC4/RX.c **** ********************************************************************************
  11:Generated_Source\PSoC4/RX.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC4/RX.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC4/RX.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC4/RX.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC4/RX.c **** *******************************************************************************/
  16:Generated_Source\PSoC4/RX.c **** 
  17:Generated_Source\PSoC4/RX.c **** #include "RX.h"
  18:Generated_Source\PSoC4/RX.c **** #if (RX_INTERNAL_CLOCK_USED)
  19:Generated_Source\PSoC4/RX.c ****     #include "RX_IntClock.h"
  20:Generated_Source\PSoC4/RX.c **** #endif /* End RX_INTERNAL_CLOCK_USED */
  21:Generated_Source\PSoC4/RX.c **** 
  22:Generated_Source\PSoC4/RX.c **** 
  23:Generated_Source\PSoC4/RX.c **** /***************************************
  24:Generated_Source\PSoC4/RX.c **** * Global data allocation
  25:Generated_Source\PSoC4/RX.c **** ***************************************/
  26:Generated_Source\PSoC4/RX.c **** 
  27:Generated_Source\PSoC4/RX.c **** uint8 RX_initVar = 0u;
  28:Generated_Source\PSoC4/RX.c **** 
  29:Generated_Source\PSoC4/RX.c **** #if (RX_TX_INTERRUPT_ENABLED && RX_TX_ENABLED)
  30:Generated_Source\PSoC4/RX.c ****     volatile uint8 RX_txBuffer[RX_TX_BUFFER_SIZE];
  31:Generated_Source\PSoC4/RX.c ****     volatile uint8 RX_txBufferRead = 0u;
  32:Generated_Source\PSoC4/RX.c ****     uint8 RX_txBufferWrite = 0u;
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 2


  33:Generated_Source\PSoC4/RX.c **** #endif /* (RX_TX_INTERRUPT_ENABLED && RX_TX_ENABLED) */
  34:Generated_Source\PSoC4/RX.c **** 
  35:Generated_Source\PSoC4/RX.c **** #if (RX_RX_INTERRUPT_ENABLED && (RX_RX_ENABLED || RX_HD_ENABLED))
  36:Generated_Source\PSoC4/RX.c ****     uint8 RX_errorStatus = 0u;
  37:Generated_Source\PSoC4/RX.c ****     volatile uint8 RX_rxBuffer[RX_RX_BUFFER_SIZE];
  38:Generated_Source\PSoC4/RX.c ****     volatile uint8 RX_rxBufferRead  = 0u;
  39:Generated_Source\PSoC4/RX.c ****     volatile uint8 RX_rxBufferWrite = 0u;
  40:Generated_Source\PSoC4/RX.c ****     volatile uint8 RX_rxBufferLoopDetect = 0u;
  41:Generated_Source\PSoC4/RX.c ****     volatile uint8 RX_rxBufferOverflow   = 0u;
  42:Generated_Source\PSoC4/RX.c ****     #if (RX_RXHW_ADDRESS_ENABLED)
  43:Generated_Source\PSoC4/RX.c ****         volatile uint8 RX_rxAddressMode = RX_RX_ADDRESS_MODE;
  44:Generated_Source\PSoC4/RX.c ****         volatile uint8 RX_rxAddressDetected = 0u;
  45:Generated_Source\PSoC4/RX.c ****     #endif /* (RX_RXHW_ADDRESS_ENABLED) */
  46:Generated_Source\PSoC4/RX.c **** #endif /* (RX_RX_INTERRUPT_ENABLED && (RX_RX_ENABLED || RX_HD_ENABLED)) */
  47:Generated_Source\PSoC4/RX.c **** 
  48:Generated_Source\PSoC4/RX.c **** 
  49:Generated_Source\PSoC4/RX.c **** /*******************************************************************************
  50:Generated_Source\PSoC4/RX.c **** * Function Name: RX_Start
  51:Generated_Source\PSoC4/RX.c **** ********************************************************************************
  52:Generated_Source\PSoC4/RX.c **** *
  53:Generated_Source\PSoC4/RX.c **** * Summary:
  54:Generated_Source\PSoC4/RX.c **** *  This is the preferred method to begin component operation.
  55:Generated_Source\PSoC4/RX.c **** *  RX_Start() sets the initVar variable, calls the
  56:Generated_Source\PSoC4/RX.c **** *  RX_Init() function, and then calls the
  57:Generated_Source\PSoC4/RX.c **** *  RX_Enable() function.
  58:Generated_Source\PSoC4/RX.c **** *
  59:Generated_Source\PSoC4/RX.c **** * Parameters:
  60:Generated_Source\PSoC4/RX.c **** *  None.
  61:Generated_Source\PSoC4/RX.c **** *
  62:Generated_Source\PSoC4/RX.c **** * Return:
  63:Generated_Source\PSoC4/RX.c **** *  None.
  64:Generated_Source\PSoC4/RX.c **** *
  65:Generated_Source\PSoC4/RX.c **** * Global variables:
  66:Generated_Source\PSoC4/RX.c **** *  The RX_intiVar variable is used to indicate initial
  67:Generated_Source\PSoC4/RX.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:Generated_Source\PSoC4/RX.c **** *  and set to one (1u) the first time RX_Start() is called. This
  69:Generated_Source\PSoC4/RX.c **** *  allows for component initialization without re-initialization in all
  70:Generated_Source\PSoC4/RX.c **** *  subsequent calls to the RX_Start() routine.
  71:Generated_Source\PSoC4/RX.c **** *
  72:Generated_Source\PSoC4/RX.c **** * Reentrant:
  73:Generated_Source\PSoC4/RX.c **** *  No.
  74:Generated_Source\PSoC4/RX.c **** *
  75:Generated_Source\PSoC4/RX.c **** *******************************************************************************/
  76:Generated_Source\PSoC4/RX.c **** void RX_Start(void) 
  77:Generated_Source\PSoC4/RX.c **** {
  78:Generated_Source\PSoC4/RX.c ****     /* If not initialized then initialize all required hardware and software */
  79:Generated_Source\PSoC4/RX.c ****     if(RX_initVar == 0u)
  80:Generated_Source\PSoC4/RX.c ****     {
  81:Generated_Source\PSoC4/RX.c ****         RX_Init();
  82:Generated_Source\PSoC4/RX.c ****         RX_initVar = 1u;
  83:Generated_Source\PSoC4/RX.c ****     }
  84:Generated_Source\PSoC4/RX.c **** 
  85:Generated_Source\PSoC4/RX.c ****     RX_Enable();
  86:Generated_Source\PSoC4/RX.c **** }
  87:Generated_Source\PSoC4/RX.c **** 
  88:Generated_Source\PSoC4/RX.c **** 
  89:Generated_Source\PSoC4/RX.c **** /*******************************************************************************
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 3


  90:Generated_Source\PSoC4/RX.c **** * Function Name: RX_Init
  91:Generated_Source\PSoC4/RX.c **** ********************************************************************************
  92:Generated_Source\PSoC4/RX.c **** *
  93:Generated_Source\PSoC4/RX.c **** * Summary:
  94:Generated_Source\PSoC4/RX.c **** *  Initializes or restores the component according to the customizer Configure
  95:Generated_Source\PSoC4/RX.c **** *  dialog settings. It is not necessary to call RX_Init() because
  96:Generated_Source\PSoC4/RX.c **** *  the RX_Start() API calls this function and is the preferred
  97:Generated_Source\PSoC4/RX.c **** *  method to begin component operation.
  98:Generated_Source\PSoC4/RX.c **** *
  99:Generated_Source\PSoC4/RX.c **** * Parameters:
 100:Generated_Source\PSoC4/RX.c **** *  None.
 101:Generated_Source\PSoC4/RX.c **** *
 102:Generated_Source\PSoC4/RX.c **** * Return:
 103:Generated_Source\PSoC4/RX.c **** *  None.
 104:Generated_Source\PSoC4/RX.c **** *
 105:Generated_Source\PSoC4/RX.c **** *******************************************************************************/
 106:Generated_Source\PSoC4/RX.c **** void RX_Init(void) 
 107:Generated_Source\PSoC4/RX.c **** {
  26              		.loc 1 107 0
  27              		.cfi_startproc
  28 0000 08B5     		push	{r3, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 3, -8
  31              		.cfi_offset 14, -4
 108:Generated_Source\PSoC4/RX.c ****     #if(RX_RX_ENABLED || RX_HD_ENABLED)
 109:Generated_Source\PSoC4/RX.c **** 
 110:Generated_Source\PSoC4/RX.c ****         #if (RX_RX_INTERRUPT_ENABLED)
 111:Generated_Source\PSoC4/RX.c ****             /* Set RX interrupt vector and priority */
 112:Generated_Source\PSoC4/RX.c ****             (void) CyIntSetVector(RX_RX_VECT_NUM, &RX_RXISR);
  32              		.loc 1 112 0
  33 0002 0020     		mov	r0, #0
  34 0004 0849     		ldr	r1, .L2
  35 0006 FFF7FEFF 		bl	CyIntSetVector
  36              	.LVL0:
 113:Generated_Source\PSoC4/RX.c ****             CyIntSetPriority(RX_RX_VECT_NUM, RX_RX_PRIOR_NUM);
  37              		.loc 1 113 0
  38 000a 0020     		mov	r0, #0
  39 000c 0321     		mov	r1, #3
  40 000e FFF7FEFF 		bl	CyIntSetPriority
  41              	.LVL1:
 114:Generated_Source\PSoC4/RX.c ****             RX_errorStatus = 0u;
  42              		.loc 1 114 0
  43 0012 0022     		mov	r2, #0
  44 0014 054B     		ldr	r3, .L2+4
  45 0016 1A70     		strb	r2, [r3]
 115:Generated_Source\PSoC4/RX.c ****         #endif /* (RX_RX_INTERRUPT_ENABLED) */
 116:Generated_Source\PSoC4/RX.c **** 
 117:Generated_Source\PSoC4/RX.c ****         #if (RX_RXHW_ADDRESS_ENABLED)
 118:Generated_Source\PSoC4/RX.c ****             RX_SetRxAddressMode(RX_RX_ADDRESS_MODE);
 119:Generated_Source\PSoC4/RX.c ****             RX_SetRxAddress1(RX_RX_HW_ADDRESS1);
 120:Generated_Source\PSoC4/RX.c ****             RX_SetRxAddress2(RX_RX_HW_ADDRESS2);
 121:Generated_Source\PSoC4/RX.c ****         #endif /* End RX_RXHW_ADDRESS_ENABLED */
 122:Generated_Source\PSoC4/RX.c **** 
 123:Generated_Source\PSoC4/RX.c ****         /* Init Count7 period */
 124:Generated_Source\PSoC4/RX.c ****         RX_RXBITCTR_PERIOD_REG = RX_RXBITCTR_INIT;
  46              		.loc 1 124 0
  47 0018 7132     		add	r2, r2, #113
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 4


  48 001a 054B     		ldr	r3, .L2+8
  49 001c 1A70     		strb	r2, [r3]
 125:Generated_Source\PSoC4/RX.c ****         /* Configure the Initial RX interrupt mask */
 126:Generated_Source\PSoC4/RX.c ****         RX_RXSTATUS_MASK_REG  = RX_INIT_RX_INTERRUPTS_MASK;
  50              		.loc 1 126 0
  51 001e 513A     		sub	r2, r2, #81
  52 0020 044B     		ldr	r3, .L2+12
  53 0022 1A70     		strb	r2, [r3]
 127:Generated_Source\PSoC4/RX.c ****     #endif /* End RX_RX_ENABLED || RX_HD_ENABLED*/
 128:Generated_Source\PSoC4/RX.c **** 
 129:Generated_Source\PSoC4/RX.c ****     #if(RX_TX_ENABLED)
 130:Generated_Source\PSoC4/RX.c ****         #if (RX_TX_INTERRUPT_ENABLED)
 131:Generated_Source\PSoC4/RX.c ****             /* Set TX interrupt vector and priority */
 132:Generated_Source\PSoC4/RX.c ****             (void) CyIntSetVector(RX_TX_VECT_NUM, &RX_TXISR);
 133:Generated_Source\PSoC4/RX.c ****             CyIntSetPriority(RX_TX_VECT_NUM, RX_TX_PRIOR_NUM);
 134:Generated_Source\PSoC4/RX.c ****         #endif /* (RX_TX_INTERRUPT_ENABLED) */
 135:Generated_Source\PSoC4/RX.c **** 
 136:Generated_Source\PSoC4/RX.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:Generated_Source\PSoC4/RX.c ****         #if (RX_TXCLKGEN_DP)
 138:Generated_Source\PSoC4/RX.c ****             RX_TXBITCLKGEN_CTR_REG = RX_BIT_CENTER;
 139:Generated_Source\PSoC4/RX.c ****             RX_TXBITCLKTX_COMPLETE_REG = ((RX_NUMBER_OF_DATA_BITS +
 140:Generated_Source\PSoC4/RX.c ****                         RX_NUMBER_OF_START_BIT) * RX_OVER_SAMPLE_COUNT) - 1u;
 141:Generated_Source\PSoC4/RX.c ****         #else
 142:Generated_Source\PSoC4/RX.c ****             RX_TXBITCTR_PERIOD_REG = ((RX_NUMBER_OF_DATA_BITS +
 143:Generated_Source\PSoC4/RX.c ****                         RX_NUMBER_OF_START_BIT) * RX_OVER_SAMPLE_8) - 1u;
 144:Generated_Source\PSoC4/RX.c ****         #endif /* End RX_TXCLKGEN_DP */
 145:Generated_Source\PSoC4/RX.c **** 
 146:Generated_Source\PSoC4/RX.c ****         /* Configure the Initial TX interrupt mask */
 147:Generated_Source\PSoC4/RX.c ****         #if (RX_TX_INTERRUPT_ENABLED)
 148:Generated_Source\PSoC4/RX.c ****             RX_TXSTATUS_MASK_REG = RX_TX_STS_FIFO_EMPTY;
 149:Generated_Source\PSoC4/RX.c ****         #else
 150:Generated_Source\PSoC4/RX.c ****             RX_TXSTATUS_MASK_REG = RX_INIT_TX_INTERRUPTS_MASK;
 151:Generated_Source\PSoC4/RX.c ****         #endif /*End RX_TX_INTERRUPT_ENABLED*/
 152:Generated_Source\PSoC4/RX.c **** 
 153:Generated_Source\PSoC4/RX.c ****     #endif /* End RX_TX_ENABLED */
 154:Generated_Source\PSoC4/RX.c **** 
 155:Generated_Source\PSoC4/RX.c ****     #if(RX_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:Generated_Source\PSoC4/RX.c ****         RX_WriteControlRegister( \
 157:Generated_Source\PSoC4/RX.c ****             (RX_ReadControlRegister() & (uint8)~RX_CTRL_PARITY_TYPE_MASK) | \
 158:Generated_Source\PSoC4/RX.c ****             (uint8)(RX_PARITY_TYPE << RX_CTRL_PARITY_TYPE0_SHIFT) );
 159:Generated_Source\PSoC4/RX.c ****     #endif /* End RX_PARITY_TYPE_SW */
 160:Generated_Source\PSoC4/RX.c **** }
  54              		.loc 1 160 0
  55              		@ sp needed
  56 0024 08BD     		pop	{r3, pc}
  57              	.L3:
  58 0026 C046     		.align	2
  59              	.L2:
  60 0028 00000000 		.word	RX_RXISR
  61 002c 00000000 		.word	.LANCHOR0
  62 0030 82000F40 		.word	1074724994
  63 0034 83000F40 		.word	1074724995
  64              		.cfi_endproc
  65              	.LFE2:
  66              		.size	RX_Init, .-RX_Init
  67              		.section	.text.RX_Enable,"ax",%progbits
  68              		.align	2
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 5


  69              		.global	RX_Enable
  70              		.code	16
  71              		.thumb_func
  72              		.type	RX_Enable, %function
  73              	RX_Enable:
  74              	.LFB3:
 161:Generated_Source\PSoC4/RX.c **** 
 162:Generated_Source\PSoC4/RX.c **** 
 163:Generated_Source\PSoC4/RX.c **** /*******************************************************************************
 164:Generated_Source\PSoC4/RX.c **** * Function Name: RX_Enable
 165:Generated_Source\PSoC4/RX.c **** ********************************************************************************
 166:Generated_Source\PSoC4/RX.c **** *
 167:Generated_Source\PSoC4/RX.c **** * Summary:
 168:Generated_Source\PSoC4/RX.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:Generated_Source\PSoC4/RX.c **** *  to call RX_Enable() because the RX_Start() API
 170:Generated_Source\PSoC4/RX.c **** *  calls this function, which is the preferred method to begin component
 171:Generated_Source\PSoC4/RX.c **** *  operation.
 172:Generated_Source\PSoC4/RX.c **** 
 173:Generated_Source\PSoC4/RX.c **** * Parameters:
 174:Generated_Source\PSoC4/RX.c **** *  None.
 175:Generated_Source\PSoC4/RX.c **** *
 176:Generated_Source\PSoC4/RX.c **** * Return:
 177:Generated_Source\PSoC4/RX.c **** *  None.
 178:Generated_Source\PSoC4/RX.c **** *
 179:Generated_Source\PSoC4/RX.c **** * Global Variables:
 180:Generated_Source\PSoC4/RX.c **** *  RX_rxAddressDetected - set to initial state (0).
 181:Generated_Source\PSoC4/RX.c **** *
 182:Generated_Source\PSoC4/RX.c **** *******************************************************************************/
 183:Generated_Source\PSoC4/RX.c **** void RX_Enable(void) 
 184:Generated_Source\PSoC4/RX.c **** {
  75              		.loc 1 184 0
  76              		.cfi_startproc
  77 0000 10B5     		push	{r4, lr}
  78              		.cfi_def_cfa_offset 8
  79              		.cfi_offset 4, -8
  80              		.cfi_offset 14, -4
 185:Generated_Source\PSoC4/RX.c ****     uint8 enableInterrupts;
 186:Generated_Source\PSoC4/RX.c ****     enableInterrupts = CyEnterCriticalSection();
  81              		.loc 1 186 0
  82 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  83              	.LVL2:
  84 0006 041C     		mov	r4, r0
  85              	.LVL3:
 187:Generated_Source\PSoC4/RX.c **** 
 188:Generated_Source\PSoC4/RX.c ****     #if (RX_RX_ENABLED || RX_HD_ENABLED)
 189:Generated_Source\PSoC4/RX.c ****         /* RX Counter (Count7) Enable */
 190:Generated_Source\PSoC4/RX.c ****         RX_RXBITCTR_CONTROL_REG |= RX_CNTR_ENABLE;
  86              		.loc 1 190 0
  87 0008 094A     		ldr	r2, .L5
  88 000a 1178     		ldrb	r1, [r2]
  89 000c 2023     		mov	r3, #32
  90 000e 0B43     		orr	r3, r1
  91 0010 1370     		strb	r3, [r2]
 191:Generated_Source\PSoC4/RX.c **** 
 192:Generated_Source\PSoC4/RX.c ****         /* Enable the RX Interrupt */
 193:Generated_Source\PSoC4/RX.c ****         RX_RXSTATUS_ACTL_REG  |= RX_INT_ENABLE;
  92              		.loc 1 193 0
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 6


  93 0012 084A     		ldr	r2, .L5+4
  94 0014 1178     		ldrb	r1, [r2]
  95 0016 1023     		mov	r3, #16
  96 0018 0B43     		orr	r3, r1
  97 001a 1370     		strb	r3, [r2]
 194:Generated_Source\PSoC4/RX.c **** 
 195:Generated_Source\PSoC4/RX.c ****         #if (RX_RX_INTERRUPT_ENABLED)
 196:Generated_Source\PSoC4/RX.c ****             RX_EnableRxInt();
  98              		.loc 1 196 0
  99 001c 0020     		mov	r0, #0
 100 001e FFF7FEFF 		bl	CyIntEnable
 101              	.LVL4:
 197:Generated_Source\PSoC4/RX.c **** 
 198:Generated_Source\PSoC4/RX.c ****             #if (RX_RXHW_ADDRESS_ENABLED)
 199:Generated_Source\PSoC4/RX.c ****                 RX_rxAddressDetected = 0u;
 200:Generated_Source\PSoC4/RX.c ****             #endif /* (RX_RXHW_ADDRESS_ENABLED) */
 201:Generated_Source\PSoC4/RX.c ****         #endif /* (RX_RX_INTERRUPT_ENABLED) */
 202:Generated_Source\PSoC4/RX.c ****     #endif /* (RX_RX_ENABLED || RX_HD_ENABLED) */
 203:Generated_Source\PSoC4/RX.c **** 
 204:Generated_Source\PSoC4/RX.c ****     #if(RX_TX_ENABLED)
 205:Generated_Source\PSoC4/RX.c ****         /* TX Counter (DP/Count7) Enable */
 206:Generated_Source\PSoC4/RX.c ****         #if(!RX_TXCLKGEN_DP)
 207:Generated_Source\PSoC4/RX.c ****             RX_TXBITCTR_CONTROL_REG |= RX_CNTR_ENABLE;
 208:Generated_Source\PSoC4/RX.c ****         #endif /* End RX_TXCLKGEN_DP */
 209:Generated_Source\PSoC4/RX.c **** 
 210:Generated_Source\PSoC4/RX.c ****         /* Enable the TX Interrupt */
 211:Generated_Source\PSoC4/RX.c ****         RX_TXSTATUS_ACTL_REG |= RX_INT_ENABLE;
 212:Generated_Source\PSoC4/RX.c ****         #if (RX_TX_INTERRUPT_ENABLED)
 213:Generated_Source\PSoC4/RX.c ****             RX_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:Generated_Source\PSoC4/RX.c ****             RX_EnableTxInt();
 215:Generated_Source\PSoC4/RX.c ****         #endif /* (RX_TX_INTERRUPT_ENABLED) */
 216:Generated_Source\PSoC4/RX.c ****      #endif /* (RX_TX_INTERRUPT_ENABLED) */
 217:Generated_Source\PSoC4/RX.c **** 
 218:Generated_Source\PSoC4/RX.c ****     #if (RX_INTERNAL_CLOCK_USED)
 219:Generated_Source\PSoC4/RX.c ****         RX_IntClock_Start();  /* Enable the clock */
 102              		.loc 1 219 0
 103 0022 FF20     		mov	r0, #255
 104 0024 FFF7FEFF 		bl	RX_IntClock_StartEx
 105              	.LVL5:
 220:Generated_Source\PSoC4/RX.c ****     #endif /* (RX_INTERNAL_CLOCK_USED) */
 221:Generated_Source\PSoC4/RX.c **** 
 222:Generated_Source\PSoC4/RX.c ****     CyExitCriticalSection(enableInterrupts);
 106              		.loc 1 222 0
 107 0028 201C     		mov	r0, r4
 108 002a FFF7FEFF 		bl	CyExitCriticalSection
 109              	.LVL6:
 223:Generated_Source\PSoC4/RX.c **** }
 110              		.loc 1 223 0
 111              		@ sp needed
 112              	.LVL7:
 113 002e 10BD     		pop	{r4, pc}
 114              	.L6:
 115              		.align	2
 116              	.L5:
 117 0030 92000F40 		.word	1074725010
 118 0034 93000F40 		.word	1074725011
 119              		.cfi_endproc
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 7


 120              	.LFE3:
 121              		.size	RX_Enable, .-RX_Enable
 122              		.section	.text.RX_Start,"ax",%progbits
 123              		.align	2
 124              		.global	RX_Start
 125              		.code	16
 126              		.thumb_func
 127              		.type	RX_Start, %function
 128              	RX_Start:
 129              	.LFB1:
  77:Generated_Source\PSoC4/RX.c ****     /* If not initialized then initialize all required hardware and software */
 130              		.loc 1 77 0
 131              		.cfi_startproc
 132 0000 08B5     		push	{r3, lr}
 133              		.cfi_def_cfa_offset 8
 134              		.cfi_offset 3, -8
 135              		.cfi_offset 14, -4
  79:Generated_Source\PSoC4/RX.c ****     {
 136              		.loc 1 79 0
 137 0002 064B     		ldr	r3, .L9
 138 0004 5B78     		ldrb	r3, [r3, #1]
 139 0006 002B     		cmp	r3, #0
 140 0008 04D1     		bne	.L8
  81:Generated_Source\PSoC4/RX.c ****         RX_initVar = 1u;
 141              		.loc 1 81 0
 142 000a FFF7FEFF 		bl	RX_Init
 143              	.LVL8:
  82:Generated_Source\PSoC4/RX.c ****     }
 144              		.loc 1 82 0
 145 000e 0122     		mov	r2, #1
 146 0010 024B     		ldr	r3, .L9
 147 0012 5A70     		strb	r2, [r3, #1]
 148              	.L8:
  85:Generated_Source\PSoC4/RX.c **** }
 149              		.loc 1 85 0
 150 0014 FFF7FEFF 		bl	RX_Enable
 151              	.LVL9:
  86:Generated_Source\PSoC4/RX.c **** 
 152              		.loc 1 86 0
 153              		@ sp needed
 154 0018 08BD     		pop	{r3, pc}
 155              	.L10:
 156 001a C046     		.align	2
 157              	.L9:
 158 001c 00000000 		.word	.LANCHOR0
 159              		.cfi_endproc
 160              	.LFE1:
 161              		.size	RX_Start, .-RX_Start
 162              		.section	.text.RX_Stop,"ax",%progbits
 163              		.align	2
 164              		.global	RX_Stop
 165              		.code	16
 166              		.thumb_func
 167              		.type	RX_Stop, %function
 168              	RX_Stop:
 169              	.LFB4:
 224:Generated_Source\PSoC4/RX.c **** 
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 8


 225:Generated_Source\PSoC4/RX.c **** 
 226:Generated_Source\PSoC4/RX.c **** /*******************************************************************************
 227:Generated_Source\PSoC4/RX.c **** * Function Name: RX_Stop
 228:Generated_Source\PSoC4/RX.c **** ********************************************************************************
 229:Generated_Source\PSoC4/RX.c **** *
 230:Generated_Source\PSoC4/RX.c **** * Summary:
 231:Generated_Source\PSoC4/RX.c **** *  Disables the UART operation.
 232:Generated_Source\PSoC4/RX.c **** *
 233:Generated_Source\PSoC4/RX.c **** * Parameters:
 234:Generated_Source\PSoC4/RX.c **** *  None.
 235:Generated_Source\PSoC4/RX.c **** *
 236:Generated_Source\PSoC4/RX.c **** * Return:
 237:Generated_Source\PSoC4/RX.c **** *  None.
 238:Generated_Source\PSoC4/RX.c **** *
 239:Generated_Source\PSoC4/RX.c **** *******************************************************************************/
 240:Generated_Source\PSoC4/RX.c **** void RX_Stop(void) 
 241:Generated_Source\PSoC4/RX.c **** {
 170              		.loc 1 241 0
 171              		.cfi_startproc
 172 0000 10B5     		push	{r4, lr}
 173              		.cfi_def_cfa_offset 8
 174              		.cfi_offset 4, -8
 175              		.cfi_offset 14, -4
 242:Generated_Source\PSoC4/RX.c ****     uint8 enableInterrupts;
 243:Generated_Source\PSoC4/RX.c ****     enableInterrupts = CyEnterCriticalSection();
 176              		.loc 1 243 0
 177 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 178              	.LVL10:
 179 0006 041C     		mov	r4, r0
 180              	.LVL11:
 244:Generated_Source\PSoC4/RX.c **** 
 245:Generated_Source\PSoC4/RX.c ****     /* Write Bit Counter Disable */
 246:Generated_Source\PSoC4/RX.c ****     #if (RX_RX_ENABLED || RX_HD_ENABLED)
 247:Generated_Source\PSoC4/RX.c ****         RX_RXBITCTR_CONTROL_REG &= (uint8) ~RX_CNTR_ENABLE;
 181              		.loc 1 247 0
 182 0008 094A     		ldr	r2, .L12
 183 000a 1378     		ldrb	r3, [r2]
 184 000c 2021     		mov	r1, #32
 185 000e 8B43     		bic	r3, r1
 186 0010 1370     		strb	r3, [r2]
 248:Generated_Source\PSoC4/RX.c ****     #endif /* (RX_RX_ENABLED || RX_HD_ENABLED) */
 249:Generated_Source\PSoC4/RX.c **** 
 250:Generated_Source\PSoC4/RX.c ****     #if (RX_TX_ENABLED)
 251:Generated_Source\PSoC4/RX.c ****         #if(!RX_TXCLKGEN_DP)
 252:Generated_Source\PSoC4/RX.c ****             RX_TXBITCTR_CONTROL_REG &= (uint8) ~RX_CNTR_ENABLE;
 253:Generated_Source\PSoC4/RX.c ****         #endif /* (!RX_TXCLKGEN_DP) */
 254:Generated_Source\PSoC4/RX.c ****     #endif /* (RX_TX_ENABLED) */
 255:Generated_Source\PSoC4/RX.c **** 
 256:Generated_Source\PSoC4/RX.c ****     #if (RX_INTERNAL_CLOCK_USED)
 257:Generated_Source\PSoC4/RX.c ****         RX_IntClock_Stop();   /* Disable the clock */
 187              		.loc 1 257 0
 188 0012 FFF7FEFF 		bl	RX_IntClock_Stop
 189              	.LVL12:
 258:Generated_Source\PSoC4/RX.c ****     #endif /* (RX_INTERNAL_CLOCK_USED) */
 259:Generated_Source\PSoC4/RX.c **** 
 260:Generated_Source\PSoC4/RX.c ****     /* Disable internal interrupt component */
 261:Generated_Source\PSoC4/RX.c ****     #if (RX_RX_ENABLED || RX_HD_ENABLED)
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 9


 262:Generated_Source\PSoC4/RX.c ****         RX_RXSTATUS_ACTL_REG  &= (uint8) ~RX_INT_ENABLE;
 190              		.loc 1 262 0
 191 0016 074A     		ldr	r2, .L12+4
 192 0018 1378     		ldrb	r3, [r2]
 193 001a 1021     		mov	r1, #16
 194 001c 8B43     		bic	r3, r1
 195 001e 1370     		strb	r3, [r2]
 263:Generated_Source\PSoC4/RX.c **** 
 264:Generated_Source\PSoC4/RX.c ****         #if (RX_RX_INTERRUPT_ENABLED)
 265:Generated_Source\PSoC4/RX.c ****             RX_DisableRxInt();
 196              		.loc 1 265 0
 197 0020 0020     		mov	r0, #0
 198 0022 FFF7FEFF 		bl	CyIntDisable
 199              	.LVL13:
 266:Generated_Source\PSoC4/RX.c ****         #endif /* (RX_RX_INTERRUPT_ENABLED) */
 267:Generated_Source\PSoC4/RX.c ****     #endif /* (RX_RX_ENABLED || RX_HD_ENABLED) */
 268:Generated_Source\PSoC4/RX.c **** 
 269:Generated_Source\PSoC4/RX.c ****     #if (RX_TX_ENABLED)
 270:Generated_Source\PSoC4/RX.c ****         RX_TXSTATUS_ACTL_REG &= (uint8) ~RX_INT_ENABLE;
 271:Generated_Source\PSoC4/RX.c **** 
 272:Generated_Source\PSoC4/RX.c ****         #if (RX_TX_INTERRUPT_ENABLED)
 273:Generated_Source\PSoC4/RX.c ****             RX_DisableTxInt();
 274:Generated_Source\PSoC4/RX.c ****         #endif /* (RX_TX_INTERRUPT_ENABLED) */
 275:Generated_Source\PSoC4/RX.c ****     #endif /* (RX_TX_ENABLED) */
 276:Generated_Source\PSoC4/RX.c **** 
 277:Generated_Source\PSoC4/RX.c ****     CyExitCriticalSection(enableInterrupts);
 200              		.loc 1 277 0
 201 0026 201C     		mov	r0, r4
 202 0028 FFF7FEFF 		bl	CyExitCriticalSection
 203              	.LVL14:
 278:Generated_Source\PSoC4/RX.c **** }
 204              		.loc 1 278 0
 205              		@ sp needed
 206              	.LVL15:
 207 002c 10BD     		pop	{r4, pc}
 208              	.L13:
 209 002e C046     		.align	2
 210              	.L12:
 211 0030 92000F40 		.word	1074725010
 212 0034 93000F40 		.word	1074725011
 213              		.cfi_endproc
 214              	.LFE4:
 215              		.size	RX_Stop, .-RX_Stop
 216              		.section	.text.RX_ReadControlRegister,"ax",%progbits
 217              		.align	2
 218              		.global	RX_ReadControlRegister
 219              		.code	16
 220              		.thumb_func
 221              		.type	RX_ReadControlRegister, %function
 222              	RX_ReadControlRegister:
 223              	.LFB5:
 279:Generated_Source\PSoC4/RX.c **** 
 280:Generated_Source\PSoC4/RX.c **** 
 281:Generated_Source\PSoC4/RX.c **** /*******************************************************************************
 282:Generated_Source\PSoC4/RX.c **** * Function Name: RX_ReadControlRegister
 283:Generated_Source\PSoC4/RX.c **** ********************************************************************************
 284:Generated_Source\PSoC4/RX.c **** *
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 10


 285:Generated_Source\PSoC4/RX.c **** * Summary:
 286:Generated_Source\PSoC4/RX.c **** *  Returns the current value of the control register.
 287:Generated_Source\PSoC4/RX.c **** *
 288:Generated_Source\PSoC4/RX.c **** * Parameters:
 289:Generated_Source\PSoC4/RX.c **** *  None.
 290:Generated_Source\PSoC4/RX.c **** *
 291:Generated_Source\PSoC4/RX.c **** * Return:
 292:Generated_Source\PSoC4/RX.c **** *  Contents of the control register.
 293:Generated_Source\PSoC4/RX.c **** *
 294:Generated_Source\PSoC4/RX.c **** *******************************************************************************/
 295:Generated_Source\PSoC4/RX.c **** uint8 RX_ReadControlRegister(void) 
 296:Generated_Source\PSoC4/RX.c **** {
 224              		.loc 1 296 0
 225              		.cfi_startproc
 297:Generated_Source\PSoC4/RX.c ****     #if (RX_CONTROL_REG_REMOVED)
 298:Generated_Source\PSoC4/RX.c ****         return(0u);
 299:Generated_Source\PSoC4/RX.c ****     #else
 300:Generated_Source\PSoC4/RX.c ****         return(RX_CONTROL_REG);
 301:Generated_Source\PSoC4/RX.c ****     #endif /* (RX_CONTROL_REG_REMOVED) */
 302:Generated_Source\PSoC4/RX.c **** }
 226              		.loc 1 302 0
 227 0000 0020     		mov	r0, #0
 228              		@ sp needed
 229 0002 7047     		bx	lr
 230              		.cfi_endproc
 231              	.LFE5:
 232              		.size	RX_ReadControlRegister, .-RX_ReadControlRegister
 233              		.section	.text.RX_WriteControlRegister,"ax",%progbits
 234              		.align	2
 235              		.global	RX_WriteControlRegister
 236              		.code	16
 237              		.thumb_func
 238              		.type	RX_WriteControlRegister, %function
 239              	RX_WriteControlRegister:
 240              	.LFB6:
 303:Generated_Source\PSoC4/RX.c **** 
 304:Generated_Source\PSoC4/RX.c **** 
 305:Generated_Source\PSoC4/RX.c **** /*******************************************************************************
 306:Generated_Source\PSoC4/RX.c **** * Function Name: RX_WriteControlRegister
 307:Generated_Source\PSoC4/RX.c **** ********************************************************************************
 308:Generated_Source\PSoC4/RX.c **** *
 309:Generated_Source\PSoC4/RX.c **** * Summary:
 310:Generated_Source\PSoC4/RX.c **** *  Writes an 8-bit value into the control register
 311:Generated_Source\PSoC4/RX.c **** *
 312:Generated_Source\PSoC4/RX.c **** * Parameters:
 313:Generated_Source\PSoC4/RX.c **** *  control:  control register value
 314:Generated_Source\PSoC4/RX.c **** *
 315:Generated_Source\PSoC4/RX.c **** * Return:
 316:Generated_Source\PSoC4/RX.c **** *  None.
 317:Generated_Source\PSoC4/RX.c **** *
 318:Generated_Source\PSoC4/RX.c **** *******************************************************************************/
 319:Generated_Source\PSoC4/RX.c **** void  RX_WriteControlRegister(uint8 control) 
 320:Generated_Source\PSoC4/RX.c **** {
 241              		.loc 1 320 0
 242              		.cfi_startproc
 243              	.LVL16:
 321:Generated_Source\PSoC4/RX.c ****     #if (RX_CONTROL_REG_REMOVED)
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 11


 322:Generated_Source\PSoC4/RX.c ****         if(0u != control)
 323:Generated_Source\PSoC4/RX.c ****         {
 324:Generated_Source\PSoC4/RX.c ****             /* Suppress compiler warning */
 325:Generated_Source\PSoC4/RX.c ****         }
 326:Generated_Source\PSoC4/RX.c ****     #else
 327:Generated_Source\PSoC4/RX.c ****        RX_CONTROL_REG = control;
 328:Generated_Source\PSoC4/RX.c ****     #endif /* (RX_CONTROL_REG_REMOVED) */
 329:Generated_Source\PSoC4/RX.c **** }
 244              		.loc 1 329 0
 245              		@ sp needed
 246 0000 7047     		bx	lr
 247              		.cfi_endproc
 248              	.LFE6:
 249              		.size	RX_WriteControlRegister, .-RX_WriteControlRegister
 250 0002 C046     		.section	.text.RX_SetRxInterruptMode,"ax",%progbits
 251              		.align	2
 252              		.global	RX_SetRxInterruptMode
 253              		.code	16
 254              		.thumb_func
 255              		.type	RX_SetRxInterruptMode, %function
 256              	RX_SetRxInterruptMode:
 257              	.LFB7:
 330:Generated_Source\PSoC4/RX.c **** 
 331:Generated_Source\PSoC4/RX.c **** 
 332:Generated_Source\PSoC4/RX.c **** #if(RX_RX_ENABLED || RX_HD_ENABLED)
 333:Generated_Source\PSoC4/RX.c ****     /*******************************************************************************
 334:Generated_Source\PSoC4/RX.c ****     * Function Name: RX_SetRxInterruptMode
 335:Generated_Source\PSoC4/RX.c ****     ********************************************************************************
 336:Generated_Source\PSoC4/RX.c ****     *
 337:Generated_Source\PSoC4/RX.c ****     * Summary:
 338:Generated_Source\PSoC4/RX.c ****     *  Configures the RX interrupt sources enabled.
 339:Generated_Source\PSoC4/RX.c ****     *
 340:Generated_Source\PSoC4/RX.c ****     * Parameters:
 341:Generated_Source\PSoC4/RX.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:Generated_Source\PSoC4/RX.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:Generated_Source\PSoC4/RX.c ****     *  combination of status register bit-masks shown below:
 344:Generated_Source\PSoC4/RX.c ****     *      RX_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:Generated_Source\PSoC4/RX.c ****     *      RX_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:Generated_Source\PSoC4/RX.c ****     *      RX_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:Generated_Source\PSoC4/RX.c ****     *      RX_RX_STS_BREAK            Interrupt on break.
 348:Generated_Source\PSoC4/RX.c ****     *      RX_RX_STS_OVERRUN          Interrupt on overrun error.
 349:Generated_Source\PSoC4/RX.c ****     *      RX_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:Generated_Source\PSoC4/RX.c ****     *      RX_RX_STS_MRKSPC           Interrupt on address detect.
 351:Generated_Source\PSoC4/RX.c ****     *
 352:Generated_Source\PSoC4/RX.c ****     * Return:
 353:Generated_Source\PSoC4/RX.c ****     *  None.
 354:Generated_Source\PSoC4/RX.c ****     *
 355:Generated_Source\PSoC4/RX.c ****     * Theory:
 356:Generated_Source\PSoC4/RX.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:Generated_Source\PSoC4/RX.c ****     *
 358:Generated_Source\PSoC4/RX.c ****     *******************************************************************************/
 359:Generated_Source\PSoC4/RX.c ****     void RX_SetRxInterruptMode(uint8 intSrc) 
 360:Generated_Source\PSoC4/RX.c ****     {
 258              		.loc 1 360 0
 259              		.cfi_startproc
 260              	.LVL17:
 361:Generated_Source\PSoC4/RX.c ****         RX_RXSTATUS_MASK_REG  = intSrc;
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 12


 261              		.loc 1 361 0
 262 0000 014B     		ldr	r3, .L17
 263 0002 1870     		strb	r0, [r3]
 362:Generated_Source\PSoC4/RX.c ****     }
 264              		.loc 1 362 0
 265              		@ sp needed
 266 0004 7047     		bx	lr
 267              	.L18:
 268 0006 C046     		.align	2
 269              	.L17:
 270 0008 83000F40 		.word	1074724995
 271              		.cfi_endproc
 272              	.LFE7:
 273              		.size	RX_SetRxInterruptMode, .-RX_SetRxInterruptMode
 274              		.section	.text.RX_ReadRxData,"ax",%progbits
 275              		.align	2
 276              		.global	RX_ReadRxData
 277              		.code	16
 278              		.thumb_func
 279              		.type	RX_ReadRxData, %function
 280              	RX_ReadRxData:
 281              	.LFB8:
 363:Generated_Source\PSoC4/RX.c **** 
 364:Generated_Source\PSoC4/RX.c **** 
 365:Generated_Source\PSoC4/RX.c ****     /*******************************************************************************
 366:Generated_Source\PSoC4/RX.c ****     * Function Name: RX_ReadRxData
 367:Generated_Source\PSoC4/RX.c ****     ********************************************************************************
 368:Generated_Source\PSoC4/RX.c ****     *
 369:Generated_Source\PSoC4/RX.c ****     * Summary:
 370:Generated_Source\PSoC4/RX.c ****     *  Returns the next byte of received data. This function returns data without
 371:Generated_Source\PSoC4/RX.c ****     *  checking the status. You must check the status separately.
 372:Generated_Source\PSoC4/RX.c ****     *
 373:Generated_Source\PSoC4/RX.c ****     * Parameters:
 374:Generated_Source\PSoC4/RX.c ****     *  None.
 375:Generated_Source\PSoC4/RX.c ****     *
 376:Generated_Source\PSoC4/RX.c ****     * Return:
 377:Generated_Source\PSoC4/RX.c ****     *  Received data from RX register
 378:Generated_Source\PSoC4/RX.c ****     *
 379:Generated_Source\PSoC4/RX.c ****     * Global Variables:
 380:Generated_Source\PSoC4/RX.c ****     *  RX_rxBuffer - RAM buffer pointer for save received data.
 381:Generated_Source\PSoC4/RX.c ****     *  RX_rxBufferWrite - cyclic index for write to rxBuffer,
 382:Generated_Source\PSoC4/RX.c ****     *     checked to identify new data.
 383:Generated_Source\PSoC4/RX.c ****     *  RX_rxBufferRead - cyclic index for read from rxBuffer,
 384:Generated_Source\PSoC4/RX.c ****     *     incremented after each byte has been read from buffer.
 385:Generated_Source\PSoC4/RX.c ****     *  RX_rxBufferLoopDetect - cleared if loop condition was detected
 386:Generated_Source\PSoC4/RX.c ****     *     in RX ISR.
 387:Generated_Source\PSoC4/RX.c ****     *
 388:Generated_Source\PSoC4/RX.c ****     * Reentrant:
 389:Generated_Source\PSoC4/RX.c ****     *  No.
 390:Generated_Source\PSoC4/RX.c ****     *
 391:Generated_Source\PSoC4/RX.c ****     *******************************************************************************/
 392:Generated_Source\PSoC4/RX.c ****     uint8 RX_ReadRxData(void) 
 393:Generated_Source\PSoC4/RX.c ****     {
 282              		.loc 1 393 0
 283              		.cfi_startproc
 284 0000 10B5     		push	{r4, lr}
 285              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 13


 286              		.cfi_offset 4, -8
 287              		.cfi_offset 14, -4
 394:Generated_Source\PSoC4/RX.c ****         uint8 rxData;
 395:Generated_Source\PSoC4/RX.c **** 
 396:Generated_Source\PSoC4/RX.c ****     #if (RX_RX_INTERRUPT_ENABLED)
 397:Generated_Source\PSoC4/RX.c **** 
 398:Generated_Source\PSoC4/RX.c ****         uint8 locRxBufferRead;
 399:Generated_Source\PSoC4/RX.c ****         uint8 locRxBufferWrite;
 400:Generated_Source\PSoC4/RX.c **** 
 401:Generated_Source\PSoC4/RX.c ****         /* Protect variables that could change on interrupt */
 402:Generated_Source\PSoC4/RX.c ****         RX_DisableRxInt();
 288              		.loc 1 402 0
 289 0002 0020     		mov	r0, #0
 290 0004 FFF7FEFF 		bl	CyIntDisable
 291              	.LVL18:
 403:Generated_Source\PSoC4/RX.c **** 
 404:Generated_Source\PSoC4/RX.c ****         locRxBufferRead  = RX_rxBufferRead;
 292              		.loc 1 404 0
 293 0008 114A     		ldr	r2, .L25
 294 000a 9378     		ldrb	r3, [r2, #2]
 295 000c DBB2     		uxtb	r3, r3
 296              	.LVL19:
 405:Generated_Source\PSoC4/RX.c ****         locRxBufferWrite = RX_rxBufferWrite;
 297              		.loc 1 405 0
 298 000e D178     		ldrb	r1, [r2, #3]
 299 0010 C9B2     		uxtb	r1, r1
 300              	.LVL20:
 406:Generated_Source\PSoC4/RX.c **** 
 407:Generated_Source\PSoC4/RX.c ****         if( (RX_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 301              		.loc 1 407 0
 302 0012 1279     		ldrb	r2, [r2, #4]
 303 0014 002A     		cmp	r2, #0
 304 0016 01D1     		bne	.L20
 305              		.loc 1 407 0 is_stmt 0 discriminator 1
 306 0018 8B42     		cmp	r3, r1
 307 001a 10D0     		beq	.L21
 308              	.L20:
 408:Generated_Source\PSoC4/RX.c ****         {
 409:Generated_Source\PSoC4/RX.c ****             rxData = RX_rxBuffer[locRxBufferRead];
 309              		.loc 1 409 0 is_stmt 1
 310 001c 0D4A     		ldr	r2, .L25+4
 311 001e D45C     		ldrb	r4, [r2, r3]
 312 0020 E4B2     		uxtb	r4, r4
 313              	.LVL21:
 410:Generated_Source\PSoC4/RX.c ****             locRxBufferRead++;
 314              		.loc 1 410 0
 315 0022 0133     		add	r3, r3, #1
 316              	.LVL22:
 317 0024 DBB2     		uxtb	r3, r3
 318              	.LVL23:
 411:Generated_Source\PSoC4/RX.c **** 
 412:Generated_Source\PSoC4/RX.c ****             if(locRxBufferRead >= RX_RX_BUFFER_SIZE)
 319              		.loc 1 412 0
 320 0026 0F2B     		cmp	r3, #15
 321 0028 00D9     		bls	.L22
 413:Generated_Source\PSoC4/RX.c ****             {
 414:Generated_Source\PSoC4/RX.c ****                 locRxBufferRead = 0u;
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 14


 322              		.loc 1 414 0
 323 002a 0023     		mov	r3, #0
 324              	.LVL24:
 325              	.L22:
 415:Generated_Source\PSoC4/RX.c ****             }
 416:Generated_Source\PSoC4/RX.c ****             /* Update the real pointer */
 417:Generated_Source\PSoC4/RX.c ****             RX_rxBufferRead = locRxBufferRead;
 326              		.loc 1 417 0
 327 002c 084A     		ldr	r2, .L25
 328 002e 9370     		strb	r3, [r2, #2]
 418:Generated_Source\PSoC4/RX.c **** 
 419:Generated_Source\PSoC4/RX.c ****             if(RX_rxBufferLoopDetect != 0u)
 329              		.loc 1 419 0
 330 0030 1379     		ldrb	r3, [r2, #4]
 331              	.LVL25:
 332 0032 002B     		cmp	r3, #0
 333 0034 06D0     		beq	.L23
 420:Generated_Source\PSoC4/RX.c ****             {
 421:Generated_Source\PSoC4/RX.c ****                 RX_rxBufferLoopDetect = 0u;
 334              		.loc 1 421 0
 335 0036 0022     		mov	r2, #0
 336 0038 054B     		ldr	r3, .L25
 337 003a 1A71     		strb	r2, [r3, #4]
 338              	.LVL26:
 339 003c 02E0     		b	.L23
 340              	.LVL27:
 341              	.L21:
 422:Generated_Source\PSoC4/RX.c ****                 #if ((RX_RX_INTERRUPT_ENABLED) && (RX_FLOW_CONTROL != 0u))
 423:Generated_Source\PSoC4/RX.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:Generated_Source\PSoC4/RX.c ****                     #if( RX_HD_ENABLED )
 425:Generated_Source\PSoC4/RX.c ****                         if((RX_CONTROL_REG & RX_CTRL_HD_SEND) == 0u)
 426:Generated_Source\PSoC4/RX.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:Generated_Source\PSoC4/RX.c ****                             *  configuration set, otherwise
 428:Generated_Source\PSoC4/RX.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:Generated_Source\PSoC4/RX.c ****                             */
 430:Generated_Source\PSoC4/RX.c ****                             RX_RXSTATUS_MASK_REG  |= RX_RX_STS_FIFO_NOTEMPTY;
 431:Generated_Source\PSoC4/RX.c ****                         }
 432:Generated_Source\PSoC4/RX.c ****                     #else
 433:Generated_Source\PSoC4/RX.c ****                         RX_RXSTATUS_MASK_REG  |= RX_RX_STS_FIFO_NOTEMPTY;
 434:Generated_Source\PSoC4/RX.c ****                     #endif /* end RX_HD_ENABLED */
 435:Generated_Source\PSoC4/RX.c ****                 #endif /* ((RX_RX_INTERRUPT_ENABLED) && (RX_FLOW_CONTROL != 0u)) */
 436:Generated_Source\PSoC4/RX.c ****             }
 437:Generated_Source\PSoC4/RX.c ****         }
 438:Generated_Source\PSoC4/RX.c ****         else
 439:Generated_Source\PSoC4/RX.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:Generated_Source\PSoC4/RX.c ****             rxData = RX_RXDATA_REG;
 342              		.loc 1 440 0
 343 003e 064B     		ldr	r3, .L25+8
 344              	.LVL28:
 345 0040 1C78     		ldrb	r4, [r3]
 346 0042 E4B2     		uxtb	r4, r4
 347              	.LVL29:
 348              	.L23:
 441:Generated_Source\PSoC4/RX.c ****         }
 442:Generated_Source\PSoC4/RX.c **** 
 443:Generated_Source\PSoC4/RX.c ****         RX_EnableRxInt();
 349              		.loc 1 443 0
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 15


 350 0044 0020     		mov	r0, #0
 351 0046 FFF7FEFF 		bl	CyIntEnable
 352              	.LVL30:
 444:Generated_Source\PSoC4/RX.c **** 
 445:Generated_Source\PSoC4/RX.c ****     #else
 446:Generated_Source\PSoC4/RX.c **** 
 447:Generated_Source\PSoC4/RX.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:Generated_Source\PSoC4/RX.c ****         rxData = RX_RXDATA_REG;
 449:Generated_Source\PSoC4/RX.c **** 
 450:Generated_Source\PSoC4/RX.c ****     #endif /* (RX_RX_INTERRUPT_ENABLED) */
 451:Generated_Source\PSoC4/RX.c **** 
 452:Generated_Source\PSoC4/RX.c ****         return(rxData);
 453:Generated_Source\PSoC4/RX.c ****     }
 353              		.loc 1 453 0
 354 004a 201C     		mov	r0, r4
 355              		@ sp needed
 356              	.LVL31:
 357 004c 10BD     		pop	{r4, pc}
 358              	.L26:
 359 004e C046     		.align	2
 360              	.L25:
 361 0050 00000000 		.word	.LANCHOR0
 362 0054 00000000 		.word	RX_rxBuffer
 363 0058 42000F40 		.word	1074724930
 364              		.cfi_endproc
 365              	.LFE8:
 366              		.size	RX_ReadRxData, .-RX_ReadRxData
 367              		.section	.text.RX_ReadRxStatus,"ax",%progbits
 368              		.align	2
 369              		.global	RX_ReadRxStatus
 370              		.code	16
 371              		.thumb_func
 372              		.type	RX_ReadRxStatus, %function
 373              	RX_ReadRxStatus:
 374              	.LFB9:
 454:Generated_Source\PSoC4/RX.c **** 
 455:Generated_Source\PSoC4/RX.c **** 
 456:Generated_Source\PSoC4/RX.c ****     /*******************************************************************************
 457:Generated_Source\PSoC4/RX.c ****     * Function Name: RX_ReadRxStatus
 458:Generated_Source\PSoC4/RX.c ****     ********************************************************************************
 459:Generated_Source\PSoC4/RX.c ****     *
 460:Generated_Source\PSoC4/RX.c ****     * Summary:
 461:Generated_Source\PSoC4/RX.c ****     *  Returns the current state of the receiver status register and the software
 462:Generated_Source\PSoC4/RX.c ****     *  buffer overflow status.
 463:Generated_Source\PSoC4/RX.c ****     *
 464:Generated_Source\PSoC4/RX.c ****     * Parameters:
 465:Generated_Source\PSoC4/RX.c ****     *  None.
 466:Generated_Source\PSoC4/RX.c ****     *
 467:Generated_Source\PSoC4/RX.c ****     * Return:
 468:Generated_Source\PSoC4/RX.c ****     *  Current state of the status register.
 469:Generated_Source\PSoC4/RX.c ****     *
 470:Generated_Source\PSoC4/RX.c ****     * Side Effect:
 471:Generated_Source\PSoC4/RX.c ****     *  All status register bits are clear-on-read except
 472:Generated_Source\PSoC4/RX.c ****     *  RX_RX_STS_FIFO_NOTEMPTY.
 473:Generated_Source\PSoC4/RX.c ****     *  RX_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:Generated_Source\PSoC4/RX.c ****     *  register read.
 475:Generated_Source\PSoC4/RX.c ****     *
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 16


 476:Generated_Source\PSoC4/RX.c ****     * Global Variables:
 477:Generated_Source\PSoC4/RX.c ****     *  RX_rxBufferOverflow - used to indicate overload condition.
 478:Generated_Source\PSoC4/RX.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:Generated_Source\PSoC4/RX.c ****     *   RX_rxBufferRead to write new data. This condition returned
 480:Generated_Source\PSoC4/RX.c ****     *   and cleared to zero by this API as an
 481:Generated_Source\PSoC4/RX.c ****     *   RX_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:Generated_Source\PSoC4/RX.c ****     *   bits.
 483:Generated_Source\PSoC4/RX.c ****     *
 484:Generated_Source\PSoC4/RX.c ****     *******************************************************************************/
 485:Generated_Source\PSoC4/RX.c ****     uint8 RX_ReadRxStatus(void) 
 486:Generated_Source\PSoC4/RX.c ****     {
 375              		.loc 1 486 0
 376              		.cfi_startproc
 487:Generated_Source\PSoC4/RX.c ****         uint8 status;
 488:Generated_Source\PSoC4/RX.c **** 
 489:Generated_Source\PSoC4/RX.c ****         status = RX_RXSTATUS_REG & RX_RX_HW_MASK;
 377              		.loc 1 489 0
 378 0000 064B     		ldr	r3, .L29
 379 0002 1878     		ldrb	r0, [r3]
 380 0004 7F23     		mov	r3, #127
 381 0006 1840     		and	r0, r3
 382              	.LVL32:
 490:Generated_Source\PSoC4/RX.c **** 
 491:Generated_Source\PSoC4/RX.c ****     #if (RX_RX_INTERRUPT_ENABLED)
 492:Generated_Source\PSoC4/RX.c ****         if(RX_rxBufferOverflow != 0u)
 383              		.loc 1 492 0
 384 0008 054B     		ldr	r3, .L29+4
 385 000a 5B79     		ldrb	r3, [r3, #5]
 386 000c 002B     		cmp	r3, #0
 387 000e 04D0     		beq	.L28
 493:Generated_Source\PSoC4/RX.c ****         {
 494:Generated_Source\PSoC4/RX.c ****             status |= RX_RX_STS_SOFT_BUFF_OVER;
 388              		.loc 1 494 0
 389 0010 8023     		mov	r3, #128
 390 0012 1843     		orr	r0, r3
 391              	.LVL33:
 495:Generated_Source\PSoC4/RX.c ****             RX_rxBufferOverflow = 0u;
 392              		.loc 1 495 0
 393 0014 0022     		mov	r2, #0
 394 0016 024B     		ldr	r3, .L29+4
 395 0018 5A71     		strb	r2, [r3, #5]
 396              	.L28:
 496:Generated_Source\PSoC4/RX.c ****         }
 497:Generated_Source\PSoC4/RX.c ****     #endif /* (RX_RX_INTERRUPT_ENABLED) */
 498:Generated_Source\PSoC4/RX.c **** 
 499:Generated_Source\PSoC4/RX.c ****         return(status);
 500:Generated_Source\PSoC4/RX.c ****     }
 397              		.loc 1 500 0
 398              		@ sp needed
 399 001a 7047     		bx	lr
 400              	.L30:
 401              		.align	2
 402              	.L29:
 403 001c 63000F40 		.word	1074724963
 404 0020 00000000 		.word	.LANCHOR0
 405              		.cfi_endproc
 406              	.LFE9:
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 17


 407              		.size	RX_ReadRxStatus, .-RX_ReadRxStatus
 408              		.section	.text.RX_GetChar,"ax",%progbits
 409              		.align	2
 410              		.global	RX_GetChar
 411              		.code	16
 412              		.thumb_func
 413              		.type	RX_GetChar, %function
 414              	RX_GetChar:
 415              	.LFB10:
 501:Generated_Source\PSoC4/RX.c **** 
 502:Generated_Source\PSoC4/RX.c **** 
 503:Generated_Source\PSoC4/RX.c ****     /*******************************************************************************
 504:Generated_Source\PSoC4/RX.c ****     * Function Name: RX_GetChar
 505:Generated_Source\PSoC4/RX.c ****     ********************************************************************************
 506:Generated_Source\PSoC4/RX.c ****     *
 507:Generated_Source\PSoC4/RX.c ****     * Summary:
 508:Generated_Source\PSoC4/RX.c ****     *  Returns the last received byte of data. RX_GetChar() is
 509:Generated_Source\PSoC4/RX.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:Generated_Source\PSoC4/RX.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:Generated_Source\PSoC4/RX.c ****     *
 512:Generated_Source\PSoC4/RX.c ****     * Parameters:
 513:Generated_Source\PSoC4/RX.c ****     *  None.
 514:Generated_Source\PSoC4/RX.c ****     *
 515:Generated_Source\PSoC4/RX.c ****     * Return:
 516:Generated_Source\PSoC4/RX.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:Generated_Source\PSoC4/RX.c ****     *  A returned zero signifies an error condition or no data available.
 518:Generated_Source\PSoC4/RX.c ****     *
 519:Generated_Source\PSoC4/RX.c ****     * Global Variables:
 520:Generated_Source\PSoC4/RX.c ****     *  RX_rxBuffer - RAM buffer pointer for save received data.
 521:Generated_Source\PSoC4/RX.c ****     *  RX_rxBufferWrite - cyclic index for write to rxBuffer,
 522:Generated_Source\PSoC4/RX.c ****     *     checked to identify new data.
 523:Generated_Source\PSoC4/RX.c ****     *  RX_rxBufferRead - cyclic index for read from rxBuffer,
 524:Generated_Source\PSoC4/RX.c ****     *     incremented after each byte has been read from buffer.
 525:Generated_Source\PSoC4/RX.c ****     *  RX_rxBufferLoopDetect - cleared if loop condition was detected
 526:Generated_Source\PSoC4/RX.c ****     *     in RX ISR.
 527:Generated_Source\PSoC4/RX.c ****     *
 528:Generated_Source\PSoC4/RX.c ****     * Reentrant:
 529:Generated_Source\PSoC4/RX.c ****     *  No.
 530:Generated_Source\PSoC4/RX.c ****     *
 531:Generated_Source\PSoC4/RX.c ****     *******************************************************************************/
 532:Generated_Source\PSoC4/RX.c ****     uint8 RX_GetChar(void) 
 533:Generated_Source\PSoC4/RX.c ****     {
 416              		.loc 1 533 0
 417              		.cfi_startproc
 418 0000 10B5     		push	{r4, lr}
 419              		.cfi_def_cfa_offset 8
 420              		.cfi_offset 4, -8
 421              		.cfi_offset 14, -4
 422              	.LVL34:
 534:Generated_Source\PSoC4/RX.c ****         uint8 rxData = 0u;
 535:Generated_Source\PSoC4/RX.c ****         uint8 rxStatus;
 536:Generated_Source\PSoC4/RX.c **** 
 537:Generated_Source\PSoC4/RX.c ****     #if (RX_RX_INTERRUPT_ENABLED)
 538:Generated_Source\PSoC4/RX.c ****         uint8 locRxBufferRead;
 539:Generated_Source\PSoC4/RX.c ****         uint8 locRxBufferWrite;
 540:Generated_Source\PSoC4/RX.c **** 
 541:Generated_Source\PSoC4/RX.c ****         /* Protect variables that could change on interrupt */
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 18


 542:Generated_Source\PSoC4/RX.c ****         RX_DisableRxInt();
 423              		.loc 1 542 0
 424 0002 0020     		mov	r0, #0
 425 0004 FFF7FEFF 		bl	CyIntDisable
 426              	.LVL35:
 543:Generated_Source\PSoC4/RX.c **** 
 544:Generated_Source\PSoC4/RX.c ****         locRxBufferRead  = RX_rxBufferRead;
 427              		.loc 1 544 0
 428 0008 174A     		ldr	r2, .L39
 429 000a 9378     		ldrb	r3, [r2, #2]
 430 000c DBB2     		uxtb	r3, r3
 431              	.LVL36:
 545:Generated_Source\PSoC4/RX.c ****         locRxBufferWrite = RX_rxBufferWrite;
 432              		.loc 1 545 0
 433 000e D178     		ldrb	r1, [r2, #3]
 434 0010 C9B2     		uxtb	r1, r1
 435              	.LVL37:
 546:Generated_Source\PSoC4/RX.c **** 
 547:Generated_Source\PSoC4/RX.c ****         if( (RX_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 436              		.loc 1 547 0
 437 0012 1279     		ldrb	r2, [r2, #4]
 438 0014 002A     		cmp	r2, #0
 439 0016 01D1     		bne	.L32
 440              		.loc 1 547 0 is_stmt 0 discriminator 1
 441 0018 8B42     		cmp	r3, r1
 442 001a 10D0     		beq	.L33
 443              	.L32:
 548:Generated_Source\PSoC4/RX.c ****         {
 549:Generated_Source\PSoC4/RX.c ****             rxData = RX_rxBuffer[locRxBufferRead];
 444              		.loc 1 549 0 is_stmt 1
 445 001c 134A     		ldr	r2, .L39+4
 446 001e D45C     		ldrb	r4, [r2, r3]
 447 0020 E4B2     		uxtb	r4, r4
 448              	.LVL38:
 550:Generated_Source\PSoC4/RX.c ****             locRxBufferRead++;
 449              		.loc 1 550 0
 450 0022 0133     		add	r3, r3, #1
 451              	.LVL39:
 452 0024 DBB2     		uxtb	r3, r3
 453              	.LVL40:
 551:Generated_Source\PSoC4/RX.c ****             if(locRxBufferRead >= RX_RX_BUFFER_SIZE)
 454              		.loc 1 551 0
 455 0026 0F2B     		cmp	r3, #15
 456 0028 00D9     		bls	.L34
 552:Generated_Source\PSoC4/RX.c ****             {
 553:Generated_Source\PSoC4/RX.c ****                 locRxBufferRead = 0u;
 457              		.loc 1 553 0
 458 002a 0023     		mov	r3, #0
 459              	.LVL41:
 460              	.L34:
 554:Generated_Source\PSoC4/RX.c ****             }
 555:Generated_Source\PSoC4/RX.c ****             /* Update the real pointer */
 556:Generated_Source\PSoC4/RX.c ****             RX_rxBufferRead = locRxBufferRead;
 461              		.loc 1 556 0
 462 002c 0E4A     		ldr	r2, .L39
 463 002e 9370     		strb	r3, [r2, #2]
 557:Generated_Source\PSoC4/RX.c **** 
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 19


 558:Generated_Source\PSoC4/RX.c ****             if(RX_rxBufferLoopDetect != 0u)
 464              		.loc 1 558 0
 465 0030 1379     		ldrb	r3, [r2, #4]
 466              	.LVL42:
 467 0032 002B     		cmp	r3, #0
 468 0034 12D0     		beq	.L35
 559:Generated_Source\PSoC4/RX.c ****             {
 560:Generated_Source\PSoC4/RX.c ****                 RX_rxBufferLoopDetect = 0u;
 469              		.loc 1 560 0
 470 0036 0022     		mov	r2, #0
 471 0038 0B4B     		ldr	r3, .L39
 472 003a 1A71     		strb	r2, [r3, #4]
 473              	.LVL43:
 474 003c 0EE0     		b	.L35
 475              	.LVL44:
 476              	.L33:
 561:Generated_Source\PSoC4/RX.c ****                 #if( (RX_RX_INTERRUPT_ENABLED) && (RX_FLOW_CONTROL != 0u) )
 562:Generated_Source\PSoC4/RX.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:Generated_Source\PSoC4/RX.c ****                     #if( RX_HD_ENABLED )
 564:Generated_Source\PSoC4/RX.c ****                         if((RX_CONTROL_REG & RX_CTRL_HD_SEND) == 0u)
 565:Generated_Source\PSoC4/RX.c ****                         {   /* In Half duplex mode return RX mask only if
 566:Generated_Source\PSoC4/RX.c ****                             *  RX configuration set, otherwise
 567:Generated_Source\PSoC4/RX.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:Generated_Source\PSoC4/RX.c ****                             */
 569:Generated_Source\PSoC4/RX.c ****                             RX_RXSTATUS_MASK_REG |= RX_RX_STS_FIFO_NOTEMPTY;
 570:Generated_Source\PSoC4/RX.c ****                         }
 571:Generated_Source\PSoC4/RX.c ****                     #else
 572:Generated_Source\PSoC4/RX.c ****                         RX_RXSTATUS_MASK_REG |= RX_RX_STS_FIFO_NOTEMPTY;
 573:Generated_Source\PSoC4/RX.c ****                     #endif /* end RX_HD_ENABLED */
 574:Generated_Source\PSoC4/RX.c ****                 #endif /* RX_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:Generated_Source\PSoC4/RX.c ****             }
 576:Generated_Source\PSoC4/RX.c **** 
 577:Generated_Source\PSoC4/RX.c ****         }
 578:Generated_Source\PSoC4/RX.c ****         else
 579:Generated_Source\PSoC4/RX.c ****         {   rxStatus = RX_RXSTATUS_REG;
 477              		.loc 1 579 0
 478 003e 0C4B     		ldr	r3, .L39+8
 479              	.LVL45:
 480 0040 1B78     		ldrb	r3, [r3]
 481 0042 DBB2     		uxtb	r3, r3
 482              	.LVL46:
 580:Generated_Source\PSoC4/RX.c ****             if((rxStatus & RX_RX_STS_FIFO_NOTEMPTY) != 0u)
 483              		.loc 1 580 0
 484 0044 9A06     		lsl	r2, r3, #26
 485 0046 06D5     		bpl	.L37
 581:Generated_Source\PSoC4/RX.c ****             {   /* Read received data from FIFO */
 582:Generated_Source\PSoC4/RX.c ****                 rxData = RX_RXDATA_REG;
 486              		.loc 1 582 0
 487 0048 0A4A     		ldr	r2, .L39+12
 488 004a 1478     		ldrb	r4, [r2]
 489 004c E4B2     		uxtb	r4, r4
 490              	.LVL47:
 583:Generated_Source\PSoC4/RX.c ****                 /*Check status on error*/
 584:Generated_Source\PSoC4/RX.c ****                 if((rxStatus & (RX_RX_STS_BREAK | RX_RX_STS_PAR_ERROR |
 491              		.loc 1 584 0
 492 004e 1E22     		mov	r2, #30
 493 0050 1A42     		tst	r2, r3
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 20


 494 0052 02D1     		bne	.L38
 495 0054 02E0     		b	.L35
 496              	.LVL48:
 497              	.L37:
 534:Generated_Source\PSoC4/RX.c ****         uint8 rxStatus;
 498              		.loc 1 534 0
 499 0056 0024     		mov	r4, #0
 500 0058 00E0     		b	.L35
 501              	.LVL49:
 502              	.L38:
 585:Generated_Source\PSoC4/RX.c ****                                 RX_RX_STS_STOP_ERROR | RX_RX_STS_OVERRUN)) != 0u)
 586:Generated_Source\PSoC4/RX.c ****                 {
 587:Generated_Source\PSoC4/RX.c ****                     rxData = 0u;
 503              		.loc 1 587 0
 504 005a 0024     		mov	r4, #0
 505              	.LVL50:
 506              	.L35:
 588:Generated_Source\PSoC4/RX.c ****                 }
 589:Generated_Source\PSoC4/RX.c ****             }
 590:Generated_Source\PSoC4/RX.c ****         }
 591:Generated_Source\PSoC4/RX.c **** 
 592:Generated_Source\PSoC4/RX.c ****         RX_EnableRxInt();
 507              		.loc 1 592 0
 508 005c 0020     		mov	r0, #0
 509 005e FFF7FEFF 		bl	CyIntEnable
 510              	.LVL51:
 593:Generated_Source\PSoC4/RX.c **** 
 594:Generated_Source\PSoC4/RX.c ****     #else
 595:Generated_Source\PSoC4/RX.c **** 
 596:Generated_Source\PSoC4/RX.c ****         rxStatus =RX_RXSTATUS_REG;
 597:Generated_Source\PSoC4/RX.c ****         if((rxStatus & RX_RX_STS_FIFO_NOTEMPTY) != 0u)
 598:Generated_Source\PSoC4/RX.c ****         {
 599:Generated_Source\PSoC4/RX.c ****             /* Read received data from FIFO */
 600:Generated_Source\PSoC4/RX.c ****             rxData = RX_RXDATA_REG;
 601:Generated_Source\PSoC4/RX.c **** 
 602:Generated_Source\PSoC4/RX.c ****             /*Check status on error*/
 603:Generated_Source\PSoC4/RX.c ****             if((rxStatus & (RX_RX_STS_BREAK | RX_RX_STS_PAR_ERROR |
 604:Generated_Source\PSoC4/RX.c ****                             RX_RX_STS_STOP_ERROR | RX_RX_STS_OVERRUN)) != 0u)
 605:Generated_Source\PSoC4/RX.c ****             {
 606:Generated_Source\PSoC4/RX.c ****                 rxData = 0u;
 607:Generated_Source\PSoC4/RX.c ****             }
 608:Generated_Source\PSoC4/RX.c ****         }
 609:Generated_Source\PSoC4/RX.c ****     #endif /* (RX_RX_INTERRUPT_ENABLED) */
 610:Generated_Source\PSoC4/RX.c **** 
 611:Generated_Source\PSoC4/RX.c ****         return(rxData);
 612:Generated_Source\PSoC4/RX.c ****     }
 511              		.loc 1 612 0
 512 0062 201C     		mov	r0, r4
 513              		@ sp needed
 514              	.LVL52:
 515 0064 10BD     		pop	{r4, pc}
 516              	.L40:
 517 0066 C046     		.align	2
 518              	.L39:
 519 0068 00000000 		.word	.LANCHOR0
 520 006c 00000000 		.word	RX_rxBuffer
 521 0070 63000F40 		.word	1074724963
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 21


 522 0074 42000F40 		.word	1074724930
 523              		.cfi_endproc
 524              	.LFE10:
 525              		.size	RX_GetChar, .-RX_GetChar
 526              		.section	.text.RX_GetByte,"ax",%progbits
 527              		.align	2
 528              		.global	RX_GetByte
 529              		.code	16
 530              		.thumb_func
 531              		.type	RX_GetByte, %function
 532              	RX_GetByte:
 533              	.LFB11:
 613:Generated_Source\PSoC4/RX.c **** 
 614:Generated_Source\PSoC4/RX.c **** 
 615:Generated_Source\PSoC4/RX.c ****     /*******************************************************************************
 616:Generated_Source\PSoC4/RX.c ****     * Function Name: RX_GetByte
 617:Generated_Source\PSoC4/RX.c ****     ********************************************************************************
 618:Generated_Source\PSoC4/RX.c ****     *
 619:Generated_Source\PSoC4/RX.c ****     * Summary:
 620:Generated_Source\PSoC4/RX.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:Generated_Source\PSoC4/RX.c ****     *  condition.
 622:Generated_Source\PSoC4/RX.c ****     *
 623:Generated_Source\PSoC4/RX.c ****     * Parameters:
 624:Generated_Source\PSoC4/RX.c ****     *  None.
 625:Generated_Source\PSoC4/RX.c ****     *
 626:Generated_Source\PSoC4/RX.c ****     * Return:
 627:Generated_Source\PSoC4/RX.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:Generated_Source\PSoC4/RX.c ****     *  an error has occurred.
 629:Generated_Source\PSoC4/RX.c ****     *
 630:Generated_Source\PSoC4/RX.c ****     * Reentrant:
 631:Generated_Source\PSoC4/RX.c ****     *  No.
 632:Generated_Source\PSoC4/RX.c ****     *
 633:Generated_Source\PSoC4/RX.c ****     *******************************************************************************/
 634:Generated_Source\PSoC4/RX.c ****     uint16 RX_GetByte(void) 
 635:Generated_Source\PSoC4/RX.c ****     {
 534              		.loc 1 635 0
 535              		.cfi_startproc
 536 0000 10B5     		push	{r4, lr}
 537              		.cfi_def_cfa_offset 8
 538              		.cfi_offset 4, -8
 539              		.cfi_offset 14, -4
 636:Generated_Source\PSoC4/RX.c ****         
 637:Generated_Source\PSoC4/RX.c ****     #if (RX_RX_INTERRUPT_ENABLED)
 638:Generated_Source\PSoC4/RX.c ****         uint16 locErrorStatus;
 639:Generated_Source\PSoC4/RX.c ****         /* Protect variables that could change on interrupt */
 640:Generated_Source\PSoC4/RX.c ****         RX_DisableRxInt();
 540              		.loc 1 640 0
 541 0002 0020     		mov	r0, #0
 542 0004 FFF7FEFF 		bl	CyIntDisable
 543              	.LVL53:
 641:Generated_Source\PSoC4/RX.c ****         locErrorStatus = (uint16)RX_errorStatus;
 544              		.loc 1 641 0
 545 0008 064B     		ldr	r3, .L42
 546 000a 1C78     		ldrb	r4, [r3]
 547              	.LVL54:
 642:Generated_Source\PSoC4/RX.c ****         RX_errorStatus = 0u;
 548              		.loc 1 642 0
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 22


 549 000c 0022     		mov	r2, #0
 550 000e 1A70     		strb	r2, [r3]
 643:Generated_Source\PSoC4/RX.c ****         RX_EnableRxInt();
 551              		.loc 1 643 0
 552 0010 0020     		mov	r0, #0
 553 0012 FFF7FEFF 		bl	CyIntEnable
 554              	.LVL55:
 644:Generated_Source\PSoC4/RX.c ****         return ( (uint16)(locErrorStatus << 8u) | RX_ReadRxData() );
 555              		.loc 1 644 0
 556 0016 2402     		lsl	r4, r4, #8
 557              	.LVL56:
 558 0018 FFF7FEFF 		bl	RX_ReadRxData
 559              	.LVL57:
 560 001c 2043     		orr	r0, r4
 561 001e 80B2     		uxth	r0, r0
 645:Generated_Source\PSoC4/RX.c ****     #else
 646:Generated_Source\PSoC4/RX.c ****         return ( ((uint16)RX_ReadRxStatus() << 8u) | RX_ReadRxData() );
 647:Generated_Source\PSoC4/RX.c ****     #endif /* RX_RX_INTERRUPT_ENABLED */
 648:Generated_Source\PSoC4/RX.c ****         
 649:Generated_Source\PSoC4/RX.c ****     }
 562              		.loc 1 649 0
 563              		@ sp needed
 564 0020 10BD     		pop	{r4, pc}
 565              	.L43:
 566 0022 C046     		.align	2
 567              	.L42:
 568 0024 00000000 		.word	.LANCHOR0
 569              		.cfi_endproc
 570              	.LFE11:
 571              		.size	RX_GetByte, .-RX_GetByte
 572              		.section	.text.RX_GetRxBufferSize,"ax",%progbits
 573              		.align	2
 574              		.global	RX_GetRxBufferSize
 575              		.code	16
 576              		.thumb_func
 577              		.type	RX_GetRxBufferSize, %function
 578              	RX_GetRxBufferSize:
 579              	.LFB12:
 650:Generated_Source\PSoC4/RX.c **** 
 651:Generated_Source\PSoC4/RX.c **** 
 652:Generated_Source\PSoC4/RX.c ****     /*******************************************************************************
 653:Generated_Source\PSoC4/RX.c ****     * Function Name: RX_GetRxBufferSize
 654:Generated_Source\PSoC4/RX.c ****     ********************************************************************************
 655:Generated_Source\PSoC4/RX.c ****     *
 656:Generated_Source\PSoC4/RX.c ****     * Summary:
 657:Generated_Source\PSoC4/RX.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:Generated_Source\PSoC4/RX.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:Generated_Source\PSoC4/RX.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:Generated_Source\PSoC4/RX.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:Generated_Source\PSoC4/RX.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:Generated_Source\PSoC4/RX.c ****     *    account.
 663:Generated_Source\PSoC4/RX.c ****     *
 664:Generated_Source\PSoC4/RX.c ****     * Parameters:
 665:Generated_Source\PSoC4/RX.c ****     *  None.
 666:Generated_Source\PSoC4/RX.c ****     *
 667:Generated_Source\PSoC4/RX.c ****     * Return:
 668:Generated_Source\PSoC4/RX.c ****     *  uint8: Number of bytes in the RX buffer. 
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 23


 669:Generated_Source\PSoC4/RX.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:Generated_Source\PSoC4/RX.c ****     *
 671:Generated_Source\PSoC4/RX.c ****     * Global Variables:
 672:Generated_Source\PSoC4/RX.c ****     *  RX_rxBufferWrite - used to calculate left bytes.
 673:Generated_Source\PSoC4/RX.c ****     *  RX_rxBufferRead - used to calculate left bytes.
 674:Generated_Source\PSoC4/RX.c ****     *  RX_rxBufferLoopDetect - checked to decide left bytes amount.
 675:Generated_Source\PSoC4/RX.c ****     *
 676:Generated_Source\PSoC4/RX.c ****     * Reentrant:
 677:Generated_Source\PSoC4/RX.c ****     *  No.
 678:Generated_Source\PSoC4/RX.c ****     *
 679:Generated_Source\PSoC4/RX.c ****     * Theory:
 680:Generated_Source\PSoC4/RX.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:Generated_Source\PSoC4/RX.c ****     *
 682:Generated_Source\PSoC4/RX.c ****     *******************************************************************************/
 683:Generated_Source\PSoC4/RX.c ****     uint8 RX_GetRxBufferSize(void)
 684:Generated_Source\PSoC4/RX.c ****                                                             
 685:Generated_Source\PSoC4/RX.c ****     {
 580              		.loc 1 685 0
 581              		.cfi_startproc
 582 0000 10B5     		push	{r4, lr}
 583              		.cfi_def_cfa_offset 8
 584              		.cfi_offset 4, -8
 585              		.cfi_offset 14, -4
 686:Generated_Source\PSoC4/RX.c ****         uint8 size;
 687:Generated_Source\PSoC4/RX.c **** 
 688:Generated_Source\PSoC4/RX.c ****     #if (RX_RX_INTERRUPT_ENABLED)
 689:Generated_Source\PSoC4/RX.c **** 
 690:Generated_Source\PSoC4/RX.c ****         /* Protect variables that could change on interrupt */
 691:Generated_Source\PSoC4/RX.c ****         RX_DisableRxInt();
 586              		.loc 1 691 0
 587 0002 0020     		mov	r0, #0
 588 0004 FFF7FEFF 		bl	CyIntDisable
 589              	.LVL58:
 692:Generated_Source\PSoC4/RX.c **** 
 693:Generated_Source\PSoC4/RX.c ****         if(RX_rxBufferRead == RX_rxBufferWrite)
 590              		.loc 1 693 0
 591 0008 124A     		ldr	r2, .L49
 592 000a 9378     		ldrb	r3, [r2, #2]
 593 000c D278     		ldrb	r2, [r2, #3]
 594 000e DBB2     		uxtb	r3, r3
 595 0010 9342     		cmp	r3, r2
 596 0012 05D1     		bne	.L45
 694:Generated_Source\PSoC4/RX.c ****         {
 695:Generated_Source\PSoC4/RX.c ****             if(RX_rxBufferLoopDetect != 0u)
 597              		.loc 1 695 0
 598 0014 0F4B     		ldr	r3, .L49
 599 0016 1B79     		ldrb	r3, [r3, #4]
 600 0018 002B     		cmp	r3, #0
 601 001a 14D0     		beq	.L48
 696:Generated_Source\PSoC4/RX.c ****             {
 697:Generated_Source\PSoC4/RX.c ****                 size = RX_RX_BUFFER_SIZE;
 602              		.loc 1 697 0
 603 001c 1024     		mov	r4, #16
 604 001e 13E0     		b	.L46
 605              	.L45:
 698:Generated_Source\PSoC4/RX.c ****             }
 699:Generated_Source\PSoC4/RX.c ****             else
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 24


 700:Generated_Source\PSoC4/RX.c ****             {
 701:Generated_Source\PSoC4/RX.c ****                 size = 0u;
 702:Generated_Source\PSoC4/RX.c ****             }
 703:Generated_Source\PSoC4/RX.c ****         }
 704:Generated_Source\PSoC4/RX.c ****         else if(RX_rxBufferRead < RX_rxBufferWrite)
 606              		.loc 1 704 0
 607 0020 0C4A     		ldr	r2, .L49
 608 0022 9378     		ldrb	r3, [r2, #2]
 609 0024 D278     		ldrb	r2, [r2, #3]
 610 0026 DBB2     		uxtb	r3, r3
 611 0028 9342     		cmp	r3, r2
 612 002a 05D2     		bcs	.L47
 705:Generated_Source\PSoC4/RX.c ****         {
 706:Generated_Source\PSoC4/RX.c ****             size = (RX_rxBufferWrite - RX_rxBufferRead);
 613              		.loc 1 706 0
 614 002c 094A     		ldr	r2, .L49
 615 002e D378     		ldrb	r3, [r2, #3]
 616 0030 9478     		ldrb	r4, [r2, #2]
 617 0032 1C1B     		sub	r4, r3, r4
 618 0034 E4B2     		uxtb	r4, r4
 619              	.LVL59:
 620 0036 07E0     		b	.L46
 621              	.LVL60:
 622              	.L47:
 707:Generated_Source\PSoC4/RX.c ****         }
 708:Generated_Source\PSoC4/RX.c ****         else
 709:Generated_Source\PSoC4/RX.c ****         {
 710:Generated_Source\PSoC4/RX.c ****             size = (RX_RX_BUFFER_SIZE - RX_rxBufferRead) + RX_rxBufferWrite;
 623              		.loc 1 710 0
 624 0038 064A     		ldr	r2, .L49
 625 003a D378     		ldrb	r3, [r2, #3]
 626 003c 9478     		ldrb	r4, [r2, #2]
 627 003e 1C1B     		sub	r4, r3, r4
 628 0040 1034     		add	r4, r4, #16
 629 0042 E4B2     		uxtb	r4, r4
 630              	.LVL61:
 631 0044 00E0     		b	.L46
 632              	.LVL62:
 633              	.L48:
 701:Generated_Source\PSoC4/RX.c ****             }
 634              		.loc 1 701 0
 635 0046 0024     		mov	r4, #0
 636              	.L46:
 637              	.LVL63:
 711:Generated_Source\PSoC4/RX.c ****         }
 712:Generated_Source\PSoC4/RX.c **** 
 713:Generated_Source\PSoC4/RX.c ****         RX_EnableRxInt();
 638              		.loc 1 713 0
 639 0048 0020     		mov	r0, #0
 640 004a FFF7FEFF 		bl	CyIntEnable
 641              	.LVL64:
 714:Generated_Source\PSoC4/RX.c **** 
 715:Generated_Source\PSoC4/RX.c ****     #else
 716:Generated_Source\PSoC4/RX.c **** 
 717:Generated_Source\PSoC4/RX.c ****         /* We can only know if there is data in the fifo. */
 718:Generated_Source\PSoC4/RX.c ****         size = ((RX_RXSTATUS_REG & RX_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 719:Generated_Source\PSoC4/RX.c **** 
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 25


 720:Generated_Source\PSoC4/RX.c ****     #endif /* (RX_RX_INTERRUPT_ENABLED) */
 721:Generated_Source\PSoC4/RX.c **** 
 722:Generated_Source\PSoC4/RX.c ****         return(size);
 723:Generated_Source\PSoC4/RX.c ****     }
 642              		.loc 1 723 0
 643 004e 201C     		mov	r0, r4
 644              		@ sp needed
 645              	.LVL65:
 646 0050 10BD     		pop	{r4, pc}
 647              	.L50:
 648 0052 C046     		.align	2
 649              	.L49:
 650 0054 00000000 		.word	.LANCHOR0
 651              		.cfi_endproc
 652              	.LFE12:
 653              		.size	RX_GetRxBufferSize, .-RX_GetRxBufferSize
 654              		.section	.text.RX_ClearRxBuffer,"ax",%progbits
 655              		.align	2
 656              		.global	RX_ClearRxBuffer
 657              		.code	16
 658              		.thumb_func
 659              		.type	RX_ClearRxBuffer, %function
 660              	RX_ClearRxBuffer:
 661              	.LFB13:
 724:Generated_Source\PSoC4/RX.c **** 
 725:Generated_Source\PSoC4/RX.c **** 
 726:Generated_Source\PSoC4/RX.c ****     /*******************************************************************************
 727:Generated_Source\PSoC4/RX.c ****     * Function Name: RX_ClearRxBuffer
 728:Generated_Source\PSoC4/RX.c ****     ********************************************************************************
 729:Generated_Source\PSoC4/RX.c ****     *
 730:Generated_Source\PSoC4/RX.c ****     * Summary:
 731:Generated_Source\PSoC4/RX.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:Generated_Source\PSoC4/RX.c ****     *
 733:Generated_Source\PSoC4/RX.c ****     * Parameters:
 734:Generated_Source\PSoC4/RX.c ****     *  None.
 735:Generated_Source\PSoC4/RX.c ****     *
 736:Generated_Source\PSoC4/RX.c ****     * Return:
 737:Generated_Source\PSoC4/RX.c ****     *  None.
 738:Generated_Source\PSoC4/RX.c ****     *
 739:Generated_Source\PSoC4/RX.c ****     * Global Variables:
 740:Generated_Source\PSoC4/RX.c ****     *  RX_rxBufferWrite - cleared to zero.
 741:Generated_Source\PSoC4/RX.c ****     *  RX_rxBufferRead - cleared to zero.
 742:Generated_Source\PSoC4/RX.c ****     *  RX_rxBufferLoopDetect - cleared to zero.
 743:Generated_Source\PSoC4/RX.c ****     *  RX_rxBufferOverflow - cleared to zero.
 744:Generated_Source\PSoC4/RX.c ****     *
 745:Generated_Source\PSoC4/RX.c ****     * Reentrant:
 746:Generated_Source\PSoC4/RX.c ****     *  No.
 747:Generated_Source\PSoC4/RX.c ****     *
 748:Generated_Source\PSoC4/RX.c ****     * Theory:
 749:Generated_Source\PSoC4/RX.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:Generated_Source\PSoC4/RX.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:Generated_Source\PSoC4/RX.c ****     *  have remained in the RAM.
 752:Generated_Source\PSoC4/RX.c ****     *
 753:Generated_Source\PSoC4/RX.c ****     * Side Effects:
 754:Generated_Source\PSoC4/RX.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:Generated_Source\PSoC4/RX.c ****     *
 756:Generated_Source\PSoC4/RX.c ****     *******************************************************************************/
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 26


 757:Generated_Source\PSoC4/RX.c ****     void RX_ClearRxBuffer(void) 
 758:Generated_Source\PSoC4/RX.c ****     {
 662              		.loc 1 758 0
 663              		.cfi_startproc
 664 0000 08B5     		push	{r3, lr}
 665              		.cfi_def_cfa_offset 8
 666              		.cfi_offset 3, -8
 667              		.cfi_offset 14, -4
 759:Generated_Source\PSoC4/RX.c ****         uint8 enableInterrupts;
 760:Generated_Source\PSoC4/RX.c **** 
 761:Generated_Source\PSoC4/RX.c ****         /* Clear the HW FIFO */
 762:Generated_Source\PSoC4/RX.c ****         enableInterrupts = CyEnterCriticalSection();
 668              		.loc 1 762 0
 669 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 670              	.LVL66:
 763:Generated_Source\PSoC4/RX.c ****         RX_RXDATA_AUX_CTL_REG |= (uint8)  RX_RX_FIFO_CLR;
 671              		.loc 1 763 0
 672 0006 0C4B     		ldr	r3, .L52
 673 0008 1978     		ldrb	r1, [r3]
 674 000a 0122     		mov	r2, #1
 675 000c 0A43     		orr	r2, r1
 676 000e 1A70     		strb	r2, [r3]
 764:Generated_Source\PSoC4/RX.c ****         RX_RXDATA_AUX_CTL_REG &= (uint8) ~RX_RX_FIFO_CLR;
 677              		.loc 1 764 0
 678 0010 1A78     		ldrb	r2, [r3]
 679 0012 0121     		mov	r1, #1
 680 0014 8A43     		bic	r2, r1
 681 0016 1A70     		strb	r2, [r3]
 765:Generated_Source\PSoC4/RX.c ****         CyExitCriticalSection(enableInterrupts);
 682              		.loc 1 765 0
 683 0018 FFF7FEFF 		bl	CyExitCriticalSection
 684              	.LVL67:
 766:Generated_Source\PSoC4/RX.c **** 
 767:Generated_Source\PSoC4/RX.c ****     #if (RX_RX_INTERRUPT_ENABLED)
 768:Generated_Source\PSoC4/RX.c **** 
 769:Generated_Source\PSoC4/RX.c ****         /* Protect variables that could change on interrupt. */
 770:Generated_Source\PSoC4/RX.c ****         RX_DisableRxInt();
 685              		.loc 1 770 0
 686 001c 0020     		mov	r0, #0
 687 001e FFF7FEFF 		bl	CyIntDisable
 688              	.LVL68:
 771:Generated_Source\PSoC4/RX.c **** 
 772:Generated_Source\PSoC4/RX.c ****         RX_rxBufferRead = 0u;
 689              		.loc 1 772 0
 690 0022 064B     		ldr	r3, .L52+4
 691 0024 0022     		mov	r2, #0
 692 0026 9A70     		strb	r2, [r3, #2]
 773:Generated_Source\PSoC4/RX.c ****         RX_rxBufferWrite = 0u;
 693              		.loc 1 773 0
 694 0028 DA70     		strb	r2, [r3, #3]
 774:Generated_Source\PSoC4/RX.c ****         RX_rxBufferLoopDetect = 0u;
 695              		.loc 1 774 0
 696 002a 1A71     		strb	r2, [r3, #4]
 775:Generated_Source\PSoC4/RX.c ****         RX_rxBufferOverflow = 0u;
 697              		.loc 1 775 0
 698 002c 5A71     		strb	r2, [r3, #5]
 776:Generated_Source\PSoC4/RX.c **** 
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 27


 777:Generated_Source\PSoC4/RX.c ****         RX_EnableRxInt();
 699              		.loc 1 777 0
 700 002e 0020     		mov	r0, #0
 701 0030 FFF7FEFF 		bl	CyIntEnable
 702              	.LVL69:
 778:Generated_Source\PSoC4/RX.c **** 
 779:Generated_Source\PSoC4/RX.c ****     #endif /* (RX_RX_INTERRUPT_ENABLED) */
 780:Generated_Source\PSoC4/RX.c **** 
 781:Generated_Source\PSoC4/RX.c ****     }
 703              		.loc 1 781 0
 704              		@ sp needed
 705 0034 08BD     		pop	{r3, pc}
 706              	.L53:
 707 0036 C046     		.align	2
 708              	.L52:
 709 0038 92000F40 		.word	1074725010
 710 003c 00000000 		.word	.LANCHOR0
 711              		.cfi_endproc
 712              	.LFE13:
 713              		.size	RX_ClearRxBuffer, .-RX_ClearRxBuffer
 714              		.section	.text.RX_SetRxAddressMode,"ax",%progbits
 715              		.align	2
 716              		.global	RX_SetRxAddressMode
 717              		.code	16
 718              		.thumb_func
 719              		.type	RX_SetRxAddressMode, %function
 720              	RX_SetRxAddressMode:
 721              	.LFB14:
 782:Generated_Source\PSoC4/RX.c **** 
 783:Generated_Source\PSoC4/RX.c **** 
 784:Generated_Source\PSoC4/RX.c ****     /*******************************************************************************
 785:Generated_Source\PSoC4/RX.c ****     * Function Name: RX_SetRxAddressMode
 786:Generated_Source\PSoC4/RX.c ****     ********************************************************************************
 787:Generated_Source\PSoC4/RX.c ****     *
 788:Generated_Source\PSoC4/RX.c ****     * Summary:
 789:Generated_Source\PSoC4/RX.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:Generated_Source\PSoC4/RX.c ****     *  UART.
 791:Generated_Source\PSoC4/RX.c ****     *
 792:Generated_Source\PSoC4/RX.c ****     * Parameters:
 793:Generated_Source\PSoC4/RX.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:Generated_Source\PSoC4/RX.c ****     *  RX__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:Generated_Source\PSoC4/RX.c ****     *                                               detection
 796:Generated_Source\PSoC4/RX.c ****     *  RX__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:Generated_Source\PSoC4/RX.c ****     *                                               address detection
 798:Generated_Source\PSoC4/RX.c ****     *  RX__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:Generated_Source\PSoC4/RX.c ****     *                                               detection
 800:Generated_Source\PSoC4/RX.c ****     *  RX__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:Generated_Source\PSoC4/RX.c ****     *                                               address detection
 802:Generated_Source\PSoC4/RX.c ****     *  RX__B_UART__AM_NONE - No address detection
 803:Generated_Source\PSoC4/RX.c ****     *
 804:Generated_Source\PSoC4/RX.c ****     * Return:
 805:Generated_Source\PSoC4/RX.c ****     *  None.
 806:Generated_Source\PSoC4/RX.c ****     *
 807:Generated_Source\PSoC4/RX.c ****     * Global Variables:
 808:Generated_Source\PSoC4/RX.c ****     *  RX_rxAddressMode - the parameter stored in this variable for
 809:Generated_Source\PSoC4/RX.c ****     *   the farther usage in RX ISR.
 810:Generated_Source\PSoC4/RX.c ****     *  RX_rxAddressDetected - set to initial state (0).
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 28


 811:Generated_Source\PSoC4/RX.c ****     *
 812:Generated_Source\PSoC4/RX.c ****     *******************************************************************************/
 813:Generated_Source\PSoC4/RX.c ****     void RX_SetRxAddressMode(uint8 addressMode)
 814:Generated_Source\PSoC4/RX.c ****                                                         
 815:Generated_Source\PSoC4/RX.c ****     {
 722              		.loc 1 815 0
 723              		.cfi_startproc
 724              	.LVL70:
 816:Generated_Source\PSoC4/RX.c ****         #if(RX_RXHW_ADDRESS_ENABLED)
 817:Generated_Source\PSoC4/RX.c ****             #if(RX_CONTROL_REG_REMOVED)
 818:Generated_Source\PSoC4/RX.c ****                 if(0u != addressMode)
 819:Generated_Source\PSoC4/RX.c ****                 {
 820:Generated_Source\PSoC4/RX.c ****                     /* Suppress compiler warning */
 821:Generated_Source\PSoC4/RX.c ****                 }
 822:Generated_Source\PSoC4/RX.c ****             #else /* RX_CONTROL_REG_REMOVED */
 823:Generated_Source\PSoC4/RX.c ****                 uint8 tmpCtrl;
 824:Generated_Source\PSoC4/RX.c ****                 tmpCtrl = RX_CONTROL_REG & (uint8)~RX_CTRL_RXADDR_MODE_MASK;
 825:Generated_Source\PSoC4/RX.c ****                 tmpCtrl |= (uint8)(addressMode << RX_CTRL_RXADDR_MODE0_SHIFT);
 826:Generated_Source\PSoC4/RX.c ****                 RX_CONTROL_REG = tmpCtrl;
 827:Generated_Source\PSoC4/RX.c **** 
 828:Generated_Source\PSoC4/RX.c ****                 #if(RX_RX_INTERRUPT_ENABLED && \
 829:Generated_Source\PSoC4/RX.c ****                    (RX_RXBUFFERSIZE > RX_FIFO_LENGTH) )
 830:Generated_Source\PSoC4/RX.c ****                     RX_rxAddressMode = addressMode;
 831:Generated_Source\PSoC4/RX.c ****                     RX_rxAddressDetected = 0u;
 832:Generated_Source\PSoC4/RX.c ****                 #endif /* End RX_RXBUFFERSIZE > RX_FIFO_LENGTH*/
 833:Generated_Source\PSoC4/RX.c ****             #endif /* End RX_CONTROL_REG_REMOVED */
 834:Generated_Source\PSoC4/RX.c ****         #else /* RX_RXHW_ADDRESS_ENABLED */
 835:Generated_Source\PSoC4/RX.c ****             if(0u != addressMode)
 836:Generated_Source\PSoC4/RX.c ****             {
 837:Generated_Source\PSoC4/RX.c ****                 /* Suppress compiler warning */
 838:Generated_Source\PSoC4/RX.c ****             }
 839:Generated_Source\PSoC4/RX.c ****         #endif /* End RX_RXHW_ADDRESS_ENABLED */
 840:Generated_Source\PSoC4/RX.c ****     }
 725              		.loc 1 840 0
 726              		@ sp needed
 727 0000 7047     		bx	lr
 728              		.cfi_endproc
 729              	.LFE14:
 730              		.size	RX_SetRxAddressMode, .-RX_SetRxAddressMode
 731 0002 C046     		.section	.text.RX_SetRxAddress1,"ax",%progbits
 732              		.align	2
 733              		.global	RX_SetRxAddress1
 734              		.code	16
 735              		.thumb_func
 736              		.type	RX_SetRxAddress1, %function
 737              	RX_SetRxAddress1:
 738              	.LFB15:
 841:Generated_Source\PSoC4/RX.c **** 
 842:Generated_Source\PSoC4/RX.c **** 
 843:Generated_Source\PSoC4/RX.c ****     /*******************************************************************************
 844:Generated_Source\PSoC4/RX.c ****     * Function Name: RX_SetRxAddress1
 845:Generated_Source\PSoC4/RX.c ****     ********************************************************************************
 846:Generated_Source\PSoC4/RX.c ****     *
 847:Generated_Source\PSoC4/RX.c ****     * Summary:
 848:Generated_Source\PSoC4/RX.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:Generated_Source\PSoC4/RX.c ****     *
 850:Generated_Source\PSoC4/RX.c ****     * Parameters:
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 29


 851:Generated_Source\PSoC4/RX.c ****     *  address: Address #1 for hardware address detection.
 852:Generated_Source\PSoC4/RX.c ****     *
 853:Generated_Source\PSoC4/RX.c ****     * Return:
 854:Generated_Source\PSoC4/RX.c ****     *  None.
 855:Generated_Source\PSoC4/RX.c ****     *
 856:Generated_Source\PSoC4/RX.c ****     *******************************************************************************/
 857:Generated_Source\PSoC4/RX.c ****     void RX_SetRxAddress1(uint8 address) 
 858:Generated_Source\PSoC4/RX.c ****     {
 739              		.loc 1 858 0
 740              		.cfi_startproc
 741              	.LVL71:
 859:Generated_Source\PSoC4/RX.c ****         RX_RXADDRESS1_REG = address;
 742              		.loc 1 859 0
 743 0000 014B     		ldr	r3, .L56
 744 0002 1870     		strb	r0, [r3]
 860:Generated_Source\PSoC4/RX.c ****     }
 745              		.loc 1 860 0
 746              		@ sp needed
 747 0004 7047     		bx	lr
 748              	.L57:
 749 0006 C046     		.align	2
 750              	.L56:
 751 0008 22000F40 		.word	1074724898
 752              		.cfi_endproc
 753              	.LFE15:
 754              		.size	RX_SetRxAddress1, .-RX_SetRxAddress1
 755              		.section	.text.RX_SetRxAddress2,"ax",%progbits
 756              		.align	2
 757              		.global	RX_SetRxAddress2
 758              		.code	16
 759              		.thumb_func
 760              		.type	RX_SetRxAddress2, %function
 761              	RX_SetRxAddress2:
 762              	.LFB16:
 861:Generated_Source\PSoC4/RX.c **** 
 862:Generated_Source\PSoC4/RX.c **** 
 863:Generated_Source\PSoC4/RX.c ****     /*******************************************************************************
 864:Generated_Source\PSoC4/RX.c ****     * Function Name: RX_SetRxAddress2
 865:Generated_Source\PSoC4/RX.c ****     ********************************************************************************
 866:Generated_Source\PSoC4/RX.c ****     *
 867:Generated_Source\PSoC4/RX.c ****     * Summary:
 868:Generated_Source\PSoC4/RX.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:Generated_Source\PSoC4/RX.c ****     *
 870:Generated_Source\PSoC4/RX.c ****     * Parameters:
 871:Generated_Source\PSoC4/RX.c ****     *  address: Address #2 for hardware address detection.
 872:Generated_Source\PSoC4/RX.c ****     *
 873:Generated_Source\PSoC4/RX.c ****     * Return:
 874:Generated_Source\PSoC4/RX.c ****     *  None.
 875:Generated_Source\PSoC4/RX.c ****     *
 876:Generated_Source\PSoC4/RX.c ****     *******************************************************************************/
 877:Generated_Source\PSoC4/RX.c ****     void RX_SetRxAddress2(uint8 address) 
 878:Generated_Source\PSoC4/RX.c ****     {
 763              		.loc 1 878 0
 764              		.cfi_startproc
 765              	.LVL72:
 879:Generated_Source\PSoC4/RX.c ****         RX_RXADDRESS2_REG = address;
 766              		.loc 1 879 0
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 30


 767 0000 014B     		ldr	r3, .L59
 768 0002 1870     		strb	r0, [r3]
 880:Generated_Source\PSoC4/RX.c ****     }
 769              		.loc 1 880 0
 770              		@ sp needed
 771 0004 7047     		bx	lr
 772              	.L60:
 773 0006 C046     		.align	2
 774              	.L59:
 775 0008 32000F40 		.word	1074724914
 776              		.cfi_endproc
 777              	.LFE16:
 778              		.size	RX_SetRxAddress2, .-RX_SetRxAddress2
 779              		.global	RX_rxBufferOverflow
 780              		.global	RX_rxBufferLoopDetect
 781              		.global	RX_rxBufferWrite
 782              		.global	RX_rxBufferRead
 783              		.comm	RX_rxBuffer,16,4
 784              		.global	RX_errorStatus
 785              		.global	RX_initVar
 786              		.bss
 787              		.set	.LANCHOR0,. + 0
 788              		.type	RX_errorStatus, %object
 789              		.size	RX_errorStatus, 1
 790              	RX_errorStatus:
 791 0000 00       		.space	1
 792              		.type	RX_initVar, %object
 793              		.size	RX_initVar, 1
 794              	RX_initVar:
 795 0001 00       		.space	1
 796              		.type	RX_rxBufferRead, %object
 797              		.size	RX_rxBufferRead, 1
 798              	RX_rxBufferRead:
 799 0002 00       		.space	1
 800              		.type	RX_rxBufferWrite, %object
 801              		.size	RX_rxBufferWrite, 1
 802              	RX_rxBufferWrite:
 803 0003 00       		.space	1
 804              		.type	RX_rxBufferLoopDetect, %object
 805              		.size	RX_rxBufferLoopDetect, 1
 806              	RX_rxBufferLoopDetect:
 807 0004 00       		.space	1
 808              		.type	RX_rxBufferOverflow, %object
 809              		.size	RX_rxBufferOverflow, 1
 810              	RX_rxBufferOverflow:
 811 0005 00       		.space	1
 812              		.text
 813              	.Letext0:
 814              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 815              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 816              		.file 4 "Generated_Source\\PSoC4\\RX_IntClock.h"
 817              		.section	.debug_info,"",%progbits
 818              	.Ldebug_info0:
 819 0000 E2050000 		.4byte	0x5e2
 820 0004 0400     		.2byte	0x4
 821 0006 00000000 		.4byte	.Ldebug_abbrev0
 822 000a 04       		.byte	0x4
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 31


 823 000b 01       		.uleb128 0x1
 824 000c 54020000 		.4byte	.LASF56
 825 0010 01       		.byte	0x1
 826 0011 39030000 		.4byte	.LASF57
 827 0015 C8010000 		.4byte	.LASF58
 828 0019 00000000 		.4byte	.Ldebug_ranges0+0
 829 001d 00000000 		.4byte	0
 830 0021 00000000 		.4byte	.Ldebug_line0
 831 0025 02       		.uleb128 0x2
 832 0026 01       		.byte	0x1
 833 0027 06       		.byte	0x6
 834 0028 80000000 		.4byte	.LASF0
 835 002c 02       		.uleb128 0x2
 836 002d 01       		.byte	0x1
 837 002e 08       		.byte	0x8
 838 002f FE020000 		.4byte	.LASF1
 839 0033 02       		.uleb128 0x2
 840 0034 02       		.byte	0x2
 841 0035 05       		.byte	0x5
 842 0036 0C030000 		.4byte	.LASF2
 843 003a 02       		.uleb128 0x2
 844 003b 02       		.byte	0x2
 845 003c 07       		.byte	0x7
 846 003d 76010000 		.4byte	.LASF3
 847 0041 02       		.uleb128 0x2
 848 0042 04       		.byte	0x4
 849 0043 05       		.byte	0x5
 850 0044 9F000000 		.4byte	.LASF4
 851 0048 02       		.uleb128 0x2
 852 0049 04       		.byte	0x4
 853 004a 07       		.byte	0x7
 854 004b 14010000 		.4byte	.LASF5
 855 004f 02       		.uleb128 0x2
 856 0050 08       		.byte	0x8
 857 0051 05       		.byte	0x5
 858 0052 72000000 		.4byte	.LASF6
 859 0056 02       		.uleb128 0x2
 860 0057 08       		.byte	0x8
 861 0058 07       		.byte	0x7
 862 0059 45000000 		.4byte	.LASF7
 863 005d 03       		.uleb128 0x3
 864 005e 04       		.byte	0x4
 865 005f 05       		.byte	0x5
 866 0060 696E7400 		.ascii	"int\000"
 867 0064 02       		.uleb128 0x2
 868 0065 04       		.byte	0x4
 869 0066 07       		.byte	0x7
 870 0067 F8000000 		.4byte	.LASF8
 871 006b 04       		.uleb128 0x4
 872 006c B5000000 		.4byte	.LASF9
 873 0070 02       		.byte	0x2
 874 0071 9801     		.2byte	0x198
 875 0073 2C000000 		.4byte	0x2c
 876 0077 04       		.uleb128 0x4
 877 0078 00000000 		.4byte	.LASF10
 878 007c 02       		.byte	0x2
 879 007d 9901     		.2byte	0x199
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 32


 880 007f 3A000000 		.4byte	0x3a
 881 0083 04       		.uleb128 0x4
 882 0084 D9000000 		.4byte	.LASF11
 883 0088 02       		.byte	0x2
 884 0089 9A01     		.2byte	0x19a
 885 008b 48000000 		.4byte	0x48
 886 008f 02       		.uleb128 0x2
 887 0090 04       		.byte	0x4
 888 0091 04       		.byte	0x4
 889 0092 F3020000 		.4byte	.LASF12
 890 0096 02       		.uleb128 0x2
 891 0097 08       		.byte	0x8
 892 0098 04       		.byte	0x4
 893 0099 C6000000 		.4byte	.LASF13
 894 009d 02       		.uleb128 0x2
 895 009e 01       		.byte	0x1
 896 009f 08       		.byte	0x8
 897 00a0 55030000 		.4byte	.LASF14
 898 00a4 04       		.uleb128 0x4
 899 00a5 F9020000 		.4byte	.LASF15
 900 00a9 02       		.byte	0x2
 901 00aa 4202     		.2byte	0x242
 902 00ac B0000000 		.4byte	0xb0
 903 00b0 05       		.uleb128 0x5
 904 00b1 6B000000 		.4byte	0x6b
 905 00b5 04       		.uleb128 0x4
 906 00b6 5A030000 		.4byte	.LASF16
 907 00ba 02       		.byte	0x2
 908 00bb 5402     		.2byte	0x254
 909 00bd C1000000 		.4byte	0xc1
 910 00c1 06       		.uleb128 0x6
 911 00c2 04       		.byte	0x4
 912 00c3 C7000000 		.4byte	0xc7
 913 00c7 07       		.uleb128 0x7
 914 00c8 02       		.uleb128 0x2
 915 00c9 04       		.byte	0x4
 916 00ca 07       		.byte	0x7
 917 00cb EA010000 		.4byte	.LASF17
 918 00cf 08       		.uleb128 0x8
 919 00d0 32020000 		.4byte	.LASF18
 920 00d4 01       		.byte	0x1
 921 00d5 6A       		.byte	0x6a
 922 00d6 00000000 		.4byte	.LFB2
 923 00da 38000000 		.4byte	.LFE2-.LFB2
 924 00de 01       		.uleb128 0x1
 925 00df 9C       		.byte	0x9c
 926 00e0 0C010000 		.4byte	0x10c
 927 00e4 09       		.uleb128 0x9
 928 00e5 0A000000 		.4byte	.LVL0
 929 00e9 63050000 		.4byte	0x563
 930 00ed F7000000 		.4byte	0xf7
 931 00f1 0A       		.uleb128 0xa
 932 00f2 01       		.uleb128 0x1
 933 00f3 50       		.byte	0x50
 934 00f4 01       		.uleb128 0x1
 935 00f5 30       		.byte	0x30
 936 00f6 00       		.byte	0
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 33


 937 00f7 0B       		.uleb128 0xb
 938 00f8 12000000 		.4byte	.LVL1
 939 00fc 7D050000 		.4byte	0x57d
 940 0100 0A       		.uleb128 0xa
 941 0101 01       		.uleb128 0x1
 942 0102 51       		.byte	0x51
 943 0103 01       		.uleb128 0x1
 944 0104 33       		.byte	0x33
 945 0105 0A       		.uleb128 0xa
 946 0106 01       		.uleb128 0x1
 947 0107 50       		.byte	0x50
 948 0108 01       		.uleb128 0x1
 949 0109 30       		.byte	0x30
 950 010a 00       		.byte	0
 951 010b 00       		.byte	0
 952 010c 08       		.uleb128 0x8
 953 010d 67030000 		.4byte	.LASF19
 954 0111 01       		.byte	0x1
 955 0112 B7       		.byte	0xb7
 956 0113 00000000 		.4byte	.LFB3
 957 0117 38000000 		.4byte	.LFE3-.LFB3
 958 011b 01       		.uleb128 0x1
 959 011c 9C       		.byte	0x9c
 960 011d 71010000 		.4byte	0x171
 961 0121 0C       		.uleb128 0xc
 962 0122 99030000 		.4byte	.LASF22
 963 0126 01       		.byte	0x1
 964 0127 B9       		.byte	0xb9
 965 0128 6B000000 		.4byte	0x6b
 966 012c 00000000 		.4byte	.LLST0
 967 0130 0D       		.uleb128 0xd
 968 0131 06000000 		.4byte	.LVL2
 969 0135 93050000 		.4byte	0x593
 970 0139 09       		.uleb128 0x9
 971 013a 22000000 		.4byte	.LVL4
 972 013e 9E050000 		.4byte	0x59e
 973 0142 4C010000 		.4byte	0x14c
 974 0146 0A       		.uleb128 0xa
 975 0147 01       		.uleb128 0x1
 976 0148 50       		.byte	0x50
 977 0149 01       		.uleb128 0x1
 978 014a 30       		.byte	0x30
 979 014b 00       		.byte	0
 980 014c 09       		.uleb128 0x9
 981 014d 28000000 		.4byte	.LVL5
 982 0151 AF050000 		.4byte	0x5af
 983 0155 60010000 		.4byte	0x160
 984 0159 0A       		.uleb128 0xa
 985 015a 01       		.uleb128 0x1
 986 015b 50       		.byte	0x50
 987 015c 02       		.uleb128 0x2
 988 015d 08       		.byte	0x8
 989 015e FF       		.byte	0xff
 990 015f 00       		.byte	0
 991 0160 0B       		.uleb128 0xb
 992 0161 2E000000 		.4byte	.LVL6
 993 0165 C0050000 		.4byte	0x5c0
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 34


 994 0169 0A       		.uleb128 0xa
 995 016a 01       		.uleb128 0x1
 996 016b 50       		.byte	0x50
 997 016c 02       		.uleb128 0x2
 998 016d 74       		.byte	0x74
 999 016e 00       		.sleb128 0
 1000 016f 00       		.byte	0
 1001 0170 00       		.byte	0
 1002 0171 08       		.uleb128 0x8
 1003 0172 07020000 		.4byte	.LASF20
 1004 0176 01       		.byte	0x1
 1005 0177 4C       		.byte	0x4c
 1006 0178 00000000 		.4byte	.LFB1
 1007 017c 20000000 		.4byte	.LFE1-.LFB1
 1008 0180 01       		.uleb128 0x1
 1009 0181 9C       		.byte	0x9c
 1010 0182 99010000 		.4byte	0x199
 1011 0186 0D       		.uleb128 0xd
 1012 0187 0E000000 		.4byte	.LVL8
 1013 018b CF000000 		.4byte	0xcf
 1014 018f 0D       		.uleb128 0xd
 1015 0190 18000000 		.4byte	.LVL9
 1016 0194 0C010000 		.4byte	0x10c
 1017 0198 00       		.byte	0
 1018 0199 08       		.uleb128 0x8
 1019 019a 8C000000 		.4byte	.LASF21
 1020 019e 01       		.byte	0x1
 1021 019f F0       		.byte	0xf0
 1022 01a0 00000000 		.4byte	.LFB4
 1023 01a4 38000000 		.4byte	.LFE4-.LFB4
 1024 01a8 01       		.uleb128 0x1
 1025 01a9 9C       		.byte	0x9c
 1026 01aa F3010000 		.4byte	0x1f3
 1027 01ae 0C       		.uleb128 0xc
 1028 01af 99030000 		.4byte	.LASF22
 1029 01b3 01       		.byte	0x1
 1030 01b4 F2       		.byte	0xf2
 1031 01b5 6B000000 		.4byte	0x6b
 1032 01b9 13000000 		.4byte	.LLST1
 1033 01bd 0D       		.uleb128 0xd
 1034 01be 06000000 		.4byte	.LVL10
 1035 01c2 93050000 		.4byte	0x593
 1036 01c6 0D       		.uleb128 0xd
 1037 01c7 16000000 		.4byte	.LVL12
 1038 01cb D1050000 		.4byte	0x5d1
 1039 01cf 09       		.uleb128 0x9
 1040 01d0 26000000 		.4byte	.LVL13
 1041 01d4 D8050000 		.4byte	0x5d8
 1042 01d8 E2010000 		.4byte	0x1e2
 1043 01dc 0A       		.uleb128 0xa
 1044 01dd 01       		.uleb128 0x1
 1045 01de 50       		.byte	0x50
 1046 01df 01       		.uleb128 0x1
 1047 01e0 30       		.byte	0x30
 1048 01e1 00       		.byte	0
 1049 01e2 0B       		.uleb128 0xb
 1050 01e3 2C000000 		.4byte	.LVL14
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 35


 1051 01e7 C0050000 		.4byte	0x5c0
 1052 01eb 0A       		.uleb128 0xa
 1053 01ec 01       		.uleb128 0x1
 1054 01ed 50       		.byte	0x50
 1055 01ee 02       		.uleb128 0x2
 1056 01ef 74       		.byte	0x74
 1057 01f0 00       		.sleb128 0
 1058 01f1 00       		.byte	0
 1059 01f2 00       		.byte	0
 1060 01f3 0E       		.uleb128 0xe
 1061 01f4 26010000 		.4byte	.LASF59
 1062 01f8 01       		.byte	0x1
 1063 01f9 2701     		.2byte	0x127
 1064 01fb 6B000000 		.4byte	0x6b
 1065 01ff 00000000 		.4byte	.LFB5
 1066 0203 04000000 		.4byte	.LFE5-.LFB5
 1067 0207 01       		.uleb128 0x1
 1068 0208 9C       		.byte	0x9c
 1069 0209 0F       		.uleb128 0xf
 1070 020a 71030000 		.4byte	.LASF23
 1071 020e 01       		.byte	0x1
 1072 020f 3F01     		.2byte	0x13f
 1073 0211 00000000 		.4byte	.LFB6
 1074 0215 02000000 		.4byte	.LFE6-.LFB6
 1075 0219 01       		.uleb128 0x1
 1076 021a 9C       		.byte	0x9c
 1077 021b 2E020000 		.4byte	0x22e
 1078 021f 10       		.uleb128 0x10
 1079 0220 E0000000 		.4byte	.LASF25
 1080 0224 01       		.byte	0x1
 1081 0225 3F01     		.2byte	0x13f
 1082 0227 6B000000 		.4byte	0x6b
 1083 022b 01       		.uleb128 0x1
 1084 022c 50       		.byte	0x50
 1085 022d 00       		.byte	0
 1086 022e 0F       		.uleb128 0xf
 1087 022f B2010000 		.4byte	.LASF24
 1088 0233 01       		.byte	0x1
 1089 0234 6701     		.2byte	0x167
 1090 0236 00000000 		.4byte	.LFB7
 1091 023a 0C000000 		.4byte	.LFE7-.LFB7
 1092 023e 01       		.uleb128 0x1
 1093 023f 9C       		.byte	0x9c
 1094 0240 53020000 		.4byte	0x253
 1095 0244 10       		.uleb128 0x10
 1096 0245 AB010000 		.4byte	.LASF26
 1097 0249 01       		.byte	0x1
 1098 024a 6701     		.2byte	0x167
 1099 024c 6B000000 		.4byte	0x6b
 1100 0250 01       		.uleb128 0x1
 1101 0251 50       		.byte	0x50
 1102 0252 00       		.byte	0
 1103 0253 11       		.uleb128 0x11
 1104 0254 10020000 		.4byte	.LASF30
 1105 0258 01       		.byte	0x1
 1106 0259 8801     		.2byte	0x188
 1107 025b 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 36


 1108 025f 00000000 		.4byte	.LFB8
 1109 0263 5C000000 		.4byte	.LFE8-.LFB8
 1110 0267 01       		.uleb128 0x1
 1111 0268 9C       		.byte	0x9c
 1112 0269 C0020000 		.4byte	0x2c0
 1113 026d 12       		.uleb128 0x12
 1114 026e 32030000 		.4byte	.LASF27
 1115 0272 01       		.byte	0x1
 1116 0273 8A01     		.2byte	0x18a
 1117 0275 6B000000 		.4byte	0x6b
 1118 0279 26000000 		.4byte	.LLST2
 1119 027d 12       		.uleb128 0x12
 1120 027e 89030000 		.4byte	.LASF28
 1121 0282 01       		.byte	0x1
 1122 0283 8E01     		.2byte	0x18e
 1123 0285 6B000000 		.4byte	0x6b
 1124 0289 44000000 		.4byte	.LLST3
 1125 028d 12       		.uleb128 0x12
 1126 028e 3A020000 		.4byte	.LASF29
 1127 0292 01       		.byte	0x1
 1128 0293 8F01     		.2byte	0x18f
 1129 0295 6B000000 		.4byte	0x6b
 1130 0299 89000000 		.4byte	.LLST4
 1131 029d 09       		.uleb128 0x9
 1132 029e 08000000 		.4byte	.LVL18
 1133 02a2 D8050000 		.4byte	0x5d8
 1134 02a6 B0020000 		.4byte	0x2b0
 1135 02aa 0A       		.uleb128 0xa
 1136 02ab 01       		.uleb128 0x1
 1137 02ac 50       		.byte	0x50
 1138 02ad 01       		.uleb128 0x1
 1139 02ae 30       		.byte	0x30
 1140 02af 00       		.byte	0
 1141 02b0 0B       		.uleb128 0xb
 1142 02b1 4A000000 		.4byte	.LVL30
 1143 02b5 9E050000 		.4byte	0x59e
 1144 02b9 0A       		.uleb128 0xa
 1145 02ba 01       		.uleb128 0x1
 1146 02bb 50       		.byte	0x50
 1147 02bc 01       		.uleb128 0x1
 1148 02bd 30       		.byte	0x30
 1149 02be 00       		.byte	0
 1150 02bf 00       		.byte	0
 1151 02c0 11       		.uleb128 0x11
 1152 02c1 E8000000 		.4byte	.LASF31
 1153 02c5 01       		.byte	0x1
 1154 02c6 E501     		.2byte	0x1e5
 1155 02c8 6B000000 		.4byte	0x6b
 1156 02cc 00000000 		.4byte	.LFB9
 1157 02d0 24000000 		.4byte	.LFE9-.LFB9
 1158 02d4 01       		.uleb128 0x1
 1159 02d5 9C       		.byte	0x9c
 1160 02d6 E9020000 		.4byte	0x2e9
 1161 02da 13       		.uleb128 0x13
 1162 02db AA030000 		.4byte	.LASF32
 1163 02df 01       		.byte	0x1
 1164 02e0 E701     		.2byte	0x1e7
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 37


 1165 02e2 6B000000 		.4byte	0x6b
 1166 02e6 01       		.uleb128 0x1
 1167 02e7 50       		.byte	0x50
 1168 02e8 00       		.byte	0
 1169 02e9 11       		.uleb128 0x11
 1170 02ea 94000000 		.4byte	.LASF33
 1171 02ee 01       		.byte	0x1
 1172 02ef 1402     		.2byte	0x214
 1173 02f1 6B000000 		.4byte	0x6b
 1174 02f5 00000000 		.4byte	.LFB10
 1175 02f9 78000000 		.4byte	.LFE10-.LFB10
 1176 02fd 01       		.uleb128 0x1
 1177 02fe 9C       		.byte	0x9c
 1178 02ff 66030000 		.4byte	0x366
 1179 0303 12       		.uleb128 0x12
 1180 0304 32030000 		.4byte	.LASF27
 1181 0308 01       		.byte	0x1
 1182 0309 1602     		.2byte	0x216
 1183 030b 6B000000 		.4byte	0x6b
 1184 030f 9C000000 		.4byte	.LLST5
 1185 0313 12       		.uleb128 0x12
 1186 0314 4B020000 		.4byte	.LASF34
 1187 0318 01       		.byte	0x1
 1188 0319 1702     		.2byte	0x217
 1189 031b 6B000000 		.4byte	0x6b
 1190 031f E9000000 		.4byte	.LLST6
 1191 0323 12       		.uleb128 0x12
 1192 0324 89030000 		.4byte	.LASF28
 1193 0328 01       		.byte	0x1
 1194 0329 1A02     		.2byte	0x21a
 1195 032b 6B000000 		.4byte	0x6b
 1196 032f FC000000 		.4byte	.LLST7
 1197 0333 12       		.uleb128 0x12
 1198 0334 3A020000 		.4byte	.LASF29
 1199 0338 01       		.byte	0x1
 1200 0339 1B02     		.2byte	0x21b
 1201 033b 6B000000 		.4byte	0x6b
 1202 033f 41010000 		.4byte	.LLST8
 1203 0343 09       		.uleb128 0x9
 1204 0344 08000000 		.4byte	.LVL35
 1205 0348 D8050000 		.4byte	0x5d8
 1206 034c 56030000 		.4byte	0x356
 1207 0350 0A       		.uleb128 0xa
 1208 0351 01       		.uleb128 0x1
 1209 0352 50       		.byte	0x50
 1210 0353 01       		.uleb128 0x1
 1211 0354 30       		.byte	0x30
 1212 0355 00       		.byte	0
 1213 0356 0B       		.uleb128 0xb
 1214 0357 62000000 		.4byte	.LVL51
 1215 035b 9E050000 		.4byte	0x59e
 1216 035f 0A       		.uleb128 0xa
 1217 0360 01       		.uleb128 0x1
 1218 0361 50       		.byte	0x50
 1219 0362 01       		.uleb128 0x1
 1220 0363 30       		.byte	0x30
 1221 0364 00       		.byte	0
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 38


 1222 0365 00       		.byte	0
 1223 0366 11       		.uleb128 0x11
 1224 0367 27030000 		.4byte	.LASF35
 1225 036b 01       		.byte	0x1
 1226 036c 7A02     		.2byte	0x27a
 1227 036e 77000000 		.4byte	0x77
 1228 0372 00000000 		.4byte	.LFB11
 1229 0376 28000000 		.4byte	.LFE11-.LFB11
 1230 037a 01       		.uleb128 0x1
 1231 037b 9C       		.byte	0x9c
 1232 037c C0030000 		.4byte	0x3c0
 1233 0380 12       		.uleb128 0x12
 1234 0381 05010000 		.4byte	.LASF36
 1235 0385 01       		.byte	0x1
 1236 0386 7E02     		.2byte	0x27e
 1237 0388 77000000 		.4byte	0x77
 1238 038c 54010000 		.4byte	.LLST9
 1239 0390 09       		.uleb128 0x9
 1240 0391 08000000 		.4byte	.LVL53
 1241 0395 D8050000 		.4byte	0x5d8
 1242 0399 A3030000 		.4byte	0x3a3
 1243 039d 0A       		.uleb128 0xa
 1244 039e 01       		.uleb128 0x1
 1245 039f 50       		.byte	0x50
 1246 03a0 01       		.uleb128 0x1
 1247 03a1 30       		.byte	0x30
 1248 03a2 00       		.byte	0
 1249 03a3 09       		.uleb128 0x9
 1250 03a4 16000000 		.4byte	.LVL55
 1251 03a8 9E050000 		.4byte	0x59e
 1252 03ac B6030000 		.4byte	0x3b6
 1253 03b0 0A       		.uleb128 0xa
 1254 03b1 01       		.uleb128 0x1
 1255 03b2 50       		.byte	0x50
 1256 03b3 01       		.uleb128 0x1
 1257 03b4 30       		.byte	0x30
 1258 03b5 00       		.byte	0
 1259 03b6 0D       		.uleb128 0xd
 1260 03b7 1C000000 		.4byte	.LVL57
 1261 03bb 53020000 		.4byte	0x253
 1262 03bf 00       		.byte	0
 1263 03c0 11       		.uleb128 0x11
 1264 03c1 89010000 		.4byte	.LASF37
 1265 03c5 01       		.byte	0x1
 1266 03c6 AB02     		.2byte	0x2ab
 1267 03c8 6B000000 		.4byte	0x6b
 1268 03cc 00000000 		.4byte	.LFB12
 1269 03d0 58000000 		.4byte	.LFE12-.LFB12
 1270 03d4 01       		.uleb128 0x1
 1271 03d5 9C       		.byte	0x9c
 1272 03d6 0D040000 		.4byte	0x40d
 1273 03da 12       		.uleb128 0x12
 1274 03db 71010000 		.4byte	.LASF38
 1275 03df 01       		.byte	0x1
 1276 03e0 AE02     		.2byte	0x2ae
 1277 03e2 6B000000 		.4byte	0x6b
 1278 03e6 67010000 		.4byte	.LLST10
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 39


 1279 03ea 09       		.uleb128 0x9
 1280 03eb 08000000 		.4byte	.LVL58
 1281 03ef D8050000 		.4byte	0x5d8
 1282 03f3 FD030000 		.4byte	0x3fd
 1283 03f7 0A       		.uleb128 0xa
 1284 03f8 01       		.uleb128 0x1
 1285 03f9 50       		.byte	0x50
 1286 03fa 01       		.uleb128 0x1
 1287 03fb 30       		.byte	0x30
 1288 03fc 00       		.byte	0
 1289 03fd 0B       		.uleb128 0xb
 1290 03fe 4E000000 		.4byte	.LVL64
 1291 0402 9E050000 		.4byte	0x59e
 1292 0406 0A       		.uleb128 0xa
 1293 0407 01       		.uleb128 0x1
 1294 0408 50       		.byte	0x50
 1295 0409 01       		.uleb128 0x1
 1296 040a 30       		.byte	0x30
 1297 040b 00       		.byte	0
 1298 040c 00       		.byte	0
 1299 040d 0F       		.uleb128 0xf
 1300 040e 3D010000 		.4byte	.LASF39
 1301 0412 01       		.byte	0x1
 1302 0413 F502     		.2byte	0x2f5
 1303 0415 00000000 		.4byte	.LFB13
 1304 0419 40000000 		.4byte	.LFE13-.LFB13
 1305 041d 01       		.uleb128 0x1
 1306 041e 9C       		.byte	0x9c
 1307 041f 68040000 		.4byte	0x468
 1308 0423 12       		.uleb128 0x12
 1309 0424 99030000 		.4byte	.LASF22
 1310 0428 01       		.byte	0x1
 1311 0429 F702     		.2byte	0x2f7
 1312 042b 6B000000 		.4byte	0x6b
 1313 042f 90010000 		.4byte	.LLST11
 1314 0433 0D       		.uleb128 0xd
 1315 0434 06000000 		.4byte	.LVL66
 1316 0438 93050000 		.4byte	0x593
 1317 043c 0D       		.uleb128 0xd
 1318 043d 1C000000 		.4byte	.LVL67
 1319 0441 C0050000 		.4byte	0x5c0
 1320 0445 09       		.uleb128 0x9
 1321 0446 22000000 		.4byte	.LVL68
 1322 044a D8050000 		.4byte	0x5d8
 1323 044e 58040000 		.4byte	0x458
 1324 0452 0A       		.uleb128 0xa
 1325 0453 01       		.uleb128 0x1
 1326 0454 50       		.byte	0x50
 1327 0455 01       		.uleb128 0x1
 1328 0456 30       		.byte	0x30
 1329 0457 00       		.byte	0
 1330 0458 0B       		.uleb128 0xb
 1331 0459 34000000 		.4byte	.LVL69
 1332 045d 9E050000 		.4byte	0x59e
 1333 0461 0A       		.uleb128 0xa
 1334 0462 01       		.uleb128 0x1
 1335 0463 50       		.byte	0x50
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 40


 1336 0464 01       		.uleb128 0x1
 1337 0465 30       		.byte	0x30
 1338 0466 00       		.byte	0
 1339 0467 00       		.byte	0
 1340 0468 0F       		.uleb128 0xf
 1341 0469 31000000 		.4byte	.LASF40
 1342 046d 01       		.byte	0x1
 1343 046e 2D03     		.2byte	0x32d
 1344 0470 00000000 		.4byte	.LFB14
 1345 0474 02000000 		.4byte	.LFE14-.LFB14
 1346 0478 01       		.uleb128 0x1
 1347 0479 9C       		.byte	0x9c
 1348 047a 8D040000 		.4byte	0x48d
 1349 047e 10       		.uleb128 0x10
 1350 047f CD000000 		.4byte	.LASF41
 1351 0483 01       		.byte	0x1
 1352 0484 2D03     		.2byte	0x32d
 1353 0486 6B000000 		.4byte	0x6b
 1354 048a 01       		.uleb128 0x1
 1355 048b 50       		.byte	0x50
 1356 048c 00       		.byte	0
 1357 048d 0F       		.uleb128 0xf
 1358 048e D0030000 		.4byte	.LASF42
 1359 0492 01       		.byte	0x1
 1360 0493 5903     		.2byte	0x359
 1361 0495 00000000 		.4byte	.LFB15
 1362 0499 0C000000 		.4byte	.LFE15-.LFB15
 1363 049d 01       		.uleb128 0x1
 1364 049e 9C       		.byte	0x9c
 1365 049f B2040000 		.4byte	0x4b2
 1366 04a3 10       		.uleb128 0x10
 1367 04a4 F3010000 		.4byte	.LASF43
 1368 04a8 01       		.byte	0x1
 1369 04a9 5903     		.2byte	0x359
 1370 04ab 6B000000 		.4byte	0x6b
 1371 04af 01       		.uleb128 0x1
 1372 04b0 50       		.byte	0x50
 1373 04b1 00       		.byte	0
 1374 04b2 0F       		.uleb128 0xf
 1375 04b3 E1030000 		.4byte	.LASF44
 1376 04b7 01       		.byte	0x1
 1377 04b8 6D03     		.2byte	0x36d
 1378 04ba 00000000 		.4byte	.LFB16
 1379 04be 0C000000 		.4byte	.LFE16-.LFB16
 1380 04c2 01       		.uleb128 0x1
 1381 04c3 9C       		.byte	0x9c
 1382 04c4 D7040000 		.4byte	0x4d7
 1383 04c8 10       		.uleb128 0x10
 1384 04c9 F3010000 		.4byte	.LASF43
 1385 04cd 01       		.byte	0x1
 1386 04ce 6D03     		.2byte	0x36d
 1387 04d0 6B000000 		.4byte	0x6b
 1388 04d4 01       		.uleb128 0x1
 1389 04d5 50       		.byte	0x50
 1390 04d6 00       		.byte	0
 1391 04d7 14       		.uleb128 0x14
 1392 04d8 BB000000 		.4byte	.LASF45
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 41


 1393 04dc 01       		.byte	0x1
 1394 04dd 1B       		.byte	0x1b
 1395 04de 6B000000 		.4byte	0x6b
 1396 04e2 05       		.uleb128 0x5
 1397 04e3 03       		.byte	0x3
 1398 04e4 00000000 		.4byte	RX_initVar
 1399 04e8 14       		.uleb128 0x14
 1400 04e9 C1030000 		.4byte	.LASF46
 1401 04ed 01       		.byte	0x1
 1402 04ee 24       		.byte	0x24
 1403 04ef 6B000000 		.4byte	0x6b
 1404 04f3 05       		.uleb128 0x5
 1405 04f4 03       		.byte	0x3
 1406 04f5 00000000 		.4byte	RX_errorStatus
 1407 04f9 15       		.uleb128 0x15
 1408 04fa 6B000000 		.4byte	0x6b
 1409 04fe 09050000 		.4byte	0x509
 1410 0502 16       		.uleb128 0x16
 1411 0503 C8000000 		.4byte	0xc8
 1412 0507 0F       		.byte	0xf
 1413 0508 00       		.byte	0
 1414 0509 14       		.uleb128 0x14
 1415 050a 65010000 		.4byte	.LASF47
 1416 050e 01       		.byte	0x1
 1417 050f 25       		.byte	0x25
 1418 0510 1A050000 		.4byte	0x51a
 1419 0514 05       		.uleb128 0x5
 1420 0515 03       		.byte	0x3
 1421 0516 00000000 		.4byte	RX_rxBuffer
 1422 051a 05       		.uleb128 0x5
 1423 051b F9040000 		.4byte	0x4f9
 1424 051f 14       		.uleb128 0x14
 1425 0520 B1030000 		.4byte	.LASF48
 1426 0524 01       		.byte	0x1
 1427 0525 26       		.byte	0x26
 1428 0526 B0000000 		.4byte	0xb0
 1429 052a 05       		.uleb128 0x5
 1430 052b 03       		.byte	0x3
 1431 052c 00000000 		.4byte	RX_rxBufferRead
 1432 0530 14       		.uleb128 0x14
 1433 0531 16030000 		.4byte	.LASF49
 1434 0535 01       		.byte	0x1
 1435 0536 27       		.byte	0x27
 1436 0537 B0000000 		.4byte	0xb0
 1437 053b 05       		.uleb128 0x5
 1438 053c 03       		.byte	0x3
 1439 053d 00000000 		.4byte	RX_rxBufferWrite
 1440 0541 14       		.uleb128 0x14
 1441 0542 5C000000 		.4byte	.LASF50
 1442 0546 01       		.byte	0x1
 1443 0547 28       		.byte	0x28
 1444 0548 B0000000 		.4byte	0xb0
 1445 054c 05       		.uleb128 0x5
 1446 054d 03       		.byte	0x3
 1447 054e 00000000 		.4byte	RX_rxBufferLoopDetect
 1448 0552 14       		.uleb128 0x14
 1449 0553 1E020000 		.4byte	.LASF51
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 42


 1450 0557 01       		.byte	0x1
 1451 0558 29       		.byte	0x29
 1452 0559 B0000000 		.4byte	0xb0
 1453 055d 05       		.uleb128 0x5
 1454 055e 03       		.byte	0x3
 1455 055f 00000000 		.4byte	RX_rxBufferOverflow
 1456 0563 17       		.uleb128 0x17
 1457 0564 9C010000 		.4byte	.LASF60
 1458 0568 03       		.byte	0x3
 1459 0569 BB       		.byte	0xbb
 1460 056a B5000000 		.4byte	0xb5
 1461 056e 7D050000 		.4byte	0x57d
 1462 0572 18       		.uleb128 0x18
 1463 0573 6B000000 		.4byte	0x6b
 1464 0577 18       		.uleb128 0x18
 1465 0578 B5000000 		.4byte	0xb5
 1466 057c 00       		.byte	0
 1467 057d 19       		.uleb128 0x19
 1468 057e E2020000 		.4byte	.LASF52
 1469 0582 03       		.byte	0x3
 1470 0583 BE       		.byte	0xbe
 1471 0584 93050000 		.4byte	0x593
 1472 0588 18       		.uleb128 0x18
 1473 0589 6B000000 		.4byte	0x6b
 1474 058d 18       		.uleb128 0x18
 1475 058e 6B000000 		.4byte	0x6b
 1476 0592 00       		.byte	0
 1477 0593 1A       		.uleb128 0x1a
 1478 0594 4E010000 		.4byte	.LASF61
 1479 0598 03       		.byte	0x3
 1480 0599 E3       		.byte	0xe3
 1481 059a 6B000000 		.4byte	0x6b
 1482 059e 19       		.uleb128 0x19
 1483 059f FB010000 		.4byte	.LASF53
 1484 05a3 03       		.byte	0x3
 1485 05a4 C1       		.byte	0xc1
 1486 05a5 AF050000 		.4byte	0x5af
 1487 05a9 18       		.uleb128 0x18
 1488 05aa 6B000000 		.4byte	0x6b
 1489 05ae 00       		.byte	0
 1490 05af 19       		.uleb128 0x19
 1491 05b0 1D000000 		.4byte	.LASF54
 1492 05b4 04       		.byte	0x4
 1493 05b5 1D       		.byte	0x1d
 1494 05b6 C0050000 		.4byte	0x5c0
 1495 05ba 18       		.uleb128 0x18
 1496 05bb 83000000 		.4byte	0x83
 1497 05bf 00       		.byte	0
 1498 05c0 19       		.uleb128 0x19
 1499 05c1 07000000 		.4byte	.LASF55
 1500 05c5 03       		.byte	0x3
 1501 05c6 E4       		.byte	0xe4
 1502 05c7 D1050000 		.4byte	0x5d1
 1503 05cb 18       		.uleb128 0x18
 1504 05cc 6B000000 		.4byte	0x6b
 1505 05d0 00       		.byte	0
 1506 05d1 1B       		.uleb128 0x1b
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 43


 1507 05d2 F2030000 		.4byte	.LASF62
 1508 05d6 04       		.byte	0x4
 1509 05d7 27       		.byte	0x27
 1510 05d8 1C       		.uleb128 0x1c
 1511 05d9 A8000000 		.4byte	.LASF63
 1512 05dd 03       		.byte	0x3
 1513 05de C3       		.byte	0xc3
 1514 05df 18       		.uleb128 0x18
 1515 05e0 6B000000 		.4byte	0x6b
 1516 05e4 00       		.byte	0
 1517 05e5 00       		.byte	0
 1518              		.section	.debug_abbrev,"",%progbits
 1519              	.Ldebug_abbrev0:
 1520 0000 01       		.uleb128 0x1
 1521 0001 11       		.uleb128 0x11
 1522 0002 01       		.byte	0x1
 1523 0003 25       		.uleb128 0x25
 1524 0004 0E       		.uleb128 0xe
 1525 0005 13       		.uleb128 0x13
 1526 0006 0B       		.uleb128 0xb
 1527 0007 03       		.uleb128 0x3
 1528 0008 0E       		.uleb128 0xe
 1529 0009 1B       		.uleb128 0x1b
 1530 000a 0E       		.uleb128 0xe
 1531 000b 55       		.uleb128 0x55
 1532 000c 17       		.uleb128 0x17
 1533 000d 11       		.uleb128 0x11
 1534 000e 01       		.uleb128 0x1
 1535 000f 10       		.uleb128 0x10
 1536 0010 17       		.uleb128 0x17
 1537 0011 00       		.byte	0
 1538 0012 00       		.byte	0
 1539 0013 02       		.uleb128 0x2
 1540 0014 24       		.uleb128 0x24
 1541 0015 00       		.byte	0
 1542 0016 0B       		.uleb128 0xb
 1543 0017 0B       		.uleb128 0xb
 1544 0018 3E       		.uleb128 0x3e
 1545 0019 0B       		.uleb128 0xb
 1546 001a 03       		.uleb128 0x3
 1547 001b 0E       		.uleb128 0xe
 1548 001c 00       		.byte	0
 1549 001d 00       		.byte	0
 1550 001e 03       		.uleb128 0x3
 1551 001f 24       		.uleb128 0x24
 1552 0020 00       		.byte	0
 1553 0021 0B       		.uleb128 0xb
 1554 0022 0B       		.uleb128 0xb
 1555 0023 3E       		.uleb128 0x3e
 1556 0024 0B       		.uleb128 0xb
 1557 0025 03       		.uleb128 0x3
 1558 0026 08       		.uleb128 0x8
 1559 0027 00       		.byte	0
 1560 0028 00       		.byte	0
 1561 0029 04       		.uleb128 0x4
 1562 002a 16       		.uleb128 0x16
 1563 002b 00       		.byte	0
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 44


 1564 002c 03       		.uleb128 0x3
 1565 002d 0E       		.uleb128 0xe
 1566 002e 3A       		.uleb128 0x3a
 1567 002f 0B       		.uleb128 0xb
 1568 0030 3B       		.uleb128 0x3b
 1569 0031 05       		.uleb128 0x5
 1570 0032 49       		.uleb128 0x49
 1571 0033 13       		.uleb128 0x13
 1572 0034 00       		.byte	0
 1573 0035 00       		.byte	0
 1574 0036 05       		.uleb128 0x5
 1575 0037 35       		.uleb128 0x35
 1576 0038 00       		.byte	0
 1577 0039 49       		.uleb128 0x49
 1578 003a 13       		.uleb128 0x13
 1579 003b 00       		.byte	0
 1580 003c 00       		.byte	0
 1581 003d 06       		.uleb128 0x6
 1582 003e 0F       		.uleb128 0xf
 1583 003f 00       		.byte	0
 1584 0040 0B       		.uleb128 0xb
 1585 0041 0B       		.uleb128 0xb
 1586 0042 49       		.uleb128 0x49
 1587 0043 13       		.uleb128 0x13
 1588 0044 00       		.byte	0
 1589 0045 00       		.byte	0
 1590 0046 07       		.uleb128 0x7
 1591 0047 15       		.uleb128 0x15
 1592 0048 00       		.byte	0
 1593 0049 27       		.uleb128 0x27
 1594 004a 19       		.uleb128 0x19
 1595 004b 00       		.byte	0
 1596 004c 00       		.byte	0
 1597 004d 08       		.uleb128 0x8
 1598 004e 2E       		.uleb128 0x2e
 1599 004f 01       		.byte	0x1
 1600 0050 3F       		.uleb128 0x3f
 1601 0051 19       		.uleb128 0x19
 1602 0052 03       		.uleb128 0x3
 1603 0053 0E       		.uleb128 0xe
 1604 0054 3A       		.uleb128 0x3a
 1605 0055 0B       		.uleb128 0xb
 1606 0056 3B       		.uleb128 0x3b
 1607 0057 0B       		.uleb128 0xb
 1608 0058 27       		.uleb128 0x27
 1609 0059 19       		.uleb128 0x19
 1610 005a 11       		.uleb128 0x11
 1611 005b 01       		.uleb128 0x1
 1612 005c 12       		.uleb128 0x12
 1613 005d 06       		.uleb128 0x6
 1614 005e 40       		.uleb128 0x40
 1615 005f 18       		.uleb128 0x18
 1616 0060 9742     		.uleb128 0x2117
 1617 0062 19       		.uleb128 0x19
 1618 0063 01       		.uleb128 0x1
 1619 0064 13       		.uleb128 0x13
 1620 0065 00       		.byte	0
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 45


 1621 0066 00       		.byte	0
 1622 0067 09       		.uleb128 0x9
 1623 0068 898201   		.uleb128 0x4109
 1624 006b 01       		.byte	0x1
 1625 006c 11       		.uleb128 0x11
 1626 006d 01       		.uleb128 0x1
 1627 006e 31       		.uleb128 0x31
 1628 006f 13       		.uleb128 0x13
 1629 0070 01       		.uleb128 0x1
 1630 0071 13       		.uleb128 0x13
 1631 0072 00       		.byte	0
 1632 0073 00       		.byte	0
 1633 0074 0A       		.uleb128 0xa
 1634 0075 8A8201   		.uleb128 0x410a
 1635 0078 00       		.byte	0
 1636 0079 02       		.uleb128 0x2
 1637 007a 18       		.uleb128 0x18
 1638 007b 9142     		.uleb128 0x2111
 1639 007d 18       		.uleb128 0x18
 1640 007e 00       		.byte	0
 1641 007f 00       		.byte	0
 1642 0080 0B       		.uleb128 0xb
 1643 0081 898201   		.uleb128 0x4109
 1644 0084 01       		.byte	0x1
 1645 0085 11       		.uleb128 0x11
 1646 0086 01       		.uleb128 0x1
 1647 0087 31       		.uleb128 0x31
 1648 0088 13       		.uleb128 0x13
 1649 0089 00       		.byte	0
 1650 008a 00       		.byte	0
 1651 008b 0C       		.uleb128 0xc
 1652 008c 34       		.uleb128 0x34
 1653 008d 00       		.byte	0
 1654 008e 03       		.uleb128 0x3
 1655 008f 0E       		.uleb128 0xe
 1656 0090 3A       		.uleb128 0x3a
 1657 0091 0B       		.uleb128 0xb
 1658 0092 3B       		.uleb128 0x3b
 1659 0093 0B       		.uleb128 0xb
 1660 0094 49       		.uleb128 0x49
 1661 0095 13       		.uleb128 0x13
 1662 0096 02       		.uleb128 0x2
 1663 0097 17       		.uleb128 0x17
 1664 0098 00       		.byte	0
 1665 0099 00       		.byte	0
 1666 009a 0D       		.uleb128 0xd
 1667 009b 898201   		.uleb128 0x4109
 1668 009e 00       		.byte	0
 1669 009f 11       		.uleb128 0x11
 1670 00a0 01       		.uleb128 0x1
 1671 00a1 31       		.uleb128 0x31
 1672 00a2 13       		.uleb128 0x13
 1673 00a3 00       		.byte	0
 1674 00a4 00       		.byte	0
 1675 00a5 0E       		.uleb128 0xe
 1676 00a6 2E       		.uleb128 0x2e
 1677 00a7 00       		.byte	0
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 46


 1678 00a8 3F       		.uleb128 0x3f
 1679 00a9 19       		.uleb128 0x19
 1680 00aa 03       		.uleb128 0x3
 1681 00ab 0E       		.uleb128 0xe
 1682 00ac 3A       		.uleb128 0x3a
 1683 00ad 0B       		.uleb128 0xb
 1684 00ae 3B       		.uleb128 0x3b
 1685 00af 05       		.uleb128 0x5
 1686 00b0 27       		.uleb128 0x27
 1687 00b1 19       		.uleb128 0x19
 1688 00b2 49       		.uleb128 0x49
 1689 00b3 13       		.uleb128 0x13
 1690 00b4 11       		.uleb128 0x11
 1691 00b5 01       		.uleb128 0x1
 1692 00b6 12       		.uleb128 0x12
 1693 00b7 06       		.uleb128 0x6
 1694 00b8 40       		.uleb128 0x40
 1695 00b9 18       		.uleb128 0x18
 1696 00ba 9742     		.uleb128 0x2117
 1697 00bc 19       		.uleb128 0x19
 1698 00bd 00       		.byte	0
 1699 00be 00       		.byte	0
 1700 00bf 0F       		.uleb128 0xf
 1701 00c0 2E       		.uleb128 0x2e
 1702 00c1 01       		.byte	0x1
 1703 00c2 3F       		.uleb128 0x3f
 1704 00c3 19       		.uleb128 0x19
 1705 00c4 03       		.uleb128 0x3
 1706 00c5 0E       		.uleb128 0xe
 1707 00c6 3A       		.uleb128 0x3a
 1708 00c7 0B       		.uleb128 0xb
 1709 00c8 3B       		.uleb128 0x3b
 1710 00c9 05       		.uleb128 0x5
 1711 00ca 27       		.uleb128 0x27
 1712 00cb 19       		.uleb128 0x19
 1713 00cc 11       		.uleb128 0x11
 1714 00cd 01       		.uleb128 0x1
 1715 00ce 12       		.uleb128 0x12
 1716 00cf 06       		.uleb128 0x6
 1717 00d0 40       		.uleb128 0x40
 1718 00d1 18       		.uleb128 0x18
 1719 00d2 9742     		.uleb128 0x2117
 1720 00d4 19       		.uleb128 0x19
 1721 00d5 01       		.uleb128 0x1
 1722 00d6 13       		.uleb128 0x13
 1723 00d7 00       		.byte	0
 1724 00d8 00       		.byte	0
 1725 00d9 10       		.uleb128 0x10
 1726 00da 05       		.uleb128 0x5
 1727 00db 00       		.byte	0
 1728 00dc 03       		.uleb128 0x3
 1729 00dd 0E       		.uleb128 0xe
 1730 00de 3A       		.uleb128 0x3a
 1731 00df 0B       		.uleb128 0xb
 1732 00e0 3B       		.uleb128 0x3b
 1733 00e1 05       		.uleb128 0x5
 1734 00e2 49       		.uleb128 0x49
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 47


 1735 00e3 13       		.uleb128 0x13
 1736 00e4 02       		.uleb128 0x2
 1737 00e5 18       		.uleb128 0x18
 1738 00e6 00       		.byte	0
 1739 00e7 00       		.byte	0
 1740 00e8 11       		.uleb128 0x11
 1741 00e9 2E       		.uleb128 0x2e
 1742 00ea 01       		.byte	0x1
 1743 00eb 3F       		.uleb128 0x3f
 1744 00ec 19       		.uleb128 0x19
 1745 00ed 03       		.uleb128 0x3
 1746 00ee 0E       		.uleb128 0xe
 1747 00ef 3A       		.uleb128 0x3a
 1748 00f0 0B       		.uleb128 0xb
 1749 00f1 3B       		.uleb128 0x3b
 1750 00f2 05       		.uleb128 0x5
 1751 00f3 27       		.uleb128 0x27
 1752 00f4 19       		.uleb128 0x19
 1753 00f5 49       		.uleb128 0x49
 1754 00f6 13       		.uleb128 0x13
 1755 00f7 11       		.uleb128 0x11
 1756 00f8 01       		.uleb128 0x1
 1757 00f9 12       		.uleb128 0x12
 1758 00fa 06       		.uleb128 0x6
 1759 00fb 40       		.uleb128 0x40
 1760 00fc 18       		.uleb128 0x18
 1761 00fd 9742     		.uleb128 0x2117
 1762 00ff 19       		.uleb128 0x19
 1763 0100 01       		.uleb128 0x1
 1764 0101 13       		.uleb128 0x13
 1765 0102 00       		.byte	0
 1766 0103 00       		.byte	0
 1767 0104 12       		.uleb128 0x12
 1768 0105 34       		.uleb128 0x34
 1769 0106 00       		.byte	0
 1770 0107 03       		.uleb128 0x3
 1771 0108 0E       		.uleb128 0xe
 1772 0109 3A       		.uleb128 0x3a
 1773 010a 0B       		.uleb128 0xb
 1774 010b 3B       		.uleb128 0x3b
 1775 010c 05       		.uleb128 0x5
 1776 010d 49       		.uleb128 0x49
 1777 010e 13       		.uleb128 0x13
 1778 010f 02       		.uleb128 0x2
 1779 0110 17       		.uleb128 0x17
 1780 0111 00       		.byte	0
 1781 0112 00       		.byte	0
 1782 0113 13       		.uleb128 0x13
 1783 0114 34       		.uleb128 0x34
 1784 0115 00       		.byte	0
 1785 0116 03       		.uleb128 0x3
 1786 0117 0E       		.uleb128 0xe
 1787 0118 3A       		.uleb128 0x3a
 1788 0119 0B       		.uleb128 0xb
 1789 011a 3B       		.uleb128 0x3b
 1790 011b 05       		.uleb128 0x5
 1791 011c 49       		.uleb128 0x49
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 48


 1792 011d 13       		.uleb128 0x13
 1793 011e 02       		.uleb128 0x2
 1794 011f 18       		.uleb128 0x18
 1795 0120 00       		.byte	0
 1796 0121 00       		.byte	0
 1797 0122 14       		.uleb128 0x14
 1798 0123 34       		.uleb128 0x34
 1799 0124 00       		.byte	0
 1800 0125 03       		.uleb128 0x3
 1801 0126 0E       		.uleb128 0xe
 1802 0127 3A       		.uleb128 0x3a
 1803 0128 0B       		.uleb128 0xb
 1804 0129 3B       		.uleb128 0x3b
 1805 012a 0B       		.uleb128 0xb
 1806 012b 49       		.uleb128 0x49
 1807 012c 13       		.uleb128 0x13
 1808 012d 3F       		.uleb128 0x3f
 1809 012e 19       		.uleb128 0x19
 1810 012f 02       		.uleb128 0x2
 1811 0130 18       		.uleb128 0x18
 1812 0131 00       		.byte	0
 1813 0132 00       		.byte	0
 1814 0133 15       		.uleb128 0x15
 1815 0134 01       		.uleb128 0x1
 1816 0135 01       		.byte	0x1
 1817 0136 49       		.uleb128 0x49
 1818 0137 13       		.uleb128 0x13
 1819 0138 01       		.uleb128 0x1
 1820 0139 13       		.uleb128 0x13
 1821 013a 00       		.byte	0
 1822 013b 00       		.byte	0
 1823 013c 16       		.uleb128 0x16
 1824 013d 21       		.uleb128 0x21
 1825 013e 00       		.byte	0
 1826 013f 49       		.uleb128 0x49
 1827 0140 13       		.uleb128 0x13
 1828 0141 2F       		.uleb128 0x2f
 1829 0142 0B       		.uleb128 0xb
 1830 0143 00       		.byte	0
 1831 0144 00       		.byte	0
 1832 0145 17       		.uleb128 0x17
 1833 0146 2E       		.uleb128 0x2e
 1834 0147 01       		.byte	0x1
 1835 0148 3F       		.uleb128 0x3f
 1836 0149 19       		.uleb128 0x19
 1837 014a 03       		.uleb128 0x3
 1838 014b 0E       		.uleb128 0xe
 1839 014c 3A       		.uleb128 0x3a
 1840 014d 0B       		.uleb128 0xb
 1841 014e 3B       		.uleb128 0x3b
 1842 014f 0B       		.uleb128 0xb
 1843 0150 27       		.uleb128 0x27
 1844 0151 19       		.uleb128 0x19
 1845 0152 49       		.uleb128 0x49
 1846 0153 13       		.uleb128 0x13
 1847 0154 3C       		.uleb128 0x3c
 1848 0155 19       		.uleb128 0x19
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 49


 1849 0156 01       		.uleb128 0x1
 1850 0157 13       		.uleb128 0x13
 1851 0158 00       		.byte	0
 1852 0159 00       		.byte	0
 1853 015a 18       		.uleb128 0x18
 1854 015b 05       		.uleb128 0x5
 1855 015c 00       		.byte	0
 1856 015d 49       		.uleb128 0x49
 1857 015e 13       		.uleb128 0x13
 1858 015f 00       		.byte	0
 1859 0160 00       		.byte	0
 1860 0161 19       		.uleb128 0x19
 1861 0162 2E       		.uleb128 0x2e
 1862 0163 01       		.byte	0x1
 1863 0164 3F       		.uleb128 0x3f
 1864 0165 19       		.uleb128 0x19
 1865 0166 03       		.uleb128 0x3
 1866 0167 0E       		.uleb128 0xe
 1867 0168 3A       		.uleb128 0x3a
 1868 0169 0B       		.uleb128 0xb
 1869 016a 3B       		.uleb128 0x3b
 1870 016b 0B       		.uleb128 0xb
 1871 016c 27       		.uleb128 0x27
 1872 016d 19       		.uleb128 0x19
 1873 016e 3C       		.uleb128 0x3c
 1874 016f 19       		.uleb128 0x19
 1875 0170 01       		.uleb128 0x1
 1876 0171 13       		.uleb128 0x13
 1877 0172 00       		.byte	0
 1878 0173 00       		.byte	0
 1879 0174 1A       		.uleb128 0x1a
 1880 0175 2E       		.uleb128 0x2e
 1881 0176 00       		.byte	0
 1882 0177 3F       		.uleb128 0x3f
 1883 0178 19       		.uleb128 0x19
 1884 0179 03       		.uleb128 0x3
 1885 017a 0E       		.uleb128 0xe
 1886 017b 3A       		.uleb128 0x3a
 1887 017c 0B       		.uleb128 0xb
 1888 017d 3B       		.uleb128 0x3b
 1889 017e 0B       		.uleb128 0xb
 1890 017f 27       		.uleb128 0x27
 1891 0180 19       		.uleb128 0x19
 1892 0181 49       		.uleb128 0x49
 1893 0182 13       		.uleb128 0x13
 1894 0183 3C       		.uleb128 0x3c
 1895 0184 19       		.uleb128 0x19
 1896 0185 00       		.byte	0
 1897 0186 00       		.byte	0
 1898 0187 1B       		.uleb128 0x1b
 1899 0188 2E       		.uleb128 0x2e
 1900 0189 00       		.byte	0
 1901 018a 3F       		.uleb128 0x3f
 1902 018b 19       		.uleb128 0x19
 1903 018c 03       		.uleb128 0x3
 1904 018d 0E       		.uleb128 0xe
 1905 018e 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 50


 1906 018f 0B       		.uleb128 0xb
 1907 0190 3B       		.uleb128 0x3b
 1908 0191 0B       		.uleb128 0xb
 1909 0192 27       		.uleb128 0x27
 1910 0193 19       		.uleb128 0x19
 1911 0194 3C       		.uleb128 0x3c
 1912 0195 19       		.uleb128 0x19
 1913 0196 00       		.byte	0
 1914 0197 00       		.byte	0
 1915 0198 1C       		.uleb128 0x1c
 1916 0199 2E       		.uleb128 0x2e
 1917 019a 01       		.byte	0x1
 1918 019b 3F       		.uleb128 0x3f
 1919 019c 19       		.uleb128 0x19
 1920 019d 03       		.uleb128 0x3
 1921 019e 0E       		.uleb128 0xe
 1922 019f 3A       		.uleb128 0x3a
 1923 01a0 0B       		.uleb128 0xb
 1924 01a1 3B       		.uleb128 0x3b
 1925 01a2 0B       		.uleb128 0xb
 1926 01a3 27       		.uleb128 0x27
 1927 01a4 19       		.uleb128 0x19
 1928 01a5 3C       		.uleb128 0x3c
 1929 01a6 19       		.uleb128 0x19
 1930 01a7 00       		.byte	0
 1931 01a8 00       		.byte	0
 1932 01a9 00       		.byte	0
 1933              		.section	.debug_loc,"",%progbits
 1934              	.Ldebug_loc0:
 1935              	.LLST0:
 1936 0000 08000000 		.4byte	.LVL3
 1937 0004 2E000000 		.4byte	.LVL7
 1938 0008 0100     		.2byte	0x1
 1939 000a 54       		.byte	0x54
 1940 000b 00000000 		.4byte	0
 1941 000f 00000000 		.4byte	0
 1942              	.LLST1:
 1943 0013 08000000 		.4byte	.LVL11
 1944 0017 2C000000 		.4byte	.LVL15
 1945 001b 0100     		.2byte	0x1
 1946 001d 54       		.byte	0x54
 1947 001e 00000000 		.4byte	0
 1948 0022 00000000 		.4byte	0
 1949              	.LLST2:
 1950 0026 22000000 		.4byte	.LVL21
 1951 002a 3E000000 		.4byte	.LVL27
 1952 002e 0100     		.2byte	0x1
 1953 0030 54       		.byte	0x54
 1954 0031 44000000 		.4byte	.LVL29
 1955 0035 4C000000 		.4byte	.LVL31
 1956 0039 0100     		.2byte	0x1
 1957 003b 54       		.byte	0x54
 1958 003c 00000000 		.4byte	0
 1959 0040 00000000 		.4byte	0
 1960              	.LLST3:
 1961 0044 0E000000 		.4byte	.LVL19
 1962 0048 24000000 		.4byte	.LVL22
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 51


 1963 004c 0100     		.2byte	0x1
 1964 004e 53       		.byte	0x53
 1965 004f 24000000 		.4byte	.LVL22
 1966 0053 26000000 		.4byte	.LVL23
 1967 0057 0300     		.2byte	0x3
 1968 0059 73       		.byte	0x73
 1969 005a 7F       		.sleb128 -1
 1970 005b 9F       		.byte	0x9f
 1971 005c 26000000 		.4byte	.LVL23
 1972 0060 32000000 		.4byte	.LVL25
 1973 0064 0100     		.2byte	0x1
 1974 0066 53       		.byte	0x53
 1975 0067 32000000 		.4byte	.LVL25
 1976 006b 3C000000 		.4byte	.LVL26
 1977 006f 0500     		.2byte	0x5
 1978 0071 03       		.byte	0x3
 1979 0072 00000000 		.4byte	RX_rxBufferRead
 1980 0076 3E000000 		.4byte	.LVL27
 1981 007a 40000000 		.4byte	.LVL28
 1982 007e 0100     		.2byte	0x1
 1983 0080 53       		.byte	0x53
 1984 0081 00000000 		.4byte	0
 1985 0085 00000000 		.4byte	0
 1986              	.LLST4:
 1987 0089 12000000 		.4byte	.LVL20
 1988 008d 49000000 		.4byte	.LVL30-1
 1989 0091 0100     		.2byte	0x1
 1990 0093 51       		.byte	0x51
 1991 0094 00000000 		.4byte	0
 1992 0098 00000000 		.4byte	0
 1993              	.LLST5:
 1994 009c 02000000 		.4byte	.LVL34
 1995 00a0 22000000 		.4byte	.LVL38
 1996 00a4 0200     		.2byte	0x2
 1997 00a6 30       		.byte	0x30
 1998 00a7 9F       		.byte	0x9f
 1999 00a8 22000000 		.4byte	.LVL38
 2000 00ac 3E000000 		.4byte	.LVL44
 2001 00b0 0100     		.2byte	0x1
 2002 00b2 54       		.byte	0x54
 2003 00b3 3E000000 		.4byte	.LVL44
 2004 00b7 4E000000 		.4byte	.LVL47
 2005 00bb 0200     		.2byte	0x2
 2006 00bd 30       		.byte	0x30
 2007 00be 9F       		.byte	0x9f
 2008 00bf 4E000000 		.4byte	.LVL47
 2009 00c3 56000000 		.4byte	.LVL48
 2010 00c7 0100     		.2byte	0x1
 2011 00c9 54       		.byte	0x54
 2012 00ca 56000000 		.4byte	.LVL48
 2013 00ce 5A000000 		.4byte	.LVL49
 2014 00d2 0200     		.2byte	0x2
 2015 00d4 30       		.byte	0x30
 2016 00d5 9F       		.byte	0x9f
 2017 00d6 5A000000 		.4byte	.LVL49
 2018 00da 64000000 		.4byte	.LVL52
 2019 00de 0100     		.2byte	0x1
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 52


 2020 00e0 54       		.byte	0x54
 2021 00e1 00000000 		.4byte	0
 2022 00e5 00000000 		.4byte	0
 2023              	.LLST6:
 2024 00e9 44000000 		.4byte	.LVL46
 2025 00ed 5C000000 		.4byte	.LVL50
 2026 00f1 0100     		.2byte	0x1
 2027 00f3 53       		.byte	0x53
 2028 00f4 00000000 		.4byte	0
 2029 00f8 00000000 		.4byte	0
 2030              	.LLST7:
 2031 00fc 0E000000 		.4byte	.LVL36
 2032 0100 24000000 		.4byte	.LVL39
 2033 0104 0100     		.2byte	0x1
 2034 0106 53       		.byte	0x53
 2035 0107 24000000 		.4byte	.LVL39
 2036 010b 26000000 		.4byte	.LVL40
 2037 010f 0300     		.2byte	0x3
 2038 0111 73       		.byte	0x73
 2039 0112 7F       		.sleb128 -1
 2040 0113 9F       		.byte	0x9f
 2041 0114 26000000 		.4byte	.LVL40
 2042 0118 32000000 		.4byte	.LVL42
 2043 011c 0100     		.2byte	0x1
 2044 011e 53       		.byte	0x53
 2045 011f 32000000 		.4byte	.LVL42
 2046 0123 3C000000 		.4byte	.LVL43
 2047 0127 0500     		.2byte	0x5
 2048 0129 03       		.byte	0x3
 2049 012a 00000000 		.4byte	RX_rxBufferRead
 2050 012e 3E000000 		.4byte	.LVL44
 2051 0132 40000000 		.4byte	.LVL45
 2052 0136 0100     		.2byte	0x1
 2053 0138 53       		.byte	0x53
 2054 0139 00000000 		.4byte	0
 2055 013d 00000000 		.4byte	0
 2056              	.LLST8:
 2057 0141 12000000 		.4byte	.LVL37
 2058 0145 61000000 		.4byte	.LVL51-1
 2059 0149 0100     		.2byte	0x1
 2060 014b 51       		.byte	0x51
 2061 014c 00000000 		.4byte	0
 2062 0150 00000000 		.4byte	0
 2063              	.LLST9:
 2064 0154 0C000000 		.4byte	.LVL54
 2065 0158 18000000 		.4byte	.LVL56
 2066 015c 0100     		.2byte	0x1
 2067 015e 54       		.byte	0x54
 2068 015f 00000000 		.4byte	0
 2069 0163 00000000 		.4byte	0
 2070              	.LLST10:
 2071 0167 36000000 		.4byte	.LVL59
 2072 016b 38000000 		.4byte	.LVL60
 2073 016f 0100     		.2byte	0x1
 2074 0171 54       		.byte	0x54
 2075 0172 44000000 		.4byte	.LVL61
 2076 0176 46000000 		.4byte	.LVL62
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 53


 2077 017a 0100     		.2byte	0x1
 2078 017c 54       		.byte	0x54
 2079 017d 48000000 		.4byte	.LVL63
 2080 0181 50000000 		.4byte	.LVL65
 2081 0185 0100     		.2byte	0x1
 2082 0187 54       		.byte	0x54
 2083 0188 00000000 		.4byte	0
 2084 018c 00000000 		.4byte	0
 2085              	.LLST11:
 2086 0190 06000000 		.4byte	.LVL66
 2087 0194 1B000000 		.4byte	.LVL67-1
 2088 0198 0100     		.2byte	0x1
 2089 019a 50       		.byte	0x50
 2090 019b 00000000 		.4byte	0
 2091 019f 00000000 		.4byte	0
 2092              		.section	.debug_aranges,"",%progbits
 2093 0000 94000000 		.4byte	0x94
 2094 0004 0200     		.2byte	0x2
 2095 0006 00000000 		.4byte	.Ldebug_info0
 2096 000a 04       		.byte	0x4
 2097 000b 00       		.byte	0
 2098 000c 0000     		.2byte	0
 2099 000e 0000     		.2byte	0
 2100 0010 00000000 		.4byte	.LFB2
 2101 0014 38000000 		.4byte	.LFE2-.LFB2
 2102 0018 00000000 		.4byte	.LFB3
 2103 001c 38000000 		.4byte	.LFE3-.LFB3
 2104 0020 00000000 		.4byte	.LFB1
 2105 0024 20000000 		.4byte	.LFE1-.LFB1
 2106 0028 00000000 		.4byte	.LFB4
 2107 002c 38000000 		.4byte	.LFE4-.LFB4
 2108 0030 00000000 		.4byte	.LFB5
 2109 0034 04000000 		.4byte	.LFE5-.LFB5
 2110 0038 00000000 		.4byte	.LFB6
 2111 003c 02000000 		.4byte	.LFE6-.LFB6
 2112 0040 00000000 		.4byte	.LFB7
 2113 0044 0C000000 		.4byte	.LFE7-.LFB7
 2114 0048 00000000 		.4byte	.LFB8
 2115 004c 5C000000 		.4byte	.LFE8-.LFB8
 2116 0050 00000000 		.4byte	.LFB9
 2117 0054 24000000 		.4byte	.LFE9-.LFB9
 2118 0058 00000000 		.4byte	.LFB10
 2119 005c 78000000 		.4byte	.LFE10-.LFB10
 2120 0060 00000000 		.4byte	.LFB11
 2121 0064 28000000 		.4byte	.LFE11-.LFB11
 2122 0068 00000000 		.4byte	.LFB12
 2123 006c 58000000 		.4byte	.LFE12-.LFB12
 2124 0070 00000000 		.4byte	.LFB13
 2125 0074 40000000 		.4byte	.LFE13-.LFB13
 2126 0078 00000000 		.4byte	.LFB14
 2127 007c 02000000 		.4byte	.LFE14-.LFB14
 2128 0080 00000000 		.4byte	.LFB15
 2129 0084 0C000000 		.4byte	.LFE15-.LFB15
 2130 0088 00000000 		.4byte	.LFB16
 2131 008c 0C000000 		.4byte	.LFE16-.LFB16
 2132 0090 00000000 		.4byte	0
 2133 0094 00000000 		.4byte	0
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 54


 2134              		.section	.debug_ranges,"",%progbits
 2135              	.Ldebug_ranges0:
 2136 0000 00000000 		.4byte	.LFB2
 2137 0004 38000000 		.4byte	.LFE2
 2138 0008 00000000 		.4byte	.LFB3
 2139 000c 38000000 		.4byte	.LFE3
 2140 0010 00000000 		.4byte	.LFB1
 2141 0014 20000000 		.4byte	.LFE1
 2142 0018 00000000 		.4byte	.LFB4
 2143 001c 38000000 		.4byte	.LFE4
 2144 0020 00000000 		.4byte	.LFB5
 2145 0024 04000000 		.4byte	.LFE5
 2146 0028 00000000 		.4byte	.LFB6
 2147 002c 02000000 		.4byte	.LFE6
 2148 0030 00000000 		.4byte	.LFB7
 2149 0034 0C000000 		.4byte	.LFE7
 2150 0038 00000000 		.4byte	.LFB8
 2151 003c 5C000000 		.4byte	.LFE8
 2152 0040 00000000 		.4byte	.LFB9
 2153 0044 24000000 		.4byte	.LFE9
 2154 0048 00000000 		.4byte	.LFB10
 2155 004c 78000000 		.4byte	.LFE10
 2156 0050 00000000 		.4byte	.LFB11
 2157 0054 28000000 		.4byte	.LFE11
 2158 0058 00000000 		.4byte	.LFB12
 2159 005c 58000000 		.4byte	.LFE12
 2160 0060 00000000 		.4byte	.LFB13
 2161 0064 40000000 		.4byte	.LFE13
 2162 0068 00000000 		.4byte	.LFB14
 2163 006c 02000000 		.4byte	.LFE14
 2164 0070 00000000 		.4byte	.LFB15
 2165 0074 0C000000 		.4byte	.LFE15
 2166 0078 00000000 		.4byte	.LFB16
 2167 007c 0C000000 		.4byte	.LFE16
 2168 0080 00000000 		.4byte	0
 2169 0084 00000000 		.4byte	0
 2170              		.section	.debug_line,"",%progbits
 2171              	.Ldebug_line0:
 2172 0000 F6010000 		.section	.debug_str,"MS",%progbits,1
 2172      02005B00 
 2172      00000201 
 2172      FB0E0D00 
 2172      01010101 
 2173              	.LASF10:
 2174 0000 75696E74 		.ascii	"uint16\000"
 2174      313600
 2175              	.LASF55:
 2176 0007 43794578 		.ascii	"CyExitCriticalSection\000"
 2176      69744372 
 2176      69746963 
 2176      616C5365 
 2176      6374696F 
 2177              	.LASF54:
 2178 001d 52585F49 		.ascii	"RX_IntClock_StartEx\000"
 2178      6E74436C 
 2178      6F636B5F 
 2178      53746172 
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 55


 2178      74457800 
 2179              	.LASF40:
 2180 0031 52585F53 		.ascii	"RX_SetRxAddressMode\000"
 2180      65745278 
 2180      41646472 
 2180      6573734D 
 2180      6F646500 
 2181              	.LASF7:
 2182 0045 6C6F6E67 		.ascii	"long long unsigned int\000"
 2182      206C6F6E 
 2182      6720756E 
 2182      7369676E 
 2182      65642069 
 2183              	.LASF50:
 2184 005c 52585F72 		.ascii	"RX_rxBufferLoopDetect\000"
 2184      78427566 
 2184      6665724C 
 2184      6F6F7044 
 2184      65746563 
 2185              	.LASF6:
 2186 0072 6C6F6E67 		.ascii	"long long int\000"
 2186      206C6F6E 
 2186      6720696E 
 2186      7400
 2187              	.LASF0:
 2188 0080 7369676E 		.ascii	"signed char\000"
 2188      65642063 
 2188      68617200 
 2189              	.LASF21:
 2190 008c 52585F53 		.ascii	"RX_Stop\000"
 2190      746F7000 
 2191              	.LASF33:
 2192 0094 52585F47 		.ascii	"RX_GetChar\000"
 2192      65744368 
 2192      617200
 2193              	.LASF4:
 2194 009f 6C6F6E67 		.ascii	"long int\000"
 2194      20696E74 
 2194      00
 2195              	.LASF63:
 2196 00a8 4379496E 		.ascii	"CyIntDisable\000"
 2196      74446973 
 2196      61626C65 
 2196      00
 2197              	.LASF9:
 2198 00b5 75696E74 		.ascii	"uint8\000"
 2198      3800
 2199              	.LASF45:
 2200 00bb 52585F69 		.ascii	"RX_initVar\000"
 2200      6E697456 
 2200      617200
 2201              	.LASF13:
 2202 00c6 646F7562 		.ascii	"double\000"
 2202      6C6500
 2203              	.LASF41:
 2204 00cd 61646472 		.ascii	"addressMode\000"
 2204      6573734D 
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 56


 2204      6F646500 
 2205              	.LASF11:
 2206 00d9 75696E74 		.ascii	"uint32\000"
 2206      333200
 2207              	.LASF25:
 2208 00e0 636F6E74 		.ascii	"control\000"
 2208      726F6C00 
 2209              	.LASF31:
 2210 00e8 52585F52 		.ascii	"RX_ReadRxStatus\000"
 2210      65616452 
 2210      78537461 
 2210      74757300 
 2211              	.LASF8:
 2212 00f8 756E7369 		.ascii	"unsigned int\000"
 2212      676E6564 
 2212      20696E74 
 2212      00
 2213              	.LASF36:
 2214 0105 6C6F6345 		.ascii	"locErrorStatus\000"
 2214      72726F72 
 2214      53746174 
 2214      757300
 2215              	.LASF5:
 2216 0114 6C6F6E67 		.ascii	"long unsigned int\000"
 2216      20756E73 
 2216      69676E65 
 2216      6420696E 
 2216      7400
 2217              	.LASF59:
 2218 0126 52585F52 		.ascii	"RX_ReadControlRegister\000"
 2218      65616443 
 2218      6F6E7472 
 2218      6F6C5265 
 2218      67697374 
 2219              	.LASF39:
 2220 013d 52585F43 		.ascii	"RX_ClearRxBuffer\000"
 2220      6C656172 
 2220      52784275 
 2220      66666572 
 2220      00
 2221              	.LASF61:
 2222 014e 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2222      74657243 
 2222      72697469 
 2222      63616C53 
 2222      65637469 
 2223              	.LASF47:
 2224 0165 52585F72 		.ascii	"RX_rxBuffer\000"
 2224      78427566 
 2224      66657200 
 2225              	.LASF38:
 2226 0171 73697A65 		.ascii	"size\000"
 2226      00
 2227              	.LASF3:
 2228 0176 73686F72 		.ascii	"short unsigned int\000"
 2228      7420756E 
 2228      7369676E 
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 57


 2228      65642069 
 2228      6E7400
 2229              	.LASF37:
 2230 0189 52585F47 		.ascii	"RX_GetRxBufferSize\000"
 2230      65745278 
 2230      42756666 
 2230      65725369 
 2230      7A6500
 2231              	.LASF60:
 2232 019c 4379496E 		.ascii	"CyIntSetVector\000"
 2232      74536574 
 2232      56656374 
 2232      6F7200
 2233              	.LASF26:
 2234 01ab 696E7453 		.ascii	"intSrc\000"
 2234      726300
 2235              	.LASF24:
 2236 01b2 52585F53 		.ascii	"RX_SetRxInterruptMode\000"
 2236      65745278 
 2236      496E7465 
 2236      72727570 
 2236      744D6F64 
 2237              	.LASF58:
 2238 01c8 443A5C68 		.ascii	"D:\\henrry\\empenzando\\modulo.cydsn\000"
 2238      656E7272 
 2238      795C656D 
 2238      70656E7A 
 2238      616E646F 
 2239              	.LASF17:
 2240 01ea 73697A65 		.ascii	"sizetype\000"
 2240      74797065 
 2240      00
 2241              	.LASF43:
 2242 01f3 61646472 		.ascii	"address\000"
 2242      65737300 
 2243              	.LASF53:
 2244 01fb 4379496E 		.ascii	"CyIntEnable\000"
 2244      74456E61 
 2244      626C6500 
 2245              	.LASF20:
 2246 0207 52585F53 		.ascii	"RX_Start\000"
 2246      74617274 
 2246      00
 2247              	.LASF30:
 2248 0210 52585F52 		.ascii	"RX_ReadRxData\000"
 2248      65616452 
 2248      78446174 
 2248      6100
 2249              	.LASF51:
 2250 021e 52585F72 		.ascii	"RX_rxBufferOverflow\000"
 2250      78427566 
 2250      6665724F 
 2250      76657266 
 2250      6C6F7700 
 2251              	.LASF18:
 2252 0232 52585F49 		.ascii	"RX_Init\000"
 2252      6E697400 
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 58


 2253              	.LASF29:
 2254 023a 6C6F6352 		.ascii	"locRxBufferWrite\000"
 2254      78427566 
 2254      66657257 
 2254      72697465 
 2254      00
 2255              	.LASF34:
 2256 024b 72785374 		.ascii	"rxStatus\000"
 2256      61747573 
 2256      00
 2257              	.LASF56:
 2258 0254 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2258      4320342E 
 2258      392E3320 
 2258      32303135 
 2258      30333033 
 2259 0287 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 2259      20726576 
 2259      6973696F 
 2259      6E203232 
 2259      31323230 
 2260 02ba 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2260      66756E63 
 2260      74696F6E 
 2260      2D736563 
 2260      74696F6E 
 2261              	.LASF52:
 2262 02e2 4379496E 		.ascii	"CyIntSetPriority\000"
 2262      74536574 
 2262      5072696F 
 2262      72697479 
 2262      00
 2263              	.LASF12:
 2264 02f3 666C6F61 		.ascii	"float\000"
 2264      7400
 2265              	.LASF15:
 2266 02f9 72656738 		.ascii	"reg8\000"
 2266      00
 2267              	.LASF1:
 2268 02fe 756E7369 		.ascii	"unsigned char\000"
 2268      676E6564 
 2268      20636861 
 2268      7200
 2269              	.LASF2:
 2270 030c 73686F72 		.ascii	"short int\000"
 2270      7420696E 
 2270      7400
 2271              	.LASF49:
 2272 0316 52585F72 		.ascii	"RX_rxBufferWrite\000"
 2272      78427566 
 2272      66657257 
 2272      72697465 
 2272      00
 2273              	.LASF35:
 2274 0327 52585F47 		.ascii	"RX_GetByte\000"
 2274      65744279 
 2274      746500
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 59


 2275              	.LASF27:
 2276 0332 72784461 		.ascii	"rxData\000"
 2276      746100
 2277              	.LASF57:
 2278 0339 47656E65 		.ascii	"Generated_Source\\PSoC4\\RX.c\000"
 2278      72617465 
 2278      645F536F 
 2278      75726365 
 2278      5C50536F 
 2279              	.LASF14:
 2280 0355 63686172 		.ascii	"char\000"
 2280      00
 2281              	.LASF16:
 2282 035a 63796973 		.ascii	"cyisraddress\000"
 2282      72616464 
 2282      72657373 
 2282      00
 2283              	.LASF19:
 2284 0367 52585F45 		.ascii	"RX_Enable\000"
 2284      6E61626C 
 2284      6500
 2285              	.LASF23:
 2286 0371 52585F57 		.ascii	"RX_WriteControlRegister\000"
 2286      72697465 
 2286      436F6E74 
 2286      726F6C52 
 2286      65676973 
 2287              	.LASF28:
 2288 0389 6C6F6352 		.ascii	"locRxBufferRead\000"
 2288      78427566 
 2288      66657252 
 2288      65616400 
 2289              	.LASF22:
 2290 0399 656E6162 		.ascii	"enableInterrupts\000"
 2290      6C65496E 
 2290      74657272 
 2290      75707473 
 2290      00
 2291              	.LASF32:
 2292 03aa 73746174 		.ascii	"status\000"
 2292      757300
 2293              	.LASF48:
 2294 03b1 52585F72 		.ascii	"RX_rxBufferRead\000"
 2294      78427566 
 2294      66657252 
 2294      65616400 
 2295              	.LASF46:
 2296 03c1 52585F65 		.ascii	"RX_errorStatus\000"
 2296      72726F72 
 2296      53746174 
 2296      757300
 2297              	.LASF42:
 2298 03d0 52585F53 		.ascii	"RX_SetRxAddress1\000"
 2298      65745278 
 2298      41646472 
 2298      65737331 
 2298      00
ARM GAS  C:\Users\Andres\AppData\Local\Temp\ccGUElfg.s 			page 60


 2299              	.LASF44:
 2300 03e1 52585F53 		.ascii	"RX_SetRxAddress2\000"
 2300      65745278 
 2300      41646472 
 2300      65737332 
 2300      00
 2301              	.LASF62:
 2302 03f2 52585F49 		.ascii	"RX_IntClock_Stop\000"
 2302      6E74436C 
 2302      6F636B5F 
 2302      53746F70 
 2302      00
 2303              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
