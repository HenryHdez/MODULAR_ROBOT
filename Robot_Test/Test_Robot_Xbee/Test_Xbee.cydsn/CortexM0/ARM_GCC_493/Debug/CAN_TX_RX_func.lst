ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc7VeyuG.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CAN_TX_RX_func.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CAN_SendMsg,"ax",%progbits
  18              		.align	2
  19              		.global	CAN_SendMsg
  20              		.code	16
  21              		.thumb_func
  22              		.type	CAN_SendMsg, %function
  23              	CAN_SendMsg:
  24              	.LFB1:
  25              		.file 1 "CAN_TX_RX_func.c"
   1:CAN_TX_RX_func.c **** /*******************************************************************************
   2:CAN_TX_RX_func.c **** * File Name: CAN_TX_RX_func.c
   3:CAN_TX_RX_func.c **** * Version 3.0
   4:CAN_TX_RX_func.c **** *
   5:CAN_TX_RX_func.c **** * Description:
   6:CAN_TX_RX_func.c **** *  There are functions process "Full" Receive and Transmit mailboxes:
   7:CAN_TX_RX_func.c **** *     - CAN_SendMsg0-7();
   8:CAN_TX_RX_func.c **** *     - CAN_ReceiveMsg0-15();
   9:CAN_TX_RX_func.c **** *  Transmission of message, and receive routine for "Basic" mailboxes:
  10:CAN_TX_RX_func.c **** *     - CAN_SendMsg();
  11:CAN_TX_RX_func.c **** *     - CAN_TxCancel();
  12:CAN_TX_RX_func.c **** *     - CAN_ReceiveMsg();
  13:CAN_TX_RX_func.c **** *
  14:CAN_TX_RX_func.c **** *  Note:
  15:CAN_TX_RX_func.c **** *   None
  16:CAN_TX_RX_func.c **** *
  17:CAN_TX_RX_func.c **** ********************************************************************************
  18:CAN_TX_RX_func.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  19:CAN_TX_RX_func.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:CAN_TX_RX_func.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:CAN_TX_RX_func.c **** * the software package with which this file was provided.
  22:CAN_TX_RX_func.c **** *******************************************************************************/
  23:CAN_TX_RX_func.c **** 
  24:CAN_TX_RX_func.c **** #include "CAN.h"
  25:CAN_TX_RX_func.c **** #include "cyapicallbacks.h"
  26:CAN_TX_RX_func.c **** 
  27:CAN_TX_RX_func.c **** /* `#START TX_RX_FUNCTION` */
  28:CAN_TX_RX_func.c **** extern uint8 mailbox0[8];
  29:CAN_TX_RX_func.c **** /* `#END` */
  30:CAN_TX_RX_func.c **** 
  31:CAN_TX_RX_func.c **** 
  32:CAN_TX_RX_func.c **** /*******************************************************************************
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc7VeyuG.s 			page 2


  33:CAN_TX_RX_func.c **** * FUNCTION NAME:   CAN_SendMsg
  34:CAN_TX_RX_func.c **** ********************************************************************************
  35:CAN_TX_RX_func.c **** *
  36:CAN_TX_RX_func.c **** * Summary:
  37:CAN_TX_RX_func.c **** *  This function is Send Message from one of Basic mailboxes. The function loops
  38:CAN_TX_RX_func.c **** *  through the transmit message buffer designed as Basic CAN mailboxes for the
  39:CAN_TX_RX_func.c **** *  first free available and sends from it. The number of retries is limited.
  40:CAN_TX_RX_func.c **** *
  41:CAN_TX_RX_func.c **** * Parameters:
  42:CAN_TX_RX_func.c **** *  message: The pointer to a structure that contains all required data to send
  43:CAN_TX_RX_func.c **** *           messages.
  44:CAN_TX_RX_func.c **** *
  45:CAN_TX_RX_func.c **** * Return:
  46:CAN_TX_RX_func.c **** *  Indication if message has been sent.
  47:CAN_TX_RX_func.c **** *   Define                             Description
  48:CAN_TX_RX_func.c **** *    CYRET_SUCCESS                      The function passed successfully
  49:CAN_TX_RX_func.c **** *    CAN_FAIL              The function failed
  50:CAN_TX_RX_func.c **** *
  51:CAN_TX_RX_func.c **** *******************************************************************************/
  52:CAN_TX_RX_func.c **** uint8 CAN_SendMsg(const CAN_TX_MSG *message) 
  53:CAN_TX_RX_func.c **** {
  26              		.loc 1 53 0
  27              		.cfi_startproc
  28              	.LVL0:
  29 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  30              		.cfi_def_cfa_offset 24
  31              		.cfi_offset 3, -24
  32              		.cfi_offset 4, -20
  33              		.cfi_offset 5, -16
  34              		.cfi_offset 6, -12
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 4F46     		mov	r7, r9
  38 0004 4646     		mov	r6, r8
  39 0006 C0B4     		push	{r6, r7}
  40              		.cfi_def_cfa_offset 32
  41              		.cfi_offset 8, -32
  42              		.cfi_offset 9, -28
  43 0008 061C     		mov	r6, r0
  44              	.LVL1:
  54:CAN_TX_RX_func.c ****     uint8 i, j, shift;
  55:CAN_TX_RX_func.c ****     uint8 retry = 0u;
  56:CAN_TX_RX_func.c ****     uint8 result = CAN_FAIL;
  45              		.loc 1 56 0
  46 000a 0120     		mov	r0, #1
  47              	.LVL2:
  55:CAN_TX_RX_func.c ****     uint8 result = CAN_FAIL;
  48              		.loc 1 55 0
  49 000c 0023     		mov	r3, #0
  50 000e 9846     		mov	r8, r3
  57:CAN_TX_RX_func.c ****     uint32 regTemp;
  58:CAN_TX_RX_func.c **** 
  59:CAN_TX_RX_func.c ****     while (retry < CAN_RETRY_NUMBER)
  51              		.loc 1 59 0
  52 0010 93E0     		b	.L2
  53              	.LVL3:
  54              	.L18:
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc7VeyuG.s 			page 3


  60:CAN_TX_RX_func.c ****     {
  61:CAN_TX_RX_func.c ****         shift = 1u;    /* Start from first mailbox */
  62:CAN_TX_RX_func.c ****         for (i = 0u; i < CAN_NUMBER_OF_TX_MAILBOXES; i++)
  63:CAN_TX_RX_func.c ****         {
  64:CAN_TX_RX_func.c ****             /* Find Basic TX mailboxes */
  65:CAN_TX_RX_func.c ****             if ((CAN_TX_MAILBOX_TYPE & shift) == 0u)
  55              		.loc 1 65 0
  56 0012 EB07     		lsl	r3, r5, #31
  57 0014 7FD4     		bmi	.L3
  66:CAN_TX_RX_func.c ****             {
  67:CAN_TX_RX_func.c ****                 /* Find free mailbox */
  68:CAN_TX_RX_func.c ****                 #if (CY_PSOC3 || CY_PSOC5)
  69:CAN_TX_RX_func.c ****                     if ((CAN_BUF_SR_REG.byte[2] & shift) == 0u)
  70:CAN_TX_RX_func.c ****                 #else  /* CY_PSOC4 */
  71:CAN_TX_RX_func.c ****                     if ((CAN_BUF_SR_REG &
  58              		.loc 1 71 0
  59 0016 4C4B     		ldr	r3, .L23
  60 0018 1B68     		ldr	r3, [r3]
  72:CAN_TX_RX_func.c ****                         (uint32) ((uint32) shift << CAN_TWO_BYTE_OFFSET)) == 0u)
  61              		.loc 1 72 0
  62 001a 2A04     		lsl	r2, r5, #16
  71:CAN_TX_RX_func.c ****                         (uint32) ((uint32) shift << CAN_TWO_BYTE_OFFSET)) == 0u)
  63              		.loc 1 71 0
  64 001c 1A42     		tst	r2, r3
  65 001e 7AD1     		bne	.L3
  66              	.LVL4:
  73:CAN_TX_RX_func.c ****                 #endif /* CY_PSOC3 || CY_PSOC5 */
  74:CAN_TX_RX_func.c ****                     {
  75:CAN_TX_RX_func.c ****                         regTemp = 0u;
  76:CAN_TX_RX_func.c **** 
  77:CAN_TX_RX_func.c ****                         /* Set message parameters */
  78:CAN_TX_RX_func.c ****                         if (message->rtr != CAN_STANDARD_MESSAGE)
  67              		.loc 1 78 0
  68 0020 3379     		ldrb	r3, [r6, #4]
  69 0022 002B     		cmp	r3, #0
  70 0024 01D1     		bne	.L21
  75:CAN_TX_RX_func.c **** 
  71              		.loc 1 75 0
  72 0026 0027     		mov	r7, #0
  73 0028 01E0     		b	.L4
  74              	.L21:
  79:CAN_TX_RX_func.c ****                         {
  80:CAN_TX_RX_func.c ****                             regTemp = CAN_TX_RTR_MASK;    /* RTR message Enable */
  75              		.loc 1 80 0
  76 002a 8027     		mov	r7, #128
  77 002c BF03     		lsl	r7, r7, #14
  78              	.L4:
  79              	.LVL5:
  81:CAN_TX_RX_func.c ****                         }
  82:CAN_TX_RX_func.c **** 
  83:CAN_TX_RX_func.c ****                         if (message->ide == CAN_STANDARD_MESSAGE)
  80              		.loc 1 83 0
  81 002e 7379     		ldrb	r3, [r6, #5]
  82 0030 002B     		cmp	r3, #0
  83 0032 07D1     		bne	.L5
  84:CAN_TX_RX_func.c ****                         {
  85:CAN_TX_RX_func.c ****                             CAN_SET_TX_ID_STANDARD_MSG(i, message->id);
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc7VeyuG.s 			page 4


  84              		.loc 1 85 0
  85 0034 2301     		lsl	r3, r4, #4
  86 0036 454A     		ldr	r2, .L23+4
  87 0038 9446     		mov	ip, r2
  88 003a 6344     		add	r3, r3, ip
  89 003c 3268     		ldr	r2, [r6]
  90 003e 5205     		lsl	r2, r2, #21
  91 0040 5A60     		str	r2, [r3, #4]
  92 0042 09E0     		b	.L6
  93              	.L5:
  86:CAN_TX_RX_func.c ****                         }
  87:CAN_TX_RX_func.c ****                         else
  88:CAN_TX_RX_func.c ****                         {
  89:CAN_TX_RX_func.c ****                             regTemp |= CAN_TX_IDE_MASK;
  94              		.loc 1 89 0
  95 0044 8023     		mov	r3, #128
  96 0046 5B03     		lsl	r3, r3, #13
  97 0048 1F43     		orr	r7, r3
  98              	.LVL6:
  90:CAN_TX_RX_func.c ****                             CAN_SET_TX_ID_EXTENDED_MSG(i, message->id);
  99              		.loc 1 90 0
 100 004a 2301     		lsl	r3, r4, #4
 101 004c 3F4A     		ldr	r2, .L23+4
 102 004e 9446     		mov	ip, r2
 103 0050 6344     		add	r3, r3, ip
 104 0052 3268     		ldr	r2, [r6]
 105 0054 D200     		lsl	r2, r2, #3
 106 0056 5A60     		str	r2, [r3, #4]
 107              	.L6:
  91:CAN_TX_RX_func.c ****                         }
  92:CAN_TX_RX_func.c **** 
  93:CAN_TX_RX_func.c ****                         if (message->dlc < CAN_TX_DLC_MAX_VALUE)
 108              		.loc 1 93 0
 109 0058 B379     		ldrb	r3, [r6, #6]
 110 005a 072B     		cmp	r3, #7
 111 005c 03D8     		bhi	.L7
  94:CAN_TX_RX_func.c ****                         {
  95:CAN_TX_RX_func.c ****                             regTemp |= ((uint32) message->dlc) << CAN_TWO_BYTE_OFFSET;
 112              		.loc 1 95 0
 113 005e 1B04     		lsl	r3, r3, #16
 114 0060 1F43     		orr	r7, r3
 115              	.LVL7:
 116 0062 B946     		mov	r9, r7
 117              	.LVL8:
 118 0064 03E0     		b	.L8
 119              	.L7:
  96:CAN_TX_RX_func.c ****                         }
  97:CAN_TX_RX_func.c ****                         else
  98:CAN_TX_RX_func.c ****                         {
  99:CAN_TX_RX_func.c ****                             regTemp |= CAN_TX_DLC_UPPER_VALUE;
 120              		.loc 1 99 0
 121 0066 8023     		mov	r3, #128
 122 0068 1B03     		lsl	r3, r3, #12
 123 006a 1F43     		orr	r7, r3
 124              	.LVL9:
 125 006c B946     		mov	r9, r7
 126              	.LVL10:
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc7VeyuG.s 			page 5


 127              	.L8:
 100:CAN_TX_RX_func.c ****                         }
 101:CAN_TX_RX_func.c **** 
 102:CAN_TX_RX_func.c ****                         if (message->irq != CAN_TRANSMIT_INT_DISABLE)
 128              		.loc 1 102 0
 129 006e F379     		ldrb	r3, [r6, #7]
 130 0070 002B     		cmp	r3, #0
 131 0072 03D0     		beq	.L9
 103:CAN_TX_RX_func.c ****                         {
 104:CAN_TX_RX_func.c ****                             regTemp |= CAN_TX_INT_ENABLE_MASK;    /* Transmit Interrupt Enable */
 132              		.loc 1 104 0
 133 0074 0423     		mov	r3, #4
 134 0076 4A46     		mov	r2, r9
 135 0078 1A43     		orr	r2, r3
 136 007a 9146     		mov	r9, r2
 137              	.LVL11:
 138              	.L9:
 105:CAN_TX_RX_func.c ****                         }
 106:CAN_TX_RX_func.c **** 
 107:CAN_TX_RX_func.c ****                         for (j = 0u; (j < message->dlc) && (j < CAN_TX_DLC_MAX_VALUE); j++)
 139              		.loc 1 107 0
 140 007c 0023     		mov	r3, #0
 141 007e 2AE0     		b	.L10
 142              	.LVL12:
 143              	.L14:
 108:CAN_TX_RX_func.c ****                         {
 109:CAN_TX_RX_func.c ****                             #if (CY_PSOC3 || CY_PSOC5)
 110:CAN_TX_RX_func.c ****                                 CAN_TX_DATA_BYTE(i, j) = message->msg->byte[j];
 111:CAN_TX_RX_func.c ****                             #else /* CY_PSOC4 */
 112:CAN_TX_RX_func.c ****                                 CAN_TX_DATA_BYTE(i, j, message->msg->byte[j]);
 144              		.loc 1 112 0
 145 0080 032B     		cmp	r3, #3
 146 0082 13D9     		bls	.L11
 147              		.loc 1 112 0 is_stmt 0 discriminator 1
 148 0084 2001     		lsl	r0, r4, #4
 149 0086 324A     		ldr	r2, .L23+8
 150 0088 9446     		mov	ip, r2
 151 008a 6044     		add	r0, r0, ip
 152 008c 0168     		ldr	r1, [r0]
 153 008e DA00     		lsl	r2, r3, #3
 154 0090 5242     		neg	r2, r2
 155 0092 3832     		add	r2, r2, #56
 156 0094 FF27     		mov	r7, #255
 157 0096 9740     		lsl	r7, r7, r2
 158 0098 B943     		bic	r1, r7
 159 009a 8C46     		mov	ip, r1
 160 009c F168     		ldr	r1, [r6, #12]
 161 009e C95C     		ldrb	r1, [r1, r3]
 162 00a0 9140     		lsl	r1, r1, r2
 163 00a2 0A1C     		mov	r2, r1
 164 00a4 6146     		mov	r1, ip
 165 00a6 0A43     		orr	r2, r1
 166 00a8 0260     		str	r2, [r0]
 167 00aa 12E0     		b	.L12
 168              	.L11:
 169              		.loc 1 112 0 discriminator 2
 170 00ac 2001     		lsl	r0, r4, #4
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc7VeyuG.s 			page 6


 171 00ae 274A     		ldr	r2, .L23+4
 172 00b0 9446     		mov	ip, r2
 173 00b2 6044     		add	r0, r0, ip
 174 00b4 8168     		ldr	r1, [r0, #8]
 175 00b6 DA00     		lsl	r2, r3, #3
 176 00b8 5242     		neg	r2, r2
 177 00ba 1832     		add	r2, r2, #24
 178 00bc FF27     		mov	r7, #255
 179 00be 9740     		lsl	r7, r7, r2
 180 00c0 B943     		bic	r1, r7
 181 00c2 8C46     		mov	ip, r1
 182 00c4 F168     		ldr	r1, [r6, #12]
 183 00c6 C95C     		ldrb	r1, [r1, r3]
 184 00c8 9140     		lsl	r1, r1, r2
 185 00ca 0A1C     		mov	r2, r1
 186 00cc 6146     		mov	r1, ip
 187 00ce 0A43     		orr	r2, r1
 188 00d0 8260     		str	r2, [r0, #8]
 189              	.L12:
 107:CAN_TX_RX_func.c ****                         {
 190              		.loc 1 107 0 is_stmt 1 discriminator 2
 191 00d2 0133     		add	r3, r3, #1
 192              	.LVL13:
 193 00d4 DBB2     		uxtb	r3, r3
 194              	.LVL14:
 195              	.L10:
 107:CAN_TX_RX_func.c ****                         {
 196              		.loc 1 107 0 is_stmt 0 discriminator 1
 197 00d6 B279     		ldrb	r2, [r6, #6]
 198 00d8 9A42     		cmp	r2, r3
 199 00da 01D9     		bls	.L13
 107:CAN_TX_RX_func.c ****                         {
 200              		.loc 1 107 0 discriminator 3
 201 00dc 072B     		cmp	r3, #7
 202 00de CFD9     		bls	.L14
 203              	.L13:
 113:CAN_TX_RX_func.c ****                             #endif /* CY_PSOC3 || CY_PSOC5 */
 114:CAN_TX_RX_func.c ****                         }
 115:CAN_TX_RX_func.c **** 
 116:CAN_TX_RX_func.c ****                         /* Disable isr */
 117:CAN_TX_RX_func.c ****     CyIntDisable(CAN_ISR_NUMBER);
 204              		.loc 1 117 0 is_stmt 1
 205 00e0 1B20     		mov	r0, #27
 206 00e2 FFF7FEFF 		bl	CyIntDisable
 207              	.LVL15:
 118:CAN_TX_RX_func.c **** 
 119:CAN_TX_RX_func.c ****                         /* WPN[23] and WPN[3] set to 1 for write to CAN Control reg */
 120:CAN_TX_RX_func.c ****                         CY_SET_REG32(CAN_TX_CMD_PTR(i), (regTemp | CAN_TX_WPN_SET));
 208              		.loc 1 120 0
 209 00e6 2301     		lsl	r3, r4, #4
 210 00e8 184A     		ldr	r2, .L23+4
 211 00ea 9446     		mov	ip, r2
 212 00ec 6344     		add	r3, r3, ip
 213 00ee 194A     		ldr	r2, .L23+12
 214 00f0 4F46     		mov	r7, r9
 215 00f2 1743     		orr	r7, r2
 216 00f4 1F60     		str	r7, [r3]
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc7VeyuG.s 			page 7


 121:CAN_TX_RX_func.c **** 
 122:CAN_TX_RX_func.c ****                         #if (CY_PSOC3 || CY_PSOC5)
 123:CAN_TX_RX_func.c ****                             CY_SET_REG32(CAN_TX_CMD_PTR(i), CAN_SEND_MESSAGE);
 124:CAN_TX_RX_func.c ****                         #else /* CY_PSOC4 */
 125:CAN_TX_RX_func.c ****                             if (message->sst != CAN_STANDARD_MESSAGE)
 217              		.loc 1 125 0
 218 00f6 327A     		ldrb	r2, [r6, #8]
 219 00f8 002A     		cmp	r2, #0
 220 00fa 04D0     		beq	.L15
 126:CAN_TX_RX_func.c ****                             {
 127:CAN_TX_RX_func.c ****                                 /* Single Shot Transmission */
 128:CAN_TX_RX_func.c ****                                 CAN_TX_CMD_REG(i) |= CAN_SEND_MESSAGE |
 221              		.loc 1 128 0
 222 00fc 1968     		ldr	r1, [r3]
 223 00fe 0322     		mov	r2, #3
 224 0100 0A43     		orr	r2, r1
 225 0102 1A60     		str	r2, [r3]
 226 0104 03E0     		b	.L16
 227              	.L15:
 129:CAN_TX_RX_func.c ****                                 CAN_TX_ABORT_MASK;
 130:CAN_TX_RX_func.c ****                             }
 131:CAN_TX_RX_func.c ****                             else
 132:CAN_TX_RX_func.c ****                             {
 133:CAN_TX_RX_func.c ****                                 CAN_TX_CMD_REG(i) |= CAN_SEND_MESSAGE;
 228              		.loc 1 133 0
 229 0106 1968     		ldr	r1, [r3]
 230 0108 0122     		mov	r2, #1
 231 010a 0A43     		orr	r2, r1
 232 010c 1A60     		str	r2, [r3]
 233              	.L16:
 134:CAN_TX_RX_func.c ****                             }
 135:CAN_TX_RX_func.c ****                         #endif /* CY_PSOC3 || CY_PSOC5 */
 136:CAN_TX_RX_func.c **** 
 137:CAN_TX_RX_func.c ****                         /* Enable isr */
 138:CAN_TX_RX_func.c ****     CyIntEnable(CAN_ISR_NUMBER);
 234              		.loc 1 138 0
 235 010e 1B20     		mov	r0, #27
 236 0110 FFF7FEFF 		bl	CyIntEnable
 237              	.LVL16:
 139:CAN_TX_RX_func.c **** 
 140:CAN_TX_RX_func.c ****                         result = CYRET_SUCCESS;
 238              		.loc 1 140 0
 239 0114 0020     		mov	r0, #0
 240              	.LVL17:
 241              	.L3:
 141:CAN_TX_RX_func.c ****                     }
 142:CAN_TX_RX_func.c ****             }
 143:CAN_TX_RX_func.c ****             shift <<= 1u;
 242              		.loc 1 143 0
 243 0116 6D00     		lsl	r5, r5, #1
 244              	.LVL18:
 245 0118 EDB2     		uxtb	r5, r5
 246              	.LVL19:
 144:CAN_TX_RX_func.c ****             if (result == CYRET_SUCCESS)
 247              		.loc 1 144 0
 248 011a 0028     		cmp	r0, #0
 249 011c 07D0     		beq	.L17
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc7VeyuG.s 			page 8


  62:CAN_TX_RX_func.c ****         {
 250              		.loc 1 62 0 discriminator 2
 251 011e 0134     		add	r4, r4, #1
 252              	.LVL20:
 253 0120 E4B2     		uxtb	r4, r4
 254              	.LVL21:
 255 0122 01E0     		b	.L20
 256              	.LVL22:
 257              	.L22:
 258 0124 0125     		mov	r5, #1
 259 0126 0024     		mov	r4, #0
 260              	.L20:
 261              	.LVL23:
  62:CAN_TX_RX_func.c ****         {
 262              		.loc 1 62 0 is_stmt 0 discriminator 1
 263 0128 072C     		cmp	r4, #7
 264 012a 00D8     		bhi	.LCB277
 265 012c 71E7     		b	.L18	@long jump
 266              	.LCB277:
 267              	.L17:
 145:CAN_TX_RX_func.c ****             {
 146:CAN_TX_RX_func.c ****                 break;
 147:CAN_TX_RX_func.c ****             }
 148:CAN_TX_RX_func.c ****         }
 149:CAN_TX_RX_func.c ****         if (result == CYRET_SUCCESS)
 268              		.loc 1 149 0 is_stmt 1
 269 012e 0028     		cmp	r0, #0
 270 0130 06D0     		beq	.L19
 150:CAN_TX_RX_func.c ****         {
 151:CAN_TX_RX_func.c ****             break;
 152:CAN_TX_RX_func.c ****         }
 153:CAN_TX_RX_func.c ****         else
 154:CAN_TX_RX_func.c ****         {
 155:CAN_TX_RX_func.c ****             retry++;
 271              		.loc 1 155 0
 272 0132 4346     		mov	r3, r8
 273 0134 0133     		add	r3, r3, #1
 274 0136 DBB2     		uxtb	r3, r3
 275 0138 9846     		mov	r8, r3
 276              	.LVL24:
 277              	.L2:
  59:CAN_TX_RX_func.c ****     {
 278              		.loc 1 59 0
 279 013a 4346     		mov	r3, r8
 280 013c 022B     		cmp	r3, #2
 281 013e F1D9     		bls	.L22
 282              	.L19:
 156:CAN_TX_RX_func.c ****         }
 157:CAN_TX_RX_func.c ****     }
 158:CAN_TX_RX_func.c **** 
 159:CAN_TX_RX_func.c ****     return (result);
 160:CAN_TX_RX_func.c **** }
 283              		.loc 1 160 0
 284              		@ sp needed
 285              	.LVL25:
 286              	.LVL26:
 287 0140 0CBC     		pop	{r2, r3}
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc7VeyuG.s 			page 9


 288 0142 9046     		mov	r8, r2
 289 0144 9946     		mov	r9, r3
 290 0146 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 291              	.L24:
 292              		.align	2
 293              	.L23:
 294 0148 08002E40 		.word	1076756488
 295 014c 20002E40 		.word	1076756512
 296 0150 2C002E40 		.word	1076756524
 297 0154 08008000 		.word	8388616
 298              		.cfi_endproc
 299              	.LFE1:
 300              		.size	CAN_SendMsg, .-CAN_SendMsg
 301              		.section	.text.CAN_TxCancel,"ax",%progbits
 302              		.align	2
 303              		.global	CAN_TxCancel
 304              		.code	16
 305              		.thumb_func
 306              		.type	CAN_TxCancel, %function
 307              	CAN_TxCancel:
 308              	.LFB2:
 161:CAN_TX_RX_func.c **** 
 162:CAN_TX_RX_func.c **** 
 163:CAN_TX_RX_func.c **** /*******************************************************************************
 164:CAN_TX_RX_func.c **** * FUNCTION NAME:   CAN_TxCancel
 165:CAN_TX_RX_func.c **** ********************************************************************************
 166:CAN_TX_RX_func.c **** *
 167:CAN_TX_RX_func.c **** * Summary:
 168:CAN_TX_RX_func.c **** *  This function cancels transmission of a message that has been queued to be
 169:CAN_TX_RX_func.c **** *  transmitted. Values between 0 and 7 are valid.
 170:CAN_TX_RX_func.c **** *
 171:CAN_TX_RX_func.c **** * Parameters:
 172:CAN_TX_RX_func.c **** *  bufferId: The mailbox number.
 173:CAN_TX_RX_func.c **** *
 174:CAN_TX_RX_func.c **** * Return:
 175:CAN_TX_RX_func.c **** *  None.
 176:CAN_TX_RX_func.c **** *
 177:CAN_TX_RX_func.c **** *******************************************************************************/
 178:CAN_TX_RX_func.c **** void CAN_TxCancel(uint8 bufferId) 
 179:CAN_TX_RX_func.c **** {
 309              		.loc 1 179 0
 310              		.cfi_startproc
 311              	.LVL27:
 180:CAN_TX_RX_func.c ****     if (bufferId < CAN_NUMBER_OF_TX_MAILBOXES)
 312              		.loc 1 180 0
 313 0000 0728     		cmp	r0, #7
 314 0002 09D8     		bhi	.L25
 181:CAN_TX_RX_func.c ****     {
 182:CAN_TX_RX_func.c ****         CAN_TX_ABORT_MESSAGE(bufferId);
 315              		.loc 1 182 0
 316 0004 0001     		lsl	r0, r0, #4
 317              	.LVL28:
 318 0006 054B     		ldr	r3, .L27
 319 0008 9C46     		mov	ip, r3
 320 000a 6044     		add	r0, r0, ip
 321 000c 0368     		ldr	r3, [r0]
 322 000e 0322     		mov	r2, #3
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc7VeyuG.s 			page 10


 323 0010 9343     		bic	r3, r2
 324 0012 013A     		sub	r2, r2, #1
 325 0014 1343     		orr	r3, r2
 326 0016 0360     		str	r3, [r0]
 327              	.L25:
 183:CAN_TX_RX_func.c ****     }
 184:CAN_TX_RX_func.c **** }
 328              		.loc 1 184 0
 329              		@ sp needed
 330 0018 7047     		bx	lr
 331              	.L28:
 332 001a C046     		.align	2
 333              	.L27:
 334 001c 20002E40 		.word	1076756512
 335              		.cfi_endproc
 336              	.LFE2:
 337              		.size	CAN_TxCancel, .-CAN_TxCancel
 338              		.section	.text.CAN_SendMsg0,"ax",%progbits
 339              		.align	2
 340              		.global	CAN_SendMsg0
 341              		.code	16
 342              		.thumb_func
 343              		.type	CAN_SendMsg0, %function
 344              	CAN_SendMsg0:
 345              	.LFB3:
 185:CAN_TX_RX_func.c **** 
 186:CAN_TX_RX_func.c **** 
 187:CAN_TX_RX_func.c **** #if (CAN_TX0_FUNC_ENABLE)
 188:CAN_TX_RX_func.c ****     /*******************************************************************************
 189:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg0
 190:CAN_TX_RX_func.c ****     ********************************************************************************
 191:CAN_TX_RX_func.c ****     *
 192:CAN_TX_RX_func.c ****     * Summary:
 193:CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 0. The function checks
 194:CAN_TX_RX_func.c ****     *  if mailbox 0 doesn't already have un-transmitted messages waiting for
 195:CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 196:CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 197:CAN_TX_RX_func.c ****     *
 198:CAN_TX_RX_func.c ****     * Parameters:
 199:CAN_TX_RX_func.c ****     *  None.
 200:CAN_TX_RX_func.c ****     *
 201:CAN_TX_RX_func.c ****     * Return:
 202:CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 203:CAN_TX_RX_func.c ****     *   Define                             Description
 204:CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 205:CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 206:CAN_TX_RX_func.c ****     *
 207:CAN_TX_RX_func.c ****     *******************************************************************************/
 208:CAN_TX_RX_func.c ****     uint8 CAN_SendMsg0(void) 
 209:CAN_TX_RX_func.c ****     {
 346              		.loc 1 209 0
 347              		.cfi_startproc
 348              	.LVL29:
 210:CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 211:CAN_TX_RX_func.c **** 
 212:CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 213:CAN_TX_RX_func.c ****             if ((CAN_TX[0u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc7VeyuG.s 			page 11


 214:CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 215:CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(0u) & CAN_TX_REQUEST_PENDING) != 0u)
 349              		.loc 1 215 0
 350 0000 064B     		ldr	r3, .L32
 351 0002 1B68     		ldr	r3, [r3]
 352 0004 DB07     		lsl	r3, r3, #31
 353 0006 06D4     		bmi	.L31
 216:CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 217:CAN_TX_RX_func.c ****             {
 218:CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 219:CAN_TX_RX_func.c ****             }
 220:CAN_TX_RX_func.c ****             else
 221:CAN_TX_RX_func.c ****             {
 222:CAN_TX_RX_func.c ****                 /* `#START MESSAGE_0_TRASMITTED` */
 223:CAN_TX_RX_func.c ****                 //CAN_TX_DATA_BYTE(0,0,dato_enviado);
 224:CAN_TX_RX_func.c ****                 /* `#END` */
 225:CAN_TX_RX_func.c **** 
 226:CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_0_CALLBACK
 227:CAN_TX_RX_func.c ****                     CAN_SendMsg_0_Callback();
 228:CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_0_CALLBACK */
 229:CAN_TX_RX_func.c **** 
 230:CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(0u),
 354              		.loc 1 230 0
 355 0008 044A     		ldr	r2, .L32
 356 000a 1168     		ldr	r1, [r2]
 357 000c 0123     		mov	r3, #1
 358 000e 0B43     		orr	r3, r1
 359 0010 1360     		str	r3, [r2]
 210:CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 360              		.loc 1 210 0
 361 0012 0020     		mov	r0, #0
 362 0014 00E0     		b	.L30
 363              	.L31:
 218:CAN_TX_RX_func.c ****             }
 364              		.loc 1 218 0
 365 0016 0120     		mov	r0, #1
 366              	.L30:
 367              	.LVL30:
 231:CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(0u)) | CAN_SEND_MESSAGE);
 232:CAN_TX_RX_func.c ****             }
 233:CAN_TX_RX_func.c **** 
 234:CAN_TX_RX_func.c ****         return (result);
 235:CAN_TX_RX_func.c ****     }
 368              		.loc 1 235 0
 369              		@ sp needed
 370 0018 7047     		bx	lr
 371              	.L33:
 372 001a C046     		.align	2
 373              	.L32:
 374 001c 20002E40 		.word	1076756512
 375              		.cfi_endproc
 376              	.LFE3:
 377              		.size	CAN_SendMsg0, .-CAN_SendMsg0
 378              		.section	.text.CAN_ReceiveMsg,"ax",%progbits
 379              		.align	2
 380              		.global	CAN_ReceiveMsg
 381              		.code	16
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc7VeyuG.s 			page 12


 382              		.thumb_func
 383              		.type	CAN_ReceiveMsg, %function
 384              	CAN_ReceiveMsg:
 385              	.LFB4:
 236:CAN_TX_RX_func.c **** #endif /* CAN_TX0_FUNC_ENABLE */
 237:CAN_TX_RX_func.c **** 
 238:CAN_TX_RX_func.c **** 
 239:CAN_TX_RX_func.c **** #if (CAN_TX1_FUNC_ENABLE)
 240:CAN_TX_RX_func.c ****     /*******************************************************************************
 241:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg1
 242:CAN_TX_RX_func.c ****     ********************************************************************************
 243:CAN_TX_RX_func.c ****     *
 244:CAN_TX_RX_func.c ****     * Summary:
 245:CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 1. The function checks
 246:CAN_TX_RX_func.c ****     *  if mailbox 1 doesn't already have un-transmitted messages waiting for
 247:CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 248:CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 249:CAN_TX_RX_func.c ****     *
 250:CAN_TX_RX_func.c ****     * Parameters:
 251:CAN_TX_RX_func.c ****     *  None.
 252:CAN_TX_RX_func.c ****     *
 253:CAN_TX_RX_func.c ****     * Return:
 254:CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 255:CAN_TX_RX_func.c ****     *   Define                             Description
 256:CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 257:CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 258:CAN_TX_RX_func.c ****     *
 259:CAN_TX_RX_func.c ****     *******************************************************************************/
 260:CAN_TX_RX_func.c ****     uint8 CAN_SendMsg1(void) 
 261:CAN_TX_RX_func.c ****     {
 262:CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 263:CAN_TX_RX_func.c **** 
 264:CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 265:CAN_TX_RX_func.c ****             if ((CAN_TX[1u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 266:CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 267:CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(1u) & CAN_TX_REQUEST_PENDING) != 0u)
 268:CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 269:CAN_TX_RX_func.c ****             {
 270:CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 271:CAN_TX_RX_func.c ****             }
 272:CAN_TX_RX_func.c ****             else
 273:CAN_TX_RX_func.c ****             {
 274:CAN_TX_RX_func.c ****                 /* `#START MESSAGE_1_TRASMITTED` */
 275:CAN_TX_RX_func.c **** 
 276:CAN_TX_RX_func.c ****                 /* `#END` */
 277:CAN_TX_RX_func.c **** 
 278:CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_1_CALLBACK
 279:CAN_TX_RX_func.c ****                     CAN_SendMsg_1_Callback();
 280:CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_1_CALLBACK */
 281:CAN_TX_RX_func.c **** 
 282:CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(1u),
 283:CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(1u)) | CAN_SEND_MESSAGE);
 284:CAN_TX_RX_func.c ****             }
 285:CAN_TX_RX_func.c **** 
 286:CAN_TX_RX_func.c ****         return (result);
 287:CAN_TX_RX_func.c ****     }
 288:CAN_TX_RX_func.c **** #endif /* CAN_TX1_FUNC_ENABLE */
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc7VeyuG.s 			page 13


 289:CAN_TX_RX_func.c **** 
 290:CAN_TX_RX_func.c **** 
 291:CAN_TX_RX_func.c **** #if (CAN_TX2_FUNC_ENABLE)
 292:CAN_TX_RX_func.c ****     /*******************************************************************************
 293:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg2
 294:CAN_TX_RX_func.c ****     ********************************************************************************
 295:CAN_TX_RX_func.c ****     *
 296:CAN_TX_RX_func.c ****     * Summary:
 297:CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 2. The function checks
 298:CAN_TX_RX_func.c ****     *  if mailbox 2 doesn't already have un-transmitted messages waiting for
 299:CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 300:CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 301:CAN_TX_RX_func.c ****     *
 302:CAN_TX_RX_func.c ****     * Parameters:
 303:CAN_TX_RX_func.c ****     *  None.
 304:CAN_TX_RX_func.c ****     *
 305:CAN_TX_RX_func.c ****     * Return:
 306:CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 307:CAN_TX_RX_func.c ****     *   Define                             Description
 308:CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 309:CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 310:CAN_TX_RX_func.c ****     *
 311:CAN_TX_RX_func.c ****     *******************************************************************************/
 312:CAN_TX_RX_func.c ****     uint8 CAN_SendMsg2(void) 
 313:CAN_TX_RX_func.c ****     {
 314:CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 315:CAN_TX_RX_func.c **** 
 316:CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 317:CAN_TX_RX_func.c ****             if ((CAN_TX[2u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 318:CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 319:CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(2u) & CAN_TX_REQUEST_PENDING) != 0u)
 320:CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 321:CAN_TX_RX_func.c ****             {
 322:CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 323:CAN_TX_RX_func.c ****             }
 324:CAN_TX_RX_func.c ****             else
 325:CAN_TX_RX_func.c ****             {
 326:CAN_TX_RX_func.c ****                 /* `#START MESSAGE_2_TRASMITTED` */
 327:CAN_TX_RX_func.c **** 
 328:CAN_TX_RX_func.c ****                 /* `#END` */
 329:CAN_TX_RX_func.c **** 
 330:CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_2_CALLBACK
 331:CAN_TX_RX_func.c ****                     CAN_SendMsg_2_Callback();
 332:CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_2_CALLBACK */
 333:CAN_TX_RX_func.c **** 
 334:CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(2u),
 335:CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(2u)) | CAN_SEND_MESSAGE);
 336:CAN_TX_RX_func.c ****             }
 337:CAN_TX_RX_func.c **** 
 338:CAN_TX_RX_func.c ****         return (result);
 339:CAN_TX_RX_func.c ****     }
 340:CAN_TX_RX_func.c **** #endif /* CAN_TX2_FUNC_ENABLE */
 341:CAN_TX_RX_func.c **** 
 342:CAN_TX_RX_func.c **** 
 343:CAN_TX_RX_func.c **** #if (CAN_TX3_FUNC_ENABLE)
 344:CAN_TX_RX_func.c ****     /*******************************************************************************
 345:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg3
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc7VeyuG.s 			page 14


 346:CAN_TX_RX_func.c ****     ********************************************************************************
 347:CAN_TX_RX_func.c ****     *
 348:CAN_TX_RX_func.c ****     * Summary:
 349:CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 3. The function checks
 350:CAN_TX_RX_func.c ****     *  if mailbox 3 doesn't already have un-transmitted messages waiting for
 351:CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 352:CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 353:CAN_TX_RX_func.c ****     *
 354:CAN_TX_RX_func.c ****     * Parameters:
 355:CAN_TX_RX_func.c ****     *  None.
 356:CAN_TX_RX_func.c ****     *
 357:CAN_TX_RX_func.c ****     * Return:
 358:CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 359:CAN_TX_RX_func.c ****     *   Define                             Description
 360:CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 361:CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 362:CAN_TX_RX_func.c ****     *
 363:CAN_TX_RX_func.c ****     *******************************************************************************/
 364:CAN_TX_RX_func.c ****     uint8 CAN_SendMsg3(void) 
 365:CAN_TX_RX_func.c ****     {
 366:CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 367:CAN_TX_RX_func.c **** 
 368:CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 369:CAN_TX_RX_func.c ****             if ((CAN_TX[3u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 370:CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 371:CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(3u) & CAN_TX_REQUEST_PENDING) != 0u)
 372:CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 373:CAN_TX_RX_func.c ****             {
 374:CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 375:CAN_TX_RX_func.c ****             }
 376:CAN_TX_RX_func.c ****             else
 377:CAN_TX_RX_func.c ****             {
 378:CAN_TX_RX_func.c ****                 /* `#START MESSAGE_3_TRASMITTED` */
 379:CAN_TX_RX_func.c **** 
 380:CAN_TX_RX_func.c ****                 /* `#END` */
 381:CAN_TX_RX_func.c **** 
 382:CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_3_CALLBACK
 383:CAN_TX_RX_func.c ****                     CAN_SendMsg_3_Callback();
 384:CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_3_CALLBACK */
 385:CAN_TX_RX_func.c **** 
 386:CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(3u),
 387:CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(3u)) | CAN_SEND_MESSAGE);
 388:CAN_TX_RX_func.c ****             }
 389:CAN_TX_RX_func.c **** 
 390:CAN_TX_RX_func.c ****         return (result);
 391:CAN_TX_RX_func.c ****     }
 392:CAN_TX_RX_func.c **** #endif /* CAN_TX3_FUNC_ENABLE */
 393:CAN_TX_RX_func.c **** 
 394:CAN_TX_RX_func.c **** 
 395:CAN_TX_RX_func.c **** #if (CAN_TX4_FUNC_ENABLE)
 396:CAN_TX_RX_func.c ****     /*******************************************************************************
 397:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg4
 398:CAN_TX_RX_func.c ****     ********************************************************************************
 399:CAN_TX_RX_func.c ****     *
 400:CAN_TX_RX_func.c ****     * Summary:
 401:CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 4. The function checks
 402:CAN_TX_RX_func.c ****     *  if mailbox 4 doesn't already have un-transmitted messages waiting for
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc7VeyuG.s 			page 15


 403:CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 404:CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 405:CAN_TX_RX_func.c ****     *
 406:CAN_TX_RX_func.c ****     * Parameters:
 407:CAN_TX_RX_func.c ****     *  None.
 408:CAN_TX_RX_func.c ****     *
 409:CAN_TX_RX_func.c ****     * Return:
 410:CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 411:CAN_TX_RX_func.c ****     *   Define                             Description
 412:CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 413:CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 414:CAN_TX_RX_func.c ****     *
 415:CAN_TX_RX_func.c ****     *******************************************************************************/
 416:CAN_TX_RX_func.c ****     uint8 CAN_SendMsg4(void) 
 417:CAN_TX_RX_func.c ****     {
 418:CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 419:CAN_TX_RX_func.c **** 
 420:CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 421:CAN_TX_RX_func.c ****             if ((CAN_TX[4u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 422:CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 423:CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(4u) & CAN_TX_REQUEST_PENDING) != 0u)
 424:CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 425:CAN_TX_RX_func.c ****             {
 426:CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 427:CAN_TX_RX_func.c ****             }
 428:CAN_TX_RX_func.c ****             else
 429:CAN_TX_RX_func.c ****             {
 430:CAN_TX_RX_func.c ****                 /* `#START MESSAGE_4_TRASMITTED` */
 431:CAN_TX_RX_func.c **** 
 432:CAN_TX_RX_func.c ****                 /* `#END` */
 433:CAN_TX_RX_func.c **** 
 434:CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_4_CALLBACK
 435:CAN_TX_RX_func.c ****                     CAN_SendMsg_4_Callback();
 436:CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_4_CALLBACK */
 437:CAN_TX_RX_func.c **** 
 438:CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(4u),
 439:CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(4u)) | CAN_SEND_MESSAGE);
 440:CAN_TX_RX_func.c ****             }
 441:CAN_TX_RX_func.c **** 
 442:CAN_TX_RX_func.c ****         return (result);
 443:CAN_TX_RX_func.c ****     }
 444:CAN_TX_RX_func.c **** #endif /* CAN_TX4_FUNC_ENABLE */
 445:CAN_TX_RX_func.c **** 
 446:CAN_TX_RX_func.c **** 
 447:CAN_TX_RX_func.c **** #if (CAN_TX5_FUNC_ENABLE)
 448:CAN_TX_RX_func.c ****     /*******************************************************************************
 449:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg5
 450:CAN_TX_RX_func.c ****     ********************************************************************************
 451:CAN_TX_RX_func.c ****     *
 452:CAN_TX_RX_func.c ****     * Summary:
 453:CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 5. The function checks
 454:CAN_TX_RX_func.c ****     *  if mailbox 5 doesn't already have un-transmitted messages waiting for
 455:CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 456:CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 457:CAN_TX_RX_func.c ****     *
 458:CAN_TX_RX_func.c ****     * Parameters:
 459:CAN_TX_RX_func.c ****     *  None.
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc7VeyuG.s 			page 16


 460:CAN_TX_RX_func.c ****     *
 461:CAN_TX_RX_func.c ****     * Return:
 462:CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 463:CAN_TX_RX_func.c ****     *   Define                             Description
 464:CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 465:CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 466:CAN_TX_RX_func.c ****     *
 467:CAN_TX_RX_func.c ****     *******************************************************************************/
 468:CAN_TX_RX_func.c ****     uint8 CAN_SendMsg5(void) 
 469:CAN_TX_RX_func.c ****     {
 470:CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 471:CAN_TX_RX_func.c **** 
 472:CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 473:CAN_TX_RX_func.c ****             if ((CAN_TX[5u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 474:CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 475:CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(5u) & CAN_TX_REQUEST_PENDING) != 0u)
 476:CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 477:CAN_TX_RX_func.c ****             {
 478:CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 479:CAN_TX_RX_func.c ****             }
 480:CAN_TX_RX_func.c ****             else
 481:CAN_TX_RX_func.c ****             {
 482:CAN_TX_RX_func.c ****                 /* `#START MESSAGE_5_TRASMITTED` */
 483:CAN_TX_RX_func.c **** 
 484:CAN_TX_RX_func.c ****                 /* `#END` */
 485:CAN_TX_RX_func.c **** 
 486:CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_5_CALLBACK
 487:CAN_TX_RX_func.c ****                     CAN_SendMsg_5_Callback();
 488:CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_5_CALLBACK */
 489:CAN_TX_RX_func.c **** 
 490:CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(5u),
 491:CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(5u)) | CAN_SEND_MESSAGE);
 492:CAN_TX_RX_func.c ****             }
 493:CAN_TX_RX_func.c **** 
 494:CAN_TX_RX_func.c ****         return (result);
 495:CAN_TX_RX_func.c ****     }
 496:CAN_TX_RX_func.c **** #endif /* CAN_TX5_FUNC_ENABLE */
 497:CAN_TX_RX_func.c **** 
 498:CAN_TX_RX_func.c **** 
 499:CAN_TX_RX_func.c **** #if (CAN_TX6_FUNC_ENABLE)
 500:CAN_TX_RX_func.c ****     /*******************************************************************************
 501:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg6
 502:CAN_TX_RX_func.c ****     ********************************************************************************
 503:CAN_TX_RX_func.c ****     *
 504:CAN_TX_RX_func.c ****     * Summary:
 505:CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 6. The function checks
 506:CAN_TX_RX_func.c ****     *  if mailbox 6 doesn't already have un-transmitted messages waiting for
 507:CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 508:CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 509:CAN_TX_RX_func.c ****     *
 510:CAN_TX_RX_func.c ****     * Parameters:
 511:CAN_TX_RX_func.c ****     *  None.
 512:CAN_TX_RX_func.c ****     *
 513:CAN_TX_RX_func.c ****     * Return:
 514:CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 515:CAN_TX_RX_func.c ****     *   Define                             Description
 516:CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc7VeyuG.s 			page 17


 517:CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 518:CAN_TX_RX_func.c ****     *
 519:CAN_TX_RX_func.c ****     *******************************************************************************/
 520:CAN_TX_RX_func.c ****     uint8 CAN_SendMsg6(void) 
 521:CAN_TX_RX_func.c ****     {
 522:CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 523:CAN_TX_RX_func.c **** 
 524:CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 525:CAN_TX_RX_func.c ****             if ((CAN_TX[6u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 526:CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 527:CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(6u) & CAN_TX_REQUEST_PENDING) != 0u)
 528:CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 529:CAN_TX_RX_func.c ****             {
 530:CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 531:CAN_TX_RX_func.c ****             }
 532:CAN_TX_RX_func.c ****             else
 533:CAN_TX_RX_func.c ****             {
 534:CAN_TX_RX_func.c ****                 /* `#START MESSAGE_6_TRASMITTED` */
 535:CAN_TX_RX_func.c **** 
 536:CAN_TX_RX_func.c ****                 /* `#END` */
 537:CAN_TX_RX_func.c **** 
 538:CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_6_CALLBACK
 539:CAN_TX_RX_func.c ****                     CAN_SendMsg_6_Callback();
 540:CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_6_CALLBACK */
 541:CAN_TX_RX_func.c **** 
 542:CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(6u),
 543:CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(6u)) | CAN_SEND_MESSAGE);
 544:CAN_TX_RX_func.c ****             }
 545:CAN_TX_RX_func.c **** 
 546:CAN_TX_RX_func.c ****         return (result);
 547:CAN_TX_RX_func.c ****     }
 548:CAN_TX_RX_func.c **** #endif /* CAN_TX6_FUNC_ENABLE */
 549:CAN_TX_RX_func.c **** 
 550:CAN_TX_RX_func.c **** 
 551:CAN_TX_RX_func.c **** #if (CAN_TX7_FUNC_ENABLE)
 552:CAN_TX_RX_func.c ****     /*******************************************************************************
 553:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg7)
 554:CAN_TX_RX_func.c ****     ********************************************************************************
 555:CAN_TX_RX_func.c ****     *
 556:CAN_TX_RX_func.c ****     * Summary:
 557:CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 7. The function checks
 558:CAN_TX_RX_func.c ****     *  if mailbox 7 doesn't already have un-transmitted messages waiting for
 559:CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 560:CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 561:CAN_TX_RX_func.c ****     *
 562:CAN_TX_RX_func.c ****     * Parameters:
 563:CAN_TX_RX_func.c ****     *  None.
 564:CAN_TX_RX_func.c ****     *
 565:CAN_TX_RX_func.c ****     * Return:
 566:CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 567:CAN_TX_RX_func.c ****     *   Define                             Description
 568:CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 569:CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 570:CAN_TX_RX_func.c ****     *
 571:CAN_TX_RX_func.c ****     *******************************************************************************/
 572:CAN_TX_RX_func.c ****     uint8 CAN_SendMsg7(void) 
 573:CAN_TX_RX_func.c ****     {
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc7VeyuG.s 			page 18


 574:CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 575:CAN_TX_RX_func.c **** 
 576:CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 577:CAN_TX_RX_func.c ****             if ((CAN_TX[7u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 578:CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 579:CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(7u) & CAN_TX_REQUEST_PENDING) != 0u)
 580:CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 581:CAN_TX_RX_func.c ****             {
 582:CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 583:CAN_TX_RX_func.c ****             }
 584:CAN_TX_RX_func.c ****             else
 585:CAN_TX_RX_func.c ****             {
 586:CAN_TX_RX_func.c ****                 /* `#START MESSAGE_7_TRASMITTED` */
 587:CAN_TX_RX_func.c **** 
 588:CAN_TX_RX_func.c ****                 /* `#END` */
 589:CAN_TX_RX_func.c **** 
 590:CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_7_CALLBACK
 591:CAN_TX_RX_func.c ****                     CAN_SendMsg_7_Callback();
 592:CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_7_CALLBACK */
 593:CAN_TX_RX_func.c **** 
 594:CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(7u),
 595:CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(7u)) | CAN_SEND_MESSAGE);
 596:CAN_TX_RX_func.c ****             }
 597:CAN_TX_RX_func.c **** 
 598:CAN_TX_RX_func.c ****         return (result);
 599:CAN_TX_RX_func.c ****     }
 600:CAN_TX_RX_func.c **** #endif /* CAN_TX7_FUNC_ENABLE */
 601:CAN_TX_RX_func.c **** 
 602:CAN_TX_RX_func.c **** 
 603:CAN_TX_RX_func.c **** /*******************************************************************************
 604:CAN_TX_RX_func.c **** * FUNCTION NAME:   CAN_ReceiveMsg
 605:CAN_TX_RX_func.c **** ********************************************************************************
 606:CAN_TX_RX_func.c **** *
 607:CAN_TX_RX_func.c **** * Summary:
 608:CAN_TX_RX_func.c **** *  This function is the entry point to Receive Message Interrupt for Basic
 609:CAN_TX_RX_func.c **** *  mailboxes. Clears the Receive particular Message interrupt flag. Generated
 610:CAN_TX_RX_func.c **** *  only if one of the Receive mailboxes is designed as Basic.
 611:CAN_TX_RX_func.c **** *
 612:CAN_TX_RX_func.c **** * Parameters:
 613:CAN_TX_RX_func.c **** *  rxMailbox: The mailbox number that trig Receive Message Interrupt.
 614:CAN_TX_RX_func.c **** *
 615:CAN_TX_RX_func.c **** * Return:
 616:CAN_TX_RX_func.c **** *  None.
 617:CAN_TX_RX_func.c **** *
 618:CAN_TX_RX_func.c **** * Reentrant:
 619:CAN_TX_RX_func.c **** *  Depends on the Customer code.
 620:CAN_TX_RX_func.c **** *
 621:CAN_TX_RX_func.c **** *******************************************************************************/
 622:CAN_TX_RX_func.c **** void CAN_ReceiveMsg(uint8 rxMailbox) 
 623:CAN_TX_RX_func.c **** {
 386              		.loc 1 623 0
 387              		.cfi_startproc
 388              	.LVL31:
 624:CAN_TX_RX_func.c ****     #if (CY_PSOC3 || CY_PSOC5)
 625:CAN_TX_RX_func.c ****         if ((CAN_RX[rxMailbox].rxcmd.byte[0u] & CAN_RX_ACK_MSG) != 0u)
 626:CAN_TX_RX_func.c ****     #else  /* CY_PSOC4 */
 627:CAN_TX_RX_func.c ****         if ((CAN_RX_CMD_REG(rxMailbox) & CAN_RX_ACK_MSG) != 0u)
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc7VeyuG.s 			page 19


 389              		.loc 1 627 0
 390 0000 4001     		lsl	r0, r0, #5
 391              	.LVL32:
 392 0002 054B     		ldr	r3, .L36
 393 0004 9C46     		mov	ip, r3
 394 0006 6044     		add	r0, r0, ip
 395 0008 0368     		ldr	r3, [r0]
 396 000a DB07     		lsl	r3, r3, #31
 397 000c 03D5     		bpl	.L34
 628:CAN_TX_RX_func.c ****     #endif /* CY_PSOC3 || CY_PSOC5 */
 629:CAN_TX_RX_func.c ****         {
 630:CAN_TX_RX_func.c ****             /* `#START MESSAGE_BASIC_RECEIVED` */
 631:CAN_TX_RX_func.c **** 
 632:CAN_TX_RX_func.c ****             /* `#END` */
 633:CAN_TX_RX_func.c **** 
 634:CAN_TX_RX_func.c ****             #ifdef CAN_RECEIVE_MSG_CALLBACK
 635:CAN_TX_RX_func.c ****                 CAN_ReceiveMsg_Callback();
 636:CAN_TX_RX_func.c ****             #endif /* CAN_RECEIVE_MSG_CALLBACK */
 637:CAN_TX_RX_func.c **** 
 638:CAN_TX_RX_func.c ****             #if (CY_PSOC3 || CY_PSOC5)
 639:CAN_TX_RX_func.c ****                 CAN_RX[rxMailbox].rxcmd.byte[0u] |= CAN_RX_ACK_MSG;
 640:CAN_TX_RX_func.c ****             #else  /* CY_PSOC4 */
 641:CAN_TX_RX_func.c ****                 CAN_RX_CMD_REG(rxMailbox) |= CAN_RX_ACK_MSG;
 398              		.loc 1 641 0
 399 000e 0268     		ldr	r2, [r0]
 400 0010 0123     		mov	r3, #1
 401 0012 1343     		orr	r3, r2
 402 0014 0360     		str	r3, [r0]
 403              	.L34:
 642:CAN_TX_RX_func.c ****             #endif /* CY_PSOC3 || CY_PSOC5 */
 643:CAN_TX_RX_func.c ****         }
 644:CAN_TX_RX_func.c **** }
 404              		.loc 1 644 0
 405              		@ sp needed
 406 0016 7047     		bx	lr
 407              	.L37:
 408              		.align	2
 409              	.L36:
 410 0018 A0002E40 		.word	1076756640
 411              		.cfi_endproc
 412              	.LFE4:
 413              		.size	CAN_ReceiveMsg, .-CAN_ReceiveMsg
 414              		.section	.text.CAN_ReceiveMsg0,"ax",%progbits
 415              		.align	2
 416              		.global	CAN_ReceiveMsg0
 417              		.code	16
 418              		.thumb_func
 419              		.type	CAN_ReceiveMsg0, %function
 420              	CAN_ReceiveMsg0:
 421              	.LFB5:
 645:CAN_TX_RX_func.c **** 
 646:CAN_TX_RX_func.c **** 
 647:CAN_TX_RX_func.c **** #if (CAN_RX0_FUNC_ENABLE)
 648:CAN_TX_RX_func.c ****     /*******************************************************************************
 649:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_ReceiveMsg0
 650:CAN_TX_RX_func.c ****     ********************************************************************************
 651:CAN_TX_RX_func.c ****     *
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc7VeyuG.s 			page 20


 652:CAN_TX_RX_func.c ****     * Summary:
 653:CAN_TX_RX_func.c ****     *  This function is the entry point to Receive Message 0 Interrupt. Clears the
 654:CAN_TX_RX_func.c ****     *  Receive Message 0 interrupt flag. Generated only for the Receive mailbox
 655:CAN_TX_RX_func.c ****     *  designed as Full.
 656:CAN_TX_RX_func.c ****     *
 657:CAN_TX_RX_func.c ****     * Parameters:
 658:CAN_TX_RX_func.c ****     *  None.
 659:CAN_TX_RX_func.c ****     *
 660:CAN_TX_RX_func.c ****     * Return:
 661:CAN_TX_RX_func.c ****     *  None.
 662:CAN_TX_RX_func.c ****     *
 663:CAN_TX_RX_func.c ****     * Reentrant:
 664:CAN_TX_RX_func.c ****     *  Depends on the Customer code.
 665:CAN_TX_RX_func.c ****     *
 666:CAN_TX_RX_func.c ****     *******************************************************************************/
 667:CAN_TX_RX_func.c ****     void CAN_ReceiveMsg0(void) 
 668:CAN_TX_RX_func.c ****     {
 422              		.loc 1 668 0
 423              		.cfi_startproc
 669:CAN_TX_RX_func.c ****         /* `#START MESSAGE_0_RECEIVED` */
 670:CAN_TX_RX_func.c ****         mailbox0[0]=CAN_RX_DATA_BYTE1(0);
 424              		.loc 1 670 0
 425 0000 0F4A     		ldr	r2, .L39
 426 0002 1168     		ldr	r1, [r2]
 427 0004 090E     		lsr	r1, r1, #24
 428 0006 0F4B     		ldr	r3, .L39+4
 429 0008 1970     		strb	r1, [r3]
 671:CAN_TX_RX_func.c ****         mailbox0[1]=CAN_RX_DATA_BYTE2(0);
 430              		.loc 1 671 0
 431 000a 1168     		ldr	r1, [r2]
 432 000c 090C     		lsr	r1, r1, #16
 433 000e 5970     		strb	r1, [r3, #1]
 672:CAN_TX_RX_func.c ****         mailbox0[2]=CAN_RX_DATA_BYTE3(0);
 434              		.loc 1 672 0
 435 0010 1168     		ldr	r1, [r2]
 436 0012 090A     		lsr	r1, r1, #8
 437 0014 9970     		strb	r1, [r3, #2]
 673:CAN_TX_RX_func.c ****         mailbox0[3]=CAN_RX_DATA_BYTE4(0);
 438              		.loc 1 673 0
 439 0016 1268     		ldr	r2, [r2]
 440 0018 DA70     		strb	r2, [r3, #3]
 674:CAN_TX_RX_func.c ****         mailbox0[4]=CAN_RX_DATA_BYTE5(0);
 441              		.loc 1 674 0
 442 001a 0B4A     		ldr	r2, .L39+8
 443 001c 1168     		ldr	r1, [r2]
 444 001e 090E     		lsr	r1, r1, #24
 445 0020 1971     		strb	r1, [r3, #4]
 675:CAN_TX_RX_func.c ****         mailbox0[5]=CAN_RX_DATA_BYTE6(0);
 446              		.loc 1 675 0
 447 0022 1168     		ldr	r1, [r2]
 448 0024 090C     		lsr	r1, r1, #16
 449 0026 5971     		strb	r1, [r3, #5]
 676:CAN_TX_RX_func.c ****         mailbox0[6]=CAN_RX_DATA_BYTE7(0);
 450              		.loc 1 676 0
 451 0028 1168     		ldr	r1, [r2]
 452 002a 090A     		lsr	r1, r1, #8
 453 002c 9971     		strb	r1, [r3, #6]
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc7VeyuG.s 			page 21


 677:CAN_TX_RX_func.c ****         mailbox0[7]=CAN_RX_DATA_BYTE8(0);
 454              		.loc 1 677 0
 455 002e 1268     		ldr	r2, [r2]
 456 0030 DA71     		strb	r2, [r3, #7]
 678:CAN_TX_RX_func.c ****         /* `#END` */
 679:CAN_TX_RX_func.c **** 
 680:CAN_TX_RX_func.c ****         #ifdef CAN_RECEIVE_MSG_0_CALLBACK
 681:CAN_TX_RX_func.c ****             CAN_ReceiveMsg_0_Callback();
 682:CAN_TX_RX_func.c ****         #endif /* CAN_RECEIVE_MSG_0_CALLBACK */
 683:CAN_TX_RX_func.c **** 
 684:CAN_TX_RX_func.c ****         CAN_RX_ACK_MESSAGE(0u);
 457              		.loc 1 684 0
 458 0032 064A     		ldr	r2, .L39+12
 459 0034 1168     		ldr	r1, [r2]
 460 0036 0123     		mov	r3, #1
 461 0038 0B43     		orr	r3, r1
 462 003a 1360     		str	r3, [r2]
 685:CAN_TX_RX_func.c ****     }
 463              		.loc 1 685 0
 464              		@ sp needed
 465 003c 7047     		bx	lr
 466              	.L40:
 467 003e C046     		.align	2
 468              	.L39:
 469 0040 A8002E40 		.word	1076756648
 470 0044 00000000 		.word	mailbox0
 471 0048 AC002E40 		.word	1076756652
 472 004c A0002E40 		.word	1076756640
 473              		.cfi_endproc
 474              	.LFE5:
 475              		.size	CAN_ReceiveMsg0, .-CAN_ReceiveMsg0
 476              		.text
 477              	.Letext0:
 478              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 479              		.file 3 "Generated_Source\\PSoC4/CAN.h"
 480              		.file 4 "Generated_Source\\PSoC4/CyLib.h"
 481              		.section	.debug_info,"",%progbits
 482              	.Ldebug_info0:
 483 0000 C1030000 		.4byte	0x3c1
 484 0004 0400     		.2byte	0x4
 485 0006 00000000 		.4byte	.Ldebug_abbrev0
 486 000a 04       		.byte	0x4
 487 000b 01       		.uleb128 0x1
 488 000c C0010000 		.4byte	.LASF45
 489 0010 01       		.byte	0x1
 490 0011 3E000000 		.4byte	.LASF46
 491 0015 78000000 		.4byte	.LASF47
 492 0019 00000000 		.4byte	.Ldebug_ranges0+0
 493 001d 00000000 		.4byte	0
 494 0021 00000000 		.4byte	.Ldebug_line0
 495 0025 02       		.uleb128 0x2
 496 0026 01       		.byte	0x1
 497 0027 06       		.byte	0x6
 498 0028 C8020000 		.4byte	.LASF0
 499 002c 02       		.uleb128 0x2
 500 002d 01       		.byte	0x1
 501 002e 08       		.byte	0x8
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc7VeyuG.s 			page 22


 502 002f 08010000 		.4byte	.LASF1
 503 0033 02       		.uleb128 0x2
 504 0034 02       		.byte	0x2
 505 0035 05       		.byte	0x5
 506 0036 74010000 		.4byte	.LASF2
 507 003a 02       		.uleb128 0x2
 508 003b 02       		.byte	0x2
 509 003c 07       		.byte	0x7
 510 003d 5A000000 		.4byte	.LASF3
 511 0041 02       		.uleb128 0x2
 512 0042 04       		.byte	0x4
 513 0043 05       		.byte	0x5
 514 0044 B3020000 		.4byte	.LASF4
 515 0048 02       		.uleb128 0x2
 516 0049 04       		.byte	0x4
 517 004a 07       		.byte	0x7
 518 004b 27010000 		.4byte	.LASF5
 519 004f 02       		.uleb128 0x2
 520 0050 08       		.byte	0x8
 521 0051 05       		.byte	0x5
 522 0052 7F020000 		.4byte	.LASF6
 523 0056 02       		.uleb128 0x2
 524 0057 08       		.byte	0x8
 525 0058 07       		.byte	0x7
 526 0059 A2010000 		.4byte	.LASF7
 527 005d 03       		.uleb128 0x3
 528 005e 04       		.byte	0x4
 529 005f 05       		.byte	0x5
 530 0060 696E7400 		.ascii	"int\000"
 531 0064 02       		.uleb128 0x2
 532 0065 04       		.byte	0x4
 533 0066 07       		.byte	0x7
 534 0067 95010000 		.4byte	.LASF8
 535 006b 04       		.uleb128 0x4
 536 006c 39010000 		.4byte	.LASF9
 537 0070 02       		.byte	0x2
 538 0071 9801     		.2byte	0x198
 539 0073 2C000000 		.4byte	0x2c
 540 0077 04       		.uleb128 0x4
 541 0078 7E010000 		.4byte	.LASF10
 542 007c 02       		.byte	0x2
 543 007d 9A01     		.2byte	0x19a
 544 007f 48000000 		.4byte	0x48
 545 0083 02       		.uleb128 0x2
 546 0084 04       		.byte	0x4
 547 0085 04       		.byte	0x4
 548 0086 EB000000 		.4byte	.LASF11
 549 008a 02       		.uleb128 0x2
 550 008b 08       		.byte	0x8
 551 008c 04       		.byte	0x4
 552 008d 65010000 		.4byte	.LASF12
 553 0091 02       		.uleb128 0x2
 554 0092 01       		.byte	0x1
 555 0093 08       		.byte	0x8
 556 0094 73000000 		.4byte	.LASF13
 557 0098 04       		.uleb128 0x4
 558 0099 22010000 		.4byte	.LASF14
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc7VeyuG.s 			page 23


 559 009d 02       		.byte	0x2
 560 009e 4202     		.2byte	0x242
 561 00a0 A4000000 		.4byte	0xa4
 562 00a4 05       		.uleb128 0x5
 563 00a5 6B000000 		.4byte	0x6b
 564 00a9 04       		.uleb128 0x4
 565 00aa 16010000 		.4byte	.LASF15
 566 00ae 02       		.byte	0x2
 567 00af 4402     		.2byte	0x244
 568 00b1 B5000000 		.4byte	0xb5
 569 00b5 05       		.uleb128 0x5
 570 00b6 77000000 		.4byte	0x77
 571 00ba 02       		.uleb128 0x2
 572 00bb 04       		.byte	0x4
 573 00bc 07       		.byte	0x7
 574 00bd 6F020000 		.4byte	.LASF16
 575 00c1 06       		.uleb128 0x6
 576 00c2 08       		.byte	0x8
 577 00c3 03       		.byte	0x3
 578 00c4 6F       		.byte	0x6f
 579 00c5 D6000000 		.4byte	0xd6
 580 00c9 07       		.uleb128 0x7
 581 00ca D8000000 		.4byte	.LASF18
 582 00ce 03       		.byte	0x3
 583 00cf 71       		.byte	0x71
 584 00d0 D6000000 		.4byte	0xd6
 585 00d4 00       		.byte	0
 586 00d5 00       		.byte	0
 587 00d6 08       		.uleb128 0x8
 588 00d7 6B000000 		.4byte	0x6b
 589 00db E6000000 		.4byte	0xe6
 590 00df 09       		.uleb128 0x9
 591 00e0 BA000000 		.4byte	0xba
 592 00e4 07       		.byte	0x7
 593 00e5 00       		.byte	0
 594 00e6 0A       		.uleb128 0xa
 595 00e7 3F010000 		.4byte	.LASF17
 596 00eb 03       		.byte	0x3
 597 00ec 72       		.byte	0x72
 598 00ed C1000000 		.4byte	0xc1
 599 00f1 06       		.uleb128 0x6
 600 00f2 08       		.byte	0x8
 601 00f3 03       		.byte	0x3
 602 00f4 75       		.byte	0x75
 603 00f5 06010000 		.4byte	0x106
 604 00f9 07       		.uleb128 0x7
 605 00fa D8000000 		.4byte	.LASF18
 606 00fe 03       		.byte	0x3
 607 00ff 77       		.byte	0x77
 608 0100 16010000 		.4byte	0x116
 609 0104 00       		.byte	0
 610 0105 00       		.byte	0
 611 0106 08       		.uleb128 0x8
 612 0107 98000000 		.4byte	0x98
 613 010b 16010000 		.4byte	0x116
 614 010f 09       		.uleb128 0x9
 615 0110 BA000000 		.4byte	0xba
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc7VeyuG.s 			page 24


 616 0114 07       		.byte	0x7
 617 0115 00       		.byte	0
 618 0116 05       		.uleb128 0x5
 619 0117 06010000 		.4byte	0x106
 620 011b 0A       		.uleb128 0xa
 621 011c 1B000000 		.4byte	.LASF19
 622 0120 03       		.byte	0x3
 623 0121 78       		.byte	0x78
 624 0122 F1000000 		.4byte	0xf1
 625 0126 06       		.uleb128 0x6
 626 0127 04       		.byte	0x4
 627 0128 03       		.byte	0x3
 628 0129 7B       		.byte	0x7b
 629 012a 3B010000 		.4byte	0x13b
 630 012e 07       		.uleb128 0x7
 631 012f D8000000 		.4byte	.LASF18
 632 0133 03       		.byte	0x3
 633 0134 7D       		.byte	0x7d
 634 0135 4B010000 		.4byte	0x14b
 635 0139 00       		.byte	0
 636 013a 00       		.byte	0
 637 013b 08       		.uleb128 0x8
 638 013c 98000000 		.4byte	0x98
 639 0140 4B010000 		.4byte	0x14b
 640 0144 09       		.uleb128 0x9
 641 0145 BA000000 		.4byte	0xba
 642 0149 03       		.byte	0x3
 643 014a 00       		.byte	0
 644 014b 05       		.uleb128 0x5
 645 014c 3B010000 		.4byte	0x13b
 646 0150 0A       		.uleb128 0xa
 647 0151 4F000000 		.4byte	.LASF20
 648 0155 03       		.byte	0x3
 649 0156 7E       		.byte	0x7e
 650 0157 26010000 		.4byte	0x126
 651 015b 06       		.uleb128 0x6
 652 015c 10       		.byte	0x10
 653 015d 03       		.byte	0x3
 654 015e 81       		.byte	0x81
 655 015f B7010000 		.4byte	0x1b7
 656 0163 0B       		.uleb128 0xb
 657 0164 696400   		.ascii	"id\000"
 658 0167 03       		.byte	0x3
 659 0168 83       		.byte	0x83
 660 0169 77000000 		.4byte	0x77
 661 016d 00       		.byte	0
 662 016e 0B       		.uleb128 0xb
 663 016f 72747200 		.ascii	"rtr\000"
 664 0173 03       		.byte	0x3
 665 0174 84       		.byte	0x84
 666 0175 6B000000 		.4byte	0x6b
 667 0179 04       		.byte	0x4
 668 017a 0B       		.uleb128 0xb
 669 017b 69646500 		.ascii	"ide\000"
 670 017f 03       		.byte	0x3
 671 0180 85       		.byte	0x85
 672 0181 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc7VeyuG.s 			page 25


 673 0185 05       		.byte	0x5
 674 0186 0B       		.uleb128 0xb
 675 0187 646C6300 		.ascii	"dlc\000"
 676 018b 03       		.byte	0x3
 677 018c 86       		.byte	0x86
 678 018d 6B000000 		.4byte	0x6b
 679 0191 06       		.byte	0x6
 680 0192 0B       		.uleb128 0xb
 681 0193 69727100 		.ascii	"irq\000"
 682 0197 03       		.byte	0x3
 683 0198 87       		.byte	0x87
 684 0199 6B000000 		.4byte	0x6b
 685 019d 07       		.byte	0x7
 686 019e 0B       		.uleb128 0xb
 687 019f 73737400 		.ascii	"sst\000"
 688 01a3 03       		.byte	0x3
 689 01a4 89       		.byte	0x89
 690 01a5 6B000000 		.4byte	0x6b
 691 01a9 08       		.byte	0x8
 692 01aa 0B       		.uleb128 0xb
 693 01ab 6D736700 		.ascii	"msg\000"
 694 01af 03       		.byte	0x3
 695 01b0 8B       		.byte	0x8b
 696 01b1 B7010000 		.4byte	0x1b7
 697 01b5 0C       		.byte	0xc
 698 01b6 00       		.byte	0
 699 01b7 0C       		.uleb128 0xc
 700 01b8 04       		.byte	0x4
 701 01b9 E6000000 		.4byte	0xe6
 702 01bd 0A       		.uleb128 0xa
 703 01be F1000000 		.4byte	.LASF21
 704 01c2 03       		.byte	0x3
 705 01c3 8C       		.byte	0x8c
 706 01c4 5B010000 		.4byte	0x15b
 707 01c8 06       		.uleb128 0x6
 708 01c9 20       		.byte	0x20
 709 01ca 03       		.byte	0x3
 710 01cb A0       		.byte	0xa0
 711 01cc 25020000 		.4byte	0x225
 712 01d0 07       		.uleb128 0x7
 713 01d1 69020000 		.4byte	.LASF22
 714 01d5 03       		.byte	0x3
 715 01d6 A2       		.byte	0xa2
 716 01d7 50010000 		.4byte	0x150
 717 01db 00       		.byte	0
 718 01dc 07       		.uleb128 0x7
 719 01dd 52010000 		.4byte	.LASF23
 720 01e1 03       		.byte	0x3
 721 01e2 A3       		.byte	0xa3
 722 01e3 50010000 		.4byte	0x150
 723 01e7 04       		.byte	0x4
 724 01e8 07       		.uleb128 0x7
 725 01e9 DD000000 		.4byte	.LASF24
 726 01ed 03       		.byte	0x3
 727 01ee A4       		.byte	0xa4
 728 01ef 1B010000 		.4byte	0x11b
 729 01f3 08       		.byte	0x8
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc7VeyuG.s 			page 26


 730 01f4 07       		.uleb128 0x7
 731 01f5 38000000 		.4byte	.LASF25
 732 01f9 03       		.byte	0x3
 733 01fa A5       		.byte	0xa5
 734 01fb 50010000 		.4byte	0x150
 735 01ff 10       		.byte	0x10
 736 0200 07       		.uleb128 0x7
 737 0201 AD020000 		.4byte	.LASF26
 738 0205 03       		.byte	0x3
 739 0206 A6       		.byte	0xa6
 740 0207 50010000 		.4byte	0x150
 741 020b 14       		.byte	0x14
 742 020c 07       		.uleb128 0x7
 743 020d 78020000 		.4byte	.LASF27
 744 0211 03       		.byte	0x3
 745 0212 A7       		.byte	0xa7
 746 0213 50010000 		.4byte	0x150
 747 0217 18       		.byte	0x18
 748 0218 07       		.uleb128 0x7
 749 0219 E4000000 		.4byte	.LASF28
 750 021d 03       		.byte	0x3
 751 021e A8       		.byte	0xa8
 752 021f 50010000 		.4byte	0x150
 753 0223 1C       		.byte	0x1c
 754 0224 00       		.byte	0
 755 0225 0A       		.uleb128 0xa
 756 0226 5B020000 		.4byte	.LASF29
 757 022a 03       		.byte	0x3
 758 022b A9       		.byte	0xa9
 759 022c C8010000 		.4byte	0x1c8
 760 0230 06       		.uleb128 0x6
 761 0231 10       		.byte	0x10
 762 0232 03       		.byte	0x3
 763 0233 AC       		.byte	0xac
 764 0234 5D020000 		.4byte	0x25d
 765 0238 07       		.uleb128 0x7
 766 0239 6D000000 		.4byte	.LASF30
 767 023d 03       		.byte	0x3
 768 023e AE       		.byte	0xae
 769 023f 50010000 		.4byte	0x150
 770 0243 00       		.byte	0
 771 0244 07       		.uleb128 0x7
 772 0245 2A000000 		.4byte	.LASF31
 773 0249 03       		.byte	0x3
 774 024a AF       		.byte	0xaf
 775 024b 50010000 		.4byte	0x150
 776 024f 04       		.byte	0x4
 777 0250 07       		.uleb128 0x7
 778 0251 D4020000 		.4byte	.LASF32
 779 0255 03       		.byte	0x3
 780 0256 B0       		.byte	0xb0
 781 0257 1B010000 		.4byte	0x11b
 782 025b 08       		.byte	0x8
 783 025c 00       		.byte	0
 784 025d 0A       		.uleb128 0xa
 785 025e 57010000 		.4byte	.LASF33
 786 0262 03       		.byte	0x3
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc7VeyuG.s 			page 27


 787 0263 B1       		.byte	0xb1
 788 0264 30020000 		.4byte	0x230
 789 0268 0D       		.uleb128 0xd
 790 0269 FC000000 		.4byte	.LASF40
 791 026d 01       		.byte	0x1
 792 026e 34       		.byte	0x34
 793 026f 6B000000 		.4byte	0x6b
 794 0273 00000000 		.4byte	.LFB1
 795 0277 58010000 		.4byte	.LFE1-.LFB1
 796 027b 01       		.uleb128 0x1
 797 027c 9C       		.byte	0x9c
 798 027d 09030000 		.4byte	0x309
 799 0281 0E       		.uleb128 0xe
 800 0282 00000000 		.4byte	.LASF38
 801 0286 01       		.byte	0x1
 802 0287 34       		.byte	0x34
 803 0288 09030000 		.4byte	0x309
 804 028c 00000000 		.4byte	.LLST0
 805 0290 0F       		.uleb128 0xf
 806 0291 6900     		.ascii	"i\000"
 807 0293 01       		.byte	0x1
 808 0294 36       		.byte	0x36
 809 0295 6B000000 		.4byte	0x6b
 810 0299 2C000000 		.4byte	.LLST1
 811 029d 0F       		.uleb128 0xf
 812 029e 6A00     		.ascii	"j\000"
 813 02a0 01       		.byte	0x1
 814 02a1 36       		.byte	0x36
 815 02a2 6B000000 		.4byte	0x6b
 816 02a6 55000000 		.4byte	.LLST2
 817 02aa 10       		.uleb128 0x10
 818 02ab 08000000 		.4byte	.LASF34
 819 02af 01       		.byte	0x1
 820 02b0 36       		.byte	0x36
 821 02b1 6B000000 		.4byte	0x6b
 822 02b5 7F000000 		.4byte	.LLST3
 823 02b9 10       		.uleb128 0x10
 824 02ba 1C010000 		.4byte	.LASF35
 825 02be 01       		.byte	0x1
 826 02bf 37       		.byte	0x37
 827 02c0 6B000000 		.4byte	0x6b
 828 02c4 A8000000 		.4byte	.LLST4
 829 02c8 10       		.uleb128 0x10
 830 02c9 B9010000 		.4byte	.LASF36
 831 02cd 01       		.byte	0x1
 832 02ce 38       		.byte	0x38
 833 02cf 6B000000 		.4byte	0x6b
 834 02d3 C7000000 		.4byte	.LLST5
 835 02d7 10       		.uleb128 0x10
 836 02d8 6C010000 		.4byte	.LASF37
 837 02dc 01       		.byte	0x1
 838 02dd 39       		.byte	0x39
 839 02de 77000000 		.4byte	0x77
 840 02e2 FD000000 		.4byte	.LLST6
 841 02e6 11       		.uleb128 0x11
 842 02e7 E6000000 		.4byte	.LVL15
 843 02eb A6030000 		.4byte	0x3a6
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc7VeyuG.s 			page 28


 844 02ef F9020000 		.4byte	0x2f9
 845 02f3 12       		.uleb128 0x12
 846 02f4 01       		.uleb128 0x1
 847 02f5 50       		.byte	0x50
 848 02f6 01       		.uleb128 0x1
 849 02f7 4B       		.byte	0x4b
 850 02f8 00       		.byte	0
 851 02f9 13       		.uleb128 0x13
 852 02fa 14010000 		.4byte	.LVL16
 853 02fe B7030000 		.4byte	0x3b7
 854 0302 12       		.uleb128 0x12
 855 0303 01       		.uleb128 0x1
 856 0304 50       		.byte	0x50
 857 0305 01       		.uleb128 0x1
 858 0306 4B       		.byte	0x4b
 859 0307 00       		.byte	0
 860 0308 00       		.byte	0
 861 0309 0C       		.uleb128 0xc
 862 030a 04       		.byte	0x4
 863 030b 0F030000 		.4byte	0x30f
 864 030f 14       		.uleb128 0x14
 865 0310 BD010000 		.4byte	0x1bd
 866 0314 15       		.uleb128 0x15
 867 0315 4E020000 		.4byte	.LASF42
 868 0319 01       		.byte	0x1
 869 031a B2       		.byte	0xb2
 870 031b 00000000 		.4byte	.LFB2
 871 031f 20000000 		.4byte	.LFE2-.LFB2
 872 0323 01       		.uleb128 0x1
 873 0324 9C       		.byte	0x9c
 874 0325 39030000 		.4byte	0x339
 875 0329 0E       		.uleb128 0xe
 876 032a 8D020000 		.4byte	.LASF39
 877 032e 01       		.byte	0x1
 878 032f B2       		.byte	0xb2
 879 0330 6B000000 		.4byte	0x6b
 880 0334 3D010000 		.4byte	.LLST7
 881 0338 00       		.byte	0
 882 0339 0D       		.uleb128 0xd
 883 033a 0E000000 		.4byte	.LASF41
 884 033e 01       		.byte	0x1
 885 033f D0       		.byte	0xd0
 886 0340 6B000000 		.4byte	0x6b
 887 0344 00000000 		.4byte	.LFB3
 888 0348 20000000 		.4byte	.LFE3-.LFB3
 889 034c 01       		.uleb128 0x1
 890 034d 9C       		.byte	0x9c
 891 034e 62030000 		.4byte	0x362
 892 0352 10       		.uleb128 0x10
 893 0353 B9010000 		.4byte	.LASF36
 894 0357 01       		.byte	0x1
 895 0358 D2       		.byte	0xd2
 896 0359 6B000000 		.4byte	0x6b
 897 035d 5E010000 		.4byte	.LLST8
 898 0361 00       		.byte	0
 899 0362 16       		.uleb128 0x16
 900 0363 DB020000 		.4byte	.LASF43
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc7VeyuG.s 			page 29


 901 0367 01       		.byte	0x1
 902 0368 6E02     		.2byte	0x26e
 903 036a 00000000 		.4byte	.LFB4
 904 036e 1C000000 		.4byte	.LFE4-.LFB4
 905 0372 01       		.uleb128 0x1
 906 0373 9C       		.byte	0x9c
 907 0374 89030000 		.4byte	0x389
 908 0378 17       		.uleb128 0x17
 909 0379 96020000 		.4byte	.LASF44
 910 037d 01       		.byte	0x1
 911 037e 6E02     		.2byte	0x26e
 912 0380 6B000000 		.4byte	0x6b
 913 0384 7D010000 		.4byte	.LLST9
 914 0388 00       		.byte	0
 915 0389 18       		.uleb128 0x18
 916 038a 85010000 		.4byte	.LASF48
 917 038e 01       		.byte	0x1
 918 038f 9B02     		.2byte	0x29b
 919 0391 00000000 		.4byte	.LFB5
 920 0395 50000000 		.4byte	.LFE5-.LFB5
 921 0399 01       		.uleb128 0x1
 922 039a 9C       		.byte	0x9c
 923 039b 19       		.uleb128 0x19
 924 039c 2F000000 		.4byte	.LASF49
 925 03a0 01       		.byte	0x1
 926 03a1 1C       		.byte	0x1c
 927 03a2 D6000000 		.4byte	0xd6
 928 03a6 1A       		.uleb128 0x1a
 929 03a7 A0020000 		.4byte	.LASF50
 930 03ab 04       		.byte	0x4
 931 03ac C3       		.byte	0xc3
 932 03ad B7030000 		.4byte	0x3b7
 933 03b1 1B       		.uleb128 0x1b
 934 03b2 6B000000 		.4byte	0x6b
 935 03b6 00       		.byte	0
 936 03b7 1C       		.uleb128 0x1c
 937 03b8 BC020000 		.4byte	.LASF51
 938 03bc 04       		.byte	0x4
 939 03bd C1       		.byte	0xc1
 940 03be 1B       		.uleb128 0x1b
 941 03bf 6B000000 		.4byte	0x6b
 942 03c3 00       		.byte	0
 943 03c4 00       		.byte	0
 944              		.section	.debug_abbrev,"",%progbits
 945              	.Ldebug_abbrev0:
 946 0000 01       		.uleb128 0x1
 947 0001 11       		.uleb128 0x11
 948 0002 01       		.byte	0x1
 949 0003 25       		.uleb128 0x25
 950 0004 0E       		.uleb128 0xe
 951 0005 13       		.uleb128 0x13
 952 0006 0B       		.uleb128 0xb
 953 0007 03       		.uleb128 0x3
 954 0008 0E       		.uleb128 0xe
 955 0009 1B       		.uleb128 0x1b
 956 000a 0E       		.uleb128 0xe
 957 000b 55       		.uleb128 0x55
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc7VeyuG.s 			page 30


 958 000c 17       		.uleb128 0x17
 959 000d 11       		.uleb128 0x11
 960 000e 01       		.uleb128 0x1
 961 000f 10       		.uleb128 0x10
 962 0010 17       		.uleb128 0x17
 963 0011 00       		.byte	0
 964 0012 00       		.byte	0
 965 0013 02       		.uleb128 0x2
 966 0014 24       		.uleb128 0x24
 967 0015 00       		.byte	0
 968 0016 0B       		.uleb128 0xb
 969 0017 0B       		.uleb128 0xb
 970 0018 3E       		.uleb128 0x3e
 971 0019 0B       		.uleb128 0xb
 972 001a 03       		.uleb128 0x3
 973 001b 0E       		.uleb128 0xe
 974 001c 00       		.byte	0
 975 001d 00       		.byte	0
 976 001e 03       		.uleb128 0x3
 977 001f 24       		.uleb128 0x24
 978 0020 00       		.byte	0
 979 0021 0B       		.uleb128 0xb
 980 0022 0B       		.uleb128 0xb
 981 0023 3E       		.uleb128 0x3e
 982 0024 0B       		.uleb128 0xb
 983 0025 03       		.uleb128 0x3
 984 0026 08       		.uleb128 0x8
 985 0027 00       		.byte	0
 986 0028 00       		.byte	0
 987 0029 04       		.uleb128 0x4
 988 002a 16       		.uleb128 0x16
 989 002b 00       		.byte	0
 990 002c 03       		.uleb128 0x3
 991 002d 0E       		.uleb128 0xe
 992 002e 3A       		.uleb128 0x3a
 993 002f 0B       		.uleb128 0xb
 994 0030 3B       		.uleb128 0x3b
 995 0031 05       		.uleb128 0x5
 996 0032 49       		.uleb128 0x49
 997 0033 13       		.uleb128 0x13
 998 0034 00       		.byte	0
 999 0035 00       		.byte	0
 1000 0036 05       		.uleb128 0x5
 1001 0037 35       		.uleb128 0x35
 1002 0038 00       		.byte	0
 1003 0039 49       		.uleb128 0x49
 1004 003a 13       		.uleb128 0x13
 1005 003b 00       		.byte	0
 1006 003c 00       		.byte	0
 1007 003d 06       		.uleb128 0x6
 1008 003e 13       		.uleb128 0x13
 1009 003f 01       		.byte	0x1
 1010 0040 0B       		.uleb128 0xb
 1011 0041 0B       		.uleb128 0xb
 1012 0042 3A       		.uleb128 0x3a
 1013 0043 0B       		.uleb128 0xb
 1014 0044 3B       		.uleb128 0x3b
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc7VeyuG.s 			page 31


 1015 0045 0B       		.uleb128 0xb
 1016 0046 01       		.uleb128 0x1
 1017 0047 13       		.uleb128 0x13
 1018 0048 00       		.byte	0
 1019 0049 00       		.byte	0
 1020 004a 07       		.uleb128 0x7
 1021 004b 0D       		.uleb128 0xd
 1022 004c 00       		.byte	0
 1023 004d 03       		.uleb128 0x3
 1024 004e 0E       		.uleb128 0xe
 1025 004f 3A       		.uleb128 0x3a
 1026 0050 0B       		.uleb128 0xb
 1027 0051 3B       		.uleb128 0x3b
 1028 0052 0B       		.uleb128 0xb
 1029 0053 49       		.uleb128 0x49
 1030 0054 13       		.uleb128 0x13
 1031 0055 38       		.uleb128 0x38
 1032 0056 0B       		.uleb128 0xb
 1033 0057 00       		.byte	0
 1034 0058 00       		.byte	0
 1035 0059 08       		.uleb128 0x8
 1036 005a 01       		.uleb128 0x1
 1037 005b 01       		.byte	0x1
 1038 005c 49       		.uleb128 0x49
 1039 005d 13       		.uleb128 0x13
 1040 005e 01       		.uleb128 0x1
 1041 005f 13       		.uleb128 0x13
 1042 0060 00       		.byte	0
 1043 0061 00       		.byte	0
 1044 0062 09       		.uleb128 0x9
 1045 0063 21       		.uleb128 0x21
 1046 0064 00       		.byte	0
 1047 0065 49       		.uleb128 0x49
 1048 0066 13       		.uleb128 0x13
 1049 0067 2F       		.uleb128 0x2f
 1050 0068 0B       		.uleb128 0xb
 1051 0069 00       		.byte	0
 1052 006a 00       		.byte	0
 1053 006b 0A       		.uleb128 0xa
 1054 006c 16       		.uleb128 0x16
 1055 006d 00       		.byte	0
 1056 006e 03       		.uleb128 0x3
 1057 006f 0E       		.uleb128 0xe
 1058 0070 3A       		.uleb128 0x3a
 1059 0071 0B       		.uleb128 0xb
 1060 0072 3B       		.uleb128 0x3b
 1061 0073 0B       		.uleb128 0xb
 1062 0074 49       		.uleb128 0x49
 1063 0075 13       		.uleb128 0x13
 1064 0076 00       		.byte	0
 1065 0077 00       		.byte	0
 1066 0078 0B       		.uleb128 0xb
 1067 0079 0D       		.uleb128 0xd
 1068 007a 00       		.byte	0
 1069 007b 03       		.uleb128 0x3
 1070 007c 08       		.uleb128 0x8
 1071 007d 3A       		.uleb128 0x3a
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc7VeyuG.s 			page 32


 1072 007e 0B       		.uleb128 0xb
 1073 007f 3B       		.uleb128 0x3b
 1074 0080 0B       		.uleb128 0xb
 1075 0081 49       		.uleb128 0x49
 1076 0082 13       		.uleb128 0x13
 1077 0083 38       		.uleb128 0x38
 1078 0084 0B       		.uleb128 0xb
 1079 0085 00       		.byte	0
 1080 0086 00       		.byte	0
 1081 0087 0C       		.uleb128 0xc
 1082 0088 0F       		.uleb128 0xf
 1083 0089 00       		.byte	0
 1084 008a 0B       		.uleb128 0xb
 1085 008b 0B       		.uleb128 0xb
 1086 008c 49       		.uleb128 0x49
 1087 008d 13       		.uleb128 0x13
 1088 008e 00       		.byte	0
 1089 008f 00       		.byte	0
 1090 0090 0D       		.uleb128 0xd
 1091 0091 2E       		.uleb128 0x2e
 1092 0092 01       		.byte	0x1
 1093 0093 3F       		.uleb128 0x3f
 1094 0094 19       		.uleb128 0x19
 1095 0095 03       		.uleb128 0x3
 1096 0096 0E       		.uleb128 0xe
 1097 0097 3A       		.uleb128 0x3a
 1098 0098 0B       		.uleb128 0xb
 1099 0099 3B       		.uleb128 0x3b
 1100 009a 0B       		.uleb128 0xb
 1101 009b 27       		.uleb128 0x27
 1102 009c 19       		.uleb128 0x19
 1103 009d 49       		.uleb128 0x49
 1104 009e 13       		.uleb128 0x13
 1105 009f 11       		.uleb128 0x11
 1106 00a0 01       		.uleb128 0x1
 1107 00a1 12       		.uleb128 0x12
 1108 00a2 06       		.uleb128 0x6
 1109 00a3 40       		.uleb128 0x40
 1110 00a4 18       		.uleb128 0x18
 1111 00a5 9742     		.uleb128 0x2117
 1112 00a7 19       		.uleb128 0x19
 1113 00a8 01       		.uleb128 0x1
 1114 00a9 13       		.uleb128 0x13
 1115 00aa 00       		.byte	0
 1116 00ab 00       		.byte	0
 1117 00ac 0E       		.uleb128 0xe
 1118 00ad 05       		.uleb128 0x5
 1119 00ae 00       		.byte	0
 1120 00af 03       		.uleb128 0x3
 1121 00b0 0E       		.uleb128 0xe
 1122 00b1 3A       		.uleb128 0x3a
 1123 00b2 0B       		.uleb128 0xb
 1124 00b3 3B       		.uleb128 0x3b
 1125 00b4 0B       		.uleb128 0xb
 1126 00b5 49       		.uleb128 0x49
 1127 00b6 13       		.uleb128 0x13
 1128 00b7 02       		.uleb128 0x2
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc7VeyuG.s 			page 33


 1129 00b8 17       		.uleb128 0x17
 1130 00b9 00       		.byte	0
 1131 00ba 00       		.byte	0
 1132 00bb 0F       		.uleb128 0xf
 1133 00bc 34       		.uleb128 0x34
 1134 00bd 00       		.byte	0
 1135 00be 03       		.uleb128 0x3
 1136 00bf 08       		.uleb128 0x8
 1137 00c0 3A       		.uleb128 0x3a
 1138 00c1 0B       		.uleb128 0xb
 1139 00c2 3B       		.uleb128 0x3b
 1140 00c3 0B       		.uleb128 0xb
 1141 00c4 49       		.uleb128 0x49
 1142 00c5 13       		.uleb128 0x13
 1143 00c6 02       		.uleb128 0x2
 1144 00c7 17       		.uleb128 0x17
 1145 00c8 00       		.byte	0
 1146 00c9 00       		.byte	0
 1147 00ca 10       		.uleb128 0x10
 1148 00cb 34       		.uleb128 0x34
 1149 00cc 00       		.byte	0
 1150 00cd 03       		.uleb128 0x3
 1151 00ce 0E       		.uleb128 0xe
 1152 00cf 3A       		.uleb128 0x3a
 1153 00d0 0B       		.uleb128 0xb
 1154 00d1 3B       		.uleb128 0x3b
 1155 00d2 0B       		.uleb128 0xb
 1156 00d3 49       		.uleb128 0x49
 1157 00d4 13       		.uleb128 0x13
 1158 00d5 02       		.uleb128 0x2
 1159 00d6 17       		.uleb128 0x17
 1160 00d7 00       		.byte	0
 1161 00d8 00       		.byte	0
 1162 00d9 11       		.uleb128 0x11
 1163 00da 898201   		.uleb128 0x4109
 1164 00dd 01       		.byte	0x1
 1165 00de 11       		.uleb128 0x11
 1166 00df 01       		.uleb128 0x1
 1167 00e0 31       		.uleb128 0x31
 1168 00e1 13       		.uleb128 0x13
 1169 00e2 01       		.uleb128 0x1
 1170 00e3 13       		.uleb128 0x13
 1171 00e4 00       		.byte	0
 1172 00e5 00       		.byte	0
 1173 00e6 12       		.uleb128 0x12
 1174 00e7 8A8201   		.uleb128 0x410a
 1175 00ea 00       		.byte	0
 1176 00eb 02       		.uleb128 0x2
 1177 00ec 18       		.uleb128 0x18
 1178 00ed 9142     		.uleb128 0x2111
 1179 00ef 18       		.uleb128 0x18
 1180 00f0 00       		.byte	0
 1181 00f1 00       		.byte	0
 1182 00f2 13       		.uleb128 0x13
 1183 00f3 898201   		.uleb128 0x4109
 1184 00f6 01       		.byte	0x1
 1185 00f7 11       		.uleb128 0x11
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc7VeyuG.s 			page 34


 1186 00f8 01       		.uleb128 0x1
 1187 00f9 31       		.uleb128 0x31
 1188 00fa 13       		.uleb128 0x13
 1189 00fb 00       		.byte	0
 1190 00fc 00       		.byte	0
 1191 00fd 14       		.uleb128 0x14
 1192 00fe 26       		.uleb128 0x26
 1193 00ff 00       		.byte	0
 1194 0100 49       		.uleb128 0x49
 1195 0101 13       		.uleb128 0x13
 1196 0102 00       		.byte	0
 1197 0103 00       		.byte	0
 1198 0104 15       		.uleb128 0x15
 1199 0105 2E       		.uleb128 0x2e
 1200 0106 01       		.byte	0x1
 1201 0107 3F       		.uleb128 0x3f
 1202 0108 19       		.uleb128 0x19
 1203 0109 03       		.uleb128 0x3
 1204 010a 0E       		.uleb128 0xe
 1205 010b 3A       		.uleb128 0x3a
 1206 010c 0B       		.uleb128 0xb
 1207 010d 3B       		.uleb128 0x3b
 1208 010e 0B       		.uleb128 0xb
 1209 010f 27       		.uleb128 0x27
 1210 0110 19       		.uleb128 0x19
 1211 0111 11       		.uleb128 0x11
 1212 0112 01       		.uleb128 0x1
 1213 0113 12       		.uleb128 0x12
 1214 0114 06       		.uleb128 0x6
 1215 0115 40       		.uleb128 0x40
 1216 0116 18       		.uleb128 0x18
 1217 0117 9742     		.uleb128 0x2117
 1218 0119 19       		.uleb128 0x19
 1219 011a 01       		.uleb128 0x1
 1220 011b 13       		.uleb128 0x13
 1221 011c 00       		.byte	0
 1222 011d 00       		.byte	0
 1223 011e 16       		.uleb128 0x16
 1224 011f 2E       		.uleb128 0x2e
 1225 0120 01       		.byte	0x1
 1226 0121 3F       		.uleb128 0x3f
 1227 0122 19       		.uleb128 0x19
 1228 0123 03       		.uleb128 0x3
 1229 0124 0E       		.uleb128 0xe
 1230 0125 3A       		.uleb128 0x3a
 1231 0126 0B       		.uleb128 0xb
 1232 0127 3B       		.uleb128 0x3b
 1233 0128 05       		.uleb128 0x5
 1234 0129 27       		.uleb128 0x27
 1235 012a 19       		.uleb128 0x19
 1236 012b 11       		.uleb128 0x11
 1237 012c 01       		.uleb128 0x1
 1238 012d 12       		.uleb128 0x12
 1239 012e 06       		.uleb128 0x6
 1240 012f 40       		.uleb128 0x40
 1241 0130 18       		.uleb128 0x18
 1242 0131 9742     		.uleb128 0x2117
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc7VeyuG.s 			page 35


 1243 0133 19       		.uleb128 0x19
 1244 0134 01       		.uleb128 0x1
 1245 0135 13       		.uleb128 0x13
 1246 0136 00       		.byte	0
 1247 0137 00       		.byte	0
 1248 0138 17       		.uleb128 0x17
 1249 0139 05       		.uleb128 0x5
 1250 013a 00       		.byte	0
 1251 013b 03       		.uleb128 0x3
 1252 013c 0E       		.uleb128 0xe
 1253 013d 3A       		.uleb128 0x3a
 1254 013e 0B       		.uleb128 0xb
 1255 013f 3B       		.uleb128 0x3b
 1256 0140 05       		.uleb128 0x5
 1257 0141 49       		.uleb128 0x49
 1258 0142 13       		.uleb128 0x13
 1259 0143 02       		.uleb128 0x2
 1260 0144 17       		.uleb128 0x17
 1261 0145 00       		.byte	0
 1262 0146 00       		.byte	0
 1263 0147 18       		.uleb128 0x18
 1264 0148 2E       		.uleb128 0x2e
 1265 0149 00       		.byte	0
 1266 014a 3F       		.uleb128 0x3f
 1267 014b 19       		.uleb128 0x19
 1268 014c 03       		.uleb128 0x3
 1269 014d 0E       		.uleb128 0xe
 1270 014e 3A       		.uleb128 0x3a
 1271 014f 0B       		.uleb128 0xb
 1272 0150 3B       		.uleb128 0x3b
 1273 0151 05       		.uleb128 0x5
 1274 0152 27       		.uleb128 0x27
 1275 0153 19       		.uleb128 0x19
 1276 0154 11       		.uleb128 0x11
 1277 0155 01       		.uleb128 0x1
 1278 0156 12       		.uleb128 0x12
 1279 0157 06       		.uleb128 0x6
 1280 0158 40       		.uleb128 0x40
 1281 0159 18       		.uleb128 0x18
 1282 015a 9742     		.uleb128 0x2117
 1283 015c 19       		.uleb128 0x19
 1284 015d 00       		.byte	0
 1285 015e 00       		.byte	0
 1286 015f 19       		.uleb128 0x19
 1287 0160 34       		.uleb128 0x34
 1288 0161 00       		.byte	0
 1289 0162 03       		.uleb128 0x3
 1290 0163 0E       		.uleb128 0xe
 1291 0164 3A       		.uleb128 0x3a
 1292 0165 0B       		.uleb128 0xb
 1293 0166 3B       		.uleb128 0x3b
 1294 0167 0B       		.uleb128 0xb
 1295 0168 49       		.uleb128 0x49
 1296 0169 13       		.uleb128 0x13
 1297 016a 3F       		.uleb128 0x3f
 1298 016b 19       		.uleb128 0x19
 1299 016c 3C       		.uleb128 0x3c
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc7VeyuG.s 			page 36


 1300 016d 19       		.uleb128 0x19
 1301 016e 00       		.byte	0
 1302 016f 00       		.byte	0
 1303 0170 1A       		.uleb128 0x1a
 1304 0171 2E       		.uleb128 0x2e
 1305 0172 01       		.byte	0x1
 1306 0173 3F       		.uleb128 0x3f
 1307 0174 19       		.uleb128 0x19
 1308 0175 03       		.uleb128 0x3
 1309 0176 0E       		.uleb128 0xe
 1310 0177 3A       		.uleb128 0x3a
 1311 0178 0B       		.uleb128 0xb
 1312 0179 3B       		.uleb128 0x3b
 1313 017a 0B       		.uleb128 0xb
 1314 017b 27       		.uleb128 0x27
 1315 017c 19       		.uleb128 0x19
 1316 017d 3C       		.uleb128 0x3c
 1317 017e 19       		.uleb128 0x19
 1318 017f 01       		.uleb128 0x1
 1319 0180 13       		.uleb128 0x13
 1320 0181 00       		.byte	0
 1321 0182 00       		.byte	0
 1322 0183 1B       		.uleb128 0x1b
 1323 0184 05       		.uleb128 0x5
 1324 0185 00       		.byte	0
 1325 0186 49       		.uleb128 0x49
 1326 0187 13       		.uleb128 0x13
 1327 0188 00       		.byte	0
 1328 0189 00       		.byte	0
 1329 018a 1C       		.uleb128 0x1c
 1330 018b 2E       		.uleb128 0x2e
 1331 018c 01       		.byte	0x1
 1332 018d 3F       		.uleb128 0x3f
 1333 018e 19       		.uleb128 0x19
 1334 018f 03       		.uleb128 0x3
 1335 0190 0E       		.uleb128 0xe
 1336 0191 3A       		.uleb128 0x3a
 1337 0192 0B       		.uleb128 0xb
 1338 0193 3B       		.uleb128 0x3b
 1339 0194 0B       		.uleb128 0xb
 1340 0195 27       		.uleb128 0x27
 1341 0196 19       		.uleb128 0x19
 1342 0197 3C       		.uleb128 0x3c
 1343 0198 19       		.uleb128 0x19
 1344 0199 00       		.byte	0
 1345 019a 00       		.byte	0
 1346 019b 00       		.byte	0
 1347              		.section	.debug_loc,"",%progbits
 1348              	.Ldebug_loc0:
 1349              	.LLST0:
 1350 0000 00000000 		.4byte	.LVL0
 1351 0004 0C000000 		.4byte	.LVL2
 1352 0008 0100     		.2byte	0x1
 1353 000a 50       		.byte	0x50
 1354 000b 0C000000 		.4byte	.LVL2
 1355 000f 40010000 		.4byte	.LVL25
 1356 0013 0100     		.2byte	0x1
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc7VeyuG.s 			page 37


 1357 0015 56       		.byte	0x56
 1358 0016 40010000 		.4byte	.LVL25
 1359 001a 58010000 		.4byte	.LFE1
 1360 001e 0400     		.2byte	0x4
 1361 0020 F3       		.byte	0xf3
 1362 0021 01       		.uleb128 0x1
 1363 0022 50       		.byte	0x50
 1364 0023 9F       		.byte	0x9f
 1365 0024 00000000 		.4byte	0
 1366 0028 00000000 		.4byte	0
 1367              	.LLST1:
 1368 002c 12000000 		.4byte	.LVL3
 1369 0030 20010000 		.4byte	.LVL20
 1370 0034 0100     		.2byte	0x1
 1371 0036 54       		.byte	0x54
 1372 0037 22010000 		.4byte	.LVL21
 1373 003b 24010000 		.4byte	.LVL22
 1374 003f 0100     		.2byte	0x1
 1375 0041 54       		.byte	0x54
 1376 0042 28010000 		.4byte	.LVL23
 1377 0046 3A010000 		.4byte	.LVL24
 1378 004a 0100     		.2byte	0x1
 1379 004c 54       		.byte	0x54
 1380 004d 00000000 		.4byte	0
 1381 0051 00000000 		.4byte	0
 1382              	.LLST2:
 1383 0055 7C000000 		.4byte	.LVL11
 1384 0059 80000000 		.4byte	.LVL12
 1385 005d 0200     		.2byte	0x2
 1386 005f 30       		.byte	0x30
 1387 0060 9F       		.byte	0x9f
 1388 0061 80000000 		.4byte	.LVL12
 1389 0065 D4000000 		.4byte	.LVL13
 1390 0069 0100     		.2byte	0x1
 1391 006b 53       		.byte	0x53
 1392 006c D6000000 		.4byte	.LVL14
 1393 0070 E5000000 		.4byte	.LVL15-1
 1394 0074 0100     		.2byte	0x1
 1395 0076 53       		.byte	0x53
 1396 0077 00000000 		.4byte	0
 1397 007b 00000000 		.4byte	0
 1398              	.LLST3:
 1399 007f 12000000 		.4byte	.LVL3
 1400 0083 18010000 		.4byte	.LVL18
 1401 0087 0100     		.2byte	0x1
 1402 0089 55       		.byte	0x55
 1403 008a 1A010000 		.4byte	.LVL19
 1404 008e 24010000 		.4byte	.LVL22
 1405 0092 0100     		.2byte	0x1
 1406 0094 55       		.byte	0x55
 1407 0095 28010000 		.4byte	.LVL23
 1408 0099 3A010000 		.4byte	.LVL24
 1409 009d 0100     		.2byte	0x1
 1410 009f 55       		.byte	0x55
 1411 00a0 00000000 		.4byte	0
 1412 00a4 00000000 		.4byte	0
 1413              	.LLST4:
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc7VeyuG.s 			page 38


 1414 00a8 0A000000 		.4byte	.LVL1
 1415 00ac 12000000 		.4byte	.LVL3
 1416 00b0 0200     		.2byte	0x2
 1417 00b2 30       		.byte	0x30
 1418 00b3 9F       		.byte	0x9f
 1419 00b4 12000000 		.4byte	.LVL3
 1420 00b8 40010000 		.4byte	.LVL26
 1421 00bc 0100     		.2byte	0x1
 1422 00be 58       		.byte	0x58
 1423 00bf 00000000 		.4byte	0
 1424 00c3 00000000 		.4byte	0
 1425              	.LLST5:
 1426 00c7 0A000000 		.4byte	.LVL1
 1427 00cb 12000000 		.4byte	.LVL3
 1428 00cf 0200     		.2byte	0x2
 1429 00d1 31       		.byte	0x31
 1430 00d2 9F       		.byte	0x9f
 1431 00d3 12000000 		.4byte	.LVL3
 1432 00d7 80000000 		.4byte	.LVL12
 1433 00db 0100     		.2byte	0x1
 1434 00dd 50       		.byte	0x50
 1435 00de 14010000 		.4byte	.LVL16
 1436 00e2 16010000 		.4byte	.LVL17
 1437 00e6 0200     		.2byte	0x2
 1438 00e8 30       		.byte	0x30
 1439 00e9 9F       		.byte	0x9f
 1440 00ea 16010000 		.4byte	.LVL17
 1441 00ee 58010000 		.4byte	.LFE1
 1442 00f2 0100     		.2byte	0x1
 1443 00f4 50       		.byte	0x50
 1444 00f5 00000000 		.4byte	0
 1445 00f9 00000000 		.4byte	0
 1446              	.LLST6:
 1447 00fd 20000000 		.4byte	.LVL4
 1448 0101 2E000000 		.4byte	.LVL5
 1449 0105 0200     		.2byte	0x2
 1450 0107 30       		.byte	0x30
 1451 0108 9F       		.byte	0x9f
 1452 0109 2E000000 		.4byte	.LVL5
 1453 010d 62000000 		.4byte	.LVL7
 1454 0111 0100     		.2byte	0x1
 1455 0113 57       		.byte	0x57
 1456 0114 64000000 		.4byte	.LVL8
 1457 0118 6C000000 		.4byte	.LVL9
 1458 011c 0100     		.2byte	0x1
 1459 011e 57       		.byte	0x57
 1460 011f 6E000000 		.4byte	.LVL10
 1461 0123 7C000000 		.4byte	.LVL11
 1462 0127 0100     		.2byte	0x1
 1463 0129 57       		.byte	0x57
 1464 012a 7C000000 		.4byte	.LVL11
 1465 012e 16010000 		.4byte	.LVL17
 1466 0132 0100     		.2byte	0x1
 1467 0134 59       		.byte	0x59
 1468 0135 00000000 		.4byte	0
 1469 0139 00000000 		.4byte	0
 1470              	.LLST7:
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc7VeyuG.s 			page 39


 1471 013d 00000000 		.4byte	.LVL27
 1472 0141 06000000 		.4byte	.LVL28
 1473 0145 0100     		.2byte	0x1
 1474 0147 50       		.byte	0x50
 1475 0148 06000000 		.4byte	.LVL28
 1476 014c 20000000 		.4byte	.LFE2
 1477 0150 0400     		.2byte	0x4
 1478 0152 F3       		.byte	0xf3
 1479 0153 01       		.uleb128 0x1
 1480 0154 50       		.byte	0x50
 1481 0155 9F       		.byte	0x9f
 1482 0156 00000000 		.4byte	0
 1483 015a 00000000 		.4byte	0
 1484              	.LLST8:
 1485 015e 00000000 		.4byte	.LVL29
 1486 0162 18000000 		.4byte	.LVL30
 1487 0166 0200     		.2byte	0x2
 1488 0168 30       		.byte	0x30
 1489 0169 9F       		.byte	0x9f
 1490 016a 18000000 		.4byte	.LVL30
 1491 016e 20000000 		.4byte	.LFE3
 1492 0172 0100     		.2byte	0x1
 1493 0174 50       		.byte	0x50
 1494 0175 00000000 		.4byte	0
 1495 0179 00000000 		.4byte	0
 1496              	.LLST9:
 1497 017d 00000000 		.4byte	.LVL31
 1498 0181 02000000 		.4byte	.LVL32
 1499 0185 0100     		.2byte	0x1
 1500 0187 50       		.byte	0x50
 1501 0188 02000000 		.4byte	.LVL32
 1502 018c 1C000000 		.4byte	.LFE4
 1503 0190 0400     		.2byte	0x4
 1504 0192 F3       		.byte	0xf3
 1505 0193 01       		.uleb128 0x1
 1506 0194 50       		.byte	0x50
 1507 0195 9F       		.byte	0x9f
 1508 0196 00000000 		.4byte	0
 1509 019a 00000000 		.4byte	0
 1510              		.section	.debug_aranges,"",%progbits
 1511 0000 3C000000 		.4byte	0x3c
 1512 0004 0200     		.2byte	0x2
 1513 0006 00000000 		.4byte	.Ldebug_info0
 1514 000a 04       		.byte	0x4
 1515 000b 00       		.byte	0
 1516 000c 0000     		.2byte	0
 1517 000e 0000     		.2byte	0
 1518 0010 00000000 		.4byte	.LFB1
 1519 0014 58010000 		.4byte	.LFE1-.LFB1
 1520 0018 00000000 		.4byte	.LFB2
 1521 001c 20000000 		.4byte	.LFE2-.LFB2
 1522 0020 00000000 		.4byte	.LFB3
 1523 0024 20000000 		.4byte	.LFE3-.LFB3
 1524 0028 00000000 		.4byte	.LFB4
 1525 002c 1C000000 		.4byte	.LFE4-.LFB4
 1526 0030 00000000 		.4byte	.LFB5
 1527 0034 50000000 		.4byte	.LFE5-.LFB5
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc7VeyuG.s 			page 40


 1528 0038 00000000 		.4byte	0
 1529 003c 00000000 		.4byte	0
 1530              		.section	.debug_ranges,"",%progbits
 1531              	.Ldebug_ranges0:
 1532 0000 00000000 		.4byte	.LFB1
 1533 0004 58010000 		.4byte	.LFE1
 1534 0008 00000000 		.4byte	.LFB2
 1535 000c 20000000 		.4byte	.LFE2
 1536 0010 00000000 		.4byte	.LFB3
 1537 0014 20000000 		.4byte	.LFE3
 1538 0018 00000000 		.4byte	.LFB4
 1539 001c 1C000000 		.4byte	.LFE4
 1540 0020 00000000 		.4byte	.LFB5
 1541 0024 50000000 		.4byte	.LFE5
 1542 0028 00000000 		.4byte	0
 1543 002c 00000000 		.4byte	0
 1544              		.section	.debug_line,"",%progbits
 1545              	.Ldebug_line0:
 1546 0000 2C010000 		.section	.debug_str,"MS",%progbits,1
 1546      02005F00 
 1546      00000201 
 1546      FB0E0D00 
 1546      01010101 
 1547              	.LASF38:
 1548 0000 6D657373 		.ascii	"message\000"
 1548      61676500 
 1549              	.LASF34:
 1550 0008 73686966 		.ascii	"shift\000"
 1550      7400
 1551              	.LASF41:
 1552 000e 43414E5F 		.ascii	"CAN_SendMsg0\000"
 1552      53656E64 
 1552      4D736730 
 1552      00
 1553              	.LASF19:
 1554 001b 43414E5F 		.ascii	"CAN_DATA_BYTES\000"
 1554      44415441 
 1554      5F425954 
 1554      455300
 1555              	.LASF31:
 1556 002a 74786964 		.ascii	"txid\000"
 1556      00
 1557              	.LASF49:
 1558 002f 6D61696C 		.ascii	"mailbox0\000"
 1558      626F7830 
 1558      00
 1559              	.LASF25:
 1560 0038 7278616D 		.ascii	"rxamr\000"
 1560      7200
 1561              	.LASF46:
 1562 003e 43414E5F 		.ascii	"CAN_TX_RX_func.c\000"
 1562      54585F52 
 1562      585F6675 
 1562      6E632E63 
 1562      00
 1563              	.LASF20:
 1564 004f 43414E5F 		.ascii	"CAN_REG_32\000"
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc7VeyuG.s 			page 41


 1564      5245475F 
 1564      333200
 1565              	.LASF3:
 1566 005a 73686F72 		.ascii	"short unsigned int\000"
 1566      7420756E 
 1566      7369676E 
 1566      65642069 
 1566      6E7400
 1567              	.LASF30:
 1568 006d 7478636D 		.ascii	"txcmd\000"
 1568      6400
 1569              	.LASF13:
 1570 0073 63686172 		.ascii	"char\000"
 1570      00
 1571              	.LASF47:
 1572 0078 433A5C55 		.ascii	"C:\\Users\\Henry Alberto\\Documents\\GitHub\\Psoc_M"
 1572      73657273 
 1572      5C48656E 
 1572      72792041 
 1572      6C626572 
 1573 00a6 6F64756C 		.ascii	"odular\\Robot_Test\\Test_Robot_Xbee\\Test_Xbee.cyds"
 1573      61725C52 
 1573      6F626F74 
 1573      5F546573 
 1573      745C5465 
 1574 00d6 6E00     		.ascii	"n\000"
 1575              	.LASF18:
 1576 00d8 62797465 		.ascii	"byte\000"
 1576      00
 1577              	.LASF24:
 1578 00dd 72786461 		.ascii	"rxdata\000"
 1578      746100
 1579              	.LASF28:
 1580 00e4 72786163 		.ascii	"rxacrd\000"
 1580      726400
 1581              	.LASF11:
 1582 00eb 666C6F61 		.ascii	"float\000"
 1582      7400
 1583              	.LASF21:
 1584 00f1 43414E5F 		.ascii	"CAN_TX_MSG\000"
 1584      54585F4D 
 1584      534700
 1585              	.LASF40:
 1586 00fc 43414E5F 		.ascii	"CAN_SendMsg\000"
 1586      53656E64 
 1586      4D736700 
 1587              	.LASF1:
 1588 0108 756E7369 		.ascii	"unsigned char\000"
 1588      676E6564 
 1588      20636861 
 1588      7200
 1589              	.LASF15:
 1590 0116 72656733 		.ascii	"reg32\000"
 1590      3200
 1591              	.LASF35:
 1592 011c 72657472 		.ascii	"retry\000"
 1592      7900
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc7VeyuG.s 			page 42


 1593              	.LASF14:
 1594 0122 72656738 		.ascii	"reg8\000"
 1594      00
 1595              	.LASF5:
 1596 0127 6C6F6E67 		.ascii	"long unsigned int\000"
 1596      20756E73 
 1596      69676E65 
 1596      6420696E 
 1596      7400
 1597              	.LASF9:
 1598 0139 75696E74 		.ascii	"uint8\000"
 1598      3800
 1599              	.LASF17:
 1600 013f 43414E5F 		.ascii	"CAN_DATA_BYTES_MSG\000"
 1600      44415441 
 1600      5F425954 
 1600      45535F4D 
 1600      534700
 1601              	.LASF23:
 1602 0152 72786964 		.ascii	"rxid\000"
 1602      00
 1603              	.LASF33:
 1604 0157 43414E5F 		.ascii	"CAN_TX_STRUCT\000"
 1604      54585F53 
 1604      54525543 
 1604      5400
 1605              	.LASF12:
 1606 0165 646F7562 		.ascii	"double\000"
 1606      6C6500
 1607              	.LASF37:
 1608 016c 72656754 		.ascii	"regTemp\000"
 1608      656D7000 
 1609              	.LASF2:
 1610 0174 73686F72 		.ascii	"short int\000"
 1610      7420696E 
 1610      7400
 1611              	.LASF10:
 1612 017e 75696E74 		.ascii	"uint32\000"
 1612      333200
 1613              	.LASF48:
 1614 0185 43414E5F 		.ascii	"CAN_ReceiveMsg0\000"
 1614      52656365 
 1614      6976654D 
 1614      73673000 
 1615              	.LASF8:
 1616 0195 756E7369 		.ascii	"unsigned int\000"
 1616      676E6564 
 1616      20696E74 
 1616      00
 1617              	.LASF7:
 1618 01a2 6C6F6E67 		.ascii	"long long unsigned int\000"
 1618      206C6F6E 
 1618      6720756E 
 1618      7369676E 
 1618      65642069 
 1619              	.LASF36:
 1620 01b9 72657375 		.ascii	"result\000"
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc7VeyuG.s 			page 43


 1620      6C7400
 1621              	.LASF45:
 1622 01c0 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1622      4320342E 
 1622      392E3320 
 1622      32303135 
 1622      30333033 
 1623 01f3 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1623      20726576 
 1623      6973696F 
 1623      6E203232 
 1623      31323230 
 1624 0226 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1624      66756E63 
 1624      74696F6E 
 1624      2D736563 
 1624      74696F6E 
 1625              	.LASF42:
 1626 024e 43414E5F 		.ascii	"CAN_TxCancel\000"
 1626      54784361 
 1626      6E63656C 
 1626      00
 1627              	.LASF29:
 1628 025b 43414E5F 		.ascii	"CAN_RX_STRUCT\000"
 1628      52585F53 
 1628      54525543 
 1628      5400
 1629              	.LASF22:
 1630 0269 7278636D 		.ascii	"rxcmd\000"
 1630      6400
 1631              	.LASF16:
 1632 026f 73697A65 		.ascii	"sizetype\000"
 1632      74797065 
 1632      00
 1633              	.LASF27:
 1634 0278 7278616D 		.ascii	"rxamrd\000"
 1634      726400
 1635              	.LASF6:
 1636 027f 6C6F6E67 		.ascii	"long long int\000"
 1636      206C6F6E 
 1636      6720696E 
 1636      7400
 1637              	.LASF39:
 1638 028d 62756666 		.ascii	"bufferId\000"
 1638      65724964 
 1638      00
 1639              	.LASF44:
 1640 0296 72784D61 		.ascii	"rxMailbox\000"
 1640      696C626F 
 1640      7800
 1641              	.LASF50:
 1642 02a0 4379496E 		.ascii	"CyIntDisable\000"
 1642      74446973 
 1642      61626C65 
 1642      00
 1643              	.LASF26:
 1644 02ad 72786163 		.ascii	"rxacr\000"
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\cc7VeyuG.s 			page 44


 1644      7200
 1645              	.LASF4:
 1646 02b3 6C6F6E67 		.ascii	"long int\000"
 1646      20696E74 
 1646      00
 1647              	.LASF51:
 1648 02bc 4379496E 		.ascii	"CyIntEnable\000"
 1648      74456E61 
 1648      626C6500 
 1649              	.LASF0:
 1650 02c8 7369676E 		.ascii	"signed char\000"
 1650      65642063 
 1650      68617200 
 1651              	.LASF32:
 1652 02d4 74786461 		.ascii	"txdata\000"
 1652      746100
 1653              	.LASF43:
 1654 02db 43414E5F 		.ascii	"CAN_ReceiveMsg\000"
 1654      52656365 
 1654      6976654D 
 1654      736700
 1655              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
