ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CAN_TX_RX_func.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CAN_SendMsg,"ax",%progbits
  20              		.align	2
  21              		.global	CAN_SendMsg
  22              		.code	16
  23              		.thumb_func
  24              		.type	CAN_SendMsg, %function
  25              	CAN_SendMsg:
  26              	.LFB1:
  27              		.file 1 "CAN_TX_RX_func.c"
   1:CAN_TX_RX_func.c **** /*******************************************************************************
   2:CAN_TX_RX_func.c **** * File Name: CAN_TX_RX_func.c
   3:CAN_TX_RX_func.c **** * Version 3.0
   4:CAN_TX_RX_func.c **** *
   5:CAN_TX_RX_func.c **** * Description:
   6:CAN_TX_RX_func.c **** *  There are functions process "Full" Receive and Transmit mailboxes:
   7:CAN_TX_RX_func.c **** *     - CAN_SendMsg0-7();
   8:CAN_TX_RX_func.c **** *     - CAN_ReceiveMsg0-15();
   9:CAN_TX_RX_func.c **** *  Transmission of message, and receive routine for "Basic" mailboxes:
  10:CAN_TX_RX_func.c **** *     - CAN_SendMsg();
  11:CAN_TX_RX_func.c **** *     - CAN_TxCancel();
  12:CAN_TX_RX_func.c **** *     - CAN_ReceiveMsg();
  13:CAN_TX_RX_func.c **** *
  14:CAN_TX_RX_func.c **** *  Note:
  15:CAN_TX_RX_func.c **** *   None
  16:CAN_TX_RX_func.c **** *
  17:CAN_TX_RX_func.c **** ********************************************************************************
  18:CAN_TX_RX_func.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  19:CAN_TX_RX_func.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:CAN_TX_RX_func.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:CAN_TX_RX_func.c **** * the software package with which this file was provided.
  22:CAN_TX_RX_func.c **** *******************************************************************************/
  23:CAN_TX_RX_func.c **** 
  24:CAN_TX_RX_func.c **** #include "CAN.h"
  25:CAN_TX_RX_func.c **** #include "cyapicallbacks.h"
  26:CAN_TX_RX_func.c **** 
  27:CAN_TX_RX_func.c **** /* `#START TX_RX_FUNCTION` */
  28:CAN_TX_RX_func.c **** extern uint8 dato_enviado[8];
  29:CAN_TX_RX_func.c **** extern uint8 dato_enviado_1[8];
  30:CAN_TX_RX_func.c **** extern uint8 mailbox0[8];
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 2


  31:CAN_TX_RX_func.c **** extern uint8 mailbox1[8];
  32:CAN_TX_RX_func.c **** extern uint8 mailbox2[8];
  33:CAN_TX_RX_func.c **** /* `#END` */
  34:CAN_TX_RX_func.c **** 
  35:CAN_TX_RX_func.c **** 
  36:CAN_TX_RX_func.c **** /*******************************************************************************
  37:CAN_TX_RX_func.c **** * FUNCTION NAME:   CAN_SendMsg
  38:CAN_TX_RX_func.c **** ********************************************************************************
  39:CAN_TX_RX_func.c **** *
  40:CAN_TX_RX_func.c **** * Summary:
  41:CAN_TX_RX_func.c **** *  This function is Send Message from one of Basic mailboxes. The function loops
  42:CAN_TX_RX_func.c **** *  through the transmit message buffer designed as Basic CAN mailboxes for the
  43:CAN_TX_RX_func.c **** *  first free available and sends from it. The number of retries is limited.
  44:CAN_TX_RX_func.c **** *
  45:CAN_TX_RX_func.c **** * Parameters:
  46:CAN_TX_RX_func.c **** *  message: The pointer to a structure that contains all required data to send
  47:CAN_TX_RX_func.c **** *           messages.
  48:CAN_TX_RX_func.c **** *
  49:CAN_TX_RX_func.c **** * Return:
  50:CAN_TX_RX_func.c **** *  Indication if message has been sent.
  51:CAN_TX_RX_func.c **** *   Define                             Description
  52:CAN_TX_RX_func.c **** *    CYRET_SUCCESS                      The function passed successfully
  53:CAN_TX_RX_func.c **** *    CAN_FAIL              The function failed
  54:CAN_TX_RX_func.c **** *
  55:CAN_TX_RX_func.c **** *******************************************************************************/
  56:CAN_TX_RX_func.c **** uint8 CAN_SendMsg(const CAN_TX_MSG *message) 
  57:CAN_TX_RX_func.c **** {
  28              		.loc 1 57 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  34              		.cfi_def_cfa_offset 24
  35              		.cfi_offset 3, -24
  36              		.cfi_offset 4, -20
  37              		.cfi_offset 5, -16
  38              		.cfi_offset 6, -12
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 4F46     		mov	r7, r9
  42 0004 4646     		mov	r6, r8
  43 0006 C0B4     		push	{r6, r7}
  44              		.cfi_def_cfa_offset 32
  45              		.cfi_offset 8, -32
  46              		.cfi_offset 9, -28
  47 0008 0600     		movs	r6, r0
  48              	.LVL1:
  58:CAN_TX_RX_func.c ****     uint8 i, j, shift;
  59:CAN_TX_RX_func.c ****     uint8 retry = 0u;
  60:CAN_TX_RX_func.c ****     uint8 result = CAN_FAIL;
  49              		.loc 1 60 0
  50 000a 0120     		movs	r0, #1
  51              	.LVL2:
  59:CAN_TX_RX_func.c ****     uint8 result = CAN_FAIL;
  52              		.loc 1 59 0
  53 000c 0023     		movs	r3, #0
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 3


  54 000e 9846     		mov	r8, r3
  61:CAN_TX_RX_func.c ****     uint32 regTemp;
  62:CAN_TX_RX_func.c **** 
  63:CAN_TX_RX_func.c ****     while (retry < CAN_RETRY_NUMBER)
  55              		.loc 1 63 0
  56 0010 93E0     		b	.L2
  57              	.LVL3:
  58              	.L18:
  64:CAN_TX_RX_func.c ****     {
  65:CAN_TX_RX_func.c ****         shift = 1u;    /* Start from first mailbox */
  66:CAN_TX_RX_func.c ****         for (i = 0u; i < CAN_NUMBER_OF_TX_MAILBOXES; i++)
  67:CAN_TX_RX_func.c ****         {
  68:CAN_TX_RX_func.c ****             /* Find Basic TX mailboxes */
  69:CAN_TX_RX_func.c ****             if ((CAN_TX_MAILBOX_TYPE & shift) == 0u)
  59              		.loc 1 69 0
  60 0012 AB07     		lsls	r3, r5, #30
  61 0014 7FD1     		bne	.L3
  70:CAN_TX_RX_func.c ****             {
  71:CAN_TX_RX_func.c ****                 /* Find free mailbox */
  72:CAN_TX_RX_func.c ****                 #if (CY_PSOC3 || CY_PSOC5)
  73:CAN_TX_RX_func.c ****                     if ((CAN_BUF_SR_REG.byte[2] & shift) == 0u)
  74:CAN_TX_RX_func.c ****                 #else  /* CY_PSOC4 */
  75:CAN_TX_RX_func.c ****                     if ((CAN_BUF_SR_REG &
  62              		.loc 1 75 0
  63 0016 4C4B     		ldr	r3, .L23
  64 0018 1B68     		ldr	r3, [r3]
  76:CAN_TX_RX_func.c ****                         (uint32) ((uint32) shift << CAN_TWO_BYTE_OFFSET)) == 0u)
  65              		.loc 1 76 0
  66 001a 2A04     		lsls	r2, r5, #16
  75:CAN_TX_RX_func.c ****                         (uint32) ((uint32) shift << CAN_TWO_BYTE_OFFSET)) == 0u)
  67              		.loc 1 75 0
  68 001c 1A42     		tst	r2, r3
  69 001e 7AD1     		bne	.L3
  70              	.LVL4:
  77:CAN_TX_RX_func.c ****                 #endif /* CY_PSOC3 || CY_PSOC5 */
  78:CAN_TX_RX_func.c ****                     {
  79:CAN_TX_RX_func.c ****                         regTemp = 0u;
  80:CAN_TX_RX_func.c **** 
  81:CAN_TX_RX_func.c ****                         /* Set message parameters */
  82:CAN_TX_RX_func.c ****                         if (message->rtr != CAN_STANDARD_MESSAGE)
  71              		.loc 1 82 0
  72 0020 3379     		ldrb	r3, [r6, #4]
  73 0022 002B     		cmp	r3, #0
  74 0024 01D1     		bne	.L21
  79:CAN_TX_RX_func.c **** 
  75              		.loc 1 79 0
  76 0026 0027     		movs	r7, #0
  77 0028 01E0     		b	.L4
  78              	.L21:
  83:CAN_TX_RX_func.c ****                         {
  84:CAN_TX_RX_func.c ****                             regTemp = CAN_TX_RTR_MASK;    /* RTR message Enable */
  79              		.loc 1 84 0
  80 002a 8027     		movs	r7, #128
  81 002c BF03     		lsls	r7, r7, #14
  82              	.L4:
  83              	.LVL5:
  85:CAN_TX_RX_func.c ****                         }
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 4


  86:CAN_TX_RX_func.c **** 
  87:CAN_TX_RX_func.c ****                         if (message->ide == CAN_STANDARD_MESSAGE)
  84              		.loc 1 87 0
  85 002e 7379     		ldrb	r3, [r6, #5]
  86 0030 002B     		cmp	r3, #0
  87 0032 07D1     		bne	.L5
  88:CAN_TX_RX_func.c ****                         {
  89:CAN_TX_RX_func.c ****                             CAN_SET_TX_ID_STANDARD_MSG(i, message->id);
  88              		.loc 1 89 0
  89 0034 2301     		lsls	r3, r4, #4
  90 0036 454A     		ldr	r2, .L23+4
  91 0038 9446     		mov	ip, r2
  92 003a 6344     		add	r3, r3, ip
  93 003c 3268     		ldr	r2, [r6]
  94 003e 5205     		lsls	r2, r2, #21
  95 0040 5A60     		str	r2, [r3, #4]
  96 0042 09E0     		b	.L6
  97              	.L5:
  90:CAN_TX_RX_func.c ****                         }
  91:CAN_TX_RX_func.c ****                         else
  92:CAN_TX_RX_func.c ****                         {
  93:CAN_TX_RX_func.c ****                             regTemp |= CAN_TX_IDE_MASK;
  98              		.loc 1 93 0
  99 0044 8023     		movs	r3, #128
 100 0046 5B03     		lsls	r3, r3, #13
 101 0048 1F43     		orrs	r7, r3
 102              	.LVL6:
  94:CAN_TX_RX_func.c ****                             CAN_SET_TX_ID_EXTENDED_MSG(i, message->id);
 103              		.loc 1 94 0
 104 004a 2301     		lsls	r3, r4, #4
 105 004c 3F4A     		ldr	r2, .L23+4
 106 004e 9446     		mov	ip, r2
 107 0050 6344     		add	r3, r3, ip
 108 0052 3268     		ldr	r2, [r6]
 109 0054 D200     		lsls	r2, r2, #3
 110 0056 5A60     		str	r2, [r3, #4]
 111              	.L6:
  95:CAN_TX_RX_func.c ****                         }
  96:CAN_TX_RX_func.c **** 
  97:CAN_TX_RX_func.c ****                         if (message->dlc < CAN_TX_DLC_MAX_VALUE)
 112              		.loc 1 97 0
 113 0058 B379     		ldrb	r3, [r6, #6]
 114 005a 072B     		cmp	r3, #7
 115 005c 03D8     		bhi	.L7
  98:CAN_TX_RX_func.c ****                         {
  99:CAN_TX_RX_func.c ****                             regTemp |= ((uint32) message->dlc) << CAN_TWO_BYTE_OFFSET;
 116              		.loc 1 99 0
 117 005e 1B04     		lsls	r3, r3, #16
 118 0060 1F43     		orrs	r7, r3
 119              	.LVL7:
 120 0062 B946     		mov	r9, r7
 121              	.LVL8:
 122 0064 03E0     		b	.L8
 123              	.L7:
 100:CAN_TX_RX_func.c ****                         }
 101:CAN_TX_RX_func.c ****                         else
 102:CAN_TX_RX_func.c ****                         {
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 5


 103:CAN_TX_RX_func.c ****                             regTemp |= CAN_TX_DLC_UPPER_VALUE;
 124              		.loc 1 103 0
 125 0066 8023     		movs	r3, #128
 126 0068 1B03     		lsls	r3, r3, #12
 127 006a 1F43     		orrs	r7, r3
 128              	.LVL9:
 129 006c B946     		mov	r9, r7
 130              	.LVL10:
 131              	.L8:
 104:CAN_TX_RX_func.c ****                         }
 105:CAN_TX_RX_func.c **** 
 106:CAN_TX_RX_func.c ****                         if (message->irq != CAN_TRANSMIT_INT_DISABLE)
 132              		.loc 1 106 0
 133 006e F379     		ldrb	r3, [r6, #7]
 134 0070 002B     		cmp	r3, #0
 135 0072 03D0     		beq	.L9
 107:CAN_TX_RX_func.c ****                         {
 108:CAN_TX_RX_func.c ****                             regTemp |= CAN_TX_INT_ENABLE_MASK;    /* Transmit Interrupt Enable */
 136              		.loc 1 108 0
 137 0074 0423     		movs	r3, #4
 138 0076 4A46     		mov	r2, r9
 139 0078 1A43     		orrs	r2, r3
 140 007a 9146     		mov	r9, r2
 141              	.LVL11:
 142              	.L9:
 109:CAN_TX_RX_func.c ****                         }
 110:CAN_TX_RX_func.c **** 
 111:CAN_TX_RX_func.c ****                         for (j = 0u; (j < message->dlc) && (j < CAN_TX_DLC_MAX_VALUE); j++)
 143              		.loc 1 111 0
 144 007c 0023     		movs	r3, #0
 145 007e 2AE0     		b	.L10
 146              	.LVL12:
 147              	.L14:
 112:CAN_TX_RX_func.c ****                         {
 113:CAN_TX_RX_func.c ****                             #if (CY_PSOC3 || CY_PSOC5)
 114:CAN_TX_RX_func.c ****                                 CAN_TX_DATA_BYTE(i, j) = message->msg->byte[j];
 115:CAN_TX_RX_func.c ****                             #else /* CY_PSOC4 */
 116:CAN_TX_RX_func.c ****                                 CAN_TX_DATA_BYTE(i, j, message->msg->byte[j]);
 148              		.loc 1 116 0
 149 0080 032B     		cmp	r3, #3
 150 0082 13D9     		bls	.L11
 151              		.loc 1 116 0 is_stmt 0 discriminator 1
 152 0084 2001     		lsls	r0, r4, #4
 153 0086 324A     		ldr	r2, .L23+8
 154 0088 9446     		mov	ip, r2
 155 008a 6044     		add	r0, r0, ip
 156 008c 0268     		ldr	r2, [r0]
 157 008e 9446     		mov	ip, r2
 158 0090 5907     		lsls	r1, r3, #29
 159 0092 CA1A     		subs	r2, r1, r3
 160 0094 D100     		lsls	r1, r2, #3
 161 0096 3831     		adds	r1, r1, #56
 162 0098 FF22     		movs	r2, #255
 163 009a 8A40     		lsls	r2, r2, r1
 164 009c 6746     		mov	r7, ip
 165 009e 9743     		bics	r7, r2
 166 00a0 F268     		ldr	r2, [r6, #12]
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 6


 167 00a2 D25C     		ldrb	r2, [r2, r3]
 168 00a4 8A40     		lsls	r2, r2, r1
 169 00a6 3A43     		orrs	r2, r7
 170 00a8 0260     		str	r2, [r0]
 171 00aa 12E0     		b	.L12
 172              	.L11:
 173              		.loc 1 116 0 discriminator 2
 174 00ac 2001     		lsls	r0, r4, #4
 175 00ae 274A     		ldr	r2, .L23+4
 176 00b0 9446     		mov	ip, r2
 177 00b2 6044     		add	r0, r0, ip
 178 00b4 8268     		ldr	r2, [r0, #8]
 179 00b6 9446     		mov	ip, r2
 180 00b8 5907     		lsls	r1, r3, #29
 181 00ba CA1A     		subs	r2, r1, r3
 182 00bc D100     		lsls	r1, r2, #3
 183 00be 1831     		adds	r1, r1, #24
 184 00c0 FF22     		movs	r2, #255
 185 00c2 8A40     		lsls	r2, r2, r1
 186 00c4 6746     		mov	r7, ip
 187 00c6 9743     		bics	r7, r2
 188 00c8 F268     		ldr	r2, [r6, #12]
 189 00ca D25C     		ldrb	r2, [r2, r3]
 190 00cc 8A40     		lsls	r2, r2, r1
 191 00ce 3A43     		orrs	r2, r7
 192 00d0 8260     		str	r2, [r0, #8]
 193              	.L12:
 111:CAN_TX_RX_func.c ****                         {
 194              		.loc 1 111 0 is_stmt 1 discriminator 2
 195 00d2 0133     		adds	r3, r3, #1
 196              	.LVL13:
 197 00d4 DBB2     		uxtb	r3, r3
 198              	.LVL14:
 199              	.L10:
 111:CAN_TX_RX_func.c ****                         {
 200              		.loc 1 111 0 is_stmt 0 discriminator 1
 201 00d6 B279     		ldrb	r2, [r6, #6]
 202 00d8 9342     		cmp	r3, r2
 203 00da 01D2     		bcs	.L13
 111:CAN_TX_RX_func.c ****                         {
 204              		.loc 1 111 0 discriminator 3
 205 00dc 072B     		cmp	r3, #7
 206 00de CFD9     		bls	.L14
 207              	.L13:
 117:CAN_TX_RX_func.c ****                             #endif /* CY_PSOC3 || CY_PSOC5 */
 118:CAN_TX_RX_func.c ****                         }
 119:CAN_TX_RX_func.c **** 
 120:CAN_TX_RX_func.c ****                         /* Disable isr */
 121:CAN_TX_RX_func.c ****     CyIntDisable(CAN_ISR_NUMBER);
 208              		.loc 1 121 0 is_stmt 1
 209 00e0 1B20     		movs	r0, #27
 210 00e2 FFF7FEFF 		bl	CyIntDisable
 211              	.LVL15:
 122:CAN_TX_RX_func.c **** 
 123:CAN_TX_RX_func.c ****                         /* WPN[23] and WPN[3] set to 1 for write to CAN Control reg */
 124:CAN_TX_RX_func.c ****                         CY_SET_REG32(CAN_TX_CMD_PTR(i), (regTemp | CAN_TX_WPN_SET));
 212              		.loc 1 124 0
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 7


 213 00e6 2301     		lsls	r3, r4, #4
 214 00e8 184A     		ldr	r2, .L23+4
 215 00ea 9446     		mov	ip, r2
 216 00ec 6344     		add	r3, r3, ip
 217 00ee 194A     		ldr	r2, .L23+12
 218 00f0 4F46     		mov	r7, r9
 219 00f2 1743     		orrs	r7, r2
 220 00f4 1F60     		str	r7, [r3]
 125:CAN_TX_RX_func.c **** 
 126:CAN_TX_RX_func.c ****                         #if (CY_PSOC3 || CY_PSOC5)
 127:CAN_TX_RX_func.c ****                             CY_SET_REG32(CAN_TX_CMD_PTR(i), CAN_SEND_MESSAGE);
 128:CAN_TX_RX_func.c ****                         #else /* CY_PSOC4 */
 129:CAN_TX_RX_func.c ****                             if (message->sst != CAN_STANDARD_MESSAGE)
 221              		.loc 1 129 0
 222 00f6 327A     		ldrb	r2, [r6, #8]
 223 00f8 002A     		cmp	r2, #0
 224 00fa 04D0     		beq	.L15
 130:CAN_TX_RX_func.c ****                             {
 131:CAN_TX_RX_func.c ****                                 /* Single Shot Transmission */
 132:CAN_TX_RX_func.c ****                                 CAN_TX_CMD_REG(i) |= CAN_SEND_MESSAGE |
 225              		.loc 1 132 0
 226 00fc 1968     		ldr	r1, [r3]
 227 00fe 0322     		movs	r2, #3
 228 0100 0A43     		orrs	r2, r1
 229 0102 1A60     		str	r2, [r3]
 230 0104 03E0     		b	.L16
 231              	.L15:
 133:CAN_TX_RX_func.c ****                                 CAN_TX_ABORT_MASK;
 134:CAN_TX_RX_func.c ****                             }
 135:CAN_TX_RX_func.c ****                             else
 136:CAN_TX_RX_func.c ****                             {
 137:CAN_TX_RX_func.c ****                                 CAN_TX_CMD_REG(i) |= CAN_SEND_MESSAGE;
 232              		.loc 1 137 0
 233 0106 1968     		ldr	r1, [r3]
 234 0108 0122     		movs	r2, #1
 235 010a 0A43     		orrs	r2, r1
 236 010c 1A60     		str	r2, [r3]
 237              	.L16:
 138:CAN_TX_RX_func.c ****                             }
 139:CAN_TX_RX_func.c ****                         #endif /* CY_PSOC3 || CY_PSOC5 */
 140:CAN_TX_RX_func.c **** 
 141:CAN_TX_RX_func.c ****                         /* Enable isr */
 142:CAN_TX_RX_func.c ****     CyIntEnable(CAN_ISR_NUMBER);
 238              		.loc 1 142 0
 239 010e 1B20     		movs	r0, #27
 240 0110 FFF7FEFF 		bl	CyIntEnable
 241              	.LVL16:
 143:CAN_TX_RX_func.c **** 
 144:CAN_TX_RX_func.c ****                         result = CYRET_SUCCESS;
 242              		.loc 1 144 0
 243 0114 0020     		movs	r0, #0
 244              	.LVL17:
 245              	.L3:
 145:CAN_TX_RX_func.c ****                     }
 146:CAN_TX_RX_func.c ****             }
 147:CAN_TX_RX_func.c ****             shift <<= 1u;
 246              		.loc 1 147 0
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 8


 247 0116 6D00     		lsls	r5, r5, #1
 248              	.LVL18:
 249 0118 EDB2     		uxtb	r5, r5
 250              	.LVL19:
 148:CAN_TX_RX_func.c ****             if (result == CYRET_SUCCESS)
 251              		.loc 1 148 0
 252 011a 0028     		cmp	r0, #0
 253 011c 07D0     		beq	.L17
  66:CAN_TX_RX_func.c ****         {
 254              		.loc 1 66 0 discriminator 2
 255 011e 0134     		adds	r4, r4, #1
 256              	.LVL20:
 257 0120 E4B2     		uxtb	r4, r4
 258              	.LVL21:
 259 0122 01E0     		b	.L20
 260              	.LVL22:
 261              	.L22:
 262 0124 0125     		movs	r5, #1
 263 0126 0024     		movs	r4, #0
 264              	.L20:
 265              	.LVL23:
  66:CAN_TX_RX_func.c ****         {
 266              		.loc 1 66 0 is_stmt 0 discriminator 1
 267 0128 072C     		cmp	r4, #7
 268 012a 00D8     		bhi	.LCB273
 269 012c 71E7     		b	.L18	@long jump
 270              	.LCB273:
 271              	.L17:
 149:CAN_TX_RX_func.c ****             {
 150:CAN_TX_RX_func.c ****                 break;
 151:CAN_TX_RX_func.c ****             }
 152:CAN_TX_RX_func.c ****         }
 153:CAN_TX_RX_func.c ****         if (result == CYRET_SUCCESS)
 272              		.loc 1 153 0 is_stmt 1
 273 012e 0028     		cmp	r0, #0
 274 0130 06D0     		beq	.L19
 154:CAN_TX_RX_func.c ****         {
 155:CAN_TX_RX_func.c ****             break;
 156:CAN_TX_RX_func.c ****         }
 157:CAN_TX_RX_func.c ****         else
 158:CAN_TX_RX_func.c ****         {
 159:CAN_TX_RX_func.c ****             retry++;
 275              		.loc 1 159 0
 276 0132 4346     		mov	r3, r8
 277 0134 0133     		adds	r3, r3, #1
 278 0136 DBB2     		uxtb	r3, r3
 279 0138 9846     		mov	r8, r3
 280              	.LVL24:
 281              	.L2:
  63:CAN_TX_RX_func.c ****     {
 282              		.loc 1 63 0
 283 013a 4346     		mov	r3, r8
 284 013c 022B     		cmp	r3, #2
 285 013e F1D9     		bls	.L22
 286              	.L19:
 160:CAN_TX_RX_func.c ****         }
 161:CAN_TX_RX_func.c ****     }
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 9


 162:CAN_TX_RX_func.c **** 
 163:CAN_TX_RX_func.c ****     return (result);
 164:CAN_TX_RX_func.c **** }
 287              		.loc 1 164 0
 288              		@ sp needed
 289              	.LVL25:
 290              	.LVL26:
 291 0140 0CBC     		pop	{r2, r3}
 292 0142 9046     		mov	r8, r2
 293 0144 9946     		mov	r9, r3
 294 0146 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 295              	.L24:
 296              		.align	2
 297              	.L23:
 298 0148 08002E40 		.word	1076756488
 299 014c 20002E40 		.word	1076756512
 300 0150 2C002E40 		.word	1076756524
 301 0154 08008000 		.word	8388616
 302              		.cfi_endproc
 303              	.LFE1:
 304              		.size	CAN_SendMsg, .-CAN_SendMsg
 305              		.section	.text.CAN_TxCancel,"ax",%progbits
 306              		.align	2
 307              		.global	CAN_TxCancel
 308              		.code	16
 309              		.thumb_func
 310              		.type	CAN_TxCancel, %function
 311              	CAN_TxCancel:
 312              	.LFB2:
 165:CAN_TX_RX_func.c **** 
 166:CAN_TX_RX_func.c **** 
 167:CAN_TX_RX_func.c **** /*******************************************************************************
 168:CAN_TX_RX_func.c **** * FUNCTION NAME:   CAN_TxCancel
 169:CAN_TX_RX_func.c **** ********************************************************************************
 170:CAN_TX_RX_func.c **** *
 171:CAN_TX_RX_func.c **** * Summary:
 172:CAN_TX_RX_func.c **** *  This function cancels transmission of a message that has been queued to be
 173:CAN_TX_RX_func.c **** *  transmitted. Values between 0 and 7 are valid.
 174:CAN_TX_RX_func.c **** *
 175:CAN_TX_RX_func.c **** * Parameters:
 176:CAN_TX_RX_func.c **** *  bufferId: The mailbox number.
 177:CAN_TX_RX_func.c **** *
 178:CAN_TX_RX_func.c **** * Return:
 179:CAN_TX_RX_func.c **** *  None.
 180:CAN_TX_RX_func.c **** *
 181:CAN_TX_RX_func.c **** *******************************************************************************/
 182:CAN_TX_RX_func.c **** void CAN_TxCancel(uint8 bufferId) 
 183:CAN_TX_RX_func.c **** {
 313              		.loc 1 183 0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317              		@ link register save eliminated.
 318              	.LVL27:
 184:CAN_TX_RX_func.c ****     if (bufferId < CAN_NUMBER_OF_TX_MAILBOXES)
 319              		.loc 1 184 0
 320 0000 0728     		cmp	r0, #7
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 10


 321 0002 09D8     		bhi	.L25
 185:CAN_TX_RX_func.c ****     {
 186:CAN_TX_RX_func.c ****         CAN_TX_ABORT_MESSAGE(bufferId);
 322              		.loc 1 186 0
 323 0004 0001     		lsls	r0, r0, #4
 324              	.LVL28:
 325 0006 054B     		ldr	r3, .L27
 326 0008 9C46     		mov	ip, r3
 327 000a 6044     		add	r0, r0, ip
 328 000c 0368     		ldr	r3, [r0]
 329 000e 0322     		movs	r2, #3
 330 0010 9343     		bics	r3, r2
 331 0012 013A     		subs	r2, r2, #1
 332 0014 1343     		orrs	r3, r2
 333 0016 0360     		str	r3, [r0]
 334              	.L25:
 187:CAN_TX_RX_func.c ****     }
 188:CAN_TX_RX_func.c **** }
 335              		.loc 1 188 0
 336              		@ sp needed
 337 0018 7047     		bx	lr
 338              	.L28:
 339 001a C046     		.align	2
 340              	.L27:
 341 001c 20002E40 		.word	1076756512
 342              		.cfi_endproc
 343              	.LFE2:
 344              		.size	CAN_TxCancel, .-CAN_TxCancel
 345              		.section	.text.CAN_SendMsg0,"ax",%progbits
 346              		.align	2
 347              		.global	CAN_SendMsg0
 348              		.code	16
 349              		.thumb_func
 350              		.type	CAN_SendMsg0, %function
 351              	CAN_SendMsg0:
 352              	.LFB3:
 189:CAN_TX_RX_func.c **** 
 190:CAN_TX_RX_func.c **** 
 191:CAN_TX_RX_func.c **** #if (CAN_TX0_FUNC_ENABLE)
 192:CAN_TX_RX_func.c ****     /*******************************************************************************
 193:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg0
 194:CAN_TX_RX_func.c ****     ********************************************************************************
 195:CAN_TX_RX_func.c ****     *
 196:CAN_TX_RX_func.c ****     * Summary:
 197:CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 0. The function checks
 198:CAN_TX_RX_func.c ****     *  if mailbox 0 doesn't already have un-transmitted messages waiting for
 199:CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 200:CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 201:CAN_TX_RX_func.c ****     *
 202:CAN_TX_RX_func.c ****     * Parameters:
 203:CAN_TX_RX_func.c ****     *  None.
 204:CAN_TX_RX_func.c ****     *
 205:CAN_TX_RX_func.c ****     * Return:
 206:CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 207:CAN_TX_RX_func.c ****     *   Define                             Description
 208:CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 209:CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 11


 210:CAN_TX_RX_func.c ****     *
 211:CAN_TX_RX_func.c ****     *******************************************************************************/
 212:CAN_TX_RX_func.c ****     uint8 CAN_SendMsg0(void) 
 213:CAN_TX_RX_func.c ****     {
 353              		.loc 1 213 0
 354              		.cfi_startproc
 355              		@ args = 0, pretend = 0, frame = 0
 356              		@ frame_needed = 0, uses_anonymous_args = 0
 357 0000 70B5     		push	{r4, r5, r6, lr}
 358              		.cfi_def_cfa_offset 16
 359              		.cfi_offset 4, -16
 360              		.cfi_offset 5, -12
 361              		.cfi_offset 6, -8
 362              		.cfi_offset 14, -4
 363              	.LVL29:
 214:CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 215:CAN_TX_RX_func.c **** 
 216:CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 217:CAN_TX_RX_func.c ****             if ((CAN_TX[0u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 218:CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 219:CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(0u) & CAN_TX_REQUEST_PENDING) != 0u)
 364              		.loc 1 219 0
 365 0002 234B     		ldr	r3, .L32
 366 0004 1B68     		ldr	r3, [r3]
 367 0006 DB07     		lsls	r3, r3, #31
 368 0008 3FD4     		bmi	.L31
 220:CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 221:CAN_TX_RX_func.c ****             {
 222:CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 223:CAN_TX_RX_func.c ****             }
 224:CAN_TX_RX_func.c ****             else
 225:CAN_TX_RX_func.c ****             {
 226:CAN_TX_RX_func.c ****                 /* `#START MESSAGE_0_TRASMITTED` */
 227:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(0,0,dato_enviado[0]);
 369              		.loc 1 227 0
 370 000a 224B     		ldr	r3, .L32+4
 371 000c 1968     		ldr	r1, [r3]
 372 000e 0902     		lsls	r1, r1, #8
 373 0010 090A     		lsrs	r1, r1, #8
 374 0012 214A     		ldr	r2, .L32+8
 375 0014 1078     		ldrb	r0, [r2]
 376 0016 0006     		lsls	r0, r0, #24
 377 0018 0143     		orrs	r1, r0
 378 001a 1960     		str	r1, [r3]
 228:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(0,1,dato_enviado[1]);
 379              		.loc 1 228 0
 380 001c 1968     		ldr	r1, [r3]
 381 001e 1F48     		ldr	r0, .L32+12
 382 0020 0140     		ands	r1, r0
 383 0022 0C00     		movs	r4, r1
 384 0024 5178     		ldrb	r1, [r2, #1]
 385 0026 0904     		lsls	r1, r1, #16
 386 0028 2143     		orrs	r1, r4
 387 002a 1960     		str	r1, [r3]
 229:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(0,2,dato_enviado[2]);
 388              		.loc 1 229 0
 389 002c 1C68     		ldr	r4, [r3]
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 12


 390 002e 1C49     		ldr	r1, .L32+16
 391 0030 0C40     		ands	r4, r1
 392 0032 2500     		movs	r5, r4
 393 0034 9478     		ldrb	r4, [r2, #2]
 394 0036 2402     		lsls	r4, r4, #8
 395 0038 2C43     		orrs	r4, r5
 396 003a 1C60     		str	r4, [r3]
 230:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(0,3,dato_enviado[3]);
 397              		.loc 1 230 0
 398 003c 1C68     		ldr	r4, [r3]
 399 003e FF26     		movs	r6, #255
 400 0040 B443     		bics	r4, r6
 401 0042 D578     		ldrb	r5, [r2, #3]
 402 0044 2C43     		orrs	r4, r5
 403 0046 1C60     		str	r4, [r3]
 231:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(0,4,dato_enviado[4]);
 404              		.loc 1 231 0
 405 0048 164B     		ldr	r3, .L32+20
 406 004a 1C68     		ldr	r4, [r3]
 407 004c 2402     		lsls	r4, r4, #8
 408 004e 240A     		lsrs	r4, r4, #8
 409 0050 1579     		ldrb	r5, [r2, #4]
 410 0052 2D06     		lsls	r5, r5, #24
 411 0054 2C43     		orrs	r4, r5
 412 0056 1C60     		str	r4, [r3]
 232:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(0,5,dato_enviado[5]);
 413              		.loc 1 232 0
 414 0058 1C68     		ldr	r4, [r3]
 415 005a 2040     		ands	r0, r4
 416 005c 5479     		ldrb	r4, [r2, #5]
 417 005e 2404     		lsls	r4, r4, #16
 418 0060 2043     		orrs	r0, r4
 419 0062 1860     		str	r0, [r3]
 233:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(0,6,dato_enviado[6]);
 420              		.loc 1 233 0
 421 0064 1868     		ldr	r0, [r3]
 422 0066 0140     		ands	r1, r0
 423 0068 9079     		ldrb	r0, [r2, #6]
 424 006a 0002     		lsls	r0, r0, #8
 425 006c 0143     		orrs	r1, r0
 426 006e 1960     		str	r1, [r3]
 234:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(0,7,dato_enviado[7]);                           
 427              		.loc 1 234 0
 428 0070 1868     		ldr	r0, [r3]
 429 0072 B043     		bics	r0, r6
 430 0074 D179     		ldrb	r1, [r2, #7]
 431 0076 0200     		movs	r2, r0
 432 0078 0A43     		orrs	r2, r1
 433 007a 1A60     		str	r2, [r3]
 235:CAN_TX_RX_func.c ****                 /* `#END` */
 236:CAN_TX_RX_func.c **** 
 237:CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_0_CALLBACK
 238:CAN_TX_RX_func.c ****                     CAN_SendMsg_0_Callback();
 239:CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_0_CALLBACK */
 240:CAN_TX_RX_func.c **** 
 241:CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(0u),
 434              		.loc 1 241 0
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 13


 435 007c 044A     		ldr	r2, .L32
 436 007e 1168     		ldr	r1, [r2]
 437 0080 0123     		movs	r3, #1
 438 0082 0B43     		orrs	r3, r1
 439 0084 1360     		str	r3, [r2]
 214:CAN_TX_RX_func.c **** 
 440              		.loc 1 214 0
 441 0086 0020     		movs	r0, #0
 442 0088 00E0     		b	.L30
 443              	.L31:
 222:CAN_TX_RX_func.c ****             }
 444              		.loc 1 222 0
 445 008a 0120     		movs	r0, #1
 446              	.L30:
 447              	.LVL30:
 242:CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(0u)) | CAN_SEND_MESSAGE);
 243:CAN_TX_RX_func.c ****             }
 244:CAN_TX_RX_func.c **** 
 245:CAN_TX_RX_func.c ****         return (result);
 246:CAN_TX_RX_func.c ****     }
 448              		.loc 1 246 0
 449              		@ sp needed
 450 008c 70BD     		pop	{r4, r5, r6, pc}
 451              	.L33:
 452 008e C046     		.align	2
 453              	.L32:
 454 0090 20002E40 		.word	1076756512
 455 0094 28002E40 		.word	1076756520
 456 0098 00000000 		.word	dato_enviado
 457 009c FFFF00FF 		.word	-16711681
 458 00a0 FF00FFFF 		.word	-65281
 459 00a4 2C002E40 		.word	1076756524
 460              		.cfi_endproc
 461              	.LFE3:
 462              		.size	CAN_SendMsg0, .-CAN_SendMsg0
 463              		.section	.text.CAN_SendMsg1,"ax",%progbits
 464              		.align	2
 465              		.global	CAN_SendMsg1
 466              		.code	16
 467              		.thumb_func
 468              		.type	CAN_SendMsg1, %function
 469              	CAN_SendMsg1:
 470              	.LFB4:
 247:CAN_TX_RX_func.c **** #endif /* CAN_TX0_FUNC_ENABLE */
 248:CAN_TX_RX_func.c **** 
 249:CAN_TX_RX_func.c **** 
 250:CAN_TX_RX_func.c **** #if (CAN_TX1_FUNC_ENABLE)
 251:CAN_TX_RX_func.c ****     /*******************************************************************************
 252:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg1
 253:CAN_TX_RX_func.c ****     ********************************************************************************
 254:CAN_TX_RX_func.c ****     *
 255:CAN_TX_RX_func.c ****     * Summary:
 256:CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 1. The function checks
 257:CAN_TX_RX_func.c ****     *  if mailbox 1 doesn't already have un-transmitted messages waiting for
 258:CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 259:CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 260:CAN_TX_RX_func.c ****     *
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 14


 261:CAN_TX_RX_func.c ****     * Parameters:
 262:CAN_TX_RX_func.c ****     *  None.
 263:CAN_TX_RX_func.c ****     *
 264:CAN_TX_RX_func.c ****     * Return:
 265:CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 266:CAN_TX_RX_func.c ****     *   Define                             Description
 267:CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 268:CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 269:CAN_TX_RX_func.c ****     *
 270:CAN_TX_RX_func.c ****     *******************************************************************************/
 271:CAN_TX_RX_func.c ****     uint8 CAN_SendMsg1(void) 
 272:CAN_TX_RX_func.c ****     {
 471              		.loc 1 272 0
 472              		.cfi_startproc
 473              		@ args = 0, pretend = 0, frame = 0
 474              		@ frame_needed = 0, uses_anonymous_args = 0
 475 0000 70B5     		push	{r4, r5, r6, lr}
 476              		.cfi_def_cfa_offset 16
 477              		.cfi_offset 4, -16
 478              		.cfi_offset 5, -12
 479              		.cfi_offset 6, -8
 480              		.cfi_offset 14, -4
 481              	.LVL31:
 273:CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 274:CAN_TX_RX_func.c **** 
 275:CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 276:CAN_TX_RX_func.c ****             if ((CAN_TX[1u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 277:CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 278:CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(1u) & CAN_TX_REQUEST_PENDING) != 0u)
 482              		.loc 1 278 0
 483 0002 234B     		ldr	r3, .L37
 484 0004 1B68     		ldr	r3, [r3]
 485 0006 DB07     		lsls	r3, r3, #31
 486 0008 3FD4     		bmi	.L36
 279:CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 280:CAN_TX_RX_func.c ****             {
 281:CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 282:CAN_TX_RX_func.c ****             }
 283:CAN_TX_RX_func.c ****             else
 284:CAN_TX_RX_func.c ****             {
 285:CAN_TX_RX_func.c ****                 /* `#START MESSAGE_1_TRASMITTED` */
 286:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(1,0,dato_enviado_1[0]);
 487              		.loc 1 286 0
 488 000a 224B     		ldr	r3, .L37+4
 489 000c 1968     		ldr	r1, [r3]
 490 000e 0902     		lsls	r1, r1, #8
 491 0010 090A     		lsrs	r1, r1, #8
 492 0012 214A     		ldr	r2, .L37+8
 493 0014 1078     		ldrb	r0, [r2]
 494 0016 0006     		lsls	r0, r0, #24
 495 0018 0143     		orrs	r1, r0
 496 001a 1960     		str	r1, [r3]
 287:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(1,1,dato_enviado_1[1]);
 497              		.loc 1 287 0
 498 001c 1968     		ldr	r1, [r3]
 499 001e 1F48     		ldr	r0, .L37+12
 500 0020 0140     		ands	r1, r0
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 15


 501 0022 0C00     		movs	r4, r1
 502 0024 5178     		ldrb	r1, [r2, #1]
 503 0026 0904     		lsls	r1, r1, #16
 504 0028 2143     		orrs	r1, r4
 505 002a 1960     		str	r1, [r3]
 288:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(1,2,dato_enviado_1[2]);
 506              		.loc 1 288 0
 507 002c 1C68     		ldr	r4, [r3]
 508 002e 1C49     		ldr	r1, .L37+16
 509 0030 0C40     		ands	r4, r1
 510 0032 2500     		movs	r5, r4
 511 0034 9478     		ldrb	r4, [r2, #2]
 512 0036 2402     		lsls	r4, r4, #8
 513 0038 2C43     		orrs	r4, r5
 514 003a 1C60     		str	r4, [r3]
 289:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(1,3,dato_enviado_1[3]);
 515              		.loc 1 289 0
 516 003c 1C68     		ldr	r4, [r3]
 517 003e FF26     		movs	r6, #255
 518 0040 B443     		bics	r4, r6
 519 0042 D578     		ldrb	r5, [r2, #3]
 520 0044 2C43     		orrs	r4, r5
 521 0046 1C60     		str	r4, [r3]
 290:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(1,4,dato_enviado_1[4]);
 522              		.loc 1 290 0
 523 0048 164B     		ldr	r3, .L37+20
 524 004a 1C68     		ldr	r4, [r3]
 525 004c 2402     		lsls	r4, r4, #8
 526 004e 240A     		lsrs	r4, r4, #8
 527 0050 1579     		ldrb	r5, [r2, #4]
 528 0052 2D06     		lsls	r5, r5, #24
 529 0054 2C43     		orrs	r4, r5
 530 0056 1C60     		str	r4, [r3]
 291:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(1,5,dato_enviado_1[5]);
 531              		.loc 1 291 0
 532 0058 1C68     		ldr	r4, [r3]
 533 005a 2040     		ands	r0, r4
 534 005c 5479     		ldrb	r4, [r2, #5]
 535 005e 2404     		lsls	r4, r4, #16
 536 0060 2043     		orrs	r0, r4
 537 0062 1860     		str	r0, [r3]
 292:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(1,6,dato_enviado_1[6]);
 538              		.loc 1 292 0
 539 0064 1868     		ldr	r0, [r3]
 540 0066 0140     		ands	r1, r0
 541 0068 9079     		ldrb	r0, [r2, #6]
 542 006a 0002     		lsls	r0, r0, #8
 543 006c 0143     		orrs	r1, r0
 544 006e 1960     		str	r1, [r3]
 293:CAN_TX_RX_func.c ****                 CAN_TX_DATA_BYTE(1,7,dato_enviado_1[7]);
 545              		.loc 1 293 0
 546 0070 1868     		ldr	r0, [r3]
 547 0072 B043     		bics	r0, r6
 548 0074 D179     		ldrb	r1, [r2, #7]
 549 0076 0200     		movs	r2, r0
 550 0078 0A43     		orrs	r2, r1
 551 007a 1A60     		str	r2, [r3]
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 16


 294:CAN_TX_RX_func.c ****                 /* `#END` */
 295:CAN_TX_RX_func.c **** 
 296:CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_1_CALLBACK
 297:CAN_TX_RX_func.c ****                     CAN_SendMsg_1_Callback();
 298:CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_1_CALLBACK */
 299:CAN_TX_RX_func.c **** 
 300:CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(1u),
 552              		.loc 1 300 0
 553 007c 044A     		ldr	r2, .L37
 554 007e 1168     		ldr	r1, [r2]
 555 0080 0123     		movs	r3, #1
 556 0082 0B43     		orrs	r3, r1
 557 0084 1360     		str	r3, [r2]
 273:CAN_TX_RX_func.c **** 
 558              		.loc 1 273 0
 559 0086 0020     		movs	r0, #0
 560 0088 00E0     		b	.L35
 561              	.L36:
 281:CAN_TX_RX_func.c ****             }
 562              		.loc 1 281 0
 563 008a 0120     		movs	r0, #1
 564              	.L35:
 565              	.LVL32:
 301:CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(1u)) | CAN_SEND_MESSAGE);
 302:CAN_TX_RX_func.c ****             }
 303:CAN_TX_RX_func.c **** 
 304:CAN_TX_RX_func.c ****         return (result);
 305:CAN_TX_RX_func.c ****     }
 566              		.loc 1 305 0
 567              		@ sp needed
 568 008c 70BD     		pop	{r4, r5, r6, pc}
 569              	.L38:
 570 008e C046     		.align	2
 571              	.L37:
 572 0090 30002E40 		.word	1076756528
 573 0094 38002E40 		.word	1076756536
 574 0098 00000000 		.word	dato_enviado_1
 575 009c FFFF00FF 		.word	-16711681
 576 00a0 FF00FFFF 		.word	-65281
 577 00a4 3C002E40 		.word	1076756540
 578              		.cfi_endproc
 579              	.LFE4:
 580              		.size	CAN_SendMsg1, .-CAN_SendMsg1
 581              		.section	.text.CAN_ReceiveMsg,"ax",%progbits
 582              		.align	2
 583              		.global	CAN_ReceiveMsg
 584              		.code	16
 585              		.thumb_func
 586              		.type	CAN_ReceiveMsg, %function
 587              	CAN_ReceiveMsg:
 588              	.LFB5:
 306:CAN_TX_RX_func.c **** #endif /* CAN_TX1_FUNC_ENABLE */
 307:CAN_TX_RX_func.c **** 
 308:CAN_TX_RX_func.c **** 
 309:CAN_TX_RX_func.c **** #if (CAN_TX2_FUNC_ENABLE)
 310:CAN_TX_RX_func.c ****     /*******************************************************************************
 311:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg2
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 17


 312:CAN_TX_RX_func.c ****     ********************************************************************************
 313:CAN_TX_RX_func.c ****     *
 314:CAN_TX_RX_func.c ****     * Summary:
 315:CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 2. The function checks
 316:CAN_TX_RX_func.c ****     *  if mailbox 2 doesn't already have un-transmitted messages waiting for
 317:CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 318:CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 319:CAN_TX_RX_func.c ****     *
 320:CAN_TX_RX_func.c ****     * Parameters:
 321:CAN_TX_RX_func.c ****     *  None.
 322:CAN_TX_RX_func.c ****     *
 323:CAN_TX_RX_func.c ****     * Return:
 324:CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 325:CAN_TX_RX_func.c ****     *   Define                             Description
 326:CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 327:CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 328:CAN_TX_RX_func.c ****     *
 329:CAN_TX_RX_func.c ****     *******************************************************************************/
 330:CAN_TX_RX_func.c ****     uint8 CAN_SendMsg2(void) 
 331:CAN_TX_RX_func.c ****     {
 332:CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 333:CAN_TX_RX_func.c **** 
 334:CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 335:CAN_TX_RX_func.c ****             if ((CAN_TX[2u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 336:CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 337:CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(2u) & CAN_TX_REQUEST_PENDING) != 0u)
 338:CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 339:CAN_TX_RX_func.c ****             {
 340:CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 341:CAN_TX_RX_func.c ****             }
 342:CAN_TX_RX_func.c ****             else
 343:CAN_TX_RX_func.c ****             {
 344:CAN_TX_RX_func.c ****                 /* `#START MESSAGE_2_TRASMITTED` */
 345:CAN_TX_RX_func.c **** 
 346:CAN_TX_RX_func.c ****                 /* `#END` */
 347:CAN_TX_RX_func.c **** 
 348:CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_2_CALLBACK
 349:CAN_TX_RX_func.c ****                     CAN_SendMsg_2_Callback();
 350:CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_2_CALLBACK */
 351:CAN_TX_RX_func.c **** 
 352:CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(2u),
 353:CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(2u)) | CAN_SEND_MESSAGE);
 354:CAN_TX_RX_func.c ****             }
 355:CAN_TX_RX_func.c **** 
 356:CAN_TX_RX_func.c ****         return (result);
 357:CAN_TX_RX_func.c ****     }
 358:CAN_TX_RX_func.c **** #endif /* CAN_TX2_FUNC_ENABLE */
 359:CAN_TX_RX_func.c **** 
 360:CAN_TX_RX_func.c **** 
 361:CAN_TX_RX_func.c **** #if (CAN_TX3_FUNC_ENABLE)
 362:CAN_TX_RX_func.c ****     /*******************************************************************************
 363:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg3
 364:CAN_TX_RX_func.c ****     ********************************************************************************
 365:CAN_TX_RX_func.c ****     *
 366:CAN_TX_RX_func.c ****     * Summary:
 367:CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 3. The function checks
 368:CAN_TX_RX_func.c ****     *  if mailbox 3 doesn't already have un-transmitted messages waiting for
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 18


 369:CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 370:CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 371:CAN_TX_RX_func.c ****     *
 372:CAN_TX_RX_func.c ****     * Parameters:
 373:CAN_TX_RX_func.c ****     *  None.
 374:CAN_TX_RX_func.c ****     *
 375:CAN_TX_RX_func.c ****     * Return:
 376:CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 377:CAN_TX_RX_func.c ****     *   Define                             Description
 378:CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 379:CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 380:CAN_TX_RX_func.c ****     *
 381:CAN_TX_RX_func.c ****     *******************************************************************************/
 382:CAN_TX_RX_func.c ****     uint8 CAN_SendMsg3(void) 
 383:CAN_TX_RX_func.c ****     {
 384:CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 385:CAN_TX_RX_func.c **** 
 386:CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 387:CAN_TX_RX_func.c ****             if ((CAN_TX[3u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 388:CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 389:CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(3u) & CAN_TX_REQUEST_PENDING) != 0u)
 390:CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 391:CAN_TX_RX_func.c ****             {
 392:CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 393:CAN_TX_RX_func.c ****             }
 394:CAN_TX_RX_func.c ****             else
 395:CAN_TX_RX_func.c ****             {
 396:CAN_TX_RX_func.c ****                 /* `#START MESSAGE_3_TRASMITTED` */
 397:CAN_TX_RX_func.c **** 
 398:CAN_TX_RX_func.c ****                 /* `#END` */
 399:CAN_TX_RX_func.c **** 
 400:CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_3_CALLBACK
 401:CAN_TX_RX_func.c ****                     CAN_SendMsg_3_Callback();
 402:CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_3_CALLBACK */
 403:CAN_TX_RX_func.c **** 
 404:CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(3u),
 405:CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(3u)) | CAN_SEND_MESSAGE);
 406:CAN_TX_RX_func.c ****             }
 407:CAN_TX_RX_func.c **** 
 408:CAN_TX_RX_func.c ****         return (result);
 409:CAN_TX_RX_func.c ****     }
 410:CAN_TX_RX_func.c **** #endif /* CAN_TX3_FUNC_ENABLE */
 411:CAN_TX_RX_func.c **** 
 412:CAN_TX_RX_func.c **** 
 413:CAN_TX_RX_func.c **** #if (CAN_TX4_FUNC_ENABLE)
 414:CAN_TX_RX_func.c ****     /*******************************************************************************
 415:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg4
 416:CAN_TX_RX_func.c ****     ********************************************************************************
 417:CAN_TX_RX_func.c ****     *
 418:CAN_TX_RX_func.c ****     * Summary:
 419:CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 4. The function checks
 420:CAN_TX_RX_func.c ****     *  if mailbox 4 doesn't already have un-transmitted messages waiting for
 421:CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 422:CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 423:CAN_TX_RX_func.c ****     *
 424:CAN_TX_RX_func.c ****     * Parameters:
 425:CAN_TX_RX_func.c ****     *  None.
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 19


 426:CAN_TX_RX_func.c ****     *
 427:CAN_TX_RX_func.c ****     * Return:
 428:CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 429:CAN_TX_RX_func.c ****     *   Define                             Description
 430:CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 431:CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 432:CAN_TX_RX_func.c ****     *
 433:CAN_TX_RX_func.c ****     *******************************************************************************/
 434:CAN_TX_RX_func.c ****     uint8 CAN_SendMsg4(void) 
 435:CAN_TX_RX_func.c ****     {
 436:CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 437:CAN_TX_RX_func.c **** 
 438:CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 439:CAN_TX_RX_func.c ****             if ((CAN_TX[4u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 440:CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 441:CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(4u) & CAN_TX_REQUEST_PENDING) != 0u)
 442:CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 443:CAN_TX_RX_func.c ****             {
 444:CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 445:CAN_TX_RX_func.c ****             }
 446:CAN_TX_RX_func.c ****             else
 447:CAN_TX_RX_func.c ****             {
 448:CAN_TX_RX_func.c ****                 /* `#START MESSAGE_4_TRASMITTED` */
 449:CAN_TX_RX_func.c **** 
 450:CAN_TX_RX_func.c ****                 /* `#END` */
 451:CAN_TX_RX_func.c **** 
 452:CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_4_CALLBACK
 453:CAN_TX_RX_func.c ****                     CAN_SendMsg_4_Callback();
 454:CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_4_CALLBACK */
 455:CAN_TX_RX_func.c **** 
 456:CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(4u),
 457:CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(4u)) | CAN_SEND_MESSAGE);
 458:CAN_TX_RX_func.c ****             }
 459:CAN_TX_RX_func.c **** 
 460:CAN_TX_RX_func.c ****         return (result);
 461:CAN_TX_RX_func.c ****     }
 462:CAN_TX_RX_func.c **** #endif /* CAN_TX4_FUNC_ENABLE */
 463:CAN_TX_RX_func.c **** 
 464:CAN_TX_RX_func.c **** 
 465:CAN_TX_RX_func.c **** #if (CAN_TX5_FUNC_ENABLE)
 466:CAN_TX_RX_func.c ****     /*******************************************************************************
 467:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg5
 468:CAN_TX_RX_func.c ****     ********************************************************************************
 469:CAN_TX_RX_func.c ****     *
 470:CAN_TX_RX_func.c ****     * Summary:
 471:CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 5. The function checks
 472:CAN_TX_RX_func.c ****     *  if mailbox 5 doesn't already have un-transmitted messages waiting for
 473:CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 474:CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 475:CAN_TX_RX_func.c ****     *
 476:CAN_TX_RX_func.c ****     * Parameters:
 477:CAN_TX_RX_func.c ****     *  None.
 478:CAN_TX_RX_func.c ****     *
 479:CAN_TX_RX_func.c ****     * Return:
 480:CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 481:CAN_TX_RX_func.c ****     *   Define                             Description
 482:CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 20


 483:CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 484:CAN_TX_RX_func.c ****     *
 485:CAN_TX_RX_func.c ****     *******************************************************************************/
 486:CAN_TX_RX_func.c ****     uint8 CAN_SendMsg5(void) 
 487:CAN_TX_RX_func.c ****     {
 488:CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 489:CAN_TX_RX_func.c **** 
 490:CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 491:CAN_TX_RX_func.c ****             if ((CAN_TX[5u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 492:CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 493:CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(5u) & CAN_TX_REQUEST_PENDING) != 0u)
 494:CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 495:CAN_TX_RX_func.c ****             {
 496:CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 497:CAN_TX_RX_func.c ****             }
 498:CAN_TX_RX_func.c ****             else
 499:CAN_TX_RX_func.c ****             {
 500:CAN_TX_RX_func.c ****                 /* `#START MESSAGE_5_TRASMITTED` */
 501:CAN_TX_RX_func.c **** 
 502:CAN_TX_RX_func.c ****                 /* `#END` */
 503:CAN_TX_RX_func.c **** 
 504:CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_5_CALLBACK
 505:CAN_TX_RX_func.c ****                     CAN_SendMsg_5_Callback();
 506:CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_5_CALLBACK */
 507:CAN_TX_RX_func.c **** 
 508:CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(5u),
 509:CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(5u)) | CAN_SEND_MESSAGE);
 510:CAN_TX_RX_func.c ****             }
 511:CAN_TX_RX_func.c **** 
 512:CAN_TX_RX_func.c ****         return (result);
 513:CAN_TX_RX_func.c ****     }
 514:CAN_TX_RX_func.c **** #endif /* CAN_TX5_FUNC_ENABLE */
 515:CAN_TX_RX_func.c **** 
 516:CAN_TX_RX_func.c **** 
 517:CAN_TX_RX_func.c **** #if (CAN_TX6_FUNC_ENABLE)
 518:CAN_TX_RX_func.c ****     /*******************************************************************************
 519:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg6
 520:CAN_TX_RX_func.c ****     ********************************************************************************
 521:CAN_TX_RX_func.c ****     *
 522:CAN_TX_RX_func.c ****     * Summary:
 523:CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 6. The function checks
 524:CAN_TX_RX_func.c ****     *  if mailbox 6 doesn't already have un-transmitted messages waiting for
 525:CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 526:CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 527:CAN_TX_RX_func.c ****     *
 528:CAN_TX_RX_func.c ****     * Parameters:
 529:CAN_TX_RX_func.c ****     *  None.
 530:CAN_TX_RX_func.c ****     *
 531:CAN_TX_RX_func.c ****     * Return:
 532:CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 533:CAN_TX_RX_func.c ****     *   Define                             Description
 534:CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 535:CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 536:CAN_TX_RX_func.c ****     *
 537:CAN_TX_RX_func.c ****     *******************************************************************************/
 538:CAN_TX_RX_func.c ****     uint8 CAN_SendMsg6(void) 
 539:CAN_TX_RX_func.c ****     {
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 21


 540:CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 541:CAN_TX_RX_func.c **** 
 542:CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 543:CAN_TX_RX_func.c ****             if ((CAN_TX[6u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 544:CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 545:CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(6u) & CAN_TX_REQUEST_PENDING) != 0u)
 546:CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 547:CAN_TX_RX_func.c ****             {
 548:CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 549:CAN_TX_RX_func.c ****             }
 550:CAN_TX_RX_func.c ****             else
 551:CAN_TX_RX_func.c ****             {
 552:CAN_TX_RX_func.c ****                 /* `#START MESSAGE_6_TRASMITTED` */
 553:CAN_TX_RX_func.c **** 
 554:CAN_TX_RX_func.c ****                 /* `#END` */
 555:CAN_TX_RX_func.c **** 
 556:CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_6_CALLBACK
 557:CAN_TX_RX_func.c ****                     CAN_SendMsg_6_Callback();
 558:CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_6_CALLBACK */
 559:CAN_TX_RX_func.c **** 
 560:CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(6u),
 561:CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(6u)) | CAN_SEND_MESSAGE);
 562:CAN_TX_RX_func.c ****             }
 563:CAN_TX_RX_func.c **** 
 564:CAN_TX_RX_func.c ****         return (result);
 565:CAN_TX_RX_func.c ****     }
 566:CAN_TX_RX_func.c **** #endif /* CAN_TX6_FUNC_ENABLE */
 567:CAN_TX_RX_func.c **** 
 568:CAN_TX_RX_func.c **** 
 569:CAN_TX_RX_func.c **** #if (CAN_TX7_FUNC_ENABLE)
 570:CAN_TX_RX_func.c ****     /*******************************************************************************
 571:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg7)
 572:CAN_TX_RX_func.c ****     ********************************************************************************
 573:CAN_TX_RX_func.c ****     *
 574:CAN_TX_RX_func.c ****     * Summary:
 575:CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 7. The function checks
 576:CAN_TX_RX_func.c ****     *  if mailbox 7 doesn't already have un-transmitted messages waiting for
 577:CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 578:CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 579:CAN_TX_RX_func.c ****     *
 580:CAN_TX_RX_func.c ****     * Parameters:
 581:CAN_TX_RX_func.c ****     *  None.
 582:CAN_TX_RX_func.c ****     *
 583:CAN_TX_RX_func.c ****     * Return:
 584:CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 585:CAN_TX_RX_func.c ****     *   Define                             Description
 586:CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 587:CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 588:CAN_TX_RX_func.c ****     *
 589:CAN_TX_RX_func.c ****     *******************************************************************************/
 590:CAN_TX_RX_func.c ****     uint8 CAN_SendMsg7(void) 
 591:CAN_TX_RX_func.c ****     {
 592:CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 593:CAN_TX_RX_func.c **** 
 594:CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 595:CAN_TX_RX_func.c ****             if ((CAN_TX[7u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 596:CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 22


 597:CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(7u) & CAN_TX_REQUEST_PENDING) != 0u)
 598:CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 599:CAN_TX_RX_func.c ****             {
 600:CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 601:CAN_TX_RX_func.c ****             }
 602:CAN_TX_RX_func.c ****             else
 603:CAN_TX_RX_func.c ****             {
 604:CAN_TX_RX_func.c ****                 /* `#START MESSAGE_7_TRASMITTED` */
 605:CAN_TX_RX_func.c **** 
 606:CAN_TX_RX_func.c ****                 /* `#END` */
 607:CAN_TX_RX_func.c **** 
 608:CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_7_CALLBACK
 609:CAN_TX_RX_func.c ****                     CAN_SendMsg_7_Callback();
 610:CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_7_CALLBACK */
 611:CAN_TX_RX_func.c **** 
 612:CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(7u),
 613:CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(7u)) | CAN_SEND_MESSAGE);
 614:CAN_TX_RX_func.c ****             }
 615:CAN_TX_RX_func.c **** 
 616:CAN_TX_RX_func.c ****         return (result);
 617:CAN_TX_RX_func.c ****     }
 618:CAN_TX_RX_func.c **** #endif /* CAN_TX7_FUNC_ENABLE */
 619:CAN_TX_RX_func.c **** 
 620:CAN_TX_RX_func.c **** 
 621:CAN_TX_RX_func.c **** /*******************************************************************************
 622:CAN_TX_RX_func.c **** * FUNCTION NAME:   CAN_ReceiveMsg
 623:CAN_TX_RX_func.c **** ********************************************************************************
 624:CAN_TX_RX_func.c **** *
 625:CAN_TX_RX_func.c **** * Summary:
 626:CAN_TX_RX_func.c **** *  This function is the entry point to Receive Message Interrupt for Basic
 627:CAN_TX_RX_func.c **** *  mailboxes. Clears the Receive particular Message interrupt flag. Generated
 628:CAN_TX_RX_func.c **** *  only if one of the Receive mailboxes is designed as Basic.
 629:CAN_TX_RX_func.c **** *
 630:CAN_TX_RX_func.c **** * Parameters:
 631:CAN_TX_RX_func.c **** *  rxMailbox: The mailbox number that trig Receive Message Interrupt.
 632:CAN_TX_RX_func.c **** *
 633:CAN_TX_RX_func.c **** * Return:
 634:CAN_TX_RX_func.c **** *  None.
 635:CAN_TX_RX_func.c **** *
 636:CAN_TX_RX_func.c **** * Reentrant:
 637:CAN_TX_RX_func.c **** *  Depends on the Customer code.
 638:CAN_TX_RX_func.c **** *
 639:CAN_TX_RX_func.c **** *******************************************************************************/
 640:CAN_TX_RX_func.c **** void CAN_ReceiveMsg(uint8 rxMailbox) 
 641:CAN_TX_RX_func.c **** {
 589              		.loc 1 641 0
 590              		.cfi_startproc
 591              		@ args = 0, pretend = 0, frame = 0
 592              		@ frame_needed = 0, uses_anonymous_args = 0
 593              		@ link register save eliminated.
 594              	.LVL33:
 642:CAN_TX_RX_func.c ****     #if (CY_PSOC3 || CY_PSOC5)
 643:CAN_TX_RX_func.c ****         if ((CAN_RX[rxMailbox].rxcmd.byte[0u] & CAN_RX_ACK_MSG) != 0u)
 644:CAN_TX_RX_func.c ****     #else  /* CY_PSOC4 */
 645:CAN_TX_RX_func.c ****         if ((CAN_RX_CMD_REG(rxMailbox) & CAN_RX_ACK_MSG) != 0u)
 595              		.loc 1 645 0
 596 0000 4001     		lsls	r0, r0, #5
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 23


 597              	.LVL34:
 598 0002 054B     		ldr	r3, .L41
 599 0004 9C46     		mov	ip, r3
 600 0006 6044     		add	r0, r0, ip
 601 0008 0368     		ldr	r3, [r0]
 602 000a DB07     		lsls	r3, r3, #31
 603 000c 03D5     		bpl	.L39
 646:CAN_TX_RX_func.c ****     #endif /* CY_PSOC3 || CY_PSOC5 */
 647:CAN_TX_RX_func.c ****         {
 648:CAN_TX_RX_func.c ****             /* `#START MESSAGE_BASIC_RECEIVED` */
 649:CAN_TX_RX_func.c **** 
 650:CAN_TX_RX_func.c ****             /* `#END` */
 651:CAN_TX_RX_func.c **** 
 652:CAN_TX_RX_func.c ****             #ifdef CAN_RECEIVE_MSG_CALLBACK
 653:CAN_TX_RX_func.c ****                 CAN_ReceiveMsg_Callback();
 654:CAN_TX_RX_func.c ****             #endif /* CAN_RECEIVE_MSG_CALLBACK */
 655:CAN_TX_RX_func.c **** 
 656:CAN_TX_RX_func.c ****             #if (CY_PSOC3 || CY_PSOC5)
 657:CAN_TX_RX_func.c ****                 CAN_RX[rxMailbox].rxcmd.byte[0u] |= CAN_RX_ACK_MSG;
 658:CAN_TX_RX_func.c ****             #else  /* CY_PSOC4 */
 659:CAN_TX_RX_func.c ****                 CAN_RX_CMD_REG(rxMailbox) |= CAN_RX_ACK_MSG;
 604              		.loc 1 659 0
 605 000e 0268     		ldr	r2, [r0]
 606 0010 0123     		movs	r3, #1
 607 0012 1343     		orrs	r3, r2
 608 0014 0360     		str	r3, [r0]
 609              	.L39:
 660:CAN_TX_RX_func.c ****             #endif /* CY_PSOC3 || CY_PSOC5 */
 661:CAN_TX_RX_func.c ****         }
 662:CAN_TX_RX_func.c **** }
 610              		.loc 1 662 0
 611              		@ sp needed
 612 0016 7047     		bx	lr
 613              	.L42:
 614              		.align	2
 615              	.L41:
 616 0018 A0002E40 		.word	1076756640
 617              		.cfi_endproc
 618              	.LFE5:
 619              		.size	CAN_ReceiveMsg, .-CAN_ReceiveMsg
 620              		.section	.text.CAN_ReceiveMsg0,"ax",%progbits
 621              		.align	2
 622              		.global	CAN_ReceiveMsg0
 623              		.code	16
 624              		.thumb_func
 625              		.type	CAN_ReceiveMsg0, %function
 626              	CAN_ReceiveMsg0:
 627              	.LFB6:
 663:CAN_TX_RX_func.c **** 
 664:CAN_TX_RX_func.c **** 
 665:CAN_TX_RX_func.c **** #if (CAN_RX0_FUNC_ENABLE)
 666:CAN_TX_RX_func.c ****     /*******************************************************************************
 667:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_ReceiveMsg0
 668:CAN_TX_RX_func.c ****     ********************************************************************************
 669:CAN_TX_RX_func.c ****     *
 670:CAN_TX_RX_func.c ****     * Summary:
 671:CAN_TX_RX_func.c ****     *  This function is the entry point to Receive Message 0 Interrupt. Clears the
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 24


 672:CAN_TX_RX_func.c ****     *  Receive Message 0 interrupt flag. Generated only for the Receive mailbox
 673:CAN_TX_RX_func.c ****     *  designed as Full.
 674:CAN_TX_RX_func.c ****     *
 675:CAN_TX_RX_func.c ****     * Parameters:
 676:CAN_TX_RX_func.c ****     *  None.
 677:CAN_TX_RX_func.c ****     *
 678:CAN_TX_RX_func.c ****     * Return:
 679:CAN_TX_RX_func.c ****     *  None.
 680:CAN_TX_RX_func.c ****     *
 681:CAN_TX_RX_func.c ****     * Reentrant:
 682:CAN_TX_RX_func.c ****     *  Depends on the Customer code.
 683:CAN_TX_RX_func.c ****     *
 684:CAN_TX_RX_func.c ****     *******************************************************************************/
 685:CAN_TX_RX_func.c ****     void CAN_ReceiveMsg0(void) 
 686:CAN_TX_RX_func.c ****     {
 628              		.loc 1 686 0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 0
 631              		@ frame_needed = 0, uses_anonymous_args = 0
 632              		@ link register save eliminated.
 687:CAN_TX_RX_func.c ****         /* `#START MESSAGE_0_RECEIVED` */
 688:CAN_TX_RX_func.c ****   
 689:CAN_TX_RX_func.c ****         mailbox0[0]=CAN_RX_DATA_BYTE1(0);
 633              		.loc 1 689 0
 634 0000 0F4A     		ldr	r2, .L44
 635 0002 1168     		ldr	r1, [r2]
 636 0004 090E     		lsrs	r1, r1, #24
 637 0006 0F4B     		ldr	r3, .L44+4
 638 0008 1970     		strb	r1, [r3]
 690:CAN_TX_RX_func.c ****         mailbox0[1]=CAN_RX_DATA_BYTE2(0);
 639              		.loc 1 690 0
 640 000a 1168     		ldr	r1, [r2]
 641 000c 090C     		lsrs	r1, r1, #16
 642 000e 5970     		strb	r1, [r3, #1]
 691:CAN_TX_RX_func.c ****         mailbox0[2]=CAN_RX_DATA_BYTE3(0);
 643              		.loc 1 691 0
 644 0010 1168     		ldr	r1, [r2]
 645 0012 090A     		lsrs	r1, r1, #8
 646 0014 9970     		strb	r1, [r3, #2]
 692:CAN_TX_RX_func.c ****         mailbox0[3]=CAN_RX_DATA_BYTE4(0);
 647              		.loc 1 692 0
 648 0016 1268     		ldr	r2, [r2]
 649 0018 DA70     		strb	r2, [r3, #3]
 693:CAN_TX_RX_func.c ****         mailbox0[4]=CAN_RX_DATA_BYTE5(0);
 650              		.loc 1 693 0
 651 001a 0B4A     		ldr	r2, .L44+8
 652 001c 1168     		ldr	r1, [r2]
 653 001e 090E     		lsrs	r1, r1, #24
 654 0020 1971     		strb	r1, [r3, #4]
 694:CAN_TX_RX_func.c ****         mailbox0[5]=CAN_RX_DATA_BYTE6(0);
 655              		.loc 1 694 0
 656 0022 1168     		ldr	r1, [r2]
 657 0024 090C     		lsrs	r1, r1, #16
 658 0026 5971     		strb	r1, [r3, #5]
 695:CAN_TX_RX_func.c ****         mailbox0[6]=CAN_RX_DATA_BYTE7(0);
 659              		.loc 1 695 0
 660 0028 1168     		ldr	r1, [r2]
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 25


 661 002a 090A     		lsrs	r1, r1, #8
 662 002c 9971     		strb	r1, [r3, #6]
 696:CAN_TX_RX_func.c ****         mailbox0[7]=CAN_RX_DATA_BYTE8(0);
 663              		.loc 1 696 0
 664 002e 1268     		ldr	r2, [r2]
 665 0030 DA71     		strb	r2, [r3, #7]
 697:CAN_TX_RX_func.c ****       
 698:CAN_TX_RX_func.c ****         
 699:CAN_TX_RX_func.c ****         
 700:CAN_TX_RX_func.c ****         /* `#END` */
 701:CAN_TX_RX_func.c **** 
 702:CAN_TX_RX_func.c ****         #ifdef CAN_RECEIVE_MSG_0_CALLBACK
 703:CAN_TX_RX_func.c ****             CAN_ReceiveMsg_0_Callback();
 704:CAN_TX_RX_func.c ****         #endif /* CAN_RECEIVE_MSG_0_CALLBACK */
 705:CAN_TX_RX_func.c **** 
 706:CAN_TX_RX_func.c ****         CAN_RX_ACK_MESSAGE(0u);
 666              		.loc 1 706 0
 667 0032 064A     		ldr	r2, .L44+12
 668 0034 1168     		ldr	r1, [r2]
 669 0036 0123     		movs	r3, #1
 670 0038 0B43     		orrs	r3, r1
 671 003a 1360     		str	r3, [r2]
 707:CAN_TX_RX_func.c ****     }
 672              		.loc 1 707 0
 673              		@ sp needed
 674 003c 7047     		bx	lr
 675              	.L45:
 676 003e C046     		.align	2
 677              	.L44:
 678 0040 A8002E40 		.word	1076756648
 679 0044 00000000 		.word	mailbox0
 680 0048 AC002E40 		.word	1076756652
 681 004c A0002E40 		.word	1076756640
 682              		.cfi_endproc
 683              	.LFE6:
 684              		.size	CAN_ReceiveMsg0, .-CAN_ReceiveMsg0
 685              		.section	.text.CAN_ReceiveMsg1,"ax",%progbits
 686              		.align	2
 687              		.global	CAN_ReceiveMsg1
 688              		.code	16
 689              		.thumb_func
 690              		.type	CAN_ReceiveMsg1, %function
 691              	CAN_ReceiveMsg1:
 692              	.LFB7:
 708:CAN_TX_RX_func.c **** #endif /* CAN_RX0_FUNC_ENABLE */
 709:CAN_TX_RX_func.c **** 
 710:CAN_TX_RX_func.c **** 
 711:CAN_TX_RX_func.c **** #if (CAN_RX1_FUNC_ENABLE)
 712:CAN_TX_RX_func.c ****     /*******************************************************************************
 713:CAN_TX_RX_func.c ****     * FUNCTION NAME:    CAN_ReceiveMsg1
 714:CAN_TX_RX_func.c ****     ********************************************************************************
 715:CAN_TX_RX_func.c ****     *
 716:CAN_TX_RX_func.c ****     * Summary:
 717:CAN_TX_RX_func.c ****     *  This function is the entry point to Receive Message 1 Interrupt. Clears the
 718:CAN_TX_RX_func.c ****     *  Receive Message 1 interrupt flag. Generated only for the Receive mailbox
 719:CAN_TX_RX_func.c ****     *  designed as Full.
 720:CAN_TX_RX_func.c ****     *
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 26


 721:CAN_TX_RX_func.c ****     * Parameters:
 722:CAN_TX_RX_func.c ****     *  None.
 723:CAN_TX_RX_func.c ****     *
 724:CAN_TX_RX_func.c ****     * Return:
 725:CAN_TX_RX_func.c ****     *  None.
 726:CAN_TX_RX_func.c ****     *
 727:CAN_TX_RX_func.c ****     * Reentrant:
 728:CAN_TX_RX_func.c ****     *  Depends on the Customer code.
 729:CAN_TX_RX_func.c ****     *
 730:CAN_TX_RX_func.c ****     *******************************************************************************/
 731:CAN_TX_RX_func.c ****     void CAN_ReceiveMsg1(void) 
 732:CAN_TX_RX_func.c ****     {
 693              		.loc 1 732 0
 694              		.cfi_startproc
 695              		@ args = 0, pretend = 0, frame = 0
 696              		@ frame_needed = 0, uses_anonymous_args = 0
 697              		@ link register save eliminated.
 733:CAN_TX_RX_func.c ****         /* `#START MESSAGE_1_RECEIVED` */
 734:CAN_TX_RX_func.c ****             mailbox1[0]=CAN_RX_DATA_BYTE1(1);
 698              		.loc 1 734 0
 699 0000 0F4A     		ldr	r2, .L47
 700 0002 1168     		ldr	r1, [r2]
 701 0004 090E     		lsrs	r1, r1, #24
 702 0006 0F4B     		ldr	r3, .L47+4
 703 0008 1970     		strb	r1, [r3]
 735:CAN_TX_RX_func.c ****             mailbox1[1]=CAN_RX_DATA_BYTE2(1);
 704              		.loc 1 735 0
 705 000a 1168     		ldr	r1, [r2]
 706 000c 090C     		lsrs	r1, r1, #16
 707 000e 5970     		strb	r1, [r3, #1]
 736:CAN_TX_RX_func.c ****             mailbox1[2]=CAN_RX_DATA_BYTE3(1);
 708              		.loc 1 736 0
 709 0010 1168     		ldr	r1, [r2]
 710 0012 090A     		lsrs	r1, r1, #8
 711 0014 9970     		strb	r1, [r3, #2]
 737:CAN_TX_RX_func.c ****             mailbox1[3]=CAN_RX_DATA_BYTE4(1);
 712              		.loc 1 737 0
 713 0016 1268     		ldr	r2, [r2]
 714 0018 DA70     		strb	r2, [r3, #3]
 738:CAN_TX_RX_func.c ****             mailbox1[4]=CAN_RX_DATA_BYTE5(1);
 715              		.loc 1 738 0
 716 001a 0B4A     		ldr	r2, .L47+8
 717 001c 1168     		ldr	r1, [r2]
 718 001e 090E     		lsrs	r1, r1, #24
 719 0020 1971     		strb	r1, [r3, #4]
 739:CAN_TX_RX_func.c ****             mailbox1[5]=CAN_RX_DATA_BYTE6(1);
 720              		.loc 1 739 0
 721 0022 1168     		ldr	r1, [r2]
 722 0024 090C     		lsrs	r1, r1, #16
 723 0026 5971     		strb	r1, [r3, #5]
 740:CAN_TX_RX_func.c ****             mailbox1[6]=CAN_RX_DATA_BYTE7(1);
 724              		.loc 1 740 0
 725 0028 1168     		ldr	r1, [r2]
 726 002a 090A     		lsrs	r1, r1, #8
 727 002c 9971     		strb	r1, [r3, #6]
 741:CAN_TX_RX_func.c ****             mailbox1[7]=CAN_RX_DATA_BYTE8(1);
 728              		.loc 1 741 0
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 27


 729 002e 1268     		ldr	r2, [r2]
 730 0030 DA71     		strb	r2, [r3, #7]
 742:CAN_TX_RX_func.c ****         /* `#END` */
 743:CAN_TX_RX_func.c **** 
 744:CAN_TX_RX_func.c ****         #ifdef CAN_RECEIVE_MSG_1_CALLBACK
 745:CAN_TX_RX_func.c ****             CAN_ReceiveMsg_1_Callback();
 746:CAN_TX_RX_func.c ****         #endif /* CAN_RECEIVE_MSG_1_CALLBACK */
 747:CAN_TX_RX_func.c **** 
 748:CAN_TX_RX_func.c ****         CAN_RX_ACK_MESSAGE(1u);
 731              		.loc 1 748 0
 732 0032 064A     		ldr	r2, .L47+12
 733 0034 1168     		ldr	r1, [r2]
 734 0036 0123     		movs	r3, #1
 735 0038 0B43     		orrs	r3, r1
 736 003a 1360     		str	r3, [r2]
 749:CAN_TX_RX_func.c ****     }
 737              		.loc 1 749 0
 738              		@ sp needed
 739 003c 7047     		bx	lr
 740              	.L48:
 741 003e C046     		.align	2
 742              	.L47:
 743 0040 C8002E40 		.word	1076756680
 744 0044 00000000 		.word	mailbox1
 745 0048 CC002E40 		.word	1076756684
 746 004c C0002E40 		.word	1076756672
 747              		.cfi_endproc
 748              	.LFE7:
 749              		.size	CAN_ReceiveMsg1, .-CAN_ReceiveMsg1
 750              		.section	.text.CAN_ReceiveMsg2,"ax",%progbits
 751              		.align	2
 752              		.global	CAN_ReceiveMsg2
 753              		.code	16
 754              		.thumb_func
 755              		.type	CAN_ReceiveMsg2, %function
 756              	CAN_ReceiveMsg2:
 757              	.LFB8:
 750:CAN_TX_RX_func.c **** #endif /* CAN_RX1_FUNC_ENABLE */
 751:CAN_TX_RX_func.c **** 
 752:CAN_TX_RX_func.c **** 
 753:CAN_TX_RX_func.c **** #if (CAN_RX2_FUNC_ENABLE)
 754:CAN_TX_RX_func.c ****     /*******************************************************************************
 755:CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_ReceiveMsg2
 756:CAN_TX_RX_func.c ****     ********************************************************************************
 757:CAN_TX_RX_func.c ****     *
 758:CAN_TX_RX_func.c ****     * Summary:
 759:CAN_TX_RX_func.c ****     *  This function is the entry point to Receive Message 2 Interrupt. Clears the
 760:CAN_TX_RX_func.c ****     *  Receive Message 2 interrupt flag. Generated only for the Receive mailbox
 761:CAN_TX_RX_func.c ****     *  designed as Full.
 762:CAN_TX_RX_func.c ****     *
 763:CAN_TX_RX_func.c ****     * Parameters:
 764:CAN_TX_RX_func.c ****     *  None.
 765:CAN_TX_RX_func.c ****     *
 766:CAN_TX_RX_func.c ****     * Return:
 767:CAN_TX_RX_func.c ****     *  None.
 768:CAN_TX_RX_func.c ****     *
 769:CAN_TX_RX_func.c ****     * Reentrant:
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 28


 770:CAN_TX_RX_func.c ****     *  Depends on the Customer code.
 771:CAN_TX_RX_func.c ****     *
 772:CAN_TX_RX_func.c ****     *******************************************************************************/
 773:CAN_TX_RX_func.c ****     void CAN_ReceiveMsg2(void) 
 774:CAN_TX_RX_func.c ****     {
 758              		.loc 1 774 0
 759              		.cfi_startproc
 760              		@ args = 0, pretend = 0, frame = 0
 761              		@ frame_needed = 0, uses_anonymous_args = 0
 762              		@ link register save eliminated.
 775:CAN_TX_RX_func.c ****         /* `#START MESSAGE_2_RECEIVED` */
 776:CAN_TX_RX_func.c ****             mailbox2[0]=CAN_RX_DATA_BYTE1(2);
 763              		.loc 1 776 0
 764 0000 0F4A     		ldr	r2, .L50
 765 0002 1168     		ldr	r1, [r2]
 766 0004 090E     		lsrs	r1, r1, #24
 767 0006 0F4B     		ldr	r3, .L50+4
 768 0008 1970     		strb	r1, [r3]
 777:CAN_TX_RX_func.c ****             mailbox2[1]=CAN_RX_DATA_BYTE2(2);
 769              		.loc 1 777 0
 770 000a 1168     		ldr	r1, [r2]
 771 000c 090C     		lsrs	r1, r1, #16
 772 000e 5970     		strb	r1, [r3, #1]
 778:CAN_TX_RX_func.c ****             mailbox2[2]=CAN_RX_DATA_BYTE3(2);
 773              		.loc 1 778 0
 774 0010 1168     		ldr	r1, [r2]
 775 0012 090A     		lsrs	r1, r1, #8
 776 0014 9970     		strb	r1, [r3, #2]
 779:CAN_TX_RX_func.c ****             mailbox2[3]=CAN_RX_DATA_BYTE4(2);
 777              		.loc 1 779 0
 778 0016 1268     		ldr	r2, [r2]
 779 0018 DA70     		strb	r2, [r3, #3]
 780:CAN_TX_RX_func.c ****             mailbox2[4]=CAN_RX_DATA_BYTE5(2);
 780              		.loc 1 780 0
 781 001a 0B4A     		ldr	r2, .L50+8
 782 001c 1168     		ldr	r1, [r2]
 783 001e 090E     		lsrs	r1, r1, #24
 784 0020 1971     		strb	r1, [r3, #4]
 781:CAN_TX_RX_func.c ****             mailbox2[5]=CAN_RX_DATA_BYTE6(2);
 785              		.loc 1 781 0
 786 0022 1168     		ldr	r1, [r2]
 787 0024 090C     		lsrs	r1, r1, #16
 788 0026 5971     		strb	r1, [r3, #5]
 782:CAN_TX_RX_func.c ****             mailbox2[6]=CAN_RX_DATA_BYTE7(2);
 789              		.loc 1 782 0
 790 0028 1168     		ldr	r1, [r2]
 791 002a 090A     		lsrs	r1, r1, #8
 792 002c 9971     		strb	r1, [r3, #6]
 783:CAN_TX_RX_func.c ****             mailbox2[7]=CAN_RX_DATA_BYTE8(2);    
 793              		.loc 1 783 0
 794 002e 1268     		ldr	r2, [r2]
 795 0030 DA71     		strb	r2, [r3, #7]
 784:CAN_TX_RX_func.c ****         /* `#END` */
 785:CAN_TX_RX_func.c **** 
 786:CAN_TX_RX_func.c ****         #ifdef CAN_RECEIVE_MSG_2_CALLBACK
 787:CAN_TX_RX_func.c ****             CAN_ReceiveMsg_2_Callback();
 788:CAN_TX_RX_func.c ****         #endif /* CAN_RECEIVE_MSG_2_CALLBACK */
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 29


 789:CAN_TX_RX_func.c **** 
 790:CAN_TX_RX_func.c ****         CAN_RX_ACK_MESSAGE(2u);
 796              		.loc 1 790 0
 797 0032 064A     		ldr	r2, .L50+12
 798 0034 1168     		ldr	r1, [r2]
 799 0036 0123     		movs	r3, #1
 800 0038 0B43     		orrs	r3, r1
 801 003a 1360     		str	r3, [r2]
 791:CAN_TX_RX_func.c ****     }
 802              		.loc 1 791 0
 803              		@ sp needed
 804 003c 7047     		bx	lr
 805              	.L51:
 806 003e C046     		.align	2
 807              	.L50:
 808 0040 E8002E40 		.word	1076756712
 809 0044 00000000 		.word	mailbox2
 810 0048 EC002E40 		.word	1076756716
 811 004c E0002E40 		.word	1076756704
 812              		.cfi_endproc
 813              	.LFE8:
 814              		.size	CAN_ReceiveMsg2, .-CAN_ReceiveMsg2
 815              		.text
 816              	.Letext0:
 817              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 818              		.file 3 "Generated_Source\\PSoC4/CAN.h"
 819              		.file 4 "Generated_Source\\PSoC4/CyLib.h"
 820              		.section	.debug_info,"",%progbits
 821              	.Ldebug_info0:
 822 0000 3B040000 		.4byte	0x43b
 823 0004 0400     		.2byte	0x4
 824 0006 00000000 		.4byte	.Ldebug_abbrev0
 825 000a 04       		.byte	0x4
 826 000b 01       		.uleb128 0x1
 827 000c 00000000 		.4byte	.LASF57
 828 0010 0C       		.byte	0xc
 829 0011 DD020000 		.4byte	.LASF58
 830 0015 F2010000 		.4byte	.LASF59
 831 0019 00000000 		.4byte	.Ldebug_ranges0+0
 832 001d 00000000 		.4byte	0
 833 0021 00000000 		.4byte	.Ldebug_line0
 834 0025 02       		.uleb128 0x2
 835 0026 01       		.byte	0x1
 836 0027 06       		.byte	0x6
 837 0028 C0000000 		.4byte	.LASF0
 838 002c 02       		.uleb128 0x2
 839 002d 01       		.byte	0x1
 840 002e 08       		.byte	0x8
 841 002f 47020000 		.4byte	.LASF1
 842 0033 02       		.uleb128 0x2
 843 0034 02       		.byte	0x2
 844 0035 05       		.byte	0x5
 845 0036 55020000 		.4byte	.LASF2
 846 003a 02       		.uleb128 0x2
 847 003b 02       		.byte	0x2
 848 003c 07       		.byte	0x7
 849 003d 81010000 		.4byte	.LASF3
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 30


 850 0041 02       		.uleb128 0x2
 851 0042 04       		.byte	0x4
 852 0043 05       		.byte	0x5
 853 0044 E7000000 		.4byte	.LASF4
 854 0048 02       		.uleb128 0x2
 855 0049 04       		.byte	0x4
 856 004a 07       		.byte	0x7
 857 004b 52010000 		.4byte	.LASF5
 858 004f 02       		.uleb128 0x2
 859 0050 08       		.byte	0x8
 860 0051 05       		.byte	0x5
 861 0052 B2000000 		.4byte	.LASF6
 862 0056 02       		.uleb128 0x2
 863 0057 08       		.byte	0x8
 864 0058 07       		.byte	0x7
 865 0059 8E000000 		.4byte	.LASF7
 866 005d 03       		.uleb128 0x3
 867 005e 04       		.byte	0x4
 868 005f 05       		.byte	0x5
 869 0060 696E7400 		.ascii	"int\000"
 870 0064 02       		.uleb128 0x2
 871 0065 04       		.byte	0x4
 872 0066 07       		.byte	0x7
 873 0067 45010000 		.4byte	.LASF8
 874 006b 04       		.uleb128 0x4
 875 006c 04010000 		.4byte	.LASF9
 876 0070 02       		.byte	0x2
 877 0071 9801     		.2byte	0x198
 878 0073 2C000000 		.4byte	0x2c
 879 0077 04       		.uleb128 0x4
 880 0078 1D010000 		.4byte	.LASF10
 881 007c 02       		.byte	0x2
 882 007d 9A01     		.2byte	0x19a
 883 007f 48000000 		.4byte	0x48
 884 0083 02       		.uleb128 0x2
 885 0084 04       		.byte	0x4
 886 0085 04       		.byte	0x4
 887 0086 EC010000 		.4byte	.LASF11
 888 008a 02       		.uleb128 0x2
 889 008b 08       		.byte	0x8
 890 008c 04       		.byte	0x4
 891 008d 10010000 		.4byte	.LASF12
 892 0091 02       		.uleb128 0x2
 893 0092 01       		.byte	0x1
 894 0093 08       		.byte	0x8
 895 0094 8C020000 		.4byte	.LASF13
 896 0098 04       		.uleb128 0x4
 897 0099 42020000 		.4byte	.LASF14
 898 009d 02       		.byte	0x2
 899 009e 4202     		.2byte	0x242
 900 00a0 A4000000 		.4byte	0xa4
 901 00a4 05       		.uleb128 0x5
 902 00a5 6B000000 		.4byte	0x6b
 903 00a9 04       		.uleb128 0x4
 904 00aa B3010000 		.4byte	.LASF15
 905 00ae 02       		.byte	0x2
 906 00af 4402     		.2byte	0x244
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 31


 907 00b1 B5000000 		.4byte	0xb5
 908 00b5 05       		.uleb128 0x5
 909 00b6 77000000 		.4byte	0x77
 910 00ba 02       		.uleb128 0x2
 911 00bb 08       		.byte	0x8
 912 00bc 04       		.byte	0x4
 913 00bd CD010000 		.4byte	.LASF16
 914 00c1 02       		.uleb128 0x2
 915 00c2 04       		.byte	0x4
 916 00c3 07       		.byte	0x7
 917 00c4 C4010000 		.4byte	.LASF17
 918 00c8 06       		.uleb128 0x6
 919 00c9 08       		.byte	0x8
 920 00ca 03       		.byte	0x3
 921 00cb 6F       		.byte	0x6f
 922 00cc DD000000 		.4byte	0xdd
 923 00d0 07       		.uleb128 0x7
 924 00d1 31010000 		.4byte	.LASF19
 925 00d5 03       		.byte	0x3
 926 00d6 71       		.byte	0x71
 927 00d7 DD000000 		.4byte	0xdd
 928 00db 00       		.byte	0
 929 00dc 00       		.byte	0
 930 00dd 08       		.uleb128 0x8
 931 00de 6B000000 		.4byte	0x6b
 932 00e2 ED000000 		.4byte	0xed
 933 00e6 09       		.uleb128 0x9
 934 00e7 C1000000 		.4byte	0xc1
 935 00eb 07       		.byte	0x7
 936 00ec 00       		.byte	0
 937 00ed 0A       		.uleb128 0xa
 938 00ee 6B020000 		.4byte	.LASF18
 939 00f2 03       		.byte	0x3
 940 00f3 72       		.byte	0x72
 941 00f4 C8000000 		.4byte	0xc8
 942 00f8 06       		.uleb128 0x6
 943 00f9 08       		.byte	0x8
 944 00fa 03       		.byte	0x3
 945 00fb 75       		.byte	0x75
 946 00fc 0D010000 		.4byte	0x10d
 947 0100 07       		.uleb128 0x7
 948 0101 31010000 		.4byte	.LASF19
 949 0105 03       		.byte	0x3
 950 0106 77       		.byte	0x77
 951 0107 1D010000 		.4byte	0x11d
 952 010b 00       		.byte	0
 953 010c 00       		.byte	0
 954 010d 08       		.uleb128 0x8
 955 010e 98000000 		.4byte	0x98
 956 0112 1D010000 		.4byte	0x11d
 957 0116 09       		.uleb128 0x9
 958 0117 C1000000 		.4byte	0xc1
 959 011b 07       		.byte	0x7
 960 011c 00       		.byte	0
 961 011d 05       		.uleb128 0x5
 962 011e 0D010000 		.4byte	0x10d
 963 0122 0A       		.uleb128 0xa
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 32


 964 0123 9E020000 		.4byte	.LASF20
 965 0127 03       		.byte	0x3
 966 0128 78       		.byte	0x78
 967 0129 F8000000 		.4byte	0xf8
 968 012d 06       		.uleb128 0x6
 969 012e 04       		.byte	0x4
 970 012f 03       		.byte	0x3
 971 0130 7B       		.byte	0x7b
 972 0131 42010000 		.4byte	0x142
 973 0135 07       		.uleb128 0x7
 974 0136 31010000 		.4byte	.LASF19
 975 013a 03       		.byte	0x3
 976 013b 7D       		.byte	0x7d
 977 013c 52010000 		.4byte	0x152
 978 0140 00       		.byte	0
 979 0141 00       		.byte	0
 980 0142 08       		.uleb128 0x8
 981 0143 98000000 		.4byte	0x98
 982 0147 52010000 		.4byte	0x152
 983 014b 09       		.uleb128 0x9
 984 014c C1000000 		.4byte	0xc1
 985 0150 03       		.byte	0x3
 986 0151 00       		.byte	0
 987 0152 05       		.uleb128 0x5
 988 0153 42010000 		.4byte	0x142
 989 0157 0A       		.uleb128 0xa
 990 0158 B9010000 		.4byte	.LASF21
 991 015c 03       		.byte	0x3
 992 015d 7E       		.byte	0x7e
 993 015e 2D010000 		.4byte	0x12d
 994 0162 06       		.uleb128 0x6
 995 0163 10       		.byte	0x10
 996 0164 03       		.byte	0x3
 997 0165 81       		.byte	0x81
 998 0166 BE010000 		.4byte	0x1be
 999 016a 0B       		.uleb128 0xb
 1000 016b 696400   		.ascii	"id\000"
 1001 016e 03       		.byte	0x3
 1002 016f 83       		.byte	0x83
 1003 0170 77000000 		.4byte	0x77
 1004 0174 00       		.byte	0
 1005 0175 0B       		.uleb128 0xb
 1006 0176 72747200 		.ascii	"rtr\000"
 1007 017a 03       		.byte	0x3
 1008 017b 84       		.byte	0x84
 1009 017c 6B000000 		.4byte	0x6b
 1010 0180 04       		.byte	0x4
 1011 0181 0B       		.uleb128 0xb
 1012 0182 69646500 		.ascii	"ide\000"
 1013 0186 03       		.byte	0x3
 1014 0187 85       		.byte	0x85
 1015 0188 6B000000 		.4byte	0x6b
 1016 018c 05       		.byte	0x5
 1017 018d 0B       		.uleb128 0xb
 1018 018e 646C6300 		.ascii	"dlc\000"
 1019 0192 03       		.byte	0x3
 1020 0193 86       		.byte	0x86
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 33


 1021 0194 6B000000 		.4byte	0x6b
 1022 0198 06       		.byte	0x6
 1023 0199 0B       		.uleb128 0xb
 1024 019a 69727100 		.ascii	"irq\000"
 1025 019e 03       		.byte	0x3
 1026 019f 87       		.byte	0x87
 1027 01a0 6B000000 		.4byte	0x6b
 1028 01a4 07       		.byte	0x7
 1029 01a5 0B       		.uleb128 0xb
 1030 01a6 73737400 		.ascii	"sst\000"
 1031 01aa 03       		.byte	0x3
 1032 01ab 89       		.byte	0x89
 1033 01ac 6B000000 		.4byte	0x6b
 1034 01b0 08       		.byte	0x8
 1035 01b1 0B       		.uleb128 0xb
 1036 01b2 6D736700 		.ascii	"msg\000"
 1037 01b6 03       		.byte	0x3
 1038 01b7 8B       		.byte	0x8b
 1039 01b8 BE010000 		.4byte	0x1be
 1040 01bc 0C       		.byte	0xc
 1041 01bd 00       		.byte	0
 1042 01be 0C       		.uleb128 0xc
 1043 01bf 04       		.byte	0x4
 1044 01c0 ED000000 		.4byte	0xed
 1045 01c4 0A       		.uleb128 0xa
 1046 01c5 F4020000 		.4byte	.LASF22
 1047 01c9 03       		.byte	0x3
 1048 01ca 8C       		.byte	0x8c
 1049 01cb 62010000 		.4byte	0x162
 1050 01cf 06       		.uleb128 0x6
 1051 01d0 20       		.byte	0x20
 1052 01d1 03       		.byte	0x3
 1053 01d2 A0       		.byte	0xa0
 1054 01d3 2C020000 		.4byte	0x22c
 1055 01d7 07       		.uleb128 0x7
 1056 01d8 EE020000 		.4byte	.LASF23
 1057 01dc 03       		.byte	0x3
 1058 01dd A2       		.byte	0xa2
 1059 01de 57010000 		.4byte	0x157
 1060 01e2 00       		.byte	0
 1061 01e3 07       		.uleb128 0x7
 1062 01e4 D9010000 		.4byte	.LASF24
 1063 01e8 03       		.byte	0x3
 1064 01e9 A3       		.byte	0xa3
 1065 01ea 57010000 		.4byte	0x157
 1066 01ee 04       		.byte	0x4
 1067 01ef 07       		.uleb128 0x7
 1068 01f0 FD000000 		.4byte	.LASF25
 1069 01f4 03       		.byte	0x3
 1070 01f5 A4       		.byte	0xa4
 1071 01f6 22010000 		.4byte	0x122
 1072 01fa 08       		.byte	0x8
 1073 01fb 07       		.uleb128 0x7
 1074 01fc 0A010000 		.4byte	.LASF26
 1075 0200 03       		.byte	0x3
 1076 0201 A5       		.byte	0xa5
 1077 0202 57010000 		.4byte	0x157
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 34


 1078 0206 10       		.byte	0x10
 1079 0207 07       		.uleb128 0x7
 1080 0208 04030000 		.4byte	.LASF27
 1081 020c 03       		.byte	0x3
 1082 020d A6       		.byte	0xa6
 1083 020e 57010000 		.4byte	0x157
 1084 0212 14       		.byte	0x14
 1085 0213 07       		.uleb128 0x7
 1086 0214 AB000000 		.4byte	.LASF28
 1087 0218 03       		.byte	0x3
 1088 0219 A7       		.byte	0xa7
 1089 021a 57010000 		.4byte	0x157
 1090 021e 18       		.byte	0x18
 1091 021f 07       		.uleb128 0x7
 1092 0220 0A030000 		.4byte	.LASF29
 1093 0224 03       		.byte	0x3
 1094 0225 A8       		.byte	0xa8
 1095 0226 57010000 		.4byte	0x157
 1096 022a 1C       		.byte	0x1c
 1097 022b 00       		.byte	0
 1098 022c 0A       		.uleb128 0xa
 1099 022d 94010000 		.4byte	.LASF30
 1100 0231 03       		.byte	0x3
 1101 0232 A9       		.byte	0xa9
 1102 0233 CF010000 		.4byte	0x1cf
 1103 0237 06       		.uleb128 0x6
 1104 0238 10       		.byte	0x10
 1105 0239 03       		.byte	0x3
 1106 023a AC       		.byte	0xac
 1107 023b 64020000 		.4byte	0x264
 1108 023f 07       		.uleb128 0x7
 1109 0240 A5000000 		.4byte	.LASF31
 1110 0244 03       		.byte	0x3
 1111 0245 AE       		.byte	0xae
 1112 0246 57010000 		.4byte	0x157
 1113 024a 00       		.byte	0
 1114 024b 07       		.uleb128 0x7
 1115 024c FF020000 		.4byte	.LASF32
 1116 0250 03       		.byte	0x3
 1117 0251 AF       		.byte	0xaf
 1118 0252 57010000 		.4byte	0x157
 1119 0256 04       		.byte	0x4
 1120 0257 07       		.uleb128 0x7
 1121 0258 AC010000 		.4byte	.LASF33
 1122 025c 03       		.byte	0x3
 1123 025d B0       		.byte	0xb0
 1124 025e 22010000 		.4byte	0x122
 1125 0262 08       		.byte	0x8
 1126 0263 00       		.byte	0
 1127 0264 0A       		.uleb128 0xa
 1128 0265 7E020000 		.4byte	.LASF34
 1129 0269 03       		.byte	0x3
 1130 026a B1       		.byte	0xb1
 1131 026b 37020000 		.4byte	0x237
 1132 026f 0D       		.uleb128 0xd
 1133 0270 64010000 		.4byte	.LASF41
 1134 0274 01       		.byte	0x1
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 35


 1135 0275 38       		.byte	0x38
 1136 0276 6B000000 		.4byte	0x6b
 1137 027a 00000000 		.4byte	.LFB1
 1138 027e 58010000 		.4byte	.LFE1-.LFB1
 1139 0282 01       		.uleb128 0x1
 1140 0283 9C       		.byte	0x9c
 1141 0284 10030000 		.4byte	0x310
 1142 0288 0E       		.uleb128 0xe
 1143 0289 E4010000 		.4byte	.LASF39
 1144 028d 01       		.byte	0x1
 1145 028e 38       		.byte	0x38
 1146 028f 10030000 		.4byte	0x310
 1147 0293 00000000 		.4byte	.LLST0
 1148 0297 0F       		.uleb128 0xf
 1149 0298 6900     		.ascii	"i\000"
 1150 029a 01       		.byte	0x1
 1151 029b 3A       		.byte	0x3a
 1152 029c 6B000000 		.4byte	0x6b
 1153 02a0 2C000000 		.4byte	.LLST1
 1154 02a4 0F       		.uleb128 0xf
 1155 02a5 6A00     		.ascii	"j\000"
 1156 02a7 01       		.byte	0x1
 1157 02a8 3A       		.byte	0x3a
 1158 02a9 6B000000 		.4byte	0x6b
 1159 02ad 55000000 		.4byte	.LLST2
 1160 02b1 10       		.uleb128 0x10
 1161 02b2 17010000 		.4byte	.LASF35
 1162 02b6 01       		.byte	0x1
 1163 02b7 3A       		.byte	0x3a
 1164 02b8 6B000000 		.4byte	0x6b
 1165 02bc 7F000000 		.4byte	.LLST3
 1166 02c0 10       		.uleb128 0x10
 1167 02c1 DE010000 		.4byte	.LASF36
 1168 02c5 01       		.byte	0x1
 1169 02c6 3B       		.byte	0x3b
 1170 02c7 6B000000 		.4byte	0x6b
 1171 02cb A8000000 		.4byte	.LLST4
 1172 02cf 10       		.uleb128 0x10
 1173 02d0 3A030000 		.4byte	.LASF37
 1174 02d4 01       		.byte	0x1
 1175 02d5 3C       		.byte	0x3c
 1176 02d6 6B000000 		.4byte	0x6b
 1177 02da C7000000 		.4byte	.LLST5
 1178 02de 10       		.uleb128 0x10
 1179 02df 79010000 		.4byte	.LASF38
 1180 02e3 01       		.byte	0x1
 1181 02e4 3D       		.byte	0x3d
 1182 02e5 77000000 		.4byte	0x77
 1183 02e9 FD000000 		.4byte	.LLST6
 1184 02ed 11       		.uleb128 0x11
 1185 02ee E6000000 		.4byte	.LVL15
 1186 02f2 28040000 		.4byte	0x428
 1187 02f6 00030000 		.4byte	0x300
 1188 02fa 12       		.uleb128 0x12
 1189 02fb 01       		.uleb128 0x1
 1190 02fc 50       		.byte	0x50
 1191 02fd 01       		.uleb128 0x1
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 36


 1192 02fe 4B       		.byte	0x4b
 1193 02ff 00       		.byte	0
 1194 0300 13       		.uleb128 0x13
 1195 0301 14010000 		.4byte	.LVL16
 1196 0305 33040000 		.4byte	0x433
 1197 0309 12       		.uleb128 0x12
 1198 030a 01       		.uleb128 0x1
 1199 030b 50       		.byte	0x50
 1200 030c 01       		.uleb128 0x1
 1201 030d 4B       		.byte	0x4b
 1202 030e 00       		.byte	0
 1203 030f 00       		.byte	0
 1204 0310 0C       		.uleb128 0xc
 1205 0311 04       		.byte	0x4
 1206 0312 16030000 		.4byte	0x316
 1207 0316 14       		.uleb128 0x14
 1208 0317 C4010000 		.4byte	0x1c4
 1209 031b 15       		.uleb128 0x15
 1210 031c 24010000 		.4byte	.LASF44
 1211 0320 01       		.byte	0x1
 1212 0321 B6       		.byte	0xb6
 1213 0322 00000000 		.4byte	.LFB2
 1214 0326 20000000 		.4byte	.LFE2-.LFB2
 1215 032a 01       		.uleb128 0x1
 1216 032b 9C       		.byte	0x9c
 1217 032c 40030000 		.4byte	0x340
 1218 0330 0E       		.uleb128 0xe
 1219 0331 70010000 		.4byte	.LASF40
 1220 0335 01       		.byte	0x1
 1221 0336 B6       		.byte	0xb6
 1222 0337 6B000000 		.4byte	0x6b
 1223 033b 3D010000 		.4byte	.LLST7
 1224 033f 00       		.byte	0
 1225 0340 0D       		.uleb128 0xd
 1226 0341 11030000 		.4byte	.LASF42
 1227 0345 01       		.byte	0x1
 1228 0346 D4       		.byte	0xd4
 1229 0347 6B000000 		.4byte	0x6b
 1230 034b 00000000 		.4byte	.LFB3
 1231 034f A8000000 		.4byte	.LFE3-.LFB3
 1232 0353 01       		.uleb128 0x1
 1233 0354 9C       		.byte	0x9c
 1234 0355 69030000 		.4byte	0x369
 1235 0359 10       		.uleb128 0x10
 1236 035a 3A030000 		.4byte	.LASF37
 1237 035e 01       		.byte	0x1
 1238 035f D6       		.byte	0xd6
 1239 0360 6B000000 		.4byte	0x6b
 1240 0364 5E010000 		.4byte	.LLST8
 1241 0368 00       		.byte	0
 1242 0369 16       		.uleb128 0x16
 1243 036a 1E030000 		.4byte	.LASF43
 1244 036e 01       		.byte	0x1
 1245 036f 0F01     		.2byte	0x10f
 1246 0371 6B000000 		.4byte	0x6b
 1247 0375 00000000 		.4byte	.LFB4
 1248 0379 A8000000 		.4byte	.LFE4-.LFB4
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 37


 1249 037d 01       		.uleb128 0x1
 1250 037e 9C       		.byte	0x9c
 1251 037f 94030000 		.4byte	0x394
 1252 0383 17       		.uleb128 0x17
 1253 0384 3A030000 		.4byte	.LASF37
 1254 0388 01       		.byte	0x1
 1255 0389 1101     		.2byte	0x111
 1256 038b 6B000000 		.4byte	0x6b
 1257 038f 7D010000 		.4byte	.LLST9
 1258 0393 00       		.byte	0
 1259 0394 18       		.uleb128 0x18
 1260 0395 2B030000 		.4byte	.LASF45
 1261 0399 01       		.byte	0x1
 1262 039a 8002     		.2byte	0x280
 1263 039c 00000000 		.4byte	.LFB5
 1264 03a0 1C000000 		.4byte	.LFE5-.LFB5
 1265 03a4 01       		.uleb128 0x1
 1266 03a5 9C       		.byte	0x9c
 1267 03a6 BB030000 		.4byte	0x3bb
 1268 03aa 19       		.uleb128 0x19
 1269 03ab A2010000 		.4byte	.LASF46
 1270 03af 01       		.byte	0x1
 1271 03b0 8002     		.2byte	0x280
 1272 03b2 6B000000 		.4byte	0x6b
 1273 03b6 9C010000 		.4byte	.LLST10
 1274 03ba 00       		.byte	0
 1275 03bb 1A       		.uleb128 0x1a
 1276 03bc CD020000 		.4byte	.LASF47
 1277 03c0 01       		.byte	0x1
 1278 03c1 AD02     		.2byte	0x2ad
 1279 03c3 00000000 		.4byte	.LFB6
 1280 03c7 50000000 		.4byte	.LFE6-.LFB6
 1281 03cb 01       		.uleb128 0x1
 1282 03cc 9C       		.byte	0x9c
 1283 03cd 1A       		.uleb128 0x1a
 1284 03ce AD020000 		.4byte	.LASF48
 1285 03d2 01       		.byte	0x1
 1286 03d3 DB02     		.2byte	0x2db
 1287 03d5 00000000 		.4byte	.LFB7
 1288 03d9 50000000 		.4byte	.LFE7-.LFB7
 1289 03dd 01       		.uleb128 0x1
 1290 03de 9C       		.byte	0x9c
 1291 03df 1A       		.uleb128 0x1a
 1292 03e0 BD020000 		.4byte	.LASF49
 1293 03e4 01       		.byte	0x1
 1294 03e5 0503     		.2byte	0x305
 1295 03e7 00000000 		.4byte	.LFB8
 1296 03eb 50000000 		.4byte	.LFE8-.LFB8
 1297 03ef 01       		.uleb128 0x1
 1298 03f0 9C       		.byte	0x9c
 1299 03f1 1B       		.uleb128 0x1b
 1300 03f2 91020000 		.4byte	.LASF50
 1301 03f6 01       		.byte	0x1
 1302 03f7 1C       		.byte	0x1c
 1303 03f8 DD000000 		.4byte	0xdd
 1304 03fc 1B       		.uleb128 0x1b
 1305 03fd 36010000 		.4byte	.LASF51
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 38


 1306 0401 01       		.byte	0x1
 1307 0402 1D       		.byte	0x1d
 1308 0403 DD000000 		.4byte	0xdd
 1309 0407 1B       		.uleb128 0x1b
 1310 0408 CC000000 		.4byte	.LASF52
 1311 040c 01       		.byte	0x1
 1312 040d 1E       		.byte	0x1e
 1313 040e DD000000 		.4byte	0xdd
 1314 0412 1B       		.uleb128 0x1b
 1315 0413 D5000000 		.4byte	.LASF53
 1316 0417 01       		.byte	0x1
 1317 0418 1F       		.byte	0x1f
 1318 0419 DD000000 		.4byte	0xdd
 1319 041d 1B       		.uleb128 0x1b
 1320 041e DE000000 		.4byte	.LASF54
 1321 0422 01       		.byte	0x1
 1322 0423 20       		.byte	0x20
 1323 0424 DD000000 		.4byte	0xdd
 1324 0428 1C       		.uleb128 0x1c
 1325 0429 F0000000 		.4byte	.LASF55
 1326 042d F0000000 		.4byte	.LASF55
 1327 0431 04       		.byte	0x4
 1328 0432 C3       		.byte	0xc3
 1329 0433 1C       		.uleb128 0x1c
 1330 0434 5F020000 		.4byte	.LASF56
 1331 0438 5F020000 		.4byte	.LASF56
 1332 043c 04       		.byte	0x4
 1333 043d C1       		.byte	0xc1
 1334 043e 00       		.byte	0
 1335              		.section	.debug_abbrev,"",%progbits
 1336              	.Ldebug_abbrev0:
 1337 0000 01       		.uleb128 0x1
 1338 0001 11       		.uleb128 0x11
 1339 0002 01       		.byte	0x1
 1340 0003 25       		.uleb128 0x25
 1341 0004 0E       		.uleb128 0xe
 1342 0005 13       		.uleb128 0x13
 1343 0006 0B       		.uleb128 0xb
 1344 0007 03       		.uleb128 0x3
 1345 0008 0E       		.uleb128 0xe
 1346 0009 1B       		.uleb128 0x1b
 1347 000a 0E       		.uleb128 0xe
 1348 000b 55       		.uleb128 0x55
 1349 000c 17       		.uleb128 0x17
 1350 000d 11       		.uleb128 0x11
 1351 000e 01       		.uleb128 0x1
 1352 000f 10       		.uleb128 0x10
 1353 0010 17       		.uleb128 0x17
 1354 0011 00       		.byte	0
 1355 0012 00       		.byte	0
 1356 0013 02       		.uleb128 0x2
 1357 0014 24       		.uleb128 0x24
 1358 0015 00       		.byte	0
 1359 0016 0B       		.uleb128 0xb
 1360 0017 0B       		.uleb128 0xb
 1361 0018 3E       		.uleb128 0x3e
 1362 0019 0B       		.uleb128 0xb
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 39


 1363 001a 03       		.uleb128 0x3
 1364 001b 0E       		.uleb128 0xe
 1365 001c 00       		.byte	0
 1366 001d 00       		.byte	0
 1367 001e 03       		.uleb128 0x3
 1368 001f 24       		.uleb128 0x24
 1369 0020 00       		.byte	0
 1370 0021 0B       		.uleb128 0xb
 1371 0022 0B       		.uleb128 0xb
 1372 0023 3E       		.uleb128 0x3e
 1373 0024 0B       		.uleb128 0xb
 1374 0025 03       		.uleb128 0x3
 1375 0026 08       		.uleb128 0x8
 1376 0027 00       		.byte	0
 1377 0028 00       		.byte	0
 1378 0029 04       		.uleb128 0x4
 1379 002a 16       		.uleb128 0x16
 1380 002b 00       		.byte	0
 1381 002c 03       		.uleb128 0x3
 1382 002d 0E       		.uleb128 0xe
 1383 002e 3A       		.uleb128 0x3a
 1384 002f 0B       		.uleb128 0xb
 1385 0030 3B       		.uleb128 0x3b
 1386 0031 05       		.uleb128 0x5
 1387 0032 49       		.uleb128 0x49
 1388 0033 13       		.uleb128 0x13
 1389 0034 00       		.byte	0
 1390 0035 00       		.byte	0
 1391 0036 05       		.uleb128 0x5
 1392 0037 35       		.uleb128 0x35
 1393 0038 00       		.byte	0
 1394 0039 49       		.uleb128 0x49
 1395 003a 13       		.uleb128 0x13
 1396 003b 00       		.byte	0
 1397 003c 00       		.byte	0
 1398 003d 06       		.uleb128 0x6
 1399 003e 13       		.uleb128 0x13
 1400 003f 01       		.byte	0x1
 1401 0040 0B       		.uleb128 0xb
 1402 0041 0B       		.uleb128 0xb
 1403 0042 3A       		.uleb128 0x3a
 1404 0043 0B       		.uleb128 0xb
 1405 0044 3B       		.uleb128 0x3b
 1406 0045 0B       		.uleb128 0xb
 1407 0046 01       		.uleb128 0x1
 1408 0047 13       		.uleb128 0x13
 1409 0048 00       		.byte	0
 1410 0049 00       		.byte	0
 1411 004a 07       		.uleb128 0x7
 1412 004b 0D       		.uleb128 0xd
 1413 004c 00       		.byte	0
 1414 004d 03       		.uleb128 0x3
 1415 004e 0E       		.uleb128 0xe
 1416 004f 3A       		.uleb128 0x3a
 1417 0050 0B       		.uleb128 0xb
 1418 0051 3B       		.uleb128 0x3b
 1419 0052 0B       		.uleb128 0xb
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 40


 1420 0053 49       		.uleb128 0x49
 1421 0054 13       		.uleb128 0x13
 1422 0055 38       		.uleb128 0x38
 1423 0056 0B       		.uleb128 0xb
 1424 0057 00       		.byte	0
 1425 0058 00       		.byte	0
 1426 0059 08       		.uleb128 0x8
 1427 005a 01       		.uleb128 0x1
 1428 005b 01       		.byte	0x1
 1429 005c 49       		.uleb128 0x49
 1430 005d 13       		.uleb128 0x13
 1431 005e 01       		.uleb128 0x1
 1432 005f 13       		.uleb128 0x13
 1433 0060 00       		.byte	0
 1434 0061 00       		.byte	0
 1435 0062 09       		.uleb128 0x9
 1436 0063 21       		.uleb128 0x21
 1437 0064 00       		.byte	0
 1438 0065 49       		.uleb128 0x49
 1439 0066 13       		.uleb128 0x13
 1440 0067 2F       		.uleb128 0x2f
 1441 0068 0B       		.uleb128 0xb
 1442 0069 00       		.byte	0
 1443 006a 00       		.byte	0
 1444 006b 0A       		.uleb128 0xa
 1445 006c 16       		.uleb128 0x16
 1446 006d 00       		.byte	0
 1447 006e 03       		.uleb128 0x3
 1448 006f 0E       		.uleb128 0xe
 1449 0070 3A       		.uleb128 0x3a
 1450 0071 0B       		.uleb128 0xb
 1451 0072 3B       		.uleb128 0x3b
 1452 0073 0B       		.uleb128 0xb
 1453 0074 49       		.uleb128 0x49
 1454 0075 13       		.uleb128 0x13
 1455 0076 00       		.byte	0
 1456 0077 00       		.byte	0
 1457 0078 0B       		.uleb128 0xb
 1458 0079 0D       		.uleb128 0xd
 1459 007a 00       		.byte	0
 1460 007b 03       		.uleb128 0x3
 1461 007c 08       		.uleb128 0x8
 1462 007d 3A       		.uleb128 0x3a
 1463 007e 0B       		.uleb128 0xb
 1464 007f 3B       		.uleb128 0x3b
 1465 0080 0B       		.uleb128 0xb
 1466 0081 49       		.uleb128 0x49
 1467 0082 13       		.uleb128 0x13
 1468 0083 38       		.uleb128 0x38
 1469 0084 0B       		.uleb128 0xb
 1470 0085 00       		.byte	0
 1471 0086 00       		.byte	0
 1472 0087 0C       		.uleb128 0xc
 1473 0088 0F       		.uleb128 0xf
 1474 0089 00       		.byte	0
 1475 008a 0B       		.uleb128 0xb
 1476 008b 0B       		.uleb128 0xb
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 41


 1477 008c 49       		.uleb128 0x49
 1478 008d 13       		.uleb128 0x13
 1479 008e 00       		.byte	0
 1480 008f 00       		.byte	0
 1481 0090 0D       		.uleb128 0xd
 1482 0091 2E       		.uleb128 0x2e
 1483 0092 01       		.byte	0x1
 1484 0093 3F       		.uleb128 0x3f
 1485 0094 19       		.uleb128 0x19
 1486 0095 03       		.uleb128 0x3
 1487 0096 0E       		.uleb128 0xe
 1488 0097 3A       		.uleb128 0x3a
 1489 0098 0B       		.uleb128 0xb
 1490 0099 3B       		.uleb128 0x3b
 1491 009a 0B       		.uleb128 0xb
 1492 009b 27       		.uleb128 0x27
 1493 009c 19       		.uleb128 0x19
 1494 009d 49       		.uleb128 0x49
 1495 009e 13       		.uleb128 0x13
 1496 009f 11       		.uleb128 0x11
 1497 00a0 01       		.uleb128 0x1
 1498 00a1 12       		.uleb128 0x12
 1499 00a2 06       		.uleb128 0x6
 1500 00a3 40       		.uleb128 0x40
 1501 00a4 18       		.uleb128 0x18
 1502 00a5 9742     		.uleb128 0x2117
 1503 00a7 19       		.uleb128 0x19
 1504 00a8 01       		.uleb128 0x1
 1505 00a9 13       		.uleb128 0x13
 1506 00aa 00       		.byte	0
 1507 00ab 00       		.byte	0
 1508 00ac 0E       		.uleb128 0xe
 1509 00ad 05       		.uleb128 0x5
 1510 00ae 00       		.byte	0
 1511 00af 03       		.uleb128 0x3
 1512 00b0 0E       		.uleb128 0xe
 1513 00b1 3A       		.uleb128 0x3a
 1514 00b2 0B       		.uleb128 0xb
 1515 00b3 3B       		.uleb128 0x3b
 1516 00b4 0B       		.uleb128 0xb
 1517 00b5 49       		.uleb128 0x49
 1518 00b6 13       		.uleb128 0x13
 1519 00b7 02       		.uleb128 0x2
 1520 00b8 17       		.uleb128 0x17
 1521 00b9 00       		.byte	0
 1522 00ba 00       		.byte	0
 1523 00bb 0F       		.uleb128 0xf
 1524 00bc 34       		.uleb128 0x34
 1525 00bd 00       		.byte	0
 1526 00be 03       		.uleb128 0x3
 1527 00bf 08       		.uleb128 0x8
 1528 00c0 3A       		.uleb128 0x3a
 1529 00c1 0B       		.uleb128 0xb
 1530 00c2 3B       		.uleb128 0x3b
 1531 00c3 0B       		.uleb128 0xb
 1532 00c4 49       		.uleb128 0x49
 1533 00c5 13       		.uleb128 0x13
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 42


 1534 00c6 02       		.uleb128 0x2
 1535 00c7 17       		.uleb128 0x17
 1536 00c8 00       		.byte	0
 1537 00c9 00       		.byte	0
 1538 00ca 10       		.uleb128 0x10
 1539 00cb 34       		.uleb128 0x34
 1540 00cc 00       		.byte	0
 1541 00cd 03       		.uleb128 0x3
 1542 00ce 0E       		.uleb128 0xe
 1543 00cf 3A       		.uleb128 0x3a
 1544 00d0 0B       		.uleb128 0xb
 1545 00d1 3B       		.uleb128 0x3b
 1546 00d2 0B       		.uleb128 0xb
 1547 00d3 49       		.uleb128 0x49
 1548 00d4 13       		.uleb128 0x13
 1549 00d5 02       		.uleb128 0x2
 1550 00d6 17       		.uleb128 0x17
 1551 00d7 00       		.byte	0
 1552 00d8 00       		.byte	0
 1553 00d9 11       		.uleb128 0x11
 1554 00da 898201   		.uleb128 0x4109
 1555 00dd 01       		.byte	0x1
 1556 00de 11       		.uleb128 0x11
 1557 00df 01       		.uleb128 0x1
 1558 00e0 31       		.uleb128 0x31
 1559 00e1 13       		.uleb128 0x13
 1560 00e2 01       		.uleb128 0x1
 1561 00e3 13       		.uleb128 0x13
 1562 00e4 00       		.byte	0
 1563 00e5 00       		.byte	0
 1564 00e6 12       		.uleb128 0x12
 1565 00e7 8A8201   		.uleb128 0x410a
 1566 00ea 00       		.byte	0
 1567 00eb 02       		.uleb128 0x2
 1568 00ec 18       		.uleb128 0x18
 1569 00ed 9142     		.uleb128 0x2111
 1570 00ef 18       		.uleb128 0x18
 1571 00f0 00       		.byte	0
 1572 00f1 00       		.byte	0
 1573 00f2 13       		.uleb128 0x13
 1574 00f3 898201   		.uleb128 0x4109
 1575 00f6 01       		.byte	0x1
 1576 00f7 11       		.uleb128 0x11
 1577 00f8 01       		.uleb128 0x1
 1578 00f9 31       		.uleb128 0x31
 1579 00fa 13       		.uleb128 0x13
 1580 00fb 00       		.byte	0
 1581 00fc 00       		.byte	0
 1582 00fd 14       		.uleb128 0x14
 1583 00fe 26       		.uleb128 0x26
 1584 00ff 00       		.byte	0
 1585 0100 49       		.uleb128 0x49
 1586 0101 13       		.uleb128 0x13
 1587 0102 00       		.byte	0
 1588 0103 00       		.byte	0
 1589 0104 15       		.uleb128 0x15
 1590 0105 2E       		.uleb128 0x2e
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 43


 1591 0106 01       		.byte	0x1
 1592 0107 3F       		.uleb128 0x3f
 1593 0108 19       		.uleb128 0x19
 1594 0109 03       		.uleb128 0x3
 1595 010a 0E       		.uleb128 0xe
 1596 010b 3A       		.uleb128 0x3a
 1597 010c 0B       		.uleb128 0xb
 1598 010d 3B       		.uleb128 0x3b
 1599 010e 0B       		.uleb128 0xb
 1600 010f 27       		.uleb128 0x27
 1601 0110 19       		.uleb128 0x19
 1602 0111 11       		.uleb128 0x11
 1603 0112 01       		.uleb128 0x1
 1604 0113 12       		.uleb128 0x12
 1605 0114 06       		.uleb128 0x6
 1606 0115 40       		.uleb128 0x40
 1607 0116 18       		.uleb128 0x18
 1608 0117 9742     		.uleb128 0x2117
 1609 0119 19       		.uleb128 0x19
 1610 011a 01       		.uleb128 0x1
 1611 011b 13       		.uleb128 0x13
 1612 011c 00       		.byte	0
 1613 011d 00       		.byte	0
 1614 011e 16       		.uleb128 0x16
 1615 011f 2E       		.uleb128 0x2e
 1616 0120 01       		.byte	0x1
 1617 0121 3F       		.uleb128 0x3f
 1618 0122 19       		.uleb128 0x19
 1619 0123 03       		.uleb128 0x3
 1620 0124 0E       		.uleb128 0xe
 1621 0125 3A       		.uleb128 0x3a
 1622 0126 0B       		.uleb128 0xb
 1623 0127 3B       		.uleb128 0x3b
 1624 0128 05       		.uleb128 0x5
 1625 0129 27       		.uleb128 0x27
 1626 012a 19       		.uleb128 0x19
 1627 012b 49       		.uleb128 0x49
 1628 012c 13       		.uleb128 0x13
 1629 012d 11       		.uleb128 0x11
 1630 012e 01       		.uleb128 0x1
 1631 012f 12       		.uleb128 0x12
 1632 0130 06       		.uleb128 0x6
 1633 0131 40       		.uleb128 0x40
 1634 0132 18       		.uleb128 0x18
 1635 0133 9742     		.uleb128 0x2117
 1636 0135 19       		.uleb128 0x19
 1637 0136 01       		.uleb128 0x1
 1638 0137 13       		.uleb128 0x13
 1639 0138 00       		.byte	0
 1640 0139 00       		.byte	0
 1641 013a 17       		.uleb128 0x17
 1642 013b 34       		.uleb128 0x34
 1643 013c 00       		.byte	0
 1644 013d 03       		.uleb128 0x3
 1645 013e 0E       		.uleb128 0xe
 1646 013f 3A       		.uleb128 0x3a
 1647 0140 0B       		.uleb128 0xb
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 44


 1648 0141 3B       		.uleb128 0x3b
 1649 0142 05       		.uleb128 0x5
 1650 0143 49       		.uleb128 0x49
 1651 0144 13       		.uleb128 0x13
 1652 0145 02       		.uleb128 0x2
 1653 0146 17       		.uleb128 0x17
 1654 0147 00       		.byte	0
 1655 0148 00       		.byte	0
 1656 0149 18       		.uleb128 0x18
 1657 014a 2E       		.uleb128 0x2e
 1658 014b 01       		.byte	0x1
 1659 014c 3F       		.uleb128 0x3f
 1660 014d 19       		.uleb128 0x19
 1661 014e 03       		.uleb128 0x3
 1662 014f 0E       		.uleb128 0xe
 1663 0150 3A       		.uleb128 0x3a
 1664 0151 0B       		.uleb128 0xb
 1665 0152 3B       		.uleb128 0x3b
 1666 0153 05       		.uleb128 0x5
 1667 0154 27       		.uleb128 0x27
 1668 0155 19       		.uleb128 0x19
 1669 0156 11       		.uleb128 0x11
 1670 0157 01       		.uleb128 0x1
 1671 0158 12       		.uleb128 0x12
 1672 0159 06       		.uleb128 0x6
 1673 015a 40       		.uleb128 0x40
 1674 015b 18       		.uleb128 0x18
 1675 015c 9742     		.uleb128 0x2117
 1676 015e 19       		.uleb128 0x19
 1677 015f 01       		.uleb128 0x1
 1678 0160 13       		.uleb128 0x13
 1679 0161 00       		.byte	0
 1680 0162 00       		.byte	0
 1681 0163 19       		.uleb128 0x19
 1682 0164 05       		.uleb128 0x5
 1683 0165 00       		.byte	0
 1684 0166 03       		.uleb128 0x3
 1685 0167 0E       		.uleb128 0xe
 1686 0168 3A       		.uleb128 0x3a
 1687 0169 0B       		.uleb128 0xb
 1688 016a 3B       		.uleb128 0x3b
 1689 016b 05       		.uleb128 0x5
 1690 016c 49       		.uleb128 0x49
 1691 016d 13       		.uleb128 0x13
 1692 016e 02       		.uleb128 0x2
 1693 016f 17       		.uleb128 0x17
 1694 0170 00       		.byte	0
 1695 0171 00       		.byte	0
 1696 0172 1A       		.uleb128 0x1a
 1697 0173 2E       		.uleb128 0x2e
 1698 0174 00       		.byte	0
 1699 0175 3F       		.uleb128 0x3f
 1700 0176 19       		.uleb128 0x19
 1701 0177 03       		.uleb128 0x3
 1702 0178 0E       		.uleb128 0xe
 1703 0179 3A       		.uleb128 0x3a
 1704 017a 0B       		.uleb128 0xb
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 45


 1705 017b 3B       		.uleb128 0x3b
 1706 017c 05       		.uleb128 0x5
 1707 017d 27       		.uleb128 0x27
 1708 017e 19       		.uleb128 0x19
 1709 017f 11       		.uleb128 0x11
 1710 0180 01       		.uleb128 0x1
 1711 0181 12       		.uleb128 0x12
 1712 0182 06       		.uleb128 0x6
 1713 0183 40       		.uleb128 0x40
 1714 0184 18       		.uleb128 0x18
 1715 0185 9742     		.uleb128 0x2117
 1716 0187 19       		.uleb128 0x19
 1717 0188 00       		.byte	0
 1718 0189 00       		.byte	0
 1719 018a 1B       		.uleb128 0x1b
 1720 018b 34       		.uleb128 0x34
 1721 018c 00       		.byte	0
 1722 018d 03       		.uleb128 0x3
 1723 018e 0E       		.uleb128 0xe
 1724 018f 3A       		.uleb128 0x3a
 1725 0190 0B       		.uleb128 0xb
 1726 0191 3B       		.uleb128 0x3b
 1727 0192 0B       		.uleb128 0xb
 1728 0193 49       		.uleb128 0x49
 1729 0194 13       		.uleb128 0x13
 1730 0195 3F       		.uleb128 0x3f
 1731 0196 19       		.uleb128 0x19
 1732 0197 3C       		.uleb128 0x3c
 1733 0198 19       		.uleb128 0x19
 1734 0199 00       		.byte	0
 1735 019a 00       		.byte	0
 1736 019b 1C       		.uleb128 0x1c
 1737 019c 2E       		.uleb128 0x2e
 1738 019d 00       		.byte	0
 1739 019e 3F       		.uleb128 0x3f
 1740 019f 19       		.uleb128 0x19
 1741 01a0 3C       		.uleb128 0x3c
 1742 01a1 19       		.uleb128 0x19
 1743 01a2 6E       		.uleb128 0x6e
 1744 01a3 0E       		.uleb128 0xe
 1745 01a4 03       		.uleb128 0x3
 1746 01a5 0E       		.uleb128 0xe
 1747 01a6 3A       		.uleb128 0x3a
 1748 01a7 0B       		.uleb128 0xb
 1749 01a8 3B       		.uleb128 0x3b
 1750 01a9 0B       		.uleb128 0xb
 1751 01aa 00       		.byte	0
 1752 01ab 00       		.byte	0
 1753 01ac 00       		.byte	0
 1754              		.section	.debug_loc,"",%progbits
 1755              	.Ldebug_loc0:
 1756              	.LLST0:
 1757 0000 00000000 		.4byte	.LVL0
 1758 0004 0C000000 		.4byte	.LVL2
 1759 0008 0100     		.2byte	0x1
 1760 000a 50       		.byte	0x50
 1761 000b 0C000000 		.4byte	.LVL2
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 46


 1762 000f 40010000 		.4byte	.LVL25
 1763 0013 0100     		.2byte	0x1
 1764 0015 56       		.byte	0x56
 1765 0016 40010000 		.4byte	.LVL25
 1766 001a 58010000 		.4byte	.LFE1
 1767 001e 0400     		.2byte	0x4
 1768 0020 F3       		.byte	0xf3
 1769 0021 01       		.uleb128 0x1
 1770 0022 50       		.byte	0x50
 1771 0023 9F       		.byte	0x9f
 1772 0024 00000000 		.4byte	0
 1773 0028 00000000 		.4byte	0
 1774              	.LLST1:
 1775 002c 12000000 		.4byte	.LVL3
 1776 0030 20010000 		.4byte	.LVL20
 1777 0034 0100     		.2byte	0x1
 1778 0036 54       		.byte	0x54
 1779 0037 22010000 		.4byte	.LVL21
 1780 003b 24010000 		.4byte	.LVL22
 1781 003f 0100     		.2byte	0x1
 1782 0041 54       		.byte	0x54
 1783 0042 28010000 		.4byte	.LVL23
 1784 0046 3A010000 		.4byte	.LVL24
 1785 004a 0100     		.2byte	0x1
 1786 004c 54       		.byte	0x54
 1787 004d 00000000 		.4byte	0
 1788 0051 00000000 		.4byte	0
 1789              	.LLST2:
 1790 0055 7C000000 		.4byte	.LVL11
 1791 0059 80000000 		.4byte	.LVL12
 1792 005d 0200     		.2byte	0x2
 1793 005f 30       		.byte	0x30
 1794 0060 9F       		.byte	0x9f
 1795 0061 80000000 		.4byte	.LVL12
 1796 0065 D4000000 		.4byte	.LVL13
 1797 0069 0100     		.2byte	0x1
 1798 006b 53       		.byte	0x53
 1799 006c D6000000 		.4byte	.LVL14
 1800 0070 E5000000 		.4byte	.LVL15-1
 1801 0074 0100     		.2byte	0x1
 1802 0076 53       		.byte	0x53
 1803 0077 00000000 		.4byte	0
 1804 007b 00000000 		.4byte	0
 1805              	.LLST3:
 1806 007f 12000000 		.4byte	.LVL3
 1807 0083 18010000 		.4byte	.LVL18
 1808 0087 0100     		.2byte	0x1
 1809 0089 55       		.byte	0x55
 1810 008a 1A010000 		.4byte	.LVL19
 1811 008e 24010000 		.4byte	.LVL22
 1812 0092 0100     		.2byte	0x1
 1813 0094 55       		.byte	0x55
 1814 0095 28010000 		.4byte	.LVL23
 1815 0099 3A010000 		.4byte	.LVL24
 1816 009d 0100     		.2byte	0x1
 1817 009f 55       		.byte	0x55
 1818 00a0 00000000 		.4byte	0
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 47


 1819 00a4 00000000 		.4byte	0
 1820              	.LLST4:
 1821 00a8 0A000000 		.4byte	.LVL1
 1822 00ac 12000000 		.4byte	.LVL3
 1823 00b0 0200     		.2byte	0x2
 1824 00b2 30       		.byte	0x30
 1825 00b3 9F       		.byte	0x9f
 1826 00b4 12000000 		.4byte	.LVL3
 1827 00b8 40010000 		.4byte	.LVL26
 1828 00bc 0100     		.2byte	0x1
 1829 00be 58       		.byte	0x58
 1830 00bf 00000000 		.4byte	0
 1831 00c3 00000000 		.4byte	0
 1832              	.LLST5:
 1833 00c7 0A000000 		.4byte	.LVL1
 1834 00cb 12000000 		.4byte	.LVL3
 1835 00cf 0200     		.2byte	0x2
 1836 00d1 31       		.byte	0x31
 1837 00d2 9F       		.byte	0x9f
 1838 00d3 12000000 		.4byte	.LVL3
 1839 00d7 80000000 		.4byte	.LVL12
 1840 00db 0100     		.2byte	0x1
 1841 00dd 50       		.byte	0x50
 1842 00de 14010000 		.4byte	.LVL16
 1843 00e2 16010000 		.4byte	.LVL17
 1844 00e6 0200     		.2byte	0x2
 1845 00e8 30       		.byte	0x30
 1846 00e9 9F       		.byte	0x9f
 1847 00ea 16010000 		.4byte	.LVL17
 1848 00ee 58010000 		.4byte	.LFE1
 1849 00f2 0100     		.2byte	0x1
 1850 00f4 50       		.byte	0x50
 1851 00f5 00000000 		.4byte	0
 1852 00f9 00000000 		.4byte	0
 1853              	.LLST6:
 1854 00fd 20000000 		.4byte	.LVL4
 1855 0101 2E000000 		.4byte	.LVL5
 1856 0105 0200     		.2byte	0x2
 1857 0107 30       		.byte	0x30
 1858 0108 9F       		.byte	0x9f
 1859 0109 2E000000 		.4byte	.LVL5
 1860 010d 62000000 		.4byte	.LVL7
 1861 0111 0100     		.2byte	0x1
 1862 0113 57       		.byte	0x57
 1863 0114 64000000 		.4byte	.LVL8
 1864 0118 6C000000 		.4byte	.LVL9
 1865 011c 0100     		.2byte	0x1
 1866 011e 57       		.byte	0x57
 1867 011f 6E000000 		.4byte	.LVL10
 1868 0123 7C000000 		.4byte	.LVL11
 1869 0127 0100     		.2byte	0x1
 1870 0129 57       		.byte	0x57
 1871 012a 7C000000 		.4byte	.LVL11
 1872 012e 16010000 		.4byte	.LVL17
 1873 0132 0100     		.2byte	0x1
 1874 0134 59       		.byte	0x59
 1875 0135 00000000 		.4byte	0
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 48


 1876 0139 00000000 		.4byte	0
 1877              	.LLST7:
 1878 013d 00000000 		.4byte	.LVL27
 1879 0141 06000000 		.4byte	.LVL28
 1880 0145 0100     		.2byte	0x1
 1881 0147 50       		.byte	0x50
 1882 0148 06000000 		.4byte	.LVL28
 1883 014c 20000000 		.4byte	.LFE2
 1884 0150 0400     		.2byte	0x4
 1885 0152 F3       		.byte	0xf3
 1886 0153 01       		.uleb128 0x1
 1887 0154 50       		.byte	0x50
 1888 0155 9F       		.byte	0x9f
 1889 0156 00000000 		.4byte	0
 1890 015a 00000000 		.4byte	0
 1891              	.LLST8:
 1892 015e 02000000 		.4byte	.LVL29
 1893 0162 8C000000 		.4byte	.LVL30
 1894 0166 0200     		.2byte	0x2
 1895 0168 30       		.byte	0x30
 1896 0169 9F       		.byte	0x9f
 1897 016a 8C000000 		.4byte	.LVL30
 1898 016e A8000000 		.4byte	.LFE3
 1899 0172 0100     		.2byte	0x1
 1900 0174 50       		.byte	0x50
 1901 0175 00000000 		.4byte	0
 1902 0179 00000000 		.4byte	0
 1903              	.LLST9:
 1904 017d 02000000 		.4byte	.LVL31
 1905 0181 8C000000 		.4byte	.LVL32
 1906 0185 0200     		.2byte	0x2
 1907 0187 30       		.byte	0x30
 1908 0188 9F       		.byte	0x9f
 1909 0189 8C000000 		.4byte	.LVL32
 1910 018d A8000000 		.4byte	.LFE4
 1911 0191 0100     		.2byte	0x1
 1912 0193 50       		.byte	0x50
 1913 0194 00000000 		.4byte	0
 1914 0198 00000000 		.4byte	0
 1915              	.LLST10:
 1916 019c 00000000 		.4byte	.LVL33
 1917 01a0 02000000 		.4byte	.LVL34
 1918 01a4 0100     		.2byte	0x1
 1919 01a6 50       		.byte	0x50
 1920 01a7 02000000 		.4byte	.LVL34
 1921 01ab 1C000000 		.4byte	.LFE5
 1922 01af 0400     		.2byte	0x4
 1923 01b1 F3       		.byte	0xf3
 1924 01b2 01       		.uleb128 0x1
 1925 01b3 50       		.byte	0x50
 1926 01b4 9F       		.byte	0x9f
 1927 01b5 00000000 		.4byte	0
 1928 01b9 00000000 		.4byte	0
 1929              		.section	.debug_aranges,"",%progbits
 1930 0000 54000000 		.4byte	0x54
 1931 0004 0200     		.2byte	0x2
 1932 0006 00000000 		.4byte	.Ldebug_info0
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 49


 1933 000a 04       		.byte	0x4
 1934 000b 00       		.byte	0
 1935 000c 0000     		.2byte	0
 1936 000e 0000     		.2byte	0
 1937 0010 00000000 		.4byte	.LFB1
 1938 0014 58010000 		.4byte	.LFE1-.LFB1
 1939 0018 00000000 		.4byte	.LFB2
 1940 001c 20000000 		.4byte	.LFE2-.LFB2
 1941 0020 00000000 		.4byte	.LFB3
 1942 0024 A8000000 		.4byte	.LFE3-.LFB3
 1943 0028 00000000 		.4byte	.LFB4
 1944 002c A8000000 		.4byte	.LFE4-.LFB4
 1945 0030 00000000 		.4byte	.LFB5
 1946 0034 1C000000 		.4byte	.LFE5-.LFB5
 1947 0038 00000000 		.4byte	.LFB6
 1948 003c 50000000 		.4byte	.LFE6-.LFB6
 1949 0040 00000000 		.4byte	.LFB7
 1950 0044 50000000 		.4byte	.LFE7-.LFB7
 1951 0048 00000000 		.4byte	.LFB8
 1952 004c 50000000 		.4byte	.LFE8-.LFB8
 1953 0050 00000000 		.4byte	0
 1954 0054 00000000 		.4byte	0
 1955              		.section	.debug_ranges,"",%progbits
 1956              	.Ldebug_ranges0:
 1957 0000 00000000 		.4byte	.LFB1
 1958 0004 58010000 		.4byte	.LFE1
 1959 0008 00000000 		.4byte	.LFB2
 1960 000c 20000000 		.4byte	.LFE2
 1961 0010 00000000 		.4byte	.LFB3
 1962 0014 A8000000 		.4byte	.LFE3
 1963 0018 00000000 		.4byte	.LFB4
 1964 001c A8000000 		.4byte	.LFE4
 1965 0020 00000000 		.4byte	.LFB5
 1966 0024 1C000000 		.4byte	.LFE5
 1967 0028 00000000 		.4byte	.LFB6
 1968 002c 50000000 		.4byte	.LFE6
 1969 0030 00000000 		.4byte	.LFB7
 1970 0034 50000000 		.4byte	.LFE7
 1971 0038 00000000 		.4byte	.LFB8
 1972 003c 50000000 		.4byte	.LFE8
 1973 0040 00000000 		.4byte	0
 1974 0044 00000000 		.4byte	0
 1975              		.section	.debug_line,"",%progbits
 1976              	.Ldebug_line0:
 1977 0000 89010000 		.section	.debug_str,"MS",%progbits,1
 1977      02005F00 
 1977      00000201 
 1977      FB0E0D00 
 1977      01010101 
 1978              	.LASF57:
 1979 0000 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1979      43313120 
 1979      352E342E 
 1979      31203230 
 1979      31363036 
 1980 0033 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1980      20726576 
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 50


 1980      6973696F 
 1980      6E203233 
 1980      37373135 
 1981 0066 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1981      66756E63 
 1981      74696F6E 
 1981      2D736563 
 1981      74696F6E 
 1982              	.LASF7:
 1983 008e 6C6F6E67 		.ascii	"long long unsigned int\000"
 1983      206C6F6E 
 1983      6720756E 
 1983      7369676E 
 1983      65642069 
 1984              	.LASF31:
 1985 00a5 7478636D 		.ascii	"txcmd\000"
 1985      6400
 1986              	.LASF28:
 1987 00ab 7278616D 		.ascii	"rxamrd\000"
 1987      726400
 1988              	.LASF6:
 1989 00b2 6C6F6E67 		.ascii	"long long int\000"
 1989      206C6F6E 
 1989      6720696E 
 1989      7400
 1990              	.LASF0:
 1991 00c0 7369676E 		.ascii	"signed char\000"
 1991      65642063 
 1991      68617200 
 1992              	.LASF52:
 1993 00cc 6D61696C 		.ascii	"mailbox0\000"
 1993      626F7830 
 1993      00
 1994              	.LASF53:
 1995 00d5 6D61696C 		.ascii	"mailbox1\000"
 1995      626F7831 
 1995      00
 1996              	.LASF54:
 1997 00de 6D61696C 		.ascii	"mailbox2\000"
 1997      626F7832 
 1997      00
 1998              	.LASF4:
 1999 00e7 6C6F6E67 		.ascii	"long int\000"
 1999      20696E74 
 1999      00
 2000              	.LASF55:
 2001 00f0 4379496E 		.ascii	"CyIntDisable\000"
 2001      74446973 
 2001      61626C65 
 2001      00
 2002              	.LASF25:
 2003 00fd 72786461 		.ascii	"rxdata\000"
 2003      746100
 2004              	.LASF9:
 2005 0104 75696E74 		.ascii	"uint8\000"
 2005      3800
 2006              	.LASF26:
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 51


 2007 010a 7278616D 		.ascii	"rxamr\000"
 2007      7200
 2008              	.LASF12:
 2009 0110 646F7562 		.ascii	"double\000"
 2009      6C6500
 2010              	.LASF35:
 2011 0117 73686966 		.ascii	"shift\000"
 2011      7400
 2012              	.LASF10:
 2013 011d 75696E74 		.ascii	"uint32\000"
 2013      333200
 2014              	.LASF44:
 2015 0124 43414E5F 		.ascii	"CAN_TxCancel\000"
 2015      54784361 
 2015      6E63656C 
 2015      00
 2016              	.LASF19:
 2017 0131 62797465 		.ascii	"byte\000"
 2017      00
 2018              	.LASF51:
 2019 0136 6461746F 		.ascii	"dato_enviado_1\000"
 2019      5F656E76 
 2019      6961646F 
 2019      5F3100
 2020              	.LASF8:
 2021 0145 756E7369 		.ascii	"unsigned int\000"
 2021      676E6564 
 2021      20696E74 
 2021      00
 2022              	.LASF5:
 2023 0152 6C6F6E67 		.ascii	"long unsigned int\000"
 2023      20756E73 
 2023      69676E65 
 2023      6420696E 
 2023      7400
 2024              	.LASF41:
 2025 0164 43414E5F 		.ascii	"CAN_SendMsg\000"
 2025      53656E64 
 2025      4D736700 
 2026              	.LASF40:
 2027 0170 62756666 		.ascii	"bufferId\000"
 2027      65724964 
 2027      00
 2028              	.LASF38:
 2029 0179 72656754 		.ascii	"regTemp\000"
 2029      656D7000 
 2030              	.LASF3:
 2031 0181 73686F72 		.ascii	"short unsigned int\000"
 2031      7420756E 
 2031      7369676E 
 2031      65642069 
 2031      6E7400
 2032              	.LASF30:
 2033 0194 43414E5F 		.ascii	"CAN_RX_STRUCT\000"
 2033      52585F53 
 2033      54525543 
 2033      5400
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 52


 2034              	.LASF46:
 2035 01a2 72784D61 		.ascii	"rxMailbox\000"
 2035      696C626F 
 2035      7800
 2036              	.LASF33:
 2037 01ac 74786461 		.ascii	"txdata\000"
 2037      746100
 2038              	.LASF15:
 2039 01b3 72656733 		.ascii	"reg32\000"
 2039      3200
 2040              	.LASF21:
 2041 01b9 43414E5F 		.ascii	"CAN_REG_32\000"
 2041      5245475F 
 2041      333200
 2042              	.LASF17:
 2043 01c4 73697A65 		.ascii	"sizetype\000"
 2043      74797065 
 2043      00
 2044              	.LASF16:
 2045 01cd 6C6F6E67 		.ascii	"long double\000"
 2045      20646F75 
 2045      626C6500 
 2046              	.LASF24:
 2047 01d9 72786964 		.ascii	"rxid\000"
 2047      00
 2048              	.LASF36:
 2049 01de 72657472 		.ascii	"retry\000"
 2049      7900
 2050              	.LASF39:
 2051 01e4 6D657373 		.ascii	"message\000"
 2051      61676500 
 2052              	.LASF11:
 2053 01ec 666C6F61 		.ascii	"float\000"
 2053      7400
 2054              	.LASF59:
 2055 01f2 433A5C55 		.ascii	"C:\\Users\\Henry Alberto\\Desktop\\Algoritmos_Optim"
 2055      73657273 
 2055      5C48656E 
 2055      72792041 
 2055      6C626572 
 2056 0221 697A6163 		.ascii	"izacion\\Algoritmo_Genetico.cydsn\000"
 2056      696F6E5C 
 2056      416C676F 
 2056      7269746D 
 2056      6F5F4765 
 2057              	.LASF14:
 2058 0242 72656738 		.ascii	"reg8\000"
 2058      00
 2059              	.LASF1:
 2060 0247 756E7369 		.ascii	"unsigned char\000"
 2060      676E6564 
 2060      20636861 
 2060      7200
 2061              	.LASF2:
 2062 0255 73686F72 		.ascii	"short int\000"
 2062      7420696E 
 2062      7400
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 53


 2063              	.LASF56:
 2064 025f 4379496E 		.ascii	"CyIntEnable\000"
 2064      74456E61 
 2064      626C6500 
 2065              	.LASF18:
 2066 026b 43414E5F 		.ascii	"CAN_DATA_BYTES_MSG\000"
 2066      44415441 
 2066      5F425954 
 2066      45535F4D 
 2066      534700
 2067              	.LASF34:
 2068 027e 43414E5F 		.ascii	"CAN_TX_STRUCT\000"
 2068      54585F53 
 2068      54525543 
 2068      5400
 2069              	.LASF13:
 2070 028c 63686172 		.ascii	"char\000"
 2070      00
 2071              	.LASF50:
 2072 0291 6461746F 		.ascii	"dato_enviado\000"
 2072      5F656E76 
 2072      6961646F 
 2072      00
 2073              	.LASF20:
 2074 029e 43414E5F 		.ascii	"CAN_DATA_BYTES\000"
 2074      44415441 
 2074      5F425954 
 2074      455300
 2075              	.LASF48:
 2076 02ad 43414E5F 		.ascii	"CAN_ReceiveMsg1\000"
 2076      52656365 
 2076      6976654D 
 2076      73673100 
 2077              	.LASF49:
 2078 02bd 43414E5F 		.ascii	"CAN_ReceiveMsg2\000"
 2078      52656365 
 2078      6976654D 
 2078      73673200 
 2079              	.LASF47:
 2080 02cd 43414E5F 		.ascii	"CAN_ReceiveMsg0\000"
 2080      52656365 
 2080      6976654D 
 2080      73673000 
 2081              	.LASF58:
 2082 02dd 43414E5F 		.ascii	"CAN_TX_RX_func.c\000"
 2082      54585F52 
 2082      585F6675 
 2082      6E632E63 
 2082      00
 2083              	.LASF23:
 2084 02ee 7278636D 		.ascii	"rxcmd\000"
 2084      6400
 2085              	.LASF22:
 2086 02f4 43414E5F 		.ascii	"CAN_TX_MSG\000"
 2086      54585F4D 
 2086      534700
 2087              	.LASF32:
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccvQXUnr.s 			page 54


 2088 02ff 74786964 		.ascii	"txid\000"
 2088      00
 2089              	.LASF27:
 2090 0304 72786163 		.ascii	"rxacr\000"
 2090      7200
 2091              	.LASF29:
 2092 030a 72786163 		.ascii	"rxacrd\000"
 2092      726400
 2093              	.LASF42:
 2094 0311 43414E5F 		.ascii	"CAN_SendMsg0\000"
 2094      53656E64 
 2094      4D736730 
 2094      00
 2095              	.LASF43:
 2096 031e 43414E5F 		.ascii	"CAN_SendMsg1\000"
 2096      53656E64 
 2096      4D736731 
 2096      00
 2097              	.LASF45:
 2098 032b 43414E5F 		.ascii	"CAN_ReceiveMsg\000"
 2098      52656365 
 2098      6976654D 
 2098      736700
 2099              	.LASF37:
 2100 033a 72657375 		.ascii	"result\000"
 2100      6C7400
 2101              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
