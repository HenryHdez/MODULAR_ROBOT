ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"EMITE.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.EMITE_Init,"ax",%progbits
  19              		.align	2
  20              		.global	EMITE_Init
  21              		.thumb
  22              		.thumb_func
  23              		.type	EMITE_Init, %function
  24              	EMITE_Init:
  25              	.LFB1:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\EMITE.c"
   1:.\Generated_Source\PSoC5/EMITE.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/EMITE.c **** * File Name: EMITE.c
   3:.\Generated_Source\PSoC5/EMITE.c **** * Version 2.50
   4:.\Generated_Source\PSoC5/EMITE.c **** *
   5:.\Generated_Source\PSoC5/EMITE.c **** * Description:
   6:.\Generated_Source\PSoC5/EMITE.c **** *  This file provides all API functionality of the UART component
   7:.\Generated_Source\PSoC5/EMITE.c **** *
   8:.\Generated_Source\PSoC5/EMITE.c **** * Note:
   9:.\Generated_Source\PSoC5/EMITE.c **** *
  10:.\Generated_Source\PSoC5/EMITE.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/EMITE.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/EMITE.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC5/EMITE.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC5/EMITE.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/EMITE.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/EMITE.c **** 
  17:.\Generated_Source\PSoC5/EMITE.c **** #include "EMITE.h"
  18:.\Generated_Source\PSoC5/EMITE.c **** #if (EMITE_INTERNAL_CLOCK_USED)
  19:.\Generated_Source\PSoC5/EMITE.c ****     #include "EMITE_IntClock.h"
  20:.\Generated_Source\PSoC5/EMITE.c **** #endif /* End EMITE_INTERNAL_CLOCK_USED */
  21:.\Generated_Source\PSoC5/EMITE.c **** 
  22:.\Generated_Source\PSoC5/EMITE.c **** 
  23:.\Generated_Source\PSoC5/EMITE.c **** /***************************************
  24:.\Generated_Source\PSoC5/EMITE.c **** * Global data allocation
  25:.\Generated_Source\PSoC5/EMITE.c **** ***************************************/
  26:.\Generated_Source\PSoC5/EMITE.c **** 
  27:.\Generated_Source\PSoC5/EMITE.c **** uint8 EMITE_initVar = 0u;
  28:.\Generated_Source\PSoC5/EMITE.c **** 
  29:.\Generated_Source\PSoC5/EMITE.c **** #if (EMITE_TX_INTERRUPT_ENABLED && EMITE_TX_ENABLED)
  30:.\Generated_Source\PSoC5/EMITE.c ****     volatile uint8 EMITE_txBuffer[EMITE_TX_BUFFER_SIZE];
  31:.\Generated_Source\PSoC5/EMITE.c ****     volatile uint8 EMITE_txBufferRead = 0u;
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 2


  32:.\Generated_Source\PSoC5/EMITE.c ****     uint8 EMITE_txBufferWrite = 0u;
  33:.\Generated_Source\PSoC5/EMITE.c **** #endif /* (EMITE_TX_INTERRUPT_ENABLED && EMITE_TX_ENABLED) */
  34:.\Generated_Source\PSoC5/EMITE.c **** 
  35:.\Generated_Source\PSoC5/EMITE.c **** #if (EMITE_RX_INTERRUPT_ENABLED && (EMITE_RX_ENABLED || EMITE_HD_ENABLED))
  36:.\Generated_Source\PSoC5/EMITE.c ****     uint8 EMITE_errorStatus = 0u;
  37:.\Generated_Source\PSoC5/EMITE.c ****     volatile uint8 EMITE_rxBuffer[EMITE_RX_BUFFER_SIZE];
  38:.\Generated_Source\PSoC5/EMITE.c ****     volatile uint8 EMITE_rxBufferRead  = 0u;
  39:.\Generated_Source\PSoC5/EMITE.c ****     volatile uint8 EMITE_rxBufferWrite = 0u;
  40:.\Generated_Source\PSoC5/EMITE.c ****     volatile uint8 EMITE_rxBufferLoopDetect = 0u;
  41:.\Generated_Source\PSoC5/EMITE.c ****     volatile uint8 EMITE_rxBufferOverflow   = 0u;
  42:.\Generated_Source\PSoC5/EMITE.c ****     #if (EMITE_RXHW_ADDRESS_ENABLED)
  43:.\Generated_Source\PSoC5/EMITE.c ****         volatile uint8 EMITE_rxAddressMode = EMITE_RX_ADDRESS_MODE;
  44:.\Generated_Source\PSoC5/EMITE.c ****         volatile uint8 EMITE_rxAddressDetected = 0u;
  45:.\Generated_Source\PSoC5/EMITE.c ****     #endif /* (EMITE_RXHW_ADDRESS_ENABLED) */
  46:.\Generated_Source\PSoC5/EMITE.c **** #endif /* (EMITE_RX_INTERRUPT_ENABLED && (EMITE_RX_ENABLED || EMITE_HD_ENABLED)) */
  47:.\Generated_Source\PSoC5/EMITE.c **** 
  48:.\Generated_Source\PSoC5/EMITE.c **** 
  49:.\Generated_Source\PSoC5/EMITE.c **** /*******************************************************************************
  50:.\Generated_Source\PSoC5/EMITE.c **** * Function Name: EMITE_Start
  51:.\Generated_Source\PSoC5/EMITE.c **** ********************************************************************************
  52:.\Generated_Source\PSoC5/EMITE.c **** *
  53:.\Generated_Source\PSoC5/EMITE.c **** * Summary:
  54:.\Generated_Source\PSoC5/EMITE.c **** *  This is the preferred method to begin component operation.
  55:.\Generated_Source\PSoC5/EMITE.c **** *  EMITE_Start() sets the initVar variable, calls the
  56:.\Generated_Source\PSoC5/EMITE.c **** *  EMITE_Init() function, and then calls the
  57:.\Generated_Source\PSoC5/EMITE.c **** *  EMITE_Enable() function.
  58:.\Generated_Source\PSoC5/EMITE.c **** *
  59:.\Generated_Source\PSoC5/EMITE.c **** * Parameters:
  60:.\Generated_Source\PSoC5/EMITE.c **** *  None.
  61:.\Generated_Source\PSoC5/EMITE.c **** *
  62:.\Generated_Source\PSoC5/EMITE.c **** * Return:
  63:.\Generated_Source\PSoC5/EMITE.c **** *  None.
  64:.\Generated_Source\PSoC5/EMITE.c **** *
  65:.\Generated_Source\PSoC5/EMITE.c **** * Global variables:
  66:.\Generated_Source\PSoC5/EMITE.c **** *  The EMITE_intiVar variable is used to indicate initial
  67:.\Generated_Source\PSoC5/EMITE.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:.\Generated_Source\PSoC5/EMITE.c **** *  and set to one (1u) the first time EMITE_Start() is called. This
  69:.\Generated_Source\PSoC5/EMITE.c **** *  allows for component initialization without re-initialization in all
  70:.\Generated_Source\PSoC5/EMITE.c **** *  subsequent calls to the EMITE_Start() routine.
  71:.\Generated_Source\PSoC5/EMITE.c **** *
  72:.\Generated_Source\PSoC5/EMITE.c **** * Reentrant:
  73:.\Generated_Source\PSoC5/EMITE.c **** *  No.
  74:.\Generated_Source\PSoC5/EMITE.c **** *
  75:.\Generated_Source\PSoC5/EMITE.c **** *******************************************************************************/
  76:.\Generated_Source\PSoC5/EMITE.c **** void EMITE_Start(void) 
  77:.\Generated_Source\PSoC5/EMITE.c **** {
  78:.\Generated_Source\PSoC5/EMITE.c ****     /* If not initialized then initialize all required hardware and software */
  79:.\Generated_Source\PSoC5/EMITE.c ****     if(EMITE_initVar == 0u)
  80:.\Generated_Source\PSoC5/EMITE.c ****     {
  81:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_Init();
  82:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_initVar = 1u;
  83:.\Generated_Source\PSoC5/EMITE.c ****     }
  84:.\Generated_Source\PSoC5/EMITE.c **** 
  85:.\Generated_Source\PSoC5/EMITE.c ****     EMITE_Enable();
  86:.\Generated_Source\PSoC5/EMITE.c **** }
  87:.\Generated_Source\PSoC5/EMITE.c **** 
  88:.\Generated_Source\PSoC5/EMITE.c **** 
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 3


  89:.\Generated_Source\PSoC5/EMITE.c **** /*******************************************************************************
  90:.\Generated_Source\PSoC5/EMITE.c **** * Function Name: EMITE_Init
  91:.\Generated_Source\PSoC5/EMITE.c **** ********************************************************************************
  92:.\Generated_Source\PSoC5/EMITE.c **** *
  93:.\Generated_Source\PSoC5/EMITE.c **** * Summary:
  94:.\Generated_Source\PSoC5/EMITE.c **** *  Initializes or restores the component according to the customizer Configure
  95:.\Generated_Source\PSoC5/EMITE.c **** *  dialog settings. It is not necessary to call EMITE_Init() because
  96:.\Generated_Source\PSoC5/EMITE.c **** *  the EMITE_Start() API calls this function and is the preferred
  97:.\Generated_Source\PSoC5/EMITE.c **** *  method to begin component operation.
  98:.\Generated_Source\PSoC5/EMITE.c **** *
  99:.\Generated_Source\PSoC5/EMITE.c **** * Parameters:
 100:.\Generated_Source\PSoC5/EMITE.c **** *  None.
 101:.\Generated_Source\PSoC5/EMITE.c **** *
 102:.\Generated_Source\PSoC5/EMITE.c **** * Return:
 103:.\Generated_Source\PSoC5/EMITE.c **** *  None.
 104:.\Generated_Source\PSoC5/EMITE.c **** *
 105:.\Generated_Source\PSoC5/EMITE.c **** *******************************************************************************/
 106:.\Generated_Source\PSoC5/EMITE.c **** void EMITE_Init(void) 
 107:.\Generated_Source\PSoC5/EMITE.c **** {
  27              		.loc 1 107 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 108:.\Generated_Source\PSoC5/EMITE.c ****     #if(EMITE_RX_ENABLED || EMITE_HD_ENABLED)
 109:.\Generated_Source\PSoC5/EMITE.c **** 
 110:.\Generated_Source\PSoC5/EMITE.c ****         #if (EMITE_RX_INTERRUPT_ENABLED)
 111:.\Generated_Source\PSoC5/EMITE.c ****             /* Set RX interrupt vector and priority */
 112:.\Generated_Source\PSoC5/EMITE.c ****             (void) CyIntSetVector(EMITE_RX_VECT_NUM, &EMITE_RXISR);
 113:.\Generated_Source\PSoC5/EMITE.c ****             CyIntSetPriority(EMITE_RX_VECT_NUM, EMITE_RX_PRIOR_NUM);
 114:.\Generated_Source\PSoC5/EMITE.c ****             EMITE_errorStatus = 0u;
 115:.\Generated_Source\PSoC5/EMITE.c ****         #endif /* (EMITE_RX_INTERRUPT_ENABLED) */
 116:.\Generated_Source\PSoC5/EMITE.c **** 
 117:.\Generated_Source\PSoC5/EMITE.c ****         #if (EMITE_RXHW_ADDRESS_ENABLED)
 118:.\Generated_Source\PSoC5/EMITE.c ****             EMITE_SetRxAddressMode(EMITE_RX_ADDRESS_MODE);
 119:.\Generated_Source\PSoC5/EMITE.c ****             EMITE_SetRxAddress1(EMITE_RX_HW_ADDRESS1);
 120:.\Generated_Source\PSoC5/EMITE.c ****             EMITE_SetRxAddress2(EMITE_RX_HW_ADDRESS2);
 121:.\Generated_Source\PSoC5/EMITE.c ****         #endif /* End EMITE_RXHW_ADDRESS_ENABLED */
 122:.\Generated_Source\PSoC5/EMITE.c **** 
 123:.\Generated_Source\PSoC5/EMITE.c ****         /* Init Count7 period */
 124:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_RXBITCTR_PERIOD_REG = EMITE_RXBITCTR_INIT;
  32              		.loc 1 124 0
  33 0000 7222     		movs	r2, #114
  34 0002 034B     		ldr	r3, .L2
  35 0004 1A70     		strb	r2, [r3]
 125:.\Generated_Source\PSoC5/EMITE.c ****         /* Configure the Initial RX interrupt mask */
 126:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_RXSTATUS_MASK_REG  = EMITE_INIT_RX_INTERRUPTS_MASK;
  36              		.loc 1 126 0
  37 0006 2022     		movs	r2, #32
  38 0008 FE33     		adds	r3, r3, #254
  39 000a 1A70     		strb	r2, [r3]
  40 000c 7047     		bx	lr
  41              	.L3:
  42 000e 00BF     		.align	2
  43              	.L2:
  44 0010 87640040 		.word	1073767559
  45              		.cfi_endproc
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 4


  46              	.LFE1:
  47              		.size	EMITE_Init, .-EMITE_Init
  48              		.section	.text.EMITE_Enable,"ax",%progbits
  49              		.align	2
  50              		.global	EMITE_Enable
  51              		.thumb
  52              		.thumb_func
  53              		.type	EMITE_Enable, %function
  54              	EMITE_Enable:
  55              	.LFB2:
 127:.\Generated_Source\PSoC5/EMITE.c ****     #endif /* End EMITE_RX_ENABLED || EMITE_HD_ENABLED*/
 128:.\Generated_Source\PSoC5/EMITE.c **** 
 129:.\Generated_Source\PSoC5/EMITE.c ****     #if(EMITE_TX_ENABLED)
 130:.\Generated_Source\PSoC5/EMITE.c ****         #if (EMITE_TX_INTERRUPT_ENABLED)
 131:.\Generated_Source\PSoC5/EMITE.c ****             /* Set TX interrupt vector and priority */
 132:.\Generated_Source\PSoC5/EMITE.c ****             (void) CyIntSetVector(EMITE_TX_VECT_NUM, &EMITE_TXISR);
 133:.\Generated_Source\PSoC5/EMITE.c ****             CyIntSetPriority(EMITE_TX_VECT_NUM, EMITE_TX_PRIOR_NUM);
 134:.\Generated_Source\PSoC5/EMITE.c ****         #endif /* (EMITE_TX_INTERRUPT_ENABLED) */
 135:.\Generated_Source\PSoC5/EMITE.c **** 
 136:.\Generated_Source\PSoC5/EMITE.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:.\Generated_Source\PSoC5/EMITE.c ****         #if (EMITE_TXCLKGEN_DP)
 138:.\Generated_Source\PSoC5/EMITE.c ****             EMITE_TXBITCLKGEN_CTR_REG = EMITE_BIT_CENTER;
 139:.\Generated_Source\PSoC5/EMITE.c ****             EMITE_TXBITCLKTX_COMPLETE_REG = ((EMITE_NUMBER_OF_DATA_BITS +
 140:.\Generated_Source\PSoC5/EMITE.c ****                         EMITE_NUMBER_OF_START_BIT) * EMITE_OVER_SAMPLE_COUNT) - 1u;
 141:.\Generated_Source\PSoC5/EMITE.c ****         #else
 142:.\Generated_Source\PSoC5/EMITE.c ****             EMITE_TXBITCTR_PERIOD_REG = ((EMITE_NUMBER_OF_DATA_BITS +
 143:.\Generated_Source\PSoC5/EMITE.c ****                         EMITE_NUMBER_OF_START_BIT) * EMITE_OVER_SAMPLE_8) - 1u;
 144:.\Generated_Source\PSoC5/EMITE.c ****         #endif /* End EMITE_TXCLKGEN_DP */
 145:.\Generated_Source\PSoC5/EMITE.c **** 
 146:.\Generated_Source\PSoC5/EMITE.c ****         /* Configure the Initial TX interrupt mask */
 147:.\Generated_Source\PSoC5/EMITE.c ****         #if (EMITE_TX_INTERRUPT_ENABLED)
 148:.\Generated_Source\PSoC5/EMITE.c ****             EMITE_TXSTATUS_MASK_REG = EMITE_TX_STS_FIFO_EMPTY;
 149:.\Generated_Source\PSoC5/EMITE.c ****         #else
 150:.\Generated_Source\PSoC5/EMITE.c ****             EMITE_TXSTATUS_MASK_REG = EMITE_INIT_TX_INTERRUPTS_MASK;
 151:.\Generated_Source\PSoC5/EMITE.c ****         #endif /*End EMITE_TX_INTERRUPT_ENABLED*/
 152:.\Generated_Source\PSoC5/EMITE.c **** 
 153:.\Generated_Source\PSoC5/EMITE.c ****     #endif /* End EMITE_TX_ENABLED */
 154:.\Generated_Source\PSoC5/EMITE.c **** 
 155:.\Generated_Source\PSoC5/EMITE.c ****     #if(EMITE_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_WriteControlRegister( \
 157:.\Generated_Source\PSoC5/EMITE.c ****             (EMITE_ReadControlRegister() & (uint8)~EMITE_CTRL_PARITY_TYPE_MASK) | \
 158:.\Generated_Source\PSoC5/EMITE.c ****             (uint8)(EMITE_PARITY_TYPE << EMITE_CTRL_PARITY_TYPE0_SHIFT) );
 159:.\Generated_Source\PSoC5/EMITE.c ****     #endif /* End EMITE_PARITY_TYPE_SW */
 160:.\Generated_Source\PSoC5/EMITE.c **** }
 161:.\Generated_Source\PSoC5/EMITE.c **** 
 162:.\Generated_Source\PSoC5/EMITE.c **** 
 163:.\Generated_Source\PSoC5/EMITE.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC5/EMITE.c **** * Function Name: EMITE_Enable
 165:.\Generated_Source\PSoC5/EMITE.c **** ********************************************************************************
 166:.\Generated_Source\PSoC5/EMITE.c **** *
 167:.\Generated_Source\PSoC5/EMITE.c **** * Summary:
 168:.\Generated_Source\PSoC5/EMITE.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:.\Generated_Source\PSoC5/EMITE.c **** *  to call EMITE_Enable() because the EMITE_Start() API
 170:.\Generated_Source\PSoC5/EMITE.c **** *  calls this function, which is the preferred method to begin component
 171:.\Generated_Source\PSoC5/EMITE.c **** *  operation.
 172:.\Generated_Source\PSoC5/EMITE.c **** 
 173:.\Generated_Source\PSoC5/EMITE.c **** * Parameters:
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 5


 174:.\Generated_Source\PSoC5/EMITE.c **** *  None.
 175:.\Generated_Source\PSoC5/EMITE.c **** *
 176:.\Generated_Source\PSoC5/EMITE.c **** * Return:
 177:.\Generated_Source\PSoC5/EMITE.c **** *  None.
 178:.\Generated_Source\PSoC5/EMITE.c **** *
 179:.\Generated_Source\PSoC5/EMITE.c **** * Global Variables:
 180:.\Generated_Source\PSoC5/EMITE.c **** *  EMITE_rxAddressDetected - set to initial state (0).
 181:.\Generated_Source\PSoC5/EMITE.c **** *
 182:.\Generated_Source\PSoC5/EMITE.c **** *******************************************************************************/
 183:.\Generated_Source\PSoC5/EMITE.c **** void EMITE_Enable(void) 
 184:.\Generated_Source\PSoC5/EMITE.c **** {
  56              		.loc 1 184 0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60 0000 10B5     		push	{r4, lr}
  61              		.cfi_def_cfa_offset 8
  62              		.cfi_offset 4, -8
  63              		.cfi_offset 14, -4
 185:.\Generated_Source\PSoC5/EMITE.c ****     uint8 enableInterrupts;
 186:.\Generated_Source\PSoC5/EMITE.c ****     enableInterrupts = CyEnterCriticalSection();
  64              		.loc 1 186 0
  65 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  66              	.LVL0:
  67 0006 0446     		mov	r4, r0
  68              	.LVL1:
 187:.\Generated_Source\PSoC5/EMITE.c **** 
 188:.\Generated_Source\PSoC5/EMITE.c ****     #if (EMITE_RX_ENABLED || EMITE_HD_ENABLED)
 189:.\Generated_Source\PSoC5/EMITE.c ****         /* RX Counter (Count7) Enable */
 190:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_RXBITCTR_CONTROL_REG |= EMITE_CNTR_ENABLE;
  69              		.loc 1 190 0
  70 0008 074A     		ldr	r2, .L6
  71 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  72 000c 43F02003 		orr	r3, r3, #32
  73 0010 1370     		strb	r3, [r2]
 191:.\Generated_Source\PSoC5/EMITE.c **** 
 192:.\Generated_Source\PSoC5/EMITE.c ****         /* Enable the RX Interrupt */
 193:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_RXSTATUS_ACTL_REG  |= EMITE_INT_ENABLE;
  74              		.loc 1 193 0
  75 0012 FE32     		adds	r2, r2, #254
  76 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  77 0016 43F01003 		orr	r3, r3, #16
  78 001a 1370     		strb	r3, [r2]
 194:.\Generated_Source\PSoC5/EMITE.c **** 
 195:.\Generated_Source\PSoC5/EMITE.c ****         #if (EMITE_RX_INTERRUPT_ENABLED)
 196:.\Generated_Source\PSoC5/EMITE.c ****             EMITE_EnableRxInt();
 197:.\Generated_Source\PSoC5/EMITE.c **** 
 198:.\Generated_Source\PSoC5/EMITE.c ****             #if (EMITE_RXHW_ADDRESS_ENABLED)
 199:.\Generated_Source\PSoC5/EMITE.c ****                 EMITE_rxAddressDetected = 0u;
 200:.\Generated_Source\PSoC5/EMITE.c ****             #endif /* (EMITE_RXHW_ADDRESS_ENABLED) */
 201:.\Generated_Source\PSoC5/EMITE.c ****         #endif /* (EMITE_RX_INTERRUPT_ENABLED) */
 202:.\Generated_Source\PSoC5/EMITE.c ****     #endif /* (EMITE_RX_ENABLED || EMITE_HD_ENABLED) */
 203:.\Generated_Source\PSoC5/EMITE.c **** 
 204:.\Generated_Source\PSoC5/EMITE.c ****     #if(EMITE_TX_ENABLED)
 205:.\Generated_Source\PSoC5/EMITE.c ****         /* TX Counter (DP/Count7) Enable */
 206:.\Generated_Source\PSoC5/EMITE.c ****         #if(!EMITE_TXCLKGEN_DP)
 207:.\Generated_Source\PSoC5/EMITE.c ****             EMITE_TXBITCTR_CONTROL_REG |= EMITE_CNTR_ENABLE;
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 6


 208:.\Generated_Source\PSoC5/EMITE.c ****         #endif /* End EMITE_TXCLKGEN_DP */
 209:.\Generated_Source\PSoC5/EMITE.c **** 
 210:.\Generated_Source\PSoC5/EMITE.c ****         /* Enable the TX Interrupt */
 211:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_TXSTATUS_ACTL_REG |= EMITE_INT_ENABLE;
 212:.\Generated_Source\PSoC5/EMITE.c ****         #if (EMITE_TX_INTERRUPT_ENABLED)
 213:.\Generated_Source\PSoC5/EMITE.c ****             EMITE_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:.\Generated_Source\PSoC5/EMITE.c ****             EMITE_EnableTxInt();
 215:.\Generated_Source\PSoC5/EMITE.c ****         #endif /* (EMITE_TX_INTERRUPT_ENABLED) */
 216:.\Generated_Source\PSoC5/EMITE.c ****      #endif /* (EMITE_TX_INTERRUPT_ENABLED) */
 217:.\Generated_Source\PSoC5/EMITE.c **** 
 218:.\Generated_Source\PSoC5/EMITE.c ****     #if (EMITE_INTERNAL_CLOCK_USED)
 219:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_IntClock_Start();  /* Enable the clock */
  79              		.loc 1 219 0
  80 001c FFF7FEFF 		bl	EMITE_IntClock_Start
  81              	.LVL2:
 220:.\Generated_Source\PSoC5/EMITE.c ****     #endif /* (EMITE_INTERNAL_CLOCK_USED) */
 221:.\Generated_Source\PSoC5/EMITE.c **** 
 222:.\Generated_Source\PSoC5/EMITE.c ****     CyExitCriticalSection(enableInterrupts);
  82              		.loc 1 222 0
  83 0020 2046     		mov	r0, r4
  84 0022 FFF7FEFF 		bl	CyExitCriticalSection
  85              	.LVL3:
  86 0026 10BD     		pop	{r4, pc}
  87              	.LVL4:
  88              	.L7:
  89              		.align	2
  90              	.L6:
  91 0028 97640040 		.word	1073767575
  92              		.cfi_endproc
  93              	.LFE2:
  94              		.size	EMITE_Enable, .-EMITE_Enable
  95              		.section	.text.EMITE_Start,"ax",%progbits
  96              		.align	2
  97              		.global	EMITE_Start
  98              		.thumb
  99              		.thumb_func
 100              		.type	EMITE_Start, %function
 101              	EMITE_Start:
 102              	.LFB0:
  77:.\Generated_Source\PSoC5/EMITE.c ****     /* If not initialized then initialize all required hardware and software */
 103              		.loc 1 77 0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107 0000 08B5     		push	{r3, lr}
 108              		.cfi_def_cfa_offset 8
 109              		.cfi_offset 3, -8
 110              		.cfi_offset 14, -4
  79:.\Generated_Source\PSoC5/EMITE.c ****     {
 111              		.loc 1 79 0
 112 0002 054B     		ldr	r3, .L11
 113 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 114 0006 23B9     		cbnz	r3, .L9
  81:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_initVar = 1u;
 115              		.loc 1 81 0
 116 0008 FFF7FEFF 		bl	EMITE_Init
 117              	.LVL5:
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 7


  82:.\Generated_Source\PSoC5/EMITE.c ****     }
 118              		.loc 1 82 0
 119 000c 0122     		movs	r2, #1
 120 000e 024B     		ldr	r3, .L11
 121 0010 1A70     		strb	r2, [r3]
 122              	.L9:
  85:.\Generated_Source\PSoC5/EMITE.c **** }
 123              		.loc 1 85 0
 124 0012 FFF7FEFF 		bl	EMITE_Enable
 125              	.LVL6:
 126 0016 08BD     		pop	{r3, pc}
 127              	.L12:
 128              		.align	2
 129              	.L11:
 130 0018 00000000 		.word	.LANCHOR0
 131              		.cfi_endproc
 132              	.LFE0:
 133              		.size	EMITE_Start, .-EMITE_Start
 134              		.section	.text.EMITE_Stop,"ax",%progbits
 135              		.align	2
 136              		.global	EMITE_Stop
 137              		.thumb
 138              		.thumb_func
 139              		.type	EMITE_Stop, %function
 140              	EMITE_Stop:
 141              	.LFB3:
 223:.\Generated_Source\PSoC5/EMITE.c **** }
 224:.\Generated_Source\PSoC5/EMITE.c **** 
 225:.\Generated_Source\PSoC5/EMITE.c **** 
 226:.\Generated_Source\PSoC5/EMITE.c **** /*******************************************************************************
 227:.\Generated_Source\PSoC5/EMITE.c **** * Function Name: EMITE_Stop
 228:.\Generated_Source\PSoC5/EMITE.c **** ********************************************************************************
 229:.\Generated_Source\PSoC5/EMITE.c **** *
 230:.\Generated_Source\PSoC5/EMITE.c **** * Summary:
 231:.\Generated_Source\PSoC5/EMITE.c **** *  Disables the UART operation.
 232:.\Generated_Source\PSoC5/EMITE.c **** *
 233:.\Generated_Source\PSoC5/EMITE.c **** * Parameters:
 234:.\Generated_Source\PSoC5/EMITE.c **** *  None.
 235:.\Generated_Source\PSoC5/EMITE.c **** *
 236:.\Generated_Source\PSoC5/EMITE.c **** * Return:
 237:.\Generated_Source\PSoC5/EMITE.c **** *  None.
 238:.\Generated_Source\PSoC5/EMITE.c **** *
 239:.\Generated_Source\PSoC5/EMITE.c **** *******************************************************************************/
 240:.\Generated_Source\PSoC5/EMITE.c **** void EMITE_Stop(void) 
 241:.\Generated_Source\PSoC5/EMITE.c **** {
 142              		.loc 1 241 0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 0, uses_anonymous_args = 0
 146 0000 10B5     		push	{r4, lr}
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 4, -8
 149              		.cfi_offset 14, -4
 242:.\Generated_Source\PSoC5/EMITE.c ****     uint8 enableInterrupts;
 243:.\Generated_Source\PSoC5/EMITE.c ****     enableInterrupts = CyEnterCriticalSection();
 150              		.loc 1 243 0
 151 0002 FFF7FEFF 		bl	CyEnterCriticalSection
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 8


 152              	.LVL7:
 153 0006 0446     		mov	r4, r0
 154              	.LVL8:
 244:.\Generated_Source\PSoC5/EMITE.c **** 
 245:.\Generated_Source\PSoC5/EMITE.c ****     /* Write Bit Counter Disable */
 246:.\Generated_Source\PSoC5/EMITE.c ****     #if (EMITE_RX_ENABLED || EMITE_HD_ENABLED)
 247:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_RXBITCTR_CONTROL_REG &= (uint8) ~EMITE_CNTR_ENABLE;
 155              		.loc 1 247 0
 156 0008 074A     		ldr	r2, .L15
 157 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 158 000c 03F0DF03 		and	r3, r3, #223
 159 0010 1370     		strb	r3, [r2]
 248:.\Generated_Source\PSoC5/EMITE.c ****     #endif /* (EMITE_RX_ENABLED || EMITE_HD_ENABLED) */
 249:.\Generated_Source\PSoC5/EMITE.c **** 
 250:.\Generated_Source\PSoC5/EMITE.c ****     #if (EMITE_TX_ENABLED)
 251:.\Generated_Source\PSoC5/EMITE.c ****         #if(!EMITE_TXCLKGEN_DP)
 252:.\Generated_Source\PSoC5/EMITE.c ****             EMITE_TXBITCTR_CONTROL_REG &= (uint8) ~EMITE_CNTR_ENABLE;
 253:.\Generated_Source\PSoC5/EMITE.c ****         #endif /* (!EMITE_TXCLKGEN_DP) */
 254:.\Generated_Source\PSoC5/EMITE.c ****     #endif /* (EMITE_TX_ENABLED) */
 255:.\Generated_Source\PSoC5/EMITE.c **** 
 256:.\Generated_Source\PSoC5/EMITE.c ****     #if (EMITE_INTERNAL_CLOCK_USED)
 257:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_IntClock_Stop();   /* Disable the clock */
 160              		.loc 1 257 0
 161 0012 FFF7FEFF 		bl	EMITE_IntClock_Stop
 162              	.LVL9:
 258:.\Generated_Source\PSoC5/EMITE.c ****     #endif /* (EMITE_INTERNAL_CLOCK_USED) */
 259:.\Generated_Source\PSoC5/EMITE.c **** 
 260:.\Generated_Source\PSoC5/EMITE.c ****     /* Disable internal interrupt component */
 261:.\Generated_Source\PSoC5/EMITE.c ****     #if (EMITE_RX_ENABLED || EMITE_HD_ENABLED)
 262:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_RXSTATUS_ACTL_REG  &= (uint8) ~EMITE_INT_ENABLE;
 163              		.loc 1 262 0
 164 0016 054A     		ldr	r2, .L15+4
 165 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 166 001a 03F0EF03 		and	r3, r3, #239
 167 001e 1370     		strb	r3, [r2]
 263:.\Generated_Source\PSoC5/EMITE.c **** 
 264:.\Generated_Source\PSoC5/EMITE.c ****         #if (EMITE_RX_INTERRUPT_ENABLED)
 265:.\Generated_Source\PSoC5/EMITE.c ****             EMITE_DisableRxInt();
 266:.\Generated_Source\PSoC5/EMITE.c ****         #endif /* (EMITE_RX_INTERRUPT_ENABLED) */
 267:.\Generated_Source\PSoC5/EMITE.c ****     #endif /* (EMITE_RX_ENABLED || EMITE_HD_ENABLED) */
 268:.\Generated_Source\PSoC5/EMITE.c **** 
 269:.\Generated_Source\PSoC5/EMITE.c ****     #if (EMITE_TX_ENABLED)
 270:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_TXSTATUS_ACTL_REG &= (uint8) ~EMITE_INT_ENABLE;
 271:.\Generated_Source\PSoC5/EMITE.c **** 
 272:.\Generated_Source\PSoC5/EMITE.c ****         #if (EMITE_TX_INTERRUPT_ENABLED)
 273:.\Generated_Source\PSoC5/EMITE.c ****             EMITE_DisableTxInt();
 274:.\Generated_Source\PSoC5/EMITE.c ****         #endif /* (EMITE_TX_INTERRUPT_ENABLED) */
 275:.\Generated_Source\PSoC5/EMITE.c ****     #endif /* (EMITE_TX_ENABLED) */
 276:.\Generated_Source\PSoC5/EMITE.c **** 
 277:.\Generated_Source\PSoC5/EMITE.c ****     CyExitCriticalSection(enableInterrupts);
 168              		.loc 1 277 0
 169 0020 2046     		mov	r0, r4
 170 0022 FFF7FEFF 		bl	CyExitCriticalSection
 171              	.LVL10:
 172 0026 10BD     		pop	{r4, pc}
 173              	.LVL11:
 174              	.L16:
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 9


 175              		.align	2
 176              	.L15:
 177 0028 97640040 		.word	1073767575
 178 002c 95650040 		.word	1073767829
 179              		.cfi_endproc
 180              	.LFE3:
 181              		.size	EMITE_Stop, .-EMITE_Stop
 182              		.section	.text.EMITE_ReadControlRegister,"ax",%progbits
 183              		.align	2
 184              		.global	EMITE_ReadControlRegister
 185              		.thumb
 186              		.thumb_func
 187              		.type	EMITE_ReadControlRegister, %function
 188              	EMITE_ReadControlRegister:
 189              	.LFB4:
 278:.\Generated_Source\PSoC5/EMITE.c **** }
 279:.\Generated_Source\PSoC5/EMITE.c **** 
 280:.\Generated_Source\PSoC5/EMITE.c **** 
 281:.\Generated_Source\PSoC5/EMITE.c **** /*******************************************************************************
 282:.\Generated_Source\PSoC5/EMITE.c **** * Function Name: EMITE_ReadControlRegister
 283:.\Generated_Source\PSoC5/EMITE.c **** ********************************************************************************
 284:.\Generated_Source\PSoC5/EMITE.c **** *
 285:.\Generated_Source\PSoC5/EMITE.c **** * Summary:
 286:.\Generated_Source\PSoC5/EMITE.c **** *  Returns the current value of the control register.
 287:.\Generated_Source\PSoC5/EMITE.c **** *
 288:.\Generated_Source\PSoC5/EMITE.c **** * Parameters:
 289:.\Generated_Source\PSoC5/EMITE.c **** *  None.
 290:.\Generated_Source\PSoC5/EMITE.c **** *
 291:.\Generated_Source\PSoC5/EMITE.c **** * Return:
 292:.\Generated_Source\PSoC5/EMITE.c **** *  Contents of the control register.
 293:.\Generated_Source\PSoC5/EMITE.c **** *
 294:.\Generated_Source\PSoC5/EMITE.c **** *******************************************************************************/
 295:.\Generated_Source\PSoC5/EMITE.c **** uint8 EMITE_ReadControlRegister(void) 
 296:.\Generated_Source\PSoC5/EMITE.c **** {
 190              		.loc 1 296 0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 0, uses_anonymous_args = 0
 194              		@ link register save eliminated.
 297:.\Generated_Source\PSoC5/EMITE.c ****     #if (EMITE_CONTROL_REG_REMOVED)
 298:.\Generated_Source\PSoC5/EMITE.c ****         return(0u);
 299:.\Generated_Source\PSoC5/EMITE.c ****     #else
 300:.\Generated_Source\PSoC5/EMITE.c ****         return(EMITE_CONTROL_REG);
 195              		.loc 1 300 0
 196 0000 014B     		ldr	r3, .L18
 197 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 301:.\Generated_Source\PSoC5/EMITE.c ****     #endif /* (EMITE_CONTROL_REG_REMOVED) */
 302:.\Generated_Source\PSoC5/EMITE.c **** }
 198              		.loc 1 302 0
 199 0004 7047     		bx	lr
 200              	.L19:
 201 0006 00BF     		.align	2
 202              	.L18:
 203 0008 76640040 		.word	1073767542
 204              		.cfi_endproc
 205              	.LFE4:
 206              		.size	EMITE_ReadControlRegister, .-EMITE_ReadControlRegister
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 10


 207              		.section	.text.EMITE_WriteControlRegister,"ax",%progbits
 208              		.align	2
 209              		.global	EMITE_WriteControlRegister
 210              		.thumb
 211              		.thumb_func
 212              		.type	EMITE_WriteControlRegister, %function
 213              	EMITE_WriteControlRegister:
 214              	.LFB5:
 303:.\Generated_Source\PSoC5/EMITE.c **** 
 304:.\Generated_Source\PSoC5/EMITE.c **** 
 305:.\Generated_Source\PSoC5/EMITE.c **** /*******************************************************************************
 306:.\Generated_Source\PSoC5/EMITE.c **** * Function Name: EMITE_WriteControlRegister
 307:.\Generated_Source\PSoC5/EMITE.c **** ********************************************************************************
 308:.\Generated_Source\PSoC5/EMITE.c **** *
 309:.\Generated_Source\PSoC5/EMITE.c **** * Summary:
 310:.\Generated_Source\PSoC5/EMITE.c **** *  Writes an 8-bit value into the control register
 311:.\Generated_Source\PSoC5/EMITE.c **** *
 312:.\Generated_Source\PSoC5/EMITE.c **** * Parameters:
 313:.\Generated_Source\PSoC5/EMITE.c **** *  control:  control register value
 314:.\Generated_Source\PSoC5/EMITE.c **** *
 315:.\Generated_Source\PSoC5/EMITE.c **** * Return:
 316:.\Generated_Source\PSoC5/EMITE.c **** *  None.
 317:.\Generated_Source\PSoC5/EMITE.c **** *
 318:.\Generated_Source\PSoC5/EMITE.c **** *******************************************************************************/
 319:.\Generated_Source\PSoC5/EMITE.c **** void  EMITE_WriteControlRegister(uint8 control) 
 320:.\Generated_Source\PSoC5/EMITE.c **** {
 215              		.loc 1 320 0
 216              		.cfi_startproc
 217              		@ args = 0, pretend = 0, frame = 0
 218              		@ frame_needed = 0, uses_anonymous_args = 0
 219              		@ link register save eliminated.
 220              	.LVL12:
 321:.\Generated_Source\PSoC5/EMITE.c ****     #if (EMITE_CONTROL_REG_REMOVED)
 322:.\Generated_Source\PSoC5/EMITE.c ****         if(0u != control)
 323:.\Generated_Source\PSoC5/EMITE.c ****         {
 324:.\Generated_Source\PSoC5/EMITE.c ****             /* Suppress compiler warning */
 325:.\Generated_Source\PSoC5/EMITE.c ****         }
 326:.\Generated_Source\PSoC5/EMITE.c ****     #else
 327:.\Generated_Source\PSoC5/EMITE.c ****        EMITE_CONTROL_REG = control;
 221              		.loc 1 327 0
 222 0000 014B     		ldr	r3, .L21
 223 0002 1870     		strb	r0, [r3]
 224 0004 7047     		bx	lr
 225              	.L22:
 226 0006 00BF     		.align	2
 227              	.L21:
 228 0008 76640040 		.word	1073767542
 229              		.cfi_endproc
 230              	.LFE5:
 231              		.size	EMITE_WriteControlRegister, .-EMITE_WriteControlRegister
 232              		.section	.text.EMITE_SetRxInterruptMode,"ax",%progbits
 233              		.align	2
 234              		.global	EMITE_SetRxInterruptMode
 235              		.thumb
 236              		.thumb_func
 237              		.type	EMITE_SetRxInterruptMode, %function
 238              	EMITE_SetRxInterruptMode:
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 11


 239              	.LFB6:
 328:.\Generated_Source\PSoC5/EMITE.c ****     #endif /* (EMITE_CONTROL_REG_REMOVED) */
 329:.\Generated_Source\PSoC5/EMITE.c **** }
 330:.\Generated_Source\PSoC5/EMITE.c **** 
 331:.\Generated_Source\PSoC5/EMITE.c **** 
 332:.\Generated_Source\PSoC5/EMITE.c **** #if(EMITE_RX_ENABLED || EMITE_HD_ENABLED)
 333:.\Generated_Source\PSoC5/EMITE.c ****     /*******************************************************************************
 334:.\Generated_Source\PSoC5/EMITE.c ****     * Function Name: EMITE_SetRxInterruptMode
 335:.\Generated_Source\PSoC5/EMITE.c ****     ********************************************************************************
 336:.\Generated_Source\PSoC5/EMITE.c ****     *
 337:.\Generated_Source\PSoC5/EMITE.c ****     * Summary:
 338:.\Generated_Source\PSoC5/EMITE.c ****     *  Configures the RX interrupt sources enabled.
 339:.\Generated_Source\PSoC5/EMITE.c ****     *
 340:.\Generated_Source\PSoC5/EMITE.c ****     * Parameters:
 341:.\Generated_Source\PSoC5/EMITE.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:.\Generated_Source\PSoC5/EMITE.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:.\Generated_Source\PSoC5/EMITE.c ****     *  combination of status register bit-masks shown below:
 344:.\Generated_Source\PSoC5/EMITE.c ****     *      EMITE_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:.\Generated_Source\PSoC5/EMITE.c ****     *      EMITE_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:.\Generated_Source\PSoC5/EMITE.c ****     *      EMITE_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:.\Generated_Source\PSoC5/EMITE.c ****     *      EMITE_RX_STS_BREAK            Interrupt on break.
 348:.\Generated_Source\PSoC5/EMITE.c ****     *      EMITE_RX_STS_OVERRUN          Interrupt on overrun error.
 349:.\Generated_Source\PSoC5/EMITE.c ****     *      EMITE_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:.\Generated_Source\PSoC5/EMITE.c ****     *      EMITE_RX_STS_MRKSPC           Interrupt on address detect.
 351:.\Generated_Source\PSoC5/EMITE.c ****     *
 352:.\Generated_Source\PSoC5/EMITE.c ****     * Return:
 353:.\Generated_Source\PSoC5/EMITE.c ****     *  None.
 354:.\Generated_Source\PSoC5/EMITE.c ****     *
 355:.\Generated_Source\PSoC5/EMITE.c ****     * Theory:
 356:.\Generated_Source\PSoC5/EMITE.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:.\Generated_Source\PSoC5/EMITE.c ****     *
 358:.\Generated_Source\PSoC5/EMITE.c ****     *******************************************************************************/
 359:.\Generated_Source\PSoC5/EMITE.c ****     void EMITE_SetRxInterruptMode(uint8 intSrc) 
 360:.\Generated_Source\PSoC5/EMITE.c ****     {
 240              		.loc 1 360 0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 0
 243              		@ frame_needed = 0, uses_anonymous_args = 0
 244              		@ link register save eliminated.
 245              	.LVL13:
 361:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_RXSTATUS_MASK_REG  = intSrc;
 246              		.loc 1 361 0
 247 0000 014B     		ldr	r3, .L24
 248 0002 1870     		strb	r0, [r3]
 249 0004 7047     		bx	lr
 250              	.L25:
 251 0006 00BF     		.align	2
 252              	.L24:
 253 0008 85650040 		.word	1073767813
 254              		.cfi_endproc
 255              	.LFE6:
 256              		.size	EMITE_SetRxInterruptMode, .-EMITE_SetRxInterruptMode
 257              		.section	.text.EMITE_ReadRxData,"ax",%progbits
 258              		.align	2
 259              		.global	EMITE_ReadRxData
 260              		.thumb
 261              		.thumb_func
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 12


 262              		.type	EMITE_ReadRxData, %function
 263              	EMITE_ReadRxData:
 264              	.LFB7:
 362:.\Generated_Source\PSoC5/EMITE.c ****     }
 363:.\Generated_Source\PSoC5/EMITE.c **** 
 364:.\Generated_Source\PSoC5/EMITE.c **** 
 365:.\Generated_Source\PSoC5/EMITE.c ****     /*******************************************************************************
 366:.\Generated_Source\PSoC5/EMITE.c ****     * Function Name: EMITE_ReadRxData
 367:.\Generated_Source\PSoC5/EMITE.c ****     ********************************************************************************
 368:.\Generated_Source\PSoC5/EMITE.c ****     *
 369:.\Generated_Source\PSoC5/EMITE.c ****     * Summary:
 370:.\Generated_Source\PSoC5/EMITE.c ****     *  Returns the next byte of received data. This function returns data without
 371:.\Generated_Source\PSoC5/EMITE.c ****     *  checking the status. You must check the status separately.
 372:.\Generated_Source\PSoC5/EMITE.c ****     *
 373:.\Generated_Source\PSoC5/EMITE.c ****     * Parameters:
 374:.\Generated_Source\PSoC5/EMITE.c ****     *  None.
 375:.\Generated_Source\PSoC5/EMITE.c ****     *
 376:.\Generated_Source\PSoC5/EMITE.c ****     * Return:
 377:.\Generated_Source\PSoC5/EMITE.c ****     *  Received data from RX register
 378:.\Generated_Source\PSoC5/EMITE.c ****     *
 379:.\Generated_Source\PSoC5/EMITE.c ****     * Global Variables:
 380:.\Generated_Source\PSoC5/EMITE.c ****     *  EMITE_rxBuffer - RAM buffer pointer for save received data.
 381:.\Generated_Source\PSoC5/EMITE.c ****     *  EMITE_rxBufferWrite - cyclic index for write to rxBuffer,
 382:.\Generated_Source\PSoC5/EMITE.c ****     *     checked to identify new data.
 383:.\Generated_Source\PSoC5/EMITE.c ****     *  EMITE_rxBufferRead - cyclic index for read from rxBuffer,
 384:.\Generated_Source\PSoC5/EMITE.c ****     *     incremented after each byte has been read from buffer.
 385:.\Generated_Source\PSoC5/EMITE.c ****     *  EMITE_rxBufferLoopDetect - cleared if loop condition was detected
 386:.\Generated_Source\PSoC5/EMITE.c ****     *     in RX ISR.
 387:.\Generated_Source\PSoC5/EMITE.c ****     *
 388:.\Generated_Source\PSoC5/EMITE.c ****     * Reentrant:
 389:.\Generated_Source\PSoC5/EMITE.c ****     *  No.
 390:.\Generated_Source\PSoC5/EMITE.c ****     *
 391:.\Generated_Source\PSoC5/EMITE.c ****     *******************************************************************************/
 392:.\Generated_Source\PSoC5/EMITE.c ****     uint8 EMITE_ReadRxData(void) 
 393:.\Generated_Source\PSoC5/EMITE.c ****     {
 265              		.loc 1 393 0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 0
 268              		@ frame_needed = 0, uses_anonymous_args = 0
 269              		@ link register save eliminated.
 394:.\Generated_Source\PSoC5/EMITE.c ****         uint8 rxData;
 395:.\Generated_Source\PSoC5/EMITE.c **** 
 396:.\Generated_Source\PSoC5/EMITE.c ****     #if (EMITE_RX_INTERRUPT_ENABLED)
 397:.\Generated_Source\PSoC5/EMITE.c **** 
 398:.\Generated_Source\PSoC5/EMITE.c ****         uint8 locRxBufferRead;
 399:.\Generated_Source\PSoC5/EMITE.c ****         uint8 locRxBufferWrite;
 400:.\Generated_Source\PSoC5/EMITE.c **** 
 401:.\Generated_Source\PSoC5/EMITE.c ****         /* Protect variables that could change on interrupt */
 402:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_DisableRxInt();
 403:.\Generated_Source\PSoC5/EMITE.c **** 
 404:.\Generated_Source\PSoC5/EMITE.c ****         locRxBufferRead  = EMITE_rxBufferRead;
 405:.\Generated_Source\PSoC5/EMITE.c ****         locRxBufferWrite = EMITE_rxBufferWrite;
 406:.\Generated_Source\PSoC5/EMITE.c **** 
 407:.\Generated_Source\PSoC5/EMITE.c ****         if( (EMITE_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 408:.\Generated_Source\PSoC5/EMITE.c ****         {
 409:.\Generated_Source\PSoC5/EMITE.c ****             rxData = EMITE_rxBuffer[locRxBufferRead];
 410:.\Generated_Source\PSoC5/EMITE.c ****             locRxBufferRead++;
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 13


 411:.\Generated_Source\PSoC5/EMITE.c **** 
 412:.\Generated_Source\PSoC5/EMITE.c ****             if(locRxBufferRead >= EMITE_RX_BUFFER_SIZE)
 413:.\Generated_Source\PSoC5/EMITE.c ****             {
 414:.\Generated_Source\PSoC5/EMITE.c ****                 locRxBufferRead = 0u;
 415:.\Generated_Source\PSoC5/EMITE.c ****             }
 416:.\Generated_Source\PSoC5/EMITE.c ****             /* Update the real pointer */
 417:.\Generated_Source\PSoC5/EMITE.c ****             EMITE_rxBufferRead = locRxBufferRead;
 418:.\Generated_Source\PSoC5/EMITE.c **** 
 419:.\Generated_Source\PSoC5/EMITE.c ****             if(EMITE_rxBufferLoopDetect != 0u)
 420:.\Generated_Source\PSoC5/EMITE.c ****             {
 421:.\Generated_Source\PSoC5/EMITE.c ****                 EMITE_rxBufferLoopDetect = 0u;
 422:.\Generated_Source\PSoC5/EMITE.c ****                 #if ((EMITE_RX_INTERRUPT_ENABLED) && (EMITE_FLOW_CONTROL != 0u))
 423:.\Generated_Source\PSoC5/EMITE.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:.\Generated_Source\PSoC5/EMITE.c ****                     #if( EMITE_HD_ENABLED )
 425:.\Generated_Source\PSoC5/EMITE.c ****                         if((EMITE_CONTROL_REG & EMITE_CTRL_HD_SEND) == 0u)
 426:.\Generated_Source\PSoC5/EMITE.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:.\Generated_Source\PSoC5/EMITE.c ****                             *  configuration set, otherwise
 428:.\Generated_Source\PSoC5/EMITE.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:.\Generated_Source\PSoC5/EMITE.c ****                             */
 430:.\Generated_Source\PSoC5/EMITE.c ****                             EMITE_RXSTATUS_MASK_REG  |= EMITE_RX_STS_FIFO_NOTEMPTY;
 431:.\Generated_Source\PSoC5/EMITE.c ****                         }
 432:.\Generated_Source\PSoC5/EMITE.c ****                     #else
 433:.\Generated_Source\PSoC5/EMITE.c ****                         EMITE_RXSTATUS_MASK_REG  |= EMITE_RX_STS_FIFO_NOTEMPTY;
 434:.\Generated_Source\PSoC5/EMITE.c ****                     #endif /* end EMITE_HD_ENABLED */
 435:.\Generated_Source\PSoC5/EMITE.c ****                 #endif /* ((EMITE_RX_INTERRUPT_ENABLED) && (EMITE_FLOW_CONTROL != 0u)) */
 436:.\Generated_Source\PSoC5/EMITE.c ****             }
 437:.\Generated_Source\PSoC5/EMITE.c ****         }
 438:.\Generated_Source\PSoC5/EMITE.c ****         else
 439:.\Generated_Source\PSoC5/EMITE.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:.\Generated_Source\PSoC5/EMITE.c ****             rxData = EMITE_RXDATA_REG;
 441:.\Generated_Source\PSoC5/EMITE.c ****         }
 442:.\Generated_Source\PSoC5/EMITE.c **** 
 443:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_EnableRxInt();
 444:.\Generated_Source\PSoC5/EMITE.c **** 
 445:.\Generated_Source\PSoC5/EMITE.c ****     #else
 446:.\Generated_Source\PSoC5/EMITE.c **** 
 447:.\Generated_Source\PSoC5/EMITE.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:.\Generated_Source\PSoC5/EMITE.c ****         rxData = EMITE_RXDATA_REG;
 270              		.loc 1 448 0
 271 0000 014B     		ldr	r3, .L27
 272 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 273              	.LVL14:
 449:.\Generated_Source\PSoC5/EMITE.c **** 
 450:.\Generated_Source\PSoC5/EMITE.c ****     #endif /* (EMITE_RX_INTERRUPT_ENABLED) */
 451:.\Generated_Source\PSoC5/EMITE.c **** 
 452:.\Generated_Source\PSoC5/EMITE.c ****         return(rxData);
 453:.\Generated_Source\PSoC5/EMITE.c ****     }
 274              		.loc 1 453 0
 275 0004 7047     		bx	lr
 276              	.L28:
 277 0006 00BF     		.align	2
 278              	.L27:
 279 0008 47640040 		.word	1073767495
 280              		.cfi_endproc
 281              	.LFE7:
 282              		.size	EMITE_ReadRxData, .-EMITE_ReadRxData
 283              		.section	.text.EMITE_ReadRxStatus,"ax",%progbits
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 14


 284              		.align	2
 285              		.global	EMITE_ReadRxStatus
 286              		.thumb
 287              		.thumb_func
 288              		.type	EMITE_ReadRxStatus, %function
 289              	EMITE_ReadRxStatus:
 290              	.LFB8:
 454:.\Generated_Source\PSoC5/EMITE.c **** 
 455:.\Generated_Source\PSoC5/EMITE.c **** 
 456:.\Generated_Source\PSoC5/EMITE.c ****     /*******************************************************************************
 457:.\Generated_Source\PSoC5/EMITE.c ****     * Function Name: EMITE_ReadRxStatus
 458:.\Generated_Source\PSoC5/EMITE.c ****     ********************************************************************************
 459:.\Generated_Source\PSoC5/EMITE.c ****     *
 460:.\Generated_Source\PSoC5/EMITE.c ****     * Summary:
 461:.\Generated_Source\PSoC5/EMITE.c ****     *  Returns the current state of the receiver status register and the software
 462:.\Generated_Source\PSoC5/EMITE.c ****     *  buffer overflow status.
 463:.\Generated_Source\PSoC5/EMITE.c ****     *
 464:.\Generated_Source\PSoC5/EMITE.c ****     * Parameters:
 465:.\Generated_Source\PSoC5/EMITE.c ****     *  None.
 466:.\Generated_Source\PSoC5/EMITE.c ****     *
 467:.\Generated_Source\PSoC5/EMITE.c ****     * Return:
 468:.\Generated_Source\PSoC5/EMITE.c ****     *  Current state of the status register.
 469:.\Generated_Source\PSoC5/EMITE.c ****     *
 470:.\Generated_Source\PSoC5/EMITE.c ****     * Side Effect:
 471:.\Generated_Source\PSoC5/EMITE.c ****     *  All status register bits are clear-on-read except
 472:.\Generated_Source\PSoC5/EMITE.c ****     *  EMITE_RX_STS_FIFO_NOTEMPTY.
 473:.\Generated_Source\PSoC5/EMITE.c ****     *  EMITE_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:.\Generated_Source\PSoC5/EMITE.c ****     *  register read.
 475:.\Generated_Source\PSoC5/EMITE.c ****     *
 476:.\Generated_Source\PSoC5/EMITE.c ****     * Global Variables:
 477:.\Generated_Source\PSoC5/EMITE.c ****     *  EMITE_rxBufferOverflow - used to indicate overload condition.
 478:.\Generated_Source\PSoC5/EMITE.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:.\Generated_Source\PSoC5/EMITE.c ****     *   EMITE_rxBufferRead to write new data. This condition returned
 480:.\Generated_Source\PSoC5/EMITE.c ****     *   and cleared to zero by this API as an
 481:.\Generated_Source\PSoC5/EMITE.c ****     *   EMITE_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:.\Generated_Source\PSoC5/EMITE.c ****     *   bits.
 483:.\Generated_Source\PSoC5/EMITE.c ****     *
 484:.\Generated_Source\PSoC5/EMITE.c ****     *******************************************************************************/
 485:.\Generated_Source\PSoC5/EMITE.c ****     uint8 EMITE_ReadRxStatus(void) 
 486:.\Generated_Source\PSoC5/EMITE.c ****     {
 291              		.loc 1 486 0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295              		@ link register save eliminated.
 487:.\Generated_Source\PSoC5/EMITE.c ****         uint8 status;
 488:.\Generated_Source\PSoC5/EMITE.c **** 
 489:.\Generated_Source\PSoC5/EMITE.c ****         status = EMITE_RXSTATUS_REG & EMITE_RX_HW_MASK;
 296              		.loc 1 489 0
 297 0000 024B     		ldr	r3, .L30
 298 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 299              	.LVL15:
 490:.\Generated_Source\PSoC5/EMITE.c **** 
 491:.\Generated_Source\PSoC5/EMITE.c ****     #if (EMITE_RX_INTERRUPT_ENABLED)
 492:.\Generated_Source\PSoC5/EMITE.c ****         if(EMITE_rxBufferOverflow != 0u)
 493:.\Generated_Source\PSoC5/EMITE.c ****         {
 494:.\Generated_Source\PSoC5/EMITE.c ****             status |= EMITE_RX_STS_SOFT_BUFF_OVER;
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 15


 495:.\Generated_Source\PSoC5/EMITE.c ****             EMITE_rxBufferOverflow = 0u;
 496:.\Generated_Source\PSoC5/EMITE.c ****         }
 497:.\Generated_Source\PSoC5/EMITE.c ****     #endif /* (EMITE_RX_INTERRUPT_ENABLED) */
 498:.\Generated_Source\PSoC5/EMITE.c **** 
 499:.\Generated_Source\PSoC5/EMITE.c ****         return(status);
 500:.\Generated_Source\PSoC5/EMITE.c ****     }
 300              		.loc 1 500 0
 301 0004 00F07F00 		and	r0, r0, #127
 302              	.LVL16:
 303 0008 7047     		bx	lr
 304              	.L31:
 305 000a 00BF     		.align	2
 306              	.L30:
 307 000c 65650040 		.word	1073767781
 308              		.cfi_endproc
 309              	.LFE8:
 310              		.size	EMITE_ReadRxStatus, .-EMITE_ReadRxStatus
 311              		.section	.text.EMITE_GetChar,"ax",%progbits
 312              		.align	2
 313              		.global	EMITE_GetChar
 314              		.thumb
 315              		.thumb_func
 316              		.type	EMITE_GetChar, %function
 317              	EMITE_GetChar:
 318              	.LFB9:
 501:.\Generated_Source\PSoC5/EMITE.c **** 
 502:.\Generated_Source\PSoC5/EMITE.c **** 
 503:.\Generated_Source\PSoC5/EMITE.c ****     /*******************************************************************************
 504:.\Generated_Source\PSoC5/EMITE.c ****     * Function Name: EMITE_GetChar
 505:.\Generated_Source\PSoC5/EMITE.c ****     ********************************************************************************
 506:.\Generated_Source\PSoC5/EMITE.c ****     *
 507:.\Generated_Source\PSoC5/EMITE.c ****     * Summary:
 508:.\Generated_Source\PSoC5/EMITE.c ****     *  Returns the last received byte of data. EMITE_GetChar() is
 509:.\Generated_Source\PSoC5/EMITE.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:.\Generated_Source\PSoC5/EMITE.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:.\Generated_Source\PSoC5/EMITE.c ****     *
 512:.\Generated_Source\PSoC5/EMITE.c ****     * Parameters:
 513:.\Generated_Source\PSoC5/EMITE.c ****     *  None.
 514:.\Generated_Source\PSoC5/EMITE.c ****     *
 515:.\Generated_Source\PSoC5/EMITE.c ****     * Return:
 516:.\Generated_Source\PSoC5/EMITE.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:.\Generated_Source\PSoC5/EMITE.c ****     *  A returned zero signifies an error condition or no data available.
 518:.\Generated_Source\PSoC5/EMITE.c ****     *
 519:.\Generated_Source\PSoC5/EMITE.c ****     * Global Variables:
 520:.\Generated_Source\PSoC5/EMITE.c ****     *  EMITE_rxBuffer - RAM buffer pointer for save received data.
 521:.\Generated_Source\PSoC5/EMITE.c ****     *  EMITE_rxBufferWrite - cyclic index for write to rxBuffer,
 522:.\Generated_Source\PSoC5/EMITE.c ****     *     checked to identify new data.
 523:.\Generated_Source\PSoC5/EMITE.c ****     *  EMITE_rxBufferRead - cyclic index for read from rxBuffer,
 524:.\Generated_Source\PSoC5/EMITE.c ****     *     incremented after each byte has been read from buffer.
 525:.\Generated_Source\PSoC5/EMITE.c ****     *  EMITE_rxBufferLoopDetect - cleared if loop condition was detected
 526:.\Generated_Source\PSoC5/EMITE.c ****     *     in RX ISR.
 527:.\Generated_Source\PSoC5/EMITE.c ****     *
 528:.\Generated_Source\PSoC5/EMITE.c ****     * Reentrant:
 529:.\Generated_Source\PSoC5/EMITE.c ****     *  No.
 530:.\Generated_Source\PSoC5/EMITE.c ****     *
 531:.\Generated_Source\PSoC5/EMITE.c ****     *******************************************************************************/
 532:.\Generated_Source\PSoC5/EMITE.c ****     uint8 EMITE_GetChar(void) 
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 16


 533:.\Generated_Source\PSoC5/EMITE.c ****     {
 319              		.loc 1 533 0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 323              		@ link register save eliminated.
 324              	.LVL17:
 534:.\Generated_Source\PSoC5/EMITE.c ****         uint8 rxData = 0u;
 535:.\Generated_Source\PSoC5/EMITE.c ****         uint8 rxStatus;
 536:.\Generated_Source\PSoC5/EMITE.c **** 
 537:.\Generated_Source\PSoC5/EMITE.c ****     #if (EMITE_RX_INTERRUPT_ENABLED)
 538:.\Generated_Source\PSoC5/EMITE.c ****         uint8 locRxBufferRead;
 539:.\Generated_Source\PSoC5/EMITE.c ****         uint8 locRxBufferWrite;
 540:.\Generated_Source\PSoC5/EMITE.c **** 
 541:.\Generated_Source\PSoC5/EMITE.c ****         /* Protect variables that could change on interrupt */
 542:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_DisableRxInt();
 543:.\Generated_Source\PSoC5/EMITE.c **** 
 544:.\Generated_Source\PSoC5/EMITE.c ****         locRxBufferRead  = EMITE_rxBufferRead;
 545:.\Generated_Source\PSoC5/EMITE.c ****         locRxBufferWrite = EMITE_rxBufferWrite;
 546:.\Generated_Source\PSoC5/EMITE.c **** 
 547:.\Generated_Source\PSoC5/EMITE.c ****         if( (EMITE_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 548:.\Generated_Source\PSoC5/EMITE.c ****         {
 549:.\Generated_Source\PSoC5/EMITE.c ****             rxData = EMITE_rxBuffer[locRxBufferRead];
 550:.\Generated_Source\PSoC5/EMITE.c ****             locRxBufferRead++;
 551:.\Generated_Source\PSoC5/EMITE.c ****             if(locRxBufferRead >= EMITE_RX_BUFFER_SIZE)
 552:.\Generated_Source\PSoC5/EMITE.c ****             {
 553:.\Generated_Source\PSoC5/EMITE.c ****                 locRxBufferRead = 0u;
 554:.\Generated_Source\PSoC5/EMITE.c ****             }
 555:.\Generated_Source\PSoC5/EMITE.c ****             /* Update the real pointer */
 556:.\Generated_Source\PSoC5/EMITE.c ****             EMITE_rxBufferRead = locRxBufferRead;
 557:.\Generated_Source\PSoC5/EMITE.c **** 
 558:.\Generated_Source\PSoC5/EMITE.c ****             if(EMITE_rxBufferLoopDetect != 0u)
 559:.\Generated_Source\PSoC5/EMITE.c ****             {
 560:.\Generated_Source\PSoC5/EMITE.c ****                 EMITE_rxBufferLoopDetect = 0u;
 561:.\Generated_Source\PSoC5/EMITE.c ****                 #if( (EMITE_RX_INTERRUPT_ENABLED) && (EMITE_FLOW_CONTROL != 0u) )
 562:.\Generated_Source\PSoC5/EMITE.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:.\Generated_Source\PSoC5/EMITE.c ****                     #if( EMITE_HD_ENABLED )
 564:.\Generated_Source\PSoC5/EMITE.c ****                         if((EMITE_CONTROL_REG & EMITE_CTRL_HD_SEND) == 0u)
 565:.\Generated_Source\PSoC5/EMITE.c ****                         {   /* In Half duplex mode return RX mask only if
 566:.\Generated_Source\PSoC5/EMITE.c ****                             *  RX configuration set, otherwise
 567:.\Generated_Source\PSoC5/EMITE.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:.\Generated_Source\PSoC5/EMITE.c ****                             */
 569:.\Generated_Source\PSoC5/EMITE.c ****                             EMITE_RXSTATUS_MASK_REG |= EMITE_RX_STS_FIFO_NOTEMPTY;
 570:.\Generated_Source\PSoC5/EMITE.c ****                         }
 571:.\Generated_Source\PSoC5/EMITE.c ****                     #else
 572:.\Generated_Source\PSoC5/EMITE.c ****                         EMITE_RXSTATUS_MASK_REG |= EMITE_RX_STS_FIFO_NOTEMPTY;
 573:.\Generated_Source\PSoC5/EMITE.c ****                     #endif /* end EMITE_HD_ENABLED */
 574:.\Generated_Source\PSoC5/EMITE.c ****                 #endif /* EMITE_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:.\Generated_Source\PSoC5/EMITE.c ****             }
 576:.\Generated_Source\PSoC5/EMITE.c **** 
 577:.\Generated_Source\PSoC5/EMITE.c ****         }
 578:.\Generated_Source\PSoC5/EMITE.c ****         else
 579:.\Generated_Source\PSoC5/EMITE.c ****         {   rxStatus = EMITE_RXSTATUS_REG;
 580:.\Generated_Source\PSoC5/EMITE.c ****             if((rxStatus & EMITE_RX_STS_FIFO_NOTEMPTY) != 0u)
 581:.\Generated_Source\PSoC5/EMITE.c ****             {   /* Read received data from FIFO */
 582:.\Generated_Source\PSoC5/EMITE.c ****                 rxData = EMITE_RXDATA_REG;
 583:.\Generated_Source\PSoC5/EMITE.c ****                 /*Check status on error*/
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 17


 584:.\Generated_Source\PSoC5/EMITE.c ****                 if((rxStatus & (EMITE_RX_STS_BREAK | EMITE_RX_STS_PAR_ERROR |
 585:.\Generated_Source\PSoC5/EMITE.c ****                                 EMITE_RX_STS_STOP_ERROR | EMITE_RX_STS_OVERRUN)) != 0u)
 586:.\Generated_Source\PSoC5/EMITE.c ****                 {
 587:.\Generated_Source\PSoC5/EMITE.c ****                     rxData = 0u;
 588:.\Generated_Source\PSoC5/EMITE.c ****                 }
 589:.\Generated_Source\PSoC5/EMITE.c ****             }
 590:.\Generated_Source\PSoC5/EMITE.c ****         }
 591:.\Generated_Source\PSoC5/EMITE.c **** 
 592:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_EnableRxInt();
 593:.\Generated_Source\PSoC5/EMITE.c **** 
 594:.\Generated_Source\PSoC5/EMITE.c ****     #else
 595:.\Generated_Source\PSoC5/EMITE.c **** 
 596:.\Generated_Source\PSoC5/EMITE.c ****         rxStatus =EMITE_RXSTATUS_REG;
 325              		.loc 1 596 0
 326 0000 084B     		ldr	r3, .L36
 327 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 328 0004 DBB2     		uxtb	r3, r3
 329              	.LVL18:
 597:.\Generated_Source\PSoC5/EMITE.c ****         if((rxStatus & EMITE_RX_STS_FIFO_NOTEMPTY) != 0u)
 330              		.loc 1 597 0
 331 0006 13F0200F 		tst	r3, #32
 332 000a 06D0     		beq	.L34
 598:.\Generated_Source\PSoC5/EMITE.c ****         {
 599:.\Generated_Source\PSoC5/EMITE.c ****             /* Read received data from FIFO */
 600:.\Generated_Source\PSoC5/EMITE.c ****             rxData = EMITE_RXDATA_REG;
 333              		.loc 1 600 0
 334 000c 064A     		ldr	r2, .L36+4
 335 000e 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 336 0010 C0B2     		uxtb	r0, r0
 337              	.LVL19:
 601:.\Generated_Source\PSoC5/EMITE.c **** 
 602:.\Generated_Source\PSoC5/EMITE.c ****             /*Check status on error*/
 603:.\Generated_Source\PSoC5/EMITE.c ****             if((rxStatus & (EMITE_RX_STS_BREAK | EMITE_RX_STS_PAR_ERROR |
 338              		.loc 1 603 0
 339 0012 13F01E0F 		tst	r3, #30
 340 0016 02D1     		bne	.L35
 341 0018 7047     		bx	lr
 342              	.LVL20:
 343              	.L34:
 534:.\Generated_Source\PSoC5/EMITE.c ****         uint8 rxStatus;
 344              		.loc 1 534 0
 345 001a 0020     		movs	r0, #0
 346 001c 7047     		bx	lr
 347              	.LVL21:
 348              	.L35:
 604:.\Generated_Source\PSoC5/EMITE.c ****                             EMITE_RX_STS_STOP_ERROR | EMITE_RX_STS_OVERRUN)) != 0u)
 605:.\Generated_Source\PSoC5/EMITE.c ****             {
 606:.\Generated_Source\PSoC5/EMITE.c ****                 rxData = 0u;
 349              		.loc 1 606 0
 350 001e 0020     		movs	r0, #0
 351              	.LVL22:
 607:.\Generated_Source\PSoC5/EMITE.c ****             }
 608:.\Generated_Source\PSoC5/EMITE.c ****         }
 609:.\Generated_Source\PSoC5/EMITE.c ****     #endif /* (EMITE_RX_INTERRUPT_ENABLED) */
 610:.\Generated_Source\PSoC5/EMITE.c **** 
 611:.\Generated_Source\PSoC5/EMITE.c ****         return(rxData);
 612:.\Generated_Source\PSoC5/EMITE.c ****     }
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 18


 352              		.loc 1 612 0
 353 0020 7047     		bx	lr
 354              	.L37:
 355 0022 00BF     		.align	2
 356              	.L36:
 357 0024 65650040 		.word	1073767781
 358 0028 47640040 		.word	1073767495
 359              		.cfi_endproc
 360              	.LFE9:
 361              		.size	EMITE_GetChar, .-EMITE_GetChar
 362              		.section	.text.EMITE_GetByte,"ax",%progbits
 363              		.align	2
 364              		.global	EMITE_GetByte
 365              		.thumb
 366              		.thumb_func
 367              		.type	EMITE_GetByte, %function
 368              	EMITE_GetByte:
 369              	.LFB10:
 613:.\Generated_Source\PSoC5/EMITE.c **** 
 614:.\Generated_Source\PSoC5/EMITE.c **** 
 615:.\Generated_Source\PSoC5/EMITE.c ****     /*******************************************************************************
 616:.\Generated_Source\PSoC5/EMITE.c ****     * Function Name: EMITE_GetByte
 617:.\Generated_Source\PSoC5/EMITE.c ****     ********************************************************************************
 618:.\Generated_Source\PSoC5/EMITE.c ****     *
 619:.\Generated_Source\PSoC5/EMITE.c ****     * Summary:
 620:.\Generated_Source\PSoC5/EMITE.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:.\Generated_Source\PSoC5/EMITE.c ****     *  condition.
 622:.\Generated_Source\PSoC5/EMITE.c ****     *
 623:.\Generated_Source\PSoC5/EMITE.c ****     * Parameters:
 624:.\Generated_Source\PSoC5/EMITE.c ****     *  None.
 625:.\Generated_Source\PSoC5/EMITE.c ****     *
 626:.\Generated_Source\PSoC5/EMITE.c ****     * Return:
 627:.\Generated_Source\PSoC5/EMITE.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:.\Generated_Source\PSoC5/EMITE.c ****     *  an error has occurred.
 629:.\Generated_Source\PSoC5/EMITE.c ****     *
 630:.\Generated_Source\PSoC5/EMITE.c ****     * Reentrant:
 631:.\Generated_Source\PSoC5/EMITE.c ****     *  No.
 632:.\Generated_Source\PSoC5/EMITE.c ****     *
 633:.\Generated_Source\PSoC5/EMITE.c ****     *******************************************************************************/
 634:.\Generated_Source\PSoC5/EMITE.c ****     uint16 EMITE_GetByte(void) 
 635:.\Generated_Source\PSoC5/EMITE.c ****     {
 370              		.loc 1 635 0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 0
 373              		@ frame_needed = 0, uses_anonymous_args = 0
 374 0000 10B5     		push	{r4, lr}
 375              		.cfi_def_cfa_offset 8
 376              		.cfi_offset 4, -8
 377              		.cfi_offset 14, -4
 636:.\Generated_Source\PSoC5/EMITE.c ****         
 637:.\Generated_Source\PSoC5/EMITE.c ****     #if (EMITE_RX_INTERRUPT_ENABLED)
 638:.\Generated_Source\PSoC5/EMITE.c ****         uint16 locErrorStatus;
 639:.\Generated_Source\PSoC5/EMITE.c ****         /* Protect variables that could change on interrupt */
 640:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_DisableRxInt();
 641:.\Generated_Source\PSoC5/EMITE.c ****         locErrorStatus = (uint16)EMITE_errorStatus;
 642:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_errorStatus = 0u;
 643:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_EnableRxInt();
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 19


 644:.\Generated_Source\PSoC5/EMITE.c ****         return ( (uint16)(locErrorStatus << 8u) | EMITE_ReadRxData() );
 645:.\Generated_Source\PSoC5/EMITE.c ****     #else
 646:.\Generated_Source\PSoC5/EMITE.c ****         return ( ((uint16)EMITE_ReadRxStatus() << 8u) | EMITE_ReadRxData() );
 378              		.loc 1 646 0
 379 0002 FFF7FEFF 		bl	EMITE_ReadRxStatus
 380              	.LVL23:
 381 0006 0402     		lsls	r4, r0, #8
 382 0008 FFF7FEFF 		bl	EMITE_ReadRxData
 383              	.LVL24:
 384 000c 2043     		orrs	r0, r0, r4
 647:.\Generated_Source\PSoC5/EMITE.c ****     #endif /* EMITE_RX_INTERRUPT_ENABLED */
 648:.\Generated_Source\PSoC5/EMITE.c ****         
 649:.\Generated_Source\PSoC5/EMITE.c ****     }
 385              		.loc 1 649 0
 386 000e 80B2     		uxth	r0, r0
 387 0010 10BD     		pop	{r4, pc}
 388              		.cfi_endproc
 389              	.LFE10:
 390              		.size	EMITE_GetByte, .-EMITE_GetByte
 391 0012 00BF     		.section	.text.EMITE_GetRxBufferSize,"ax",%progbits
 392              		.align	2
 393              		.global	EMITE_GetRxBufferSize
 394              		.thumb
 395              		.thumb_func
 396              		.type	EMITE_GetRxBufferSize, %function
 397              	EMITE_GetRxBufferSize:
 398              	.LFB11:
 650:.\Generated_Source\PSoC5/EMITE.c **** 
 651:.\Generated_Source\PSoC5/EMITE.c **** 
 652:.\Generated_Source\PSoC5/EMITE.c ****     /*******************************************************************************
 653:.\Generated_Source\PSoC5/EMITE.c ****     * Function Name: EMITE_GetRxBufferSize
 654:.\Generated_Source\PSoC5/EMITE.c ****     ********************************************************************************
 655:.\Generated_Source\PSoC5/EMITE.c ****     *
 656:.\Generated_Source\PSoC5/EMITE.c ****     * Summary:
 657:.\Generated_Source\PSoC5/EMITE.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:.\Generated_Source\PSoC5/EMITE.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:.\Generated_Source\PSoC5/EMITE.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:.\Generated_Source\PSoC5/EMITE.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:.\Generated_Source\PSoC5/EMITE.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:.\Generated_Source\PSoC5/EMITE.c ****     *    account.
 663:.\Generated_Source\PSoC5/EMITE.c ****     *
 664:.\Generated_Source\PSoC5/EMITE.c ****     * Parameters:
 665:.\Generated_Source\PSoC5/EMITE.c ****     *  None.
 666:.\Generated_Source\PSoC5/EMITE.c ****     *
 667:.\Generated_Source\PSoC5/EMITE.c ****     * Return:
 668:.\Generated_Source\PSoC5/EMITE.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:.\Generated_Source\PSoC5/EMITE.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:.\Generated_Source\PSoC5/EMITE.c ****     *
 671:.\Generated_Source\PSoC5/EMITE.c ****     * Global Variables:
 672:.\Generated_Source\PSoC5/EMITE.c ****     *  EMITE_rxBufferWrite - used to calculate left bytes.
 673:.\Generated_Source\PSoC5/EMITE.c ****     *  EMITE_rxBufferRead - used to calculate left bytes.
 674:.\Generated_Source\PSoC5/EMITE.c ****     *  EMITE_rxBufferLoopDetect - checked to decide left bytes amount.
 675:.\Generated_Source\PSoC5/EMITE.c ****     *
 676:.\Generated_Source\PSoC5/EMITE.c ****     * Reentrant:
 677:.\Generated_Source\PSoC5/EMITE.c ****     *  No.
 678:.\Generated_Source\PSoC5/EMITE.c ****     *
 679:.\Generated_Source\PSoC5/EMITE.c ****     * Theory:
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 20


 680:.\Generated_Source\PSoC5/EMITE.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:.\Generated_Source\PSoC5/EMITE.c ****     *
 682:.\Generated_Source\PSoC5/EMITE.c ****     *******************************************************************************/
 683:.\Generated_Source\PSoC5/EMITE.c ****     uint8 EMITE_GetRxBufferSize(void)
 684:.\Generated_Source\PSoC5/EMITE.c ****                                                             
 685:.\Generated_Source\PSoC5/EMITE.c ****     {
 399              		.loc 1 685 0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403              		@ link register save eliminated.
 686:.\Generated_Source\PSoC5/EMITE.c ****         uint8 size;
 687:.\Generated_Source\PSoC5/EMITE.c **** 
 688:.\Generated_Source\PSoC5/EMITE.c ****     #if (EMITE_RX_INTERRUPT_ENABLED)
 689:.\Generated_Source\PSoC5/EMITE.c **** 
 690:.\Generated_Source\PSoC5/EMITE.c ****         /* Protect variables that could change on interrupt */
 691:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_DisableRxInt();
 692:.\Generated_Source\PSoC5/EMITE.c **** 
 693:.\Generated_Source\PSoC5/EMITE.c ****         if(EMITE_rxBufferRead == EMITE_rxBufferWrite)
 694:.\Generated_Source\PSoC5/EMITE.c ****         {
 695:.\Generated_Source\PSoC5/EMITE.c ****             if(EMITE_rxBufferLoopDetect != 0u)
 696:.\Generated_Source\PSoC5/EMITE.c ****             {
 697:.\Generated_Source\PSoC5/EMITE.c ****                 size = EMITE_RX_BUFFER_SIZE;
 698:.\Generated_Source\PSoC5/EMITE.c ****             }
 699:.\Generated_Source\PSoC5/EMITE.c ****             else
 700:.\Generated_Source\PSoC5/EMITE.c ****             {
 701:.\Generated_Source\PSoC5/EMITE.c ****                 size = 0u;
 702:.\Generated_Source\PSoC5/EMITE.c ****             }
 703:.\Generated_Source\PSoC5/EMITE.c ****         }
 704:.\Generated_Source\PSoC5/EMITE.c ****         else if(EMITE_rxBufferRead < EMITE_rxBufferWrite)
 705:.\Generated_Source\PSoC5/EMITE.c ****         {
 706:.\Generated_Source\PSoC5/EMITE.c ****             size = (EMITE_rxBufferWrite - EMITE_rxBufferRead);
 707:.\Generated_Source\PSoC5/EMITE.c ****         }
 708:.\Generated_Source\PSoC5/EMITE.c ****         else
 709:.\Generated_Source\PSoC5/EMITE.c ****         {
 710:.\Generated_Source\PSoC5/EMITE.c ****             size = (EMITE_RX_BUFFER_SIZE - EMITE_rxBufferRead) + EMITE_rxBufferWrite;
 711:.\Generated_Source\PSoC5/EMITE.c ****         }
 712:.\Generated_Source\PSoC5/EMITE.c **** 
 713:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_EnableRxInt();
 714:.\Generated_Source\PSoC5/EMITE.c **** 
 715:.\Generated_Source\PSoC5/EMITE.c ****     #else
 716:.\Generated_Source\PSoC5/EMITE.c **** 
 717:.\Generated_Source\PSoC5/EMITE.c ****         /* We can only know if there is data in the fifo. */
 718:.\Generated_Source\PSoC5/EMITE.c ****         size = ((EMITE_RXSTATUS_REG & EMITE_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 404              		.loc 1 718 0
 405 0000 044B     		ldr	r3, .L43
 406 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 407 0004 13F0200F 		tst	r3, #32
 408 0008 01D0     		beq	.L42
 409 000a 0120     		movs	r0, #1
 410 000c 7047     		bx	lr
 411              	.L42:
 412 000e 0020     		movs	r0, #0
 413              	.LVL25:
 719:.\Generated_Source\PSoC5/EMITE.c **** 
 720:.\Generated_Source\PSoC5/EMITE.c ****     #endif /* (EMITE_RX_INTERRUPT_ENABLED) */
 721:.\Generated_Source\PSoC5/EMITE.c **** 
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 21


 722:.\Generated_Source\PSoC5/EMITE.c ****         return(size);
 723:.\Generated_Source\PSoC5/EMITE.c ****     }
 414              		.loc 1 723 0
 415 0010 7047     		bx	lr
 416              	.L44:
 417 0012 00BF     		.align	2
 418              	.L43:
 419 0014 65650040 		.word	1073767781
 420              		.cfi_endproc
 421              	.LFE11:
 422              		.size	EMITE_GetRxBufferSize, .-EMITE_GetRxBufferSize
 423              		.section	.text.EMITE_ClearRxBuffer,"ax",%progbits
 424              		.align	2
 425              		.global	EMITE_ClearRxBuffer
 426              		.thumb
 427              		.thumb_func
 428              		.type	EMITE_ClearRxBuffer, %function
 429              	EMITE_ClearRxBuffer:
 430              	.LFB12:
 724:.\Generated_Source\PSoC5/EMITE.c **** 
 725:.\Generated_Source\PSoC5/EMITE.c **** 
 726:.\Generated_Source\PSoC5/EMITE.c ****     /*******************************************************************************
 727:.\Generated_Source\PSoC5/EMITE.c ****     * Function Name: EMITE_ClearRxBuffer
 728:.\Generated_Source\PSoC5/EMITE.c ****     ********************************************************************************
 729:.\Generated_Source\PSoC5/EMITE.c ****     *
 730:.\Generated_Source\PSoC5/EMITE.c ****     * Summary:
 731:.\Generated_Source\PSoC5/EMITE.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:.\Generated_Source\PSoC5/EMITE.c ****     *
 733:.\Generated_Source\PSoC5/EMITE.c ****     * Parameters:
 734:.\Generated_Source\PSoC5/EMITE.c ****     *  None.
 735:.\Generated_Source\PSoC5/EMITE.c ****     *
 736:.\Generated_Source\PSoC5/EMITE.c ****     * Return:
 737:.\Generated_Source\PSoC5/EMITE.c ****     *  None.
 738:.\Generated_Source\PSoC5/EMITE.c ****     *
 739:.\Generated_Source\PSoC5/EMITE.c ****     * Global Variables:
 740:.\Generated_Source\PSoC5/EMITE.c ****     *  EMITE_rxBufferWrite - cleared to zero.
 741:.\Generated_Source\PSoC5/EMITE.c ****     *  EMITE_rxBufferRead - cleared to zero.
 742:.\Generated_Source\PSoC5/EMITE.c ****     *  EMITE_rxBufferLoopDetect - cleared to zero.
 743:.\Generated_Source\PSoC5/EMITE.c ****     *  EMITE_rxBufferOverflow - cleared to zero.
 744:.\Generated_Source\PSoC5/EMITE.c ****     *
 745:.\Generated_Source\PSoC5/EMITE.c ****     * Reentrant:
 746:.\Generated_Source\PSoC5/EMITE.c ****     *  No.
 747:.\Generated_Source\PSoC5/EMITE.c ****     *
 748:.\Generated_Source\PSoC5/EMITE.c ****     * Theory:
 749:.\Generated_Source\PSoC5/EMITE.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:.\Generated_Source\PSoC5/EMITE.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:.\Generated_Source\PSoC5/EMITE.c ****     *  have remained in the RAM.
 752:.\Generated_Source\PSoC5/EMITE.c ****     *
 753:.\Generated_Source\PSoC5/EMITE.c ****     * Side Effects:
 754:.\Generated_Source\PSoC5/EMITE.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:.\Generated_Source\PSoC5/EMITE.c ****     *
 756:.\Generated_Source\PSoC5/EMITE.c ****     *******************************************************************************/
 757:.\Generated_Source\PSoC5/EMITE.c ****     void EMITE_ClearRxBuffer(void) 
 758:.\Generated_Source\PSoC5/EMITE.c ****     {
 431              		.loc 1 758 0
 432              		.cfi_startproc
 433              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 22


 434              		@ frame_needed = 0, uses_anonymous_args = 0
 435 0000 08B5     		push	{r3, lr}
 436              		.cfi_def_cfa_offset 8
 437              		.cfi_offset 3, -8
 438              		.cfi_offset 14, -4
 759:.\Generated_Source\PSoC5/EMITE.c ****         uint8 enableInterrupts;
 760:.\Generated_Source\PSoC5/EMITE.c **** 
 761:.\Generated_Source\PSoC5/EMITE.c ****         /* Clear the HW FIFO */
 762:.\Generated_Source\PSoC5/EMITE.c ****         enableInterrupts = CyEnterCriticalSection();
 439              		.loc 1 762 0
 440 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 441              	.LVL26:
 763:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_RXDATA_AUX_CTL_REG |= (uint8)  EMITE_RX_FIFO_CLR;
 442              		.loc 1 763 0
 443 0006 064B     		ldr	r3, .L47
 444 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 445 000a 42F00102 		orr	r2, r2, #1
 446 000e 1A70     		strb	r2, [r3]
 764:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_RXDATA_AUX_CTL_REG &= (uint8) ~EMITE_RX_FIFO_CLR;
 447              		.loc 1 764 0
 448 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 449 0012 02F0FE02 		and	r2, r2, #254
 450 0016 1A70     		strb	r2, [r3]
 765:.\Generated_Source\PSoC5/EMITE.c ****         CyExitCriticalSection(enableInterrupts);
 451              		.loc 1 765 0
 452 0018 FFF7FEFF 		bl	CyExitCriticalSection
 453              	.LVL27:
 454 001c 08BD     		pop	{r3, pc}
 455              	.L48:
 456 001e 00BF     		.align	2
 457              	.L47:
 458 0020 97640040 		.word	1073767575
 459              		.cfi_endproc
 460              	.LFE12:
 461              		.size	EMITE_ClearRxBuffer, .-EMITE_ClearRxBuffer
 462              		.section	.text.EMITE_SetRxAddressMode,"ax",%progbits
 463              		.align	2
 464              		.global	EMITE_SetRxAddressMode
 465              		.thumb
 466              		.thumb_func
 467              		.type	EMITE_SetRxAddressMode, %function
 468              	EMITE_SetRxAddressMode:
 469              	.LFB13:
 766:.\Generated_Source\PSoC5/EMITE.c **** 
 767:.\Generated_Source\PSoC5/EMITE.c ****     #if (EMITE_RX_INTERRUPT_ENABLED)
 768:.\Generated_Source\PSoC5/EMITE.c **** 
 769:.\Generated_Source\PSoC5/EMITE.c ****         /* Protect variables that could change on interrupt. */
 770:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_DisableRxInt();
 771:.\Generated_Source\PSoC5/EMITE.c **** 
 772:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_rxBufferRead = 0u;
 773:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_rxBufferWrite = 0u;
 774:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_rxBufferLoopDetect = 0u;
 775:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_rxBufferOverflow = 0u;
 776:.\Generated_Source\PSoC5/EMITE.c **** 
 777:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_EnableRxInt();
 778:.\Generated_Source\PSoC5/EMITE.c **** 
 779:.\Generated_Source\PSoC5/EMITE.c ****     #endif /* (EMITE_RX_INTERRUPT_ENABLED) */
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 23


 780:.\Generated_Source\PSoC5/EMITE.c **** 
 781:.\Generated_Source\PSoC5/EMITE.c ****     }
 782:.\Generated_Source\PSoC5/EMITE.c **** 
 783:.\Generated_Source\PSoC5/EMITE.c **** 
 784:.\Generated_Source\PSoC5/EMITE.c ****     /*******************************************************************************
 785:.\Generated_Source\PSoC5/EMITE.c ****     * Function Name: EMITE_SetRxAddressMode
 786:.\Generated_Source\PSoC5/EMITE.c ****     ********************************************************************************
 787:.\Generated_Source\PSoC5/EMITE.c ****     *
 788:.\Generated_Source\PSoC5/EMITE.c ****     * Summary:
 789:.\Generated_Source\PSoC5/EMITE.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:.\Generated_Source\PSoC5/EMITE.c ****     *  UART.
 791:.\Generated_Source\PSoC5/EMITE.c ****     *
 792:.\Generated_Source\PSoC5/EMITE.c ****     * Parameters:
 793:.\Generated_Source\PSoC5/EMITE.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:.\Generated_Source\PSoC5/EMITE.c ****     *  EMITE__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:.\Generated_Source\PSoC5/EMITE.c ****     *                                               detection
 796:.\Generated_Source\PSoC5/EMITE.c ****     *  EMITE__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:.\Generated_Source\PSoC5/EMITE.c ****     *                                               address detection
 798:.\Generated_Source\PSoC5/EMITE.c ****     *  EMITE__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:.\Generated_Source\PSoC5/EMITE.c ****     *                                               detection
 800:.\Generated_Source\PSoC5/EMITE.c ****     *  EMITE__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:.\Generated_Source\PSoC5/EMITE.c ****     *                                               address detection
 802:.\Generated_Source\PSoC5/EMITE.c ****     *  EMITE__B_UART__AM_NONE - No address detection
 803:.\Generated_Source\PSoC5/EMITE.c ****     *
 804:.\Generated_Source\PSoC5/EMITE.c ****     * Return:
 805:.\Generated_Source\PSoC5/EMITE.c ****     *  None.
 806:.\Generated_Source\PSoC5/EMITE.c ****     *
 807:.\Generated_Source\PSoC5/EMITE.c ****     * Global Variables:
 808:.\Generated_Source\PSoC5/EMITE.c ****     *  EMITE_rxAddressMode - the parameter stored in this variable for
 809:.\Generated_Source\PSoC5/EMITE.c ****     *   the farther usage in RX ISR.
 810:.\Generated_Source\PSoC5/EMITE.c ****     *  EMITE_rxAddressDetected - set to initial state (0).
 811:.\Generated_Source\PSoC5/EMITE.c ****     *
 812:.\Generated_Source\PSoC5/EMITE.c ****     *******************************************************************************/
 813:.\Generated_Source\PSoC5/EMITE.c ****     void EMITE_SetRxAddressMode(uint8 addressMode)
 814:.\Generated_Source\PSoC5/EMITE.c ****                                                         
 815:.\Generated_Source\PSoC5/EMITE.c ****     {
 470              		.loc 1 815 0
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 0
 473              		@ frame_needed = 0, uses_anonymous_args = 0
 474              		@ link register save eliminated.
 475              	.LVL28:
 476 0000 7047     		bx	lr
 477              		.cfi_endproc
 478              	.LFE13:
 479              		.size	EMITE_SetRxAddressMode, .-EMITE_SetRxAddressMode
 480 0002 00BF     		.section	.text.EMITE_SetRxAddress1,"ax",%progbits
 481              		.align	2
 482              		.global	EMITE_SetRxAddress1
 483              		.thumb
 484              		.thumb_func
 485              		.type	EMITE_SetRxAddress1, %function
 486              	EMITE_SetRxAddress1:
 487              	.LFB14:
 816:.\Generated_Source\PSoC5/EMITE.c ****         #if(EMITE_RXHW_ADDRESS_ENABLED)
 817:.\Generated_Source\PSoC5/EMITE.c ****             #if(EMITE_CONTROL_REG_REMOVED)
 818:.\Generated_Source\PSoC5/EMITE.c ****                 if(0u != addressMode)
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 24


 819:.\Generated_Source\PSoC5/EMITE.c ****                 {
 820:.\Generated_Source\PSoC5/EMITE.c ****                     /* Suppress compiler warning */
 821:.\Generated_Source\PSoC5/EMITE.c ****                 }
 822:.\Generated_Source\PSoC5/EMITE.c ****             #else /* EMITE_CONTROL_REG_REMOVED */
 823:.\Generated_Source\PSoC5/EMITE.c ****                 uint8 tmpCtrl;
 824:.\Generated_Source\PSoC5/EMITE.c ****                 tmpCtrl = EMITE_CONTROL_REG & (uint8)~EMITE_CTRL_RXADDR_MODE_MASK;
 825:.\Generated_Source\PSoC5/EMITE.c ****                 tmpCtrl |= (uint8)(addressMode << EMITE_CTRL_RXADDR_MODE0_SHIFT);
 826:.\Generated_Source\PSoC5/EMITE.c ****                 EMITE_CONTROL_REG = tmpCtrl;
 827:.\Generated_Source\PSoC5/EMITE.c **** 
 828:.\Generated_Source\PSoC5/EMITE.c ****                 #if(EMITE_RX_INTERRUPT_ENABLED && \
 829:.\Generated_Source\PSoC5/EMITE.c ****                    (EMITE_RXBUFFERSIZE > EMITE_FIFO_LENGTH) )
 830:.\Generated_Source\PSoC5/EMITE.c ****                     EMITE_rxAddressMode = addressMode;
 831:.\Generated_Source\PSoC5/EMITE.c ****                     EMITE_rxAddressDetected = 0u;
 832:.\Generated_Source\PSoC5/EMITE.c ****                 #endif /* End EMITE_RXBUFFERSIZE > EMITE_FIFO_LENGTH*/
 833:.\Generated_Source\PSoC5/EMITE.c ****             #endif /* End EMITE_CONTROL_REG_REMOVED */
 834:.\Generated_Source\PSoC5/EMITE.c ****         #else /* EMITE_RXHW_ADDRESS_ENABLED */
 835:.\Generated_Source\PSoC5/EMITE.c ****             if(0u != addressMode)
 836:.\Generated_Source\PSoC5/EMITE.c ****             {
 837:.\Generated_Source\PSoC5/EMITE.c ****                 /* Suppress compiler warning */
 838:.\Generated_Source\PSoC5/EMITE.c ****             }
 839:.\Generated_Source\PSoC5/EMITE.c ****         #endif /* End EMITE_RXHW_ADDRESS_ENABLED */
 840:.\Generated_Source\PSoC5/EMITE.c ****     }
 841:.\Generated_Source\PSoC5/EMITE.c **** 
 842:.\Generated_Source\PSoC5/EMITE.c **** 
 843:.\Generated_Source\PSoC5/EMITE.c ****     /*******************************************************************************
 844:.\Generated_Source\PSoC5/EMITE.c ****     * Function Name: EMITE_SetRxAddress1
 845:.\Generated_Source\PSoC5/EMITE.c ****     ********************************************************************************
 846:.\Generated_Source\PSoC5/EMITE.c ****     *
 847:.\Generated_Source\PSoC5/EMITE.c ****     * Summary:
 848:.\Generated_Source\PSoC5/EMITE.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:.\Generated_Source\PSoC5/EMITE.c ****     *
 850:.\Generated_Source\PSoC5/EMITE.c ****     * Parameters:
 851:.\Generated_Source\PSoC5/EMITE.c ****     *  address: Address #1 for hardware address detection.
 852:.\Generated_Source\PSoC5/EMITE.c ****     *
 853:.\Generated_Source\PSoC5/EMITE.c ****     * Return:
 854:.\Generated_Source\PSoC5/EMITE.c ****     *  None.
 855:.\Generated_Source\PSoC5/EMITE.c ****     *
 856:.\Generated_Source\PSoC5/EMITE.c ****     *******************************************************************************/
 857:.\Generated_Source\PSoC5/EMITE.c ****     void EMITE_SetRxAddress1(uint8 address) 
 858:.\Generated_Source\PSoC5/EMITE.c ****     {
 488              		.loc 1 858 0
 489              		.cfi_startproc
 490              		@ args = 0, pretend = 0, frame = 0
 491              		@ frame_needed = 0, uses_anonymous_args = 0
 492              		@ link register save eliminated.
 493              	.LVL29:
 859:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_RXADDRESS1_REG = address;
 494              		.loc 1 859 0
 495 0000 014B     		ldr	r3, .L51
 496 0002 1870     		strb	r0, [r3]
 497 0004 7047     		bx	lr
 498              	.L52:
 499 0006 00BF     		.align	2
 500              	.L51:
 501 0008 27640040 		.word	1073767463
 502              		.cfi_endproc
 503              	.LFE14:
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 25


 504              		.size	EMITE_SetRxAddress1, .-EMITE_SetRxAddress1
 505              		.section	.text.EMITE_SetRxAddress2,"ax",%progbits
 506              		.align	2
 507              		.global	EMITE_SetRxAddress2
 508              		.thumb
 509              		.thumb_func
 510              		.type	EMITE_SetRxAddress2, %function
 511              	EMITE_SetRxAddress2:
 512              	.LFB15:
 860:.\Generated_Source\PSoC5/EMITE.c ****     }
 861:.\Generated_Source\PSoC5/EMITE.c **** 
 862:.\Generated_Source\PSoC5/EMITE.c **** 
 863:.\Generated_Source\PSoC5/EMITE.c ****     /*******************************************************************************
 864:.\Generated_Source\PSoC5/EMITE.c ****     * Function Name: EMITE_SetRxAddress2
 865:.\Generated_Source\PSoC5/EMITE.c ****     ********************************************************************************
 866:.\Generated_Source\PSoC5/EMITE.c ****     *
 867:.\Generated_Source\PSoC5/EMITE.c ****     * Summary:
 868:.\Generated_Source\PSoC5/EMITE.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:.\Generated_Source\PSoC5/EMITE.c ****     *
 870:.\Generated_Source\PSoC5/EMITE.c ****     * Parameters:
 871:.\Generated_Source\PSoC5/EMITE.c ****     *  address: Address #2 for hardware address detection.
 872:.\Generated_Source\PSoC5/EMITE.c ****     *
 873:.\Generated_Source\PSoC5/EMITE.c ****     * Return:
 874:.\Generated_Source\PSoC5/EMITE.c ****     *  None.
 875:.\Generated_Source\PSoC5/EMITE.c ****     *
 876:.\Generated_Source\PSoC5/EMITE.c ****     *******************************************************************************/
 877:.\Generated_Source\PSoC5/EMITE.c ****     void EMITE_SetRxAddress2(uint8 address) 
 878:.\Generated_Source\PSoC5/EMITE.c ****     {
 513              		.loc 1 878 0
 514              		.cfi_startproc
 515              		@ args = 0, pretend = 0, frame = 0
 516              		@ frame_needed = 0, uses_anonymous_args = 0
 517              		@ link register save eliminated.
 518              	.LVL30:
 879:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_RXADDRESS2_REG = address;
 519              		.loc 1 879 0
 520 0000 014B     		ldr	r3, .L54
 521 0002 1870     		strb	r0, [r3]
 522 0004 7047     		bx	lr
 523              	.L55:
 524 0006 00BF     		.align	2
 525              	.L54:
 526 0008 37640040 		.word	1073767479
 527              		.cfi_endproc
 528              	.LFE15:
 529              		.size	EMITE_SetRxAddress2, .-EMITE_SetRxAddress2
 530              		.section	.text.EMITE_SetTxInterruptMode,"ax",%progbits
 531              		.align	2
 532              		.global	EMITE_SetTxInterruptMode
 533              		.thumb
 534              		.thumb_func
 535              		.type	EMITE_SetTxInterruptMode, %function
 536              	EMITE_SetTxInterruptMode:
 537              	.LFB16:
 880:.\Generated_Source\PSoC5/EMITE.c ****     }
 881:.\Generated_Source\PSoC5/EMITE.c **** 
 882:.\Generated_Source\PSoC5/EMITE.c **** #endif  /* EMITE_RX_ENABLED || EMITE_HD_ENABLED*/
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 26


 883:.\Generated_Source\PSoC5/EMITE.c **** 
 884:.\Generated_Source\PSoC5/EMITE.c **** 
 885:.\Generated_Source\PSoC5/EMITE.c **** #if( (EMITE_TX_ENABLED) || (EMITE_HD_ENABLED) )
 886:.\Generated_Source\PSoC5/EMITE.c ****     /*******************************************************************************
 887:.\Generated_Source\PSoC5/EMITE.c ****     * Function Name: EMITE_SetTxInterruptMode
 888:.\Generated_Source\PSoC5/EMITE.c ****     ********************************************************************************
 889:.\Generated_Source\PSoC5/EMITE.c ****     *
 890:.\Generated_Source\PSoC5/EMITE.c ****     * Summary:
 891:.\Generated_Source\PSoC5/EMITE.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:.\Generated_Source\PSoC5/EMITE.c ****     *  interrupt.
 893:.\Generated_Source\PSoC5/EMITE.c ****     *
 894:.\Generated_Source\PSoC5/EMITE.c ****     * Parameters:
 895:.\Generated_Source\PSoC5/EMITE.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:.\Generated_Source\PSoC5/EMITE.c ****     *   EMITE_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:.\Generated_Source\PSoC5/EMITE.c ****     *   EMITE_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:.\Generated_Source\PSoC5/EMITE.c ****     *   EMITE_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:.\Generated_Source\PSoC5/EMITE.c ****     *   EMITE_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:.\Generated_Source\PSoC5/EMITE.c ****     *
 901:.\Generated_Source\PSoC5/EMITE.c ****     * Return:
 902:.\Generated_Source\PSoC5/EMITE.c ****     *  None.
 903:.\Generated_Source\PSoC5/EMITE.c ****     *
 904:.\Generated_Source\PSoC5/EMITE.c ****     * Theory:
 905:.\Generated_Source\PSoC5/EMITE.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:.\Generated_Source\PSoC5/EMITE.c ****     *
 907:.\Generated_Source\PSoC5/EMITE.c ****     *******************************************************************************/
 908:.\Generated_Source\PSoC5/EMITE.c ****     void EMITE_SetTxInterruptMode(uint8 intSrc) 
 909:.\Generated_Source\PSoC5/EMITE.c ****     {
 538              		.loc 1 909 0
 539              		.cfi_startproc
 540              		@ args = 0, pretend = 0, frame = 0
 541              		@ frame_needed = 0, uses_anonymous_args = 0
 542              		@ link register save eliminated.
 543              	.LVL31:
 910:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_TXSTATUS_MASK_REG = intSrc;
 544              		.loc 1 910 0
 545 0000 014B     		ldr	r3, .L57
 546 0002 1870     		strb	r0, [r3]
 547 0004 7047     		bx	lr
 548              	.L58:
 549 0006 00BF     		.align	2
 550              	.L57:
 551 0008 85650040 		.word	1073767813
 552              		.cfi_endproc
 553              	.LFE16:
 554              		.size	EMITE_SetTxInterruptMode, .-EMITE_SetTxInterruptMode
 555              		.section	.text.EMITE_WriteTxData,"ax",%progbits
 556              		.align	2
 557              		.global	EMITE_WriteTxData
 558              		.thumb
 559              		.thumb_func
 560              		.type	EMITE_WriteTxData, %function
 561              	EMITE_WriteTxData:
 562              	.LFB17:
 911:.\Generated_Source\PSoC5/EMITE.c ****     }
 912:.\Generated_Source\PSoC5/EMITE.c **** 
 913:.\Generated_Source\PSoC5/EMITE.c **** 
 914:.\Generated_Source\PSoC5/EMITE.c ****     /*******************************************************************************
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 27


 915:.\Generated_Source\PSoC5/EMITE.c ****     * Function Name: EMITE_WriteTxData
 916:.\Generated_Source\PSoC5/EMITE.c ****     ********************************************************************************
 917:.\Generated_Source\PSoC5/EMITE.c ****     *
 918:.\Generated_Source\PSoC5/EMITE.c ****     * Summary:
 919:.\Generated_Source\PSoC5/EMITE.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:.\Generated_Source\PSoC5/EMITE.c ****     *  available without checking the TX status register. You must check status
 921:.\Generated_Source\PSoC5/EMITE.c ****     *  separately.
 922:.\Generated_Source\PSoC5/EMITE.c ****     *
 923:.\Generated_Source\PSoC5/EMITE.c ****     * Parameters:
 924:.\Generated_Source\PSoC5/EMITE.c ****     *  txDataByte: data byte
 925:.\Generated_Source\PSoC5/EMITE.c ****     *
 926:.\Generated_Source\PSoC5/EMITE.c ****     * Return:
 927:.\Generated_Source\PSoC5/EMITE.c ****     * None.
 928:.\Generated_Source\PSoC5/EMITE.c ****     *
 929:.\Generated_Source\PSoC5/EMITE.c ****     * Global Variables:
 930:.\Generated_Source\PSoC5/EMITE.c ****     *  EMITE_txBuffer - RAM buffer pointer for save data for transmission
 931:.\Generated_Source\PSoC5/EMITE.c ****     *  EMITE_txBufferWrite - cyclic index for write to txBuffer,
 932:.\Generated_Source\PSoC5/EMITE.c ****     *    incremented after each byte saved to buffer.
 933:.\Generated_Source\PSoC5/EMITE.c ****     *  EMITE_txBufferRead - cyclic index for read from txBuffer,
 934:.\Generated_Source\PSoC5/EMITE.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:.\Generated_Source\PSoC5/EMITE.c ****     *  EMITE_initVar - checked to identify that the component has been
 936:.\Generated_Source\PSoC5/EMITE.c ****     *    initialized.
 937:.\Generated_Source\PSoC5/EMITE.c ****     *
 938:.\Generated_Source\PSoC5/EMITE.c ****     * Reentrant:
 939:.\Generated_Source\PSoC5/EMITE.c ****     *  No.
 940:.\Generated_Source\PSoC5/EMITE.c ****     *
 941:.\Generated_Source\PSoC5/EMITE.c ****     *******************************************************************************/
 942:.\Generated_Source\PSoC5/EMITE.c ****     void EMITE_WriteTxData(uint8 txDataByte) 
 943:.\Generated_Source\PSoC5/EMITE.c ****     {
 563              		.loc 1 943 0
 564              		.cfi_startproc
 565              		@ args = 0, pretend = 0, frame = 0
 566              		@ frame_needed = 0, uses_anonymous_args = 0
 567              		@ link register save eliminated.
 568              	.LVL32:
 944:.\Generated_Source\PSoC5/EMITE.c ****         /* If not Initialized then skip this function*/
 945:.\Generated_Source\PSoC5/EMITE.c ****         if(EMITE_initVar != 0u)
 569              		.loc 1 945 0
 570 0000 024B     		ldr	r3, .L61
 571 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 572 0004 0BB1     		cbz	r3, .L59
 946:.\Generated_Source\PSoC5/EMITE.c ****         {
 947:.\Generated_Source\PSoC5/EMITE.c ****         #if (EMITE_TX_INTERRUPT_ENABLED)
 948:.\Generated_Source\PSoC5/EMITE.c **** 
 949:.\Generated_Source\PSoC5/EMITE.c ****             /* Protect variables that could change on interrupt. */
 950:.\Generated_Source\PSoC5/EMITE.c ****             EMITE_DisableTxInt();
 951:.\Generated_Source\PSoC5/EMITE.c **** 
 952:.\Generated_Source\PSoC5/EMITE.c ****             if( (EMITE_txBufferRead == EMITE_txBufferWrite) &&
 953:.\Generated_Source\PSoC5/EMITE.c ****                 ((EMITE_TXSTATUS_REG & EMITE_TX_STS_FIFO_FULL) == 0u) )
 954:.\Generated_Source\PSoC5/EMITE.c ****             {
 955:.\Generated_Source\PSoC5/EMITE.c ****                 /* Add directly to the FIFO. */
 956:.\Generated_Source\PSoC5/EMITE.c ****                 EMITE_TXDATA_REG = txDataByte;
 957:.\Generated_Source\PSoC5/EMITE.c ****             }
 958:.\Generated_Source\PSoC5/EMITE.c ****             else
 959:.\Generated_Source\PSoC5/EMITE.c ****             {
 960:.\Generated_Source\PSoC5/EMITE.c ****                 if(EMITE_txBufferWrite >= EMITE_TX_BUFFER_SIZE)
 961:.\Generated_Source\PSoC5/EMITE.c ****                 {
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 28


 962:.\Generated_Source\PSoC5/EMITE.c ****                     EMITE_txBufferWrite = 0u;
 963:.\Generated_Source\PSoC5/EMITE.c ****                 }
 964:.\Generated_Source\PSoC5/EMITE.c **** 
 965:.\Generated_Source\PSoC5/EMITE.c ****                 EMITE_txBuffer[EMITE_txBufferWrite] = txDataByte;
 966:.\Generated_Source\PSoC5/EMITE.c **** 
 967:.\Generated_Source\PSoC5/EMITE.c ****                 /* Add to the software buffer. */
 968:.\Generated_Source\PSoC5/EMITE.c ****                 EMITE_txBufferWrite++;
 969:.\Generated_Source\PSoC5/EMITE.c ****             }
 970:.\Generated_Source\PSoC5/EMITE.c **** 
 971:.\Generated_Source\PSoC5/EMITE.c ****             EMITE_EnableTxInt();
 972:.\Generated_Source\PSoC5/EMITE.c **** 
 973:.\Generated_Source\PSoC5/EMITE.c ****         #else
 974:.\Generated_Source\PSoC5/EMITE.c **** 
 975:.\Generated_Source\PSoC5/EMITE.c ****             /* Add directly to the FIFO. */
 976:.\Generated_Source\PSoC5/EMITE.c ****             EMITE_TXDATA_REG = txDataByte;
 573              		.loc 1 976 0
 574 0006 024B     		ldr	r3, .L61+4
 575 0008 1870     		strb	r0, [r3]
 576              	.L59:
 577 000a 7047     		bx	lr
 578              	.L62:
 579              		.align	2
 580              	.L61:
 581 000c 00000000 		.word	.LANCHOR0
 582 0010 57640040 		.word	1073767511
 583              		.cfi_endproc
 584              	.LFE17:
 585              		.size	EMITE_WriteTxData, .-EMITE_WriteTxData
 586              		.section	.text.EMITE_ReadTxStatus,"ax",%progbits
 587              		.align	2
 588              		.global	EMITE_ReadTxStatus
 589              		.thumb
 590              		.thumb_func
 591              		.type	EMITE_ReadTxStatus, %function
 592              	EMITE_ReadTxStatus:
 593              	.LFB18:
 977:.\Generated_Source\PSoC5/EMITE.c **** 
 978:.\Generated_Source\PSoC5/EMITE.c ****         #endif /*(EMITE_TX_INTERRUPT_ENABLED) */
 979:.\Generated_Source\PSoC5/EMITE.c ****         }
 980:.\Generated_Source\PSoC5/EMITE.c ****     }
 981:.\Generated_Source\PSoC5/EMITE.c **** 
 982:.\Generated_Source\PSoC5/EMITE.c **** 
 983:.\Generated_Source\PSoC5/EMITE.c ****     /*******************************************************************************
 984:.\Generated_Source\PSoC5/EMITE.c ****     * Function Name: EMITE_ReadTxStatus
 985:.\Generated_Source\PSoC5/EMITE.c ****     ********************************************************************************
 986:.\Generated_Source\PSoC5/EMITE.c ****     *
 987:.\Generated_Source\PSoC5/EMITE.c ****     * Summary:
 988:.\Generated_Source\PSoC5/EMITE.c ****     *  Reads the status register for the TX portion of the UART.
 989:.\Generated_Source\PSoC5/EMITE.c ****     *
 990:.\Generated_Source\PSoC5/EMITE.c ****     * Parameters:
 991:.\Generated_Source\PSoC5/EMITE.c ****     *  None.
 992:.\Generated_Source\PSoC5/EMITE.c ****     *
 993:.\Generated_Source\PSoC5/EMITE.c ****     * Return:
 994:.\Generated_Source\PSoC5/EMITE.c ****     *  Contents of the status register
 995:.\Generated_Source\PSoC5/EMITE.c ****     *
 996:.\Generated_Source\PSoC5/EMITE.c ****     * Theory:
 997:.\Generated_Source\PSoC5/EMITE.c ****     *  This function reads the TX status register, which is cleared on read.
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 29


 998:.\Generated_Source\PSoC5/EMITE.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:.\Generated_Source\PSoC5/EMITE.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:.\Generated_Source\PSoC5/EMITE.c ****     *  and must be handled accordingly.
1001:.\Generated_Source\PSoC5/EMITE.c ****     *
1002:.\Generated_Source\PSoC5/EMITE.c ****     *******************************************************************************/
1003:.\Generated_Source\PSoC5/EMITE.c ****     uint8 EMITE_ReadTxStatus(void) 
1004:.\Generated_Source\PSoC5/EMITE.c ****     {
 594              		.loc 1 1004 0
 595              		.cfi_startproc
 596              		@ args = 0, pretend = 0, frame = 0
 597              		@ frame_needed = 0, uses_anonymous_args = 0
 598              		@ link register save eliminated.
1005:.\Generated_Source\PSoC5/EMITE.c ****         return(EMITE_TXSTATUS_REG);
 599              		.loc 1 1005 0
 600 0000 014B     		ldr	r3, .L64
 601 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
1006:.\Generated_Source\PSoC5/EMITE.c ****     }
 602              		.loc 1 1006 0
 603 0004 7047     		bx	lr
 604              	.L65:
 605 0006 00BF     		.align	2
 606              	.L64:
 607 0008 65650040 		.word	1073767781
 608              		.cfi_endproc
 609              	.LFE18:
 610              		.size	EMITE_ReadTxStatus, .-EMITE_ReadTxStatus
 611              		.section	.text.EMITE_PutChar,"ax",%progbits
 612              		.align	2
 613              		.global	EMITE_PutChar
 614              		.thumb
 615              		.thumb_func
 616              		.type	EMITE_PutChar, %function
 617              	EMITE_PutChar:
 618              	.LFB19:
1007:.\Generated_Source\PSoC5/EMITE.c **** 
1008:.\Generated_Source\PSoC5/EMITE.c **** 
1009:.\Generated_Source\PSoC5/EMITE.c ****     /*******************************************************************************
1010:.\Generated_Source\PSoC5/EMITE.c ****     * Function Name: EMITE_PutChar
1011:.\Generated_Source\PSoC5/EMITE.c ****     ********************************************************************************
1012:.\Generated_Source\PSoC5/EMITE.c ****     *
1013:.\Generated_Source\PSoC5/EMITE.c ****     * Summary:
1014:.\Generated_Source\PSoC5/EMITE.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:.\Generated_Source\PSoC5/EMITE.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:.\Generated_Source\PSoC5/EMITE.c ****     *  hold the data.
1017:.\Generated_Source\PSoC5/EMITE.c ****     *
1018:.\Generated_Source\PSoC5/EMITE.c ****     * Parameters:
1019:.\Generated_Source\PSoC5/EMITE.c ****     *  txDataByte: Byte containing the data to transmit
1020:.\Generated_Source\PSoC5/EMITE.c ****     *
1021:.\Generated_Source\PSoC5/EMITE.c ****     * Return:
1022:.\Generated_Source\PSoC5/EMITE.c ****     *  None.
1023:.\Generated_Source\PSoC5/EMITE.c ****     *
1024:.\Generated_Source\PSoC5/EMITE.c ****     * Global Variables:
1025:.\Generated_Source\PSoC5/EMITE.c ****     *  EMITE_txBuffer - RAM buffer pointer for save data for transmission
1026:.\Generated_Source\PSoC5/EMITE.c ****     *  EMITE_txBufferWrite - cyclic index for write to txBuffer,
1027:.\Generated_Source\PSoC5/EMITE.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:.\Generated_Source\PSoC5/EMITE.c ****     *     saved to buffer.
1029:.\Generated_Source\PSoC5/EMITE.c ****     *  EMITE_txBufferRead - cyclic index for read from txBuffer,
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 30


1030:.\Generated_Source\PSoC5/EMITE.c ****     *     checked to identify free space in txBuffer.
1031:.\Generated_Source\PSoC5/EMITE.c ****     *  EMITE_initVar - checked to identify that the component has been
1032:.\Generated_Source\PSoC5/EMITE.c ****     *     initialized.
1033:.\Generated_Source\PSoC5/EMITE.c ****     *
1034:.\Generated_Source\PSoC5/EMITE.c ****     * Reentrant:
1035:.\Generated_Source\PSoC5/EMITE.c ****     *  No.
1036:.\Generated_Source\PSoC5/EMITE.c ****     *
1037:.\Generated_Source\PSoC5/EMITE.c ****     * Theory:
1038:.\Generated_Source\PSoC5/EMITE.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:.\Generated_Source\PSoC5/EMITE.c ****     *
1040:.\Generated_Source\PSoC5/EMITE.c ****     *******************************************************************************/
1041:.\Generated_Source\PSoC5/EMITE.c ****     void EMITE_PutChar(uint8 txDataByte) 
1042:.\Generated_Source\PSoC5/EMITE.c ****     {
 619              		.loc 1 1042 0
 620              		.cfi_startproc
 621              		@ args = 0, pretend = 0, frame = 0
 622              		@ frame_needed = 0, uses_anonymous_args = 0
 623              		@ link register save eliminated.
 624              	.LVL33:
 625              	.L67:
1043:.\Generated_Source\PSoC5/EMITE.c ****     #if (EMITE_TX_INTERRUPT_ENABLED)
1044:.\Generated_Source\PSoC5/EMITE.c ****         /* The temporary output pointer is used since it takes two instructions
1045:.\Generated_Source\PSoC5/EMITE.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:.\Generated_Source\PSoC5/EMITE.c ****         *  pointer and getting an interrupt in between instructions.
1047:.\Generated_Source\PSoC5/EMITE.c ****         */
1048:.\Generated_Source\PSoC5/EMITE.c ****         uint8 locTxBufferWrite;
1049:.\Generated_Source\PSoC5/EMITE.c ****         uint8 locTxBufferRead;
1050:.\Generated_Source\PSoC5/EMITE.c **** 
1051:.\Generated_Source\PSoC5/EMITE.c ****         do
1052:.\Generated_Source\PSoC5/EMITE.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:.\Generated_Source\PSoC5/EMITE.c **** 
1054:.\Generated_Source\PSoC5/EMITE.c ****         #if ((EMITE_TX_BUFFER_SIZE > EMITE_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:.\Generated_Source\PSoC5/EMITE.c ****             /* Disable TX interrupt to protect variables from modification */
1056:.\Generated_Source\PSoC5/EMITE.c ****             EMITE_DisableTxInt();
1057:.\Generated_Source\PSoC5/EMITE.c ****         #endif /* (EMITE_TX_BUFFER_SIZE > EMITE_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:.\Generated_Source\PSoC5/EMITE.c **** 
1059:.\Generated_Source\PSoC5/EMITE.c ****             locTxBufferWrite = EMITE_txBufferWrite;
1060:.\Generated_Source\PSoC5/EMITE.c ****             locTxBufferRead  = EMITE_txBufferRead;
1061:.\Generated_Source\PSoC5/EMITE.c **** 
1062:.\Generated_Source\PSoC5/EMITE.c ****         #if ((EMITE_TX_BUFFER_SIZE > EMITE_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:.\Generated_Source\PSoC5/EMITE.c ****             /* Enable interrupt to continue transmission */
1064:.\Generated_Source\PSoC5/EMITE.c ****             EMITE_EnableTxInt();
1065:.\Generated_Source\PSoC5/EMITE.c ****         #endif /* (EMITE_TX_BUFFER_SIZE > EMITE_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:.\Generated_Source\PSoC5/EMITE.c ****         }
1067:.\Generated_Source\PSoC5/EMITE.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:.\Generated_Source\PSoC5/EMITE.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:.\Generated_Source\PSoC5/EMITE.c ****                                 (uint8)(EMITE_TX_BUFFER_SIZE - 1u)) );
1070:.\Generated_Source\PSoC5/EMITE.c **** 
1071:.\Generated_Source\PSoC5/EMITE.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
1072:.\Generated_Source\PSoC5/EMITE.c ****             ((EMITE_TXSTATUS_REG & EMITE_TX_STS_FIFO_FULL) == 0u) )
1073:.\Generated_Source\PSoC5/EMITE.c ****         {
1074:.\Generated_Source\PSoC5/EMITE.c ****             /* Add directly to the FIFO */
1075:.\Generated_Source\PSoC5/EMITE.c ****             EMITE_TXDATA_REG = txDataByte;
1076:.\Generated_Source\PSoC5/EMITE.c ****         }
1077:.\Generated_Source\PSoC5/EMITE.c ****         else
1078:.\Generated_Source\PSoC5/EMITE.c ****         {
1079:.\Generated_Source\PSoC5/EMITE.c ****             if(locTxBufferWrite >= EMITE_TX_BUFFER_SIZE)
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 31


1080:.\Generated_Source\PSoC5/EMITE.c ****             {
1081:.\Generated_Source\PSoC5/EMITE.c ****                 locTxBufferWrite = 0u;
1082:.\Generated_Source\PSoC5/EMITE.c ****             }
1083:.\Generated_Source\PSoC5/EMITE.c ****             /* Add to the software buffer. */
1084:.\Generated_Source\PSoC5/EMITE.c ****             EMITE_txBuffer[locTxBufferWrite] = txDataByte;
1085:.\Generated_Source\PSoC5/EMITE.c ****             locTxBufferWrite++;
1086:.\Generated_Source\PSoC5/EMITE.c **** 
1087:.\Generated_Source\PSoC5/EMITE.c ****             /* Finally, update the real output pointer */
1088:.\Generated_Source\PSoC5/EMITE.c ****         #if ((EMITE_TX_BUFFER_SIZE > EMITE_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:.\Generated_Source\PSoC5/EMITE.c ****             EMITE_DisableTxInt();
1090:.\Generated_Source\PSoC5/EMITE.c ****         #endif /* (EMITE_TX_BUFFER_SIZE > EMITE_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:.\Generated_Source\PSoC5/EMITE.c **** 
1092:.\Generated_Source\PSoC5/EMITE.c ****             EMITE_txBufferWrite = locTxBufferWrite;
1093:.\Generated_Source\PSoC5/EMITE.c **** 
1094:.\Generated_Source\PSoC5/EMITE.c ****         #if ((EMITE_TX_BUFFER_SIZE > EMITE_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:.\Generated_Source\PSoC5/EMITE.c ****             EMITE_EnableTxInt();
1096:.\Generated_Source\PSoC5/EMITE.c ****         #endif /* (EMITE_TX_BUFFER_SIZE > EMITE_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:.\Generated_Source\PSoC5/EMITE.c **** 
1098:.\Generated_Source\PSoC5/EMITE.c ****             if(0u != (EMITE_TXSTATUS_REG & EMITE_TX_STS_FIFO_EMPTY))
1099:.\Generated_Source\PSoC5/EMITE.c ****             {
1100:.\Generated_Source\PSoC5/EMITE.c ****                 /* Trigger TX interrupt to send software buffer */
1101:.\Generated_Source\PSoC5/EMITE.c ****                 EMITE_SetPendingTxInt();
1102:.\Generated_Source\PSoC5/EMITE.c ****             }
1103:.\Generated_Source\PSoC5/EMITE.c ****         }
1104:.\Generated_Source\PSoC5/EMITE.c **** 
1105:.\Generated_Source\PSoC5/EMITE.c ****     #else
1106:.\Generated_Source\PSoC5/EMITE.c **** 
1107:.\Generated_Source\PSoC5/EMITE.c ****         while((EMITE_TXSTATUS_REG & EMITE_TX_STS_FIFO_FULL) != 0u)
 626              		.loc 1 1107 0 discriminator 1
 627 0000 034B     		ldr	r3, .L68
 628 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 629 0004 13F0200F 		tst	r3, #32
 630 0008 FAD1     		bne	.L67
1108:.\Generated_Source\PSoC5/EMITE.c ****         {
1109:.\Generated_Source\PSoC5/EMITE.c ****             /* Wait for room in the FIFO */
1110:.\Generated_Source\PSoC5/EMITE.c ****         }
1111:.\Generated_Source\PSoC5/EMITE.c **** 
1112:.\Generated_Source\PSoC5/EMITE.c ****         /* Add directly to the FIFO */
1113:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_TXDATA_REG = txDataByte;
 631              		.loc 1 1113 0
 632 000a 024B     		ldr	r3, .L68+4
 633 000c 1870     		strb	r0, [r3]
 634 000e 7047     		bx	lr
 635              	.L69:
 636              		.align	2
 637              	.L68:
 638 0010 65650040 		.word	1073767781
 639 0014 57640040 		.word	1073767511
 640              		.cfi_endproc
 641              	.LFE19:
 642              		.size	EMITE_PutChar, .-EMITE_PutChar
 643              		.section	.text.EMITE_PutString,"ax",%progbits
 644              		.align	2
 645              		.global	EMITE_PutString
 646              		.thumb
 647              		.thumb_func
 648              		.type	EMITE_PutString, %function
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 32


 649              	EMITE_PutString:
 650              	.LFB20:
1114:.\Generated_Source\PSoC5/EMITE.c **** 
1115:.\Generated_Source\PSoC5/EMITE.c ****     #endif /* EMITE_TX_INTERRUPT_ENABLED */
1116:.\Generated_Source\PSoC5/EMITE.c ****     }
1117:.\Generated_Source\PSoC5/EMITE.c **** 
1118:.\Generated_Source\PSoC5/EMITE.c **** 
1119:.\Generated_Source\PSoC5/EMITE.c ****     /*******************************************************************************
1120:.\Generated_Source\PSoC5/EMITE.c ****     * Function Name: EMITE_PutString
1121:.\Generated_Source\PSoC5/EMITE.c ****     ********************************************************************************
1122:.\Generated_Source\PSoC5/EMITE.c ****     *
1123:.\Generated_Source\PSoC5/EMITE.c ****     * Summary:
1124:.\Generated_Source\PSoC5/EMITE.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:.\Generated_Source\PSoC5/EMITE.c ****     *
1126:.\Generated_Source\PSoC5/EMITE.c ****     * Parameters:
1127:.\Generated_Source\PSoC5/EMITE.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:.\Generated_Source\PSoC5/EMITE.c ****     *
1129:.\Generated_Source\PSoC5/EMITE.c ****     * Return:
1130:.\Generated_Source\PSoC5/EMITE.c ****     *  None.
1131:.\Generated_Source\PSoC5/EMITE.c ****     *
1132:.\Generated_Source\PSoC5/EMITE.c ****     * Global Variables:
1133:.\Generated_Source\PSoC5/EMITE.c ****     *  EMITE_initVar - checked to identify that the component has been
1134:.\Generated_Source\PSoC5/EMITE.c ****     *     initialized.
1135:.\Generated_Source\PSoC5/EMITE.c ****     *
1136:.\Generated_Source\PSoC5/EMITE.c ****     * Reentrant:
1137:.\Generated_Source\PSoC5/EMITE.c ****     *  No.
1138:.\Generated_Source\PSoC5/EMITE.c ****     *
1139:.\Generated_Source\PSoC5/EMITE.c ****     * Theory:
1140:.\Generated_Source\PSoC5/EMITE.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:.\Generated_Source\PSoC5/EMITE.c ****     *  function blocks until the last character of the string is loaded into the
1142:.\Generated_Source\PSoC5/EMITE.c ****     *  TX buffer.
1143:.\Generated_Source\PSoC5/EMITE.c ****     *
1144:.\Generated_Source\PSoC5/EMITE.c ****     *******************************************************************************/
1145:.\Generated_Source\PSoC5/EMITE.c ****     void EMITE_PutString(const char8 string[]) 
1146:.\Generated_Source\PSoC5/EMITE.c ****     {
 651              		.loc 1 1146 0
 652              		.cfi_startproc
 653              		@ args = 0, pretend = 0, frame = 0
 654              		@ frame_needed = 0, uses_anonymous_args = 0
 655              	.LVL34:
 656 0000 38B5     		push	{r3, r4, r5, lr}
 657              		.cfi_def_cfa_offset 16
 658              		.cfi_offset 3, -16
 659              		.cfi_offset 4, -12
 660              		.cfi_offset 5, -8
 661              		.cfi_offset 14, -4
 662              	.LVL35:
1147:.\Generated_Source\PSoC5/EMITE.c ****         uint16 bufIndex = 0u;
1148:.\Generated_Source\PSoC5/EMITE.c **** 
1149:.\Generated_Source\PSoC5/EMITE.c ****         /* If not Initialized then skip this function */
1150:.\Generated_Source\PSoC5/EMITE.c ****         if(EMITE_initVar != 0u)
 663              		.loc 1 1150 0
 664 0002 074B     		ldr	r3, .L76
 665 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 666 0006 2BB9     		cbnz	r3, .L74
 667 0008 38BD     		pop	{r3, r4, r5, pc}
 668              	.LVL36:
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 33


 669              	.L73:
1151:.\Generated_Source\PSoC5/EMITE.c ****         {
1152:.\Generated_Source\PSoC5/EMITE.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:.\Generated_Source\PSoC5/EMITE.c ****             while(string[bufIndex] != (char8) 0)
1154:.\Generated_Source\PSoC5/EMITE.c ****             {
1155:.\Generated_Source\PSoC5/EMITE.c ****                 EMITE_PutChar((uint8)string[bufIndex]);
 670              		.loc 1 1155 0
 671 000a FFF7FEFF 		bl	EMITE_PutChar
 672              	.LVL37:
1156:.\Generated_Source\PSoC5/EMITE.c ****                 bufIndex++;
 673              		.loc 1 1156 0
 674 000e 0134     		adds	r4, r4, #1
 675              	.LVL38:
 676 0010 A4B2     		uxth	r4, r4
 677              	.LVL39:
 678 0012 01E0     		b	.L71
 679              	.LVL40:
 680              	.L74:
 681 0014 0546     		mov	r5, r0
 682 0016 0024     		movs	r4, #0
 683              	.LVL41:
 684              	.L71:
1153:.\Generated_Source\PSoC5/EMITE.c ****             {
 685              		.loc 1 1153 0
 686 0018 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
 687 001a 0028     		cmp	r0, #0
 688 001c F5D1     		bne	.L73
 689 001e 38BD     		pop	{r3, r4, r5, pc}
 690              	.LVL42:
 691              	.L77:
 692              		.align	2
 693              	.L76:
 694 0020 00000000 		.word	.LANCHOR0
 695              		.cfi_endproc
 696              	.LFE20:
 697              		.size	EMITE_PutString, .-EMITE_PutString
 698              		.section	.text.EMITE_PutArray,"ax",%progbits
 699              		.align	2
 700              		.global	EMITE_PutArray
 701              		.thumb
 702              		.thumb_func
 703              		.type	EMITE_PutArray, %function
 704              	EMITE_PutArray:
 705              	.LFB21:
1157:.\Generated_Source\PSoC5/EMITE.c ****             }
1158:.\Generated_Source\PSoC5/EMITE.c ****         }
1159:.\Generated_Source\PSoC5/EMITE.c ****     }
1160:.\Generated_Source\PSoC5/EMITE.c **** 
1161:.\Generated_Source\PSoC5/EMITE.c **** 
1162:.\Generated_Source\PSoC5/EMITE.c ****     /*******************************************************************************
1163:.\Generated_Source\PSoC5/EMITE.c ****     * Function Name: EMITE_PutArray
1164:.\Generated_Source\PSoC5/EMITE.c ****     ********************************************************************************
1165:.\Generated_Source\PSoC5/EMITE.c ****     *
1166:.\Generated_Source\PSoC5/EMITE.c ****     * Summary:
1167:.\Generated_Source\PSoC5/EMITE.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:.\Generated_Source\PSoC5/EMITE.c ****     *  transmission.
1169:.\Generated_Source\PSoC5/EMITE.c ****     *
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 34


1170:.\Generated_Source\PSoC5/EMITE.c ****     * Parameters:
1171:.\Generated_Source\PSoC5/EMITE.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:.\Generated_Source\PSoC5/EMITE.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:.\Generated_Source\PSoC5/EMITE.c ****     *             Size parameter.
1174:.\Generated_Source\PSoC5/EMITE.c ****     *
1175:.\Generated_Source\PSoC5/EMITE.c ****     * Return:
1176:.\Generated_Source\PSoC5/EMITE.c ****     *  None.
1177:.\Generated_Source\PSoC5/EMITE.c ****     *
1178:.\Generated_Source\PSoC5/EMITE.c ****     * Global Variables:
1179:.\Generated_Source\PSoC5/EMITE.c ****     *  EMITE_initVar - checked to identify that the component has been
1180:.\Generated_Source\PSoC5/EMITE.c ****     *     initialized.
1181:.\Generated_Source\PSoC5/EMITE.c ****     *
1182:.\Generated_Source\PSoC5/EMITE.c ****     * Reentrant:
1183:.\Generated_Source\PSoC5/EMITE.c ****     *  No.
1184:.\Generated_Source\PSoC5/EMITE.c ****     *
1185:.\Generated_Source\PSoC5/EMITE.c ****     * Theory:
1186:.\Generated_Source\PSoC5/EMITE.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:.\Generated_Source\PSoC5/EMITE.c ****     *  function blocks until the last character of the string is loaded into the
1188:.\Generated_Source\PSoC5/EMITE.c ****     *  TX buffer.
1189:.\Generated_Source\PSoC5/EMITE.c ****     *
1190:.\Generated_Source\PSoC5/EMITE.c ****     *******************************************************************************/
1191:.\Generated_Source\PSoC5/EMITE.c ****     void EMITE_PutArray(const uint8 string[], uint8 byteCount)
1192:.\Generated_Source\PSoC5/EMITE.c ****                                                                     
1193:.\Generated_Source\PSoC5/EMITE.c ****     {
 706              		.loc 1 1193 0
 707              		.cfi_startproc
 708              		@ args = 0, pretend = 0, frame = 0
 709              		@ frame_needed = 0, uses_anonymous_args = 0
 710              	.LVL43:
1194:.\Generated_Source\PSoC5/EMITE.c ****         uint8 bufIndex = 0u;
1195:.\Generated_Source\PSoC5/EMITE.c **** 
1196:.\Generated_Source\PSoC5/EMITE.c ****         /* If not Initialized then skip this function */
1197:.\Generated_Source\PSoC5/EMITE.c ****         if(EMITE_initVar != 0u)
 711              		.loc 1 1197 0
 712 0000 084B     		ldr	r3, .L84
 713 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 714 0004 33B9     		cbnz	r3, .L82
 715 0006 7047     		bx	lr
 716              	.LVL44:
 717              	.L81:
 718              		.cfi_def_cfa_offset 16
 719              		.cfi_offset 4, -16
 720              		.cfi_offset 5, -12
 721              		.cfi_offset 6, -8
 722              		.cfi_offset 14, -4
1198:.\Generated_Source\PSoC5/EMITE.c ****         {
1199:.\Generated_Source\PSoC5/EMITE.c ****             while(bufIndex < byteCount)
1200:.\Generated_Source\PSoC5/EMITE.c ****             {
1201:.\Generated_Source\PSoC5/EMITE.c ****                 EMITE_PutChar(string[bufIndex]);
 723              		.loc 1 1201 0
 724 0008 305D     		ldrb	r0, [r6, r4]	@ zero_extendqisi2
 725 000a FFF7FEFF 		bl	EMITE_PutChar
 726              	.LVL45:
1202:.\Generated_Source\PSoC5/EMITE.c ****                 bufIndex++;
 727              		.loc 1 1202 0
 728 000e 0134     		adds	r4, r4, #1
 729              	.LVL46:
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 35


 730 0010 E4B2     		uxtb	r4, r4
 731              	.LVL47:
 732 0012 03E0     		b	.L79
 733              	.LVL48:
 734              	.L82:
 735              		.cfi_def_cfa_offset 0
 736              		.cfi_restore 4
 737              		.cfi_restore 5
 738              		.cfi_restore 6
 739              		.cfi_restore 14
1193:.\Generated_Source\PSoC5/EMITE.c ****         uint8 bufIndex = 0u;
 740              		.loc 1 1193 0
 741 0014 70B5     		push	{r4, r5, r6, lr}
 742              		.cfi_def_cfa_offset 16
 743              		.cfi_offset 4, -16
 744              		.cfi_offset 5, -12
 745              		.cfi_offset 6, -8
 746              		.cfi_offset 14, -4
 747 0016 0D46     		mov	r5, r1
 748 0018 0646     		mov	r6, r0
 749 001a 0024     		movs	r4, #0
 750              	.LVL49:
 751              	.L79:
1199:.\Generated_Source\PSoC5/EMITE.c ****             {
 752              		.loc 1 1199 0
 753 001c AC42     		cmp	r4, r5
 754 001e F3D3     		bcc	.L81
 755 0020 70BD     		pop	{r4, r5, r6, pc}
 756              	.LVL50:
 757              	.L85:
 758 0022 00BF     		.align	2
 759              	.L84:
 760 0024 00000000 		.word	.LANCHOR0
 761              		.cfi_endproc
 762              	.LFE21:
 763              		.size	EMITE_PutArray, .-EMITE_PutArray
 764              		.section	.text.EMITE_PutCRLF,"ax",%progbits
 765              		.align	2
 766              		.global	EMITE_PutCRLF
 767              		.thumb
 768              		.thumb_func
 769              		.type	EMITE_PutCRLF, %function
 770              	EMITE_PutCRLF:
 771              	.LFB22:
1203:.\Generated_Source\PSoC5/EMITE.c ****             }
1204:.\Generated_Source\PSoC5/EMITE.c ****         }
1205:.\Generated_Source\PSoC5/EMITE.c ****     }
1206:.\Generated_Source\PSoC5/EMITE.c **** 
1207:.\Generated_Source\PSoC5/EMITE.c **** 
1208:.\Generated_Source\PSoC5/EMITE.c ****     /*******************************************************************************
1209:.\Generated_Source\PSoC5/EMITE.c ****     * Function Name: EMITE_PutCRLF
1210:.\Generated_Source\PSoC5/EMITE.c ****     ********************************************************************************
1211:.\Generated_Source\PSoC5/EMITE.c ****     *
1212:.\Generated_Source\PSoC5/EMITE.c ****     * Summary:
1213:.\Generated_Source\PSoC5/EMITE.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:.\Generated_Source\PSoC5/EMITE.c ****     *  (0x0A) to the transmit buffer.
1215:.\Generated_Source\PSoC5/EMITE.c ****     *
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 36


1216:.\Generated_Source\PSoC5/EMITE.c ****     * Parameters:
1217:.\Generated_Source\PSoC5/EMITE.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:.\Generated_Source\PSoC5/EMITE.c ****     *
1219:.\Generated_Source\PSoC5/EMITE.c ****     * Return:
1220:.\Generated_Source\PSoC5/EMITE.c ****     *  None.
1221:.\Generated_Source\PSoC5/EMITE.c ****     *
1222:.\Generated_Source\PSoC5/EMITE.c ****     * Global Variables:
1223:.\Generated_Source\PSoC5/EMITE.c ****     *  EMITE_initVar - checked to identify that the component has been
1224:.\Generated_Source\PSoC5/EMITE.c ****     *     initialized.
1225:.\Generated_Source\PSoC5/EMITE.c ****     *
1226:.\Generated_Source\PSoC5/EMITE.c ****     * Reentrant:
1227:.\Generated_Source\PSoC5/EMITE.c ****     *  No.
1228:.\Generated_Source\PSoC5/EMITE.c ****     *
1229:.\Generated_Source\PSoC5/EMITE.c ****     *******************************************************************************/
1230:.\Generated_Source\PSoC5/EMITE.c ****     void EMITE_PutCRLF(uint8 txDataByte) 
1231:.\Generated_Source\PSoC5/EMITE.c ****     {
 772              		.loc 1 1231 0
 773              		.cfi_startproc
 774              		@ args = 0, pretend = 0, frame = 0
 775              		@ frame_needed = 0, uses_anonymous_args = 0
 776              	.LVL51:
 777 0000 08B5     		push	{r3, lr}
 778              		.cfi_def_cfa_offset 8
 779              		.cfi_offset 3, -8
 780              		.cfi_offset 14, -4
1232:.\Generated_Source\PSoC5/EMITE.c ****         /* If not Initialized then skip this function */
1233:.\Generated_Source\PSoC5/EMITE.c ****         if(EMITE_initVar != 0u)
 781              		.loc 1 1233 0
 782 0002 064B     		ldr	r3, .L89
 783 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 784 0006 3BB1     		cbz	r3, .L86
1234:.\Generated_Source\PSoC5/EMITE.c ****         {
1235:.\Generated_Source\PSoC5/EMITE.c ****             EMITE_PutChar(txDataByte);
 785              		.loc 1 1235 0
 786 0008 FFF7FEFF 		bl	EMITE_PutChar
 787              	.LVL52:
1236:.\Generated_Source\PSoC5/EMITE.c ****             EMITE_PutChar(0x0Du);
 788              		.loc 1 1236 0
 789 000c 0D20     		movs	r0, #13
 790 000e FFF7FEFF 		bl	EMITE_PutChar
 791              	.LVL53:
1237:.\Generated_Source\PSoC5/EMITE.c ****             EMITE_PutChar(0x0Au);
 792              		.loc 1 1237 0
 793 0012 0A20     		movs	r0, #10
 794 0014 FFF7FEFF 		bl	EMITE_PutChar
 795              	.LVL54:
 796              	.L86:
 797 0018 08BD     		pop	{r3, pc}
 798              	.L90:
 799 001a 00BF     		.align	2
 800              	.L89:
 801 001c 00000000 		.word	.LANCHOR0
 802              		.cfi_endproc
 803              	.LFE22:
 804              		.size	EMITE_PutCRLF, .-EMITE_PutCRLF
 805              		.section	.text.EMITE_GetTxBufferSize,"ax",%progbits
 806              		.align	2
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 37


 807              		.global	EMITE_GetTxBufferSize
 808              		.thumb
 809              		.thumb_func
 810              		.type	EMITE_GetTxBufferSize, %function
 811              	EMITE_GetTxBufferSize:
 812              	.LFB23:
1238:.\Generated_Source\PSoC5/EMITE.c ****         }
1239:.\Generated_Source\PSoC5/EMITE.c ****     }
1240:.\Generated_Source\PSoC5/EMITE.c **** 
1241:.\Generated_Source\PSoC5/EMITE.c **** 
1242:.\Generated_Source\PSoC5/EMITE.c ****     /*******************************************************************************
1243:.\Generated_Source\PSoC5/EMITE.c ****     * Function Name: EMITE_GetTxBufferSize
1244:.\Generated_Source\PSoC5/EMITE.c ****     ********************************************************************************
1245:.\Generated_Source\PSoC5/EMITE.c ****     *
1246:.\Generated_Source\PSoC5/EMITE.c ****     * Summary:
1247:.\Generated_Source\PSoC5/EMITE.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:.\Generated_Source\PSoC5/EMITE.c ****     *  transmitted.
1249:.\Generated_Source\PSoC5/EMITE.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:.\Generated_Source\PSoC5/EMITE.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:.\Generated_Source\PSoC5/EMITE.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:.\Generated_Source\PSoC5/EMITE.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:.\Generated_Source\PSoC5/EMITE.c ****     *    TX FIFO do not count.
1254:.\Generated_Source\PSoC5/EMITE.c ****     *
1255:.\Generated_Source\PSoC5/EMITE.c ****     * Parameters:
1256:.\Generated_Source\PSoC5/EMITE.c ****     *  None.
1257:.\Generated_Source\PSoC5/EMITE.c ****     *
1258:.\Generated_Source\PSoC5/EMITE.c ****     * Return:
1259:.\Generated_Source\PSoC5/EMITE.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:.\Generated_Source\PSoC5/EMITE.c ****     *  Buffer Size parameter.
1261:.\Generated_Source\PSoC5/EMITE.c ****     *
1262:.\Generated_Source\PSoC5/EMITE.c ****     * Global Variables:
1263:.\Generated_Source\PSoC5/EMITE.c ****     *  EMITE_txBufferWrite - used to calculate left space.
1264:.\Generated_Source\PSoC5/EMITE.c ****     *  EMITE_txBufferRead - used to calculate left space.
1265:.\Generated_Source\PSoC5/EMITE.c ****     *
1266:.\Generated_Source\PSoC5/EMITE.c ****     * Reentrant:
1267:.\Generated_Source\PSoC5/EMITE.c ****     *  No.
1268:.\Generated_Source\PSoC5/EMITE.c ****     *
1269:.\Generated_Source\PSoC5/EMITE.c ****     * Theory:
1270:.\Generated_Source\PSoC5/EMITE.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:.\Generated_Source\PSoC5/EMITE.c ****     *
1272:.\Generated_Source\PSoC5/EMITE.c ****     *******************************************************************************/
1273:.\Generated_Source\PSoC5/EMITE.c ****     uint8 EMITE_GetTxBufferSize(void)
1274:.\Generated_Source\PSoC5/EMITE.c ****                                                             
1275:.\Generated_Source\PSoC5/EMITE.c ****     {
 813              		.loc 1 1275 0
 814              		.cfi_startproc
 815              		@ args = 0, pretend = 0, frame = 0
 816              		@ frame_needed = 0, uses_anonymous_args = 0
 817              		@ link register save eliminated.
1276:.\Generated_Source\PSoC5/EMITE.c ****         uint8 size;
1277:.\Generated_Source\PSoC5/EMITE.c **** 
1278:.\Generated_Source\PSoC5/EMITE.c ****     #if (EMITE_TX_INTERRUPT_ENABLED)
1279:.\Generated_Source\PSoC5/EMITE.c **** 
1280:.\Generated_Source\PSoC5/EMITE.c ****         /* Protect variables that could change on interrupt. */
1281:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_DisableTxInt();
1282:.\Generated_Source\PSoC5/EMITE.c **** 
1283:.\Generated_Source\PSoC5/EMITE.c ****         if(EMITE_txBufferRead == EMITE_txBufferWrite)
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 38


1284:.\Generated_Source\PSoC5/EMITE.c ****         {
1285:.\Generated_Source\PSoC5/EMITE.c ****             size = 0u;
1286:.\Generated_Source\PSoC5/EMITE.c ****         }
1287:.\Generated_Source\PSoC5/EMITE.c ****         else if(EMITE_txBufferRead < EMITE_txBufferWrite)
1288:.\Generated_Source\PSoC5/EMITE.c ****         {
1289:.\Generated_Source\PSoC5/EMITE.c ****             size = (EMITE_txBufferWrite - EMITE_txBufferRead);
1290:.\Generated_Source\PSoC5/EMITE.c ****         }
1291:.\Generated_Source\PSoC5/EMITE.c ****         else
1292:.\Generated_Source\PSoC5/EMITE.c ****         {
1293:.\Generated_Source\PSoC5/EMITE.c ****             size = (EMITE_TX_BUFFER_SIZE - EMITE_txBufferRead) +
1294:.\Generated_Source\PSoC5/EMITE.c ****                     EMITE_txBufferWrite;
1295:.\Generated_Source\PSoC5/EMITE.c ****         }
1296:.\Generated_Source\PSoC5/EMITE.c **** 
1297:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_EnableTxInt();
1298:.\Generated_Source\PSoC5/EMITE.c **** 
1299:.\Generated_Source\PSoC5/EMITE.c ****     #else
1300:.\Generated_Source\PSoC5/EMITE.c **** 
1301:.\Generated_Source\PSoC5/EMITE.c ****         size = EMITE_TXSTATUS_REG;
 818              		.loc 1 1301 0
 819 0000 074B     		ldr	r3, .L95
 820 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 821 0004 DBB2     		uxtb	r3, r3
 822              	.LVL55:
1302:.\Generated_Source\PSoC5/EMITE.c **** 
1303:.\Generated_Source\PSoC5/EMITE.c ****         /* Is the fifo is full. */
1304:.\Generated_Source\PSoC5/EMITE.c ****         if((size & EMITE_TX_STS_FIFO_FULL) != 0u)
 823              		.loc 1 1304 0
 824 0006 13F0200F 		tst	r3, #32
 825 000a 04D1     		bne	.L93
1305:.\Generated_Source\PSoC5/EMITE.c ****         {
1306:.\Generated_Source\PSoC5/EMITE.c ****             size = EMITE_FIFO_LENGTH;
1307:.\Generated_Source\PSoC5/EMITE.c ****         }
1308:.\Generated_Source\PSoC5/EMITE.c ****         else if((size & EMITE_TX_STS_FIFO_EMPTY) != 0u)
 826              		.loc 1 1308 0
 827 000c 13F0020F 		tst	r3, #2
 828 0010 03D0     		beq	.L94
1309:.\Generated_Source\PSoC5/EMITE.c ****         {
1310:.\Generated_Source\PSoC5/EMITE.c ****             size = 0u;
 829              		.loc 1 1310 0
 830 0012 0020     		movs	r0, #0
 831 0014 7047     		bx	lr
 832              	.L93:
1306:.\Generated_Source\PSoC5/EMITE.c ****         }
 833              		.loc 1 1306 0
 834 0016 0420     		movs	r0, #4
 835 0018 7047     		bx	lr
 836              	.L94:
1311:.\Generated_Source\PSoC5/EMITE.c ****         }
1312:.\Generated_Source\PSoC5/EMITE.c ****         else
1313:.\Generated_Source\PSoC5/EMITE.c ****         {
1314:.\Generated_Source\PSoC5/EMITE.c ****             /* We only know there is data in the fifo. */
1315:.\Generated_Source\PSoC5/EMITE.c ****             size = 1u;
 837              		.loc 1 1315 0
 838 001a 0120     		movs	r0, #1
 839              	.LVL56:
1316:.\Generated_Source\PSoC5/EMITE.c ****         }
1317:.\Generated_Source\PSoC5/EMITE.c **** 
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 39


1318:.\Generated_Source\PSoC5/EMITE.c ****     #endif /* (EMITE_TX_INTERRUPT_ENABLED) */
1319:.\Generated_Source\PSoC5/EMITE.c **** 
1320:.\Generated_Source\PSoC5/EMITE.c ****     return(size);
1321:.\Generated_Source\PSoC5/EMITE.c ****     }
 840              		.loc 1 1321 0
 841 001c 7047     		bx	lr
 842              	.L96:
 843 001e 00BF     		.align	2
 844              	.L95:
 845 0020 65650040 		.word	1073767781
 846              		.cfi_endproc
 847              	.LFE23:
 848              		.size	EMITE_GetTxBufferSize, .-EMITE_GetTxBufferSize
 849              		.section	.text.EMITE_ClearTxBuffer,"ax",%progbits
 850              		.align	2
 851              		.global	EMITE_ClearTxBuffer
 852              		.thumb
 853              		.thumb_func
 854              		.type	EMITE_ClearTxBuffer, %function
 855              	EMITE_ClearTxBuffer:
 856              	.LFB24:
1322:.\Generated_Source\PSoC5/EMITE.c **** 
1323:.\Generated_Source\PSoC5/EMITE.c **** 
1324:.\Generated_Source\PSoC5/EMITE.c ****     /*******************************************************************************
1325:.\Generated_Source\PSoC5/EMITE.c ****     * Function Name: EMITE_ClearTxBuffer
1326:.\Generated_Source\PSoC5/EMITE.c ****     ********************************************************************************
1327:.\Generated_Source\PSoC5/EMITE.c ****     *
1328:.\Generated_Source\PSoC5/EMITE.c ****     * Summary:
1329:.\Generated_Source\PSoC5/EMITE.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:.\Generated_Source\PSoC5/EMITE.c ****     *
1331:.\Generated_Source\PSoC5/EMITE.c ****     * Parameters:
1332:.\Generated_Source\PSoC5/EMITE.c ****     *  None.
1333:.\Generated_Source\PSoC5/EMITE.c ****     *
1334:.\Generated_Source\PSoC5/EMITE.c ****     * Return:
1335:.\Generated_Source\PSoC5/EMITE.c ****     *  None.
1336:.\Generated_Source\PSoC5/EMITE.c ****     *
1337:.\Generated_Source\PSoC5/EMITE.c ****     * Global Variables:
1338:.\Generated_Source\PSoC5/EMITE.c ****     *  EMITE_txBufferWrite - cleared to zero.
1339:.\Generated_Source\PSoC5/EMITE.c ****     *  EMITE_txBufferRead - cleared to zero.
1340:.\Generated_Source\PSoC5/EMITE.c ****     *
1341:.\Generated_Source\PSoC5/EMITE.c ****     * Reentrant:
1342:.\Generated_Source\PSoC5/EMITE.c ****     *  No.
1343:.\Generated_Source\PSoC5/EMITE.c ****     *
1344:.\Generated_Source\PSoC5/EMITE.c ****     * Theory:
1345:.\Generated_Source\PSoC5/EMITE.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:.\Generated_Source\PSoC5/EMITE.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:.\Generated_Source\PSoC5/EMITE.c ****     *  remained in the RAM.
1348:.\Generated_Source\PSoC5/EMITE.c ****     *
1349:.\Generated_Source\PSoC5/EMITE.c ****     * Side Effects:
1350:.\Generated_Source\PSoC5/EMITE.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:.\Generated_Source\PSoC5/EMITE.c ****     *  transmitting finishes transmitting.
1352:.\Generated_Source\PSoC5/EMITE.c ****     *
1353:.\Generated_Source\PSoC5/EMITE.c ****     *******************************************************************************/
1354:.\Generated_Source\PSoC5/EMITE.c ****     void EMITE_ClearTxBuffer(void) 
1355:.\Generated_Source\PSoC5/EMITE.c ****     {
 857              		.loc 1 1355 0
 858              		.cfi_startproc
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 40


 859              		@ args = 0, pretend = 0, frame = 0
 860              		@ frame_needed = 0, uses_anonymous_args = 0
 861 0000 08B5     		push	{r3, lr}
 862              		.cfi_def_cfa_offset 8
 863              		.cfi_offset 3, -8
 864              		.cfi_offset 14, -4
1356:.\Generated_Source\PSoC5/EMITE.c ****         uint8 enableInterrupts;
1357:.\Generated_Source\PSoC5/EMITE.c **** 
1358:.\Generated_Source\PSoC5/EMITE.c ****         enableInterrupts = CyEnterCriticalSection();
 865              		.loc 1 1358 0
 866 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 867              	.LVL57:
1359:.\Generated_Source\PSoC5/EMITE.c ****         /* Clear the HW FIFO */
1360:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_TXDATA_AUX_CTL_REG |= (uint8)  EMITE_TX_FIFO_CLR;
 868              		.loc 1 1360 0
 869 0006 064B     		ldr	r3, .L99
 870 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 871 000a 42F00202 		orr	r2, r2, #2
 872 000e 1A70     		strb	r2, [r3]
1361:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_TXDATA_AUX_CTL_REG &= (uint8) ~EMITE_TX_FIFO_CLR;
 873              		.loc 1 1361 0
 874 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 875 0012 02F0FD02 		and	r2, r2, #253
 876 0016 1A70     		strb	r2, [r3]
1362:.\Generated_Source\PSoC5/EMITE.c ****         CyExitCriticalSection(enableInterrupts);
 877              		.loc 1 1362 0
 878 0018 FFF7FEFF 		bl	CyExitCriticalSection
 879              	.LVL58:
 880 001c 08BD     		pop	{r3, pc}
 881              	.L100:
 882 001e 00BF     		.align	2
 883              	.L99:
 884 0020 97640040 		.word	1073767575
 885              		.cfi_endproc
 886              	.LFE24:
 887              		.size	EMITE_ClearTxBuffer, .-EMITE_ClearTxBuffer
 888              		.section	.text.EMITE_SendBreak,"ax",%progbits
 889              		.align	2
 890              		.global	EMITE_SendBreak
 891              		.thumb
 892              		.thumb_func
 893              		.type	EMITE_SendBreak, %function
 894              	EMITE_SendBreak:
 895              	.LFB25:
1363:.\Generated_Source\PSoC5/EMITE.c **** 
1364:.\Generated_Source\PSoC5/EMITE.c ****     #if (EMITE_TX_INTERRUPT_ENABLED)
1365:.\Generated_Source\PSoC5/EMITE.c **** 
1366:.\Generated_Source\PSoC5/EMITE.c ****         /* Protect variables that could change on interrupt. */
1367:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_DisableTxInt();
1368:.\Generated_Source\PSoC5/EMITE.c **** 
1369:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_txBufferRead = 0u;
1370:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_txBufferWrite = 0u;
1371:.\Generated_Source\PSoC5/EMITE.c **** 
1372:.\Generated_Source\PSoC5/EMITE.c ****         /* Enable Tx interrupt. */
1373:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_EnableTxInt();
1374:.\Generated_Source\PSoC5/EMITE.c **** 
1375:.\Generated_Source\PSoC5/EMITE.c ****     #endif /* (EMITE_TX_INTERRUPT_ENABLED) */
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 41


1376:.\Generated_Source\PSoC5/EMITE.c ****     }
1377:.\Generated_Source\PSoC5/EMITE.c **** 
1378:.\Generated_Source\PSoC5/EMITE.c **** 
1379:.\Generated_Source\PSoC5/EMITE.c ****     /*******************************************************************************
1380:.\Generated_Source\PSoC5/EMITE.c ****     * Function Name: EMITE_SendBreak
1381:.\Generated_Source\PSoC5/EMITE.c ****     ********************************************************************************
1382:.\Generated_Source\PSoC5/EMITE.c ****     *
1383:.\Generated_Source\PSoC5/EMITE.c ****     * Summary:
1384:.\Generated_Source\PSoC5/EMITE.c ****     *  Transmits a break signal on the bus.
1385:.\Generated_Source\PSoC5/EMITE.c ****     *
1386:.\Generated_Source\PSoC5/EMITE.c ****     * Parameters:
1387:.\Generated_Source\PSoC5/EMITE.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:.\Generated_Source\PSoC5/EMITE.c ****     *   EMITE_SEND_BREAK - Initialize registers for break, send the Break
1389:.\Generated_Source\PSoC5/EMITE.c ****     *       signal and return immediately.
1390:.\Generated_Source\PSoC5/EMITE.c ****     *   EMITE_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:.\Generated_Source\PSoC5/EMITE.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:.\Generated_Source\PSoC5/EMITE.c ****     *   EMITE_REINIT - Reinitialize registers to normal transmission mode
1393:.\Generated_Source\PSoC5/EMITE.c ****     *       then return.
1394:.\Generated_Source\PSoC5/EMITE.c ****     *   EMITE_SEND_WAIT_REINIT - Performs both options: 
1395:.\Generated_Source\PSoC5/EMITE.c ****     *      EMITE_SEND_BREAK and EMITE_WAIT_FOR_COMPLETE_REINIT.
1396:.\Generated_Source\PSoC5/EMITE.c ****     *      This option is recommended for most cases.
1397:.\Generated_Source\PSoC5/EMITE.c ****     *
1398:.\Generated_Source\PSoC5/EMITE.c ****     * Return:
1399:.\Generated_Source\PSoC5/EMITE.c ****     *  None.
1400:.\Generated_Source\PSoC5/EMITE.c ****     *
1401:.\Generated_Source\PSoC5/EMITE.c ****     * Global Variables:
1402:.\Generated_Source\PSoC5/EMITE.c ****     *  EMITE_initVar - checked to identify that the component has been
1403:.\Generated_Source\PSoC5/EMITE.c ****     *     initialized.
1404:.\Generated_Source\PSoC5/EMITE.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:.\Generated_Source\PSoC5/EMITE.c ****     *
1406:.\Generated_Source\PSoC5/EMITE.c ****     * Reentrant:
1407:.\Generated_Source\PSoC5/EMITE.c ****     *  No.
1408:.\Generated_Source\PSoC5/EMITE.c ****     *
1409:.\Generated_Source\PSoC5/EMITE.c ****     * Theory:
1410:.\Generated_Source\PSoC5/EMITE.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:.\Generated_Source\PSoC5/EMITE.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:.\Generated_Source\PSoC5/EMITE.c ****     *  operation.
1413:.\Generated_Source\PSoC5/EMITE.c ****     *  There are 3 variants for this API usage:
1414:.\Generated_Source\PSoC5/EMITE.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:.\Generated_Source\PSoC5/EMITE.c ****     *     configuration returning. Function will block CPU until transmission
1416:.\Generated_Source\PSoC5/EMITE.c ****     *     complete.
1417:.\Generated_Source\PSoC5/EMITE.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:.\Generated_Source\PSoC5/EMITE.c ****     *     operation
1419:.\Generated_Source\PSoC5/EMITE.c ****     *     Example for this case:
1420:.\Generated_Source\PSoC5/EMITE.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:.\Generated_Source\PSoC5/EMITE.c ****     *         Add your code here to use CPU time
1422:.\Generated_Source\PSoC5/EMITE.c ****     *     SendBreak(1);     - complete Break operation
1423:.\Generated_Source\PSoC5/EMITE.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:.\Generated_Source\PSoC5/EMITE.c ****     *     complete break operation.
1425:.\Generated_Source\PSoC5/EMITE.c ****     *     Example for this case:
1426:.\Generated_Source\PSoC5/EMITE.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:.\Generated_Source\PSoC5/EMITE.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:.\Generated_Source\PSoC5/EMITE.c ****     *         Add your code here to use CPU time
1429:.\Generated_Source\PSoC5/EMITE.c ****     *     When interrupt appear with EMITE_TX_STS_COMPLETE status:
1430:.\Generated_Source\PSoC5/EMITE.c ****     *     SendBreak(2);     - complete Break operation
1431:.\Generated_Source\PSoC5/EMITE.c ****     *
1432:.\Generated_Source\PSoC5/EMITE.c ****     * Side Effects:
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 42


1433:.\Generated_Source\PSoC5/EMITE.c ****     *  The EMITE_SendBreak() function initializes registers to send a
1434:.\Generated_Source\PSoC5/EMITE.c ****     *  break signal.
1435:.\Generated_Source\PSoC5/EMITE.c ****     *  Break signal length depends on the break signal bits configuration.
1436:.\Generated_Source\PSoC5/EMITE.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:.\Generated_Source\PSoC5/EMITE.c ****     *  communication can continue.
1438:.\Generated_Source\PSoC5/EMITE.c ****     *
1439:.\Generated_Source\PSoC5/EMITE.c ****     *******************************************************************************/
1440:.\Generated_Source\PSoC5/EMITE.c ****     void EMITE_SendBreak(uint8 retMode) 
1441:.\Generated_Source\PSoC5/EMITE.c ****     {
 896              		.loc 1 1441 0
 897              		.cfi_startproc
 898              		@ args = 0, pretend = 0, frame = 0
 899              		@ frame_needed = 0, uses_anonymous_args = 0
 900              	.LVL59:
1442:.\Generated_Source\PSoC5/EMITE.c **** 
1443:.\Generated_Source\PSoC5/EMITE.c ****         /* If not Initialized then skip this function*/
1444:.\Generated_Source\PSoC5/EMITE.c ****         if(EMITE_initVar != 0u)
 901              		.loc 1 1444 0
 902 0000 154B     		ldr	r3, .L110
 903 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 904 0004 3BB3     		cbz	r3, .L109
1441:.\Generated_Source\PSoC5/EMITE.c **** 
 905              		.loc 1 1441 0
 906 0006 10B5     		push	{r4, lr}
 907              		.cfi_def_cfa_offset 8
 908              		.cfi_offset 4, -8
 909              		.cfi_offset 14, -4
 910 0008 0446     		mov	r4, r0
 911              	.LBB2:
1445:.\Generated_Source\PSoC5/EMITE.c ****         {
1446:.\Generated_Source\PSoC5/EMITE.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:.\Generated_Source\PSoC5/EMITE.c ****             /* When that is done then reset the counter value back */
1448:.\Generated_Source\PSoC5/EMITE.c ****             uint8 tmpStat;
1449:.\Generated_Source\PSoC5/EMITE.c **** 
1450:.\Generated_Source\PSoC5/EMITE.c ****         #if(EMITE_HD_ENABLED) /* Half Duplex mode*/
1451:.\Generated_Source\PSoC5/EMITE.c **** 
1452:.\Generated_Source\PSoC5/EMITE.c ****             if( (retMode == EMITE_SEND_BREAK) ||
 912              		.loc 1 1452 0
 913 000a 08B1     		cbz	r0, .L103
 914              		.loc 1 1452 0 is_stmt 0 discriminator 1
 915 000c 0328     		cmp	r0, #3
 916 000e 0ED1     		bne	.L104
 917              	.L103:
1453:.\Generated_Source\PSoC5/EMITE.c ****                 (retMode == EMITE_SEND_WAIT_REINIT ) )
1454:.\Generated_Source\PSoC5/EMITE.c ****             {
1455:.\Generated_Source\PSoC5/EMITE.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:.\Generated_Source\PSoC5/EMITE.c ****                 EMITE_WriteControlRegister(EMITE_ReadControlRegister() |
 918              		.loc 1 1456 0 is_stmt 1
 919 0010 FFF7FEFF 		bl	EMITE_ReadControlRegister
 920              	.LVL60:
 921 0014 40F00200 		orr	r0, r0, #2
 922 0018 C0B2     		uxtb	r0, r0
 923 001a FFF7FEFF 		bl	EMITE_WriteControlRegister
 924              	.LVL61:
1457:.\Generated_Source\PSoC5/EMITE.c ****                                                       EMITE_CTRL_HD_SEND_BREAK);
1458:.\Generated_Source\PSoC5/EMITE.c ****                 /* Send zeros */
1459:.\Generated_Source\PSoC5/EMITE.c ****                 EMITE_TXDATA_REG = 0u;
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 43


 925              		.loc 1 1459 0
 926 001e 0022     		movs	r2, #0
 927 0020 0E4B     		ldr	r3, .L110+4
 928 0022 1A70     		strb	r2, [r3]
 929              	.L105:
1460:.\Generated_Source\PSoC5/EMITE.c **** 
1461:.\Generated_Source\PSoC5/EMITE.c ****                 do /* Wait until transmit starts */
1462:.\Generated_Source\PSoC5/EMITE.c ****                 {
1463:.\Generated_Source\PSoC5/EMITE.c ****                     tmpStat = EMITE_TXSTATUS_REG;
 930              		.loc 1 1463 0 discriminator 1
 931 0024 0E4B     		ldr	r3, .L110+8
 932 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 933              	.LVL62:
1464:.\Generated_Source\PSoC5/EMITE.c ****                 }
1465:.\Generated_Source\PSoC5/EMITE.c ****                 while((tmpStat & EMITE_TX_STS_FIFO_EMPTY) != 0u);
 934              		.loc 1 1465 0 discriminator 1
 935 0028 13F0020F 		tst	r3, #2
 936 002c FAD1     		bne	.L105
 937              	.LVL63:
 938              	.L104:
1466:.\Generated_Source\PSoC5/EMITE.c ****             }
1467:.\Generated_Source\PSoC5/EMITE.c **** 
1468:.\Generated_Source\PSoC5/EMITE.c ****             if( (retMode == EMITE_WAIT_FOR_COMPLETE_REINIT) ||
 939              		.loc 1 1468 0
 940 002e 012C     		cmp	r4, #1
 941 0030 01D0     		beq	.L106
 942              		.loc 1 1468 0 is_stmt 0 discriminator 1
 943 0032 032C     		cmp	r4, #3
 944 0034 04D1     		bne	.L107
 945              	.L106:
1469:.\Generated_Source\PSoC5/EMITE.c ****                 (retMode == EMITE_SEND_WAIT_REINIT) )
1470:.\Generated_Source\PSoC5/EMITE.c ****             {
1471:.\Generated_Source\PSoC5/EMITE.c ****                 do /* Wait until transmit complete */
1472:.\Generated_Source\PSoC5/EMITE.c ****                 {
1473:.\Generated_Source\PSoC5/EMITE.c ****                     tmpStat = EMITE_TXSTATUS_REG;
 946              		.loc 1 1473 0 is_stmt 1 discriminator 1
 947 0036 0A4B     		ldr	r3, .L110+8
 948 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 949              	.LVL64:
1474:.\Generated_Source\PSoC5/EMITE.c ****                 }
1475:.\Generated_Source\PSoC5/EMITE.c ****                 while(((uint8)~tmpStat & EMITE_TX_STS_COMPLETE) != 0u);
 950              		.loc 1 1475 0 discriminator 1
 951 003a 13F0010F 		tst	r3, #1
 952 003e FAD0     		beq	.L106
 953              	.LVL65:
 954              	.L107:
1476:.\Generated_Source\PSoC5/EMITE.c ****             }
1477:.\Generated_Source\PSoC5/EMITE.c **** 
1478:.\Generated_Source\PSoC5/EMITE.c ****             if( (retMode == EMITE_WAIT_FOR_COMPLETE_REINIT) ||
1479:.\Generated_Source\PSoC5/EMITE.c ****                 (retMode == EMITE_REINIT) ||
 955              		.loc 1 1479 0
 956 0040 013C     		subs	r4, r4, #1
 957 0042 E4B2     		uxtb	r4, r4
1478:.\Generated_Source\PSoC5/EMITE.c ****                 (retMode == EMITE_REINIT) ||
 958              		.loc 1 1478 0
 959 0044 022C     		cmp	r4, #2
 960 0046 05D8     		bhi	.L101
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 44


1480:.\Generated_Source\PSoC5/EMITE.c ****                 (retMode == EMITE_SEND_WAIT_REINIT) )
1481:.\Generated_Source\PSoC5/EMITE.c ****             {
1482:.\Generated_Source\PSoC5/EMITE.c ****                 EMITE_WriteControlRegister(EMITE_ReadControlRegister() &
 961              		.loc 1 1482 0
 962 0048 FFF7FEFF 		bl	EMITE_ReadControlRegister
 963              	.LVL66:
 964 004c 00F0FD00 		and	r0, r0, #253
 965 0050 FFF7FEFF 		bl	EMITE_WriteControlRegister
 966              	.LVL67:
 967              	.L101:
 968 0054 10BD     		pop	{r4, pc}
 969              	.LVL68:
 970              	.L109:
 971              		.cfi_def_cfa_offset 0
 972              		.cfi_restore 4
 973              		.cfi_restore 14
 974 0056 7047     		bx	lr
 975              	.L111:
 976              		.align	2
 977              	.L110:
 978 0058 00000000 		.word	.LANCHOR0
 979 005c 57640040 		.word	1073767511
 980 0060 65650040 		.word	1073767781
 981              	.LBE2:
 982              		.cfi_endproc
 983              	.LFE25:
 984              		.size	EMITE_SendBreak, .-EMITE_SendBreak
 985              		.section	.text.EMITE_SetTxAddressMode,"ax",%progbits
 986              		.align	2
 987              		.global	EMITE_SetTxAddressMode
 988              		.thumb
 989              		.thumb_func
 990              		.type	EMITE_SetTxAddressMode, %function
 991              	EMITE_SetTxAddressMode:
 992              	.LFB26:
1483:.\Generated_Source\PSoC5/EMITE.c ****                                               (uint8)~EMITE_CTRL_HD_SEND_BREAK);
1484:.\Generated_Source\PSoC5/EMITE.c ****             }
1485:.\Generated_Source\PSoC5/EMITE.c **** 
1486:.\Generated_Source\PSoC5/EMITE.c ****         #else /* EMITE_HD_ENABLED Full Duplex mode */
1487:.\Generated_Source\PSoC5/EMITE.c **** 
1488:.\Generated_Source\PSoC5/EMITE.c ****             static uint8 txPeriod;
1489:.\Generated_Source\PSoC5/EMITE.c **** 
1490:.\Generated_Source\PSoC5/EMITE.c ****             if( (retMode == EMITE_SEND_BREAK) ||
1491:.\Generated_Source\PSoC5/EMITE.c ****                 (retMode == EMITE_SEND_WAIT_REINIT) )
1492:.\Generated_Source\PSoC5/EMITE.c ****             {
1493:.\Generated_Source\PSoC5/EMITE.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:.\Generated_Source\PSoC5/EMITE.c ****                 #if( (EMITE_PARITY_TYPE != EMITE__B_UART__NONE_REVB) || \
1495:.\Generated_Source\PSoC5/EMITE.c ****                                     (EMITE_PARITY_TYPE_SW != 0u) )
1496:.\Generated_Source\PSoC5/EMITE.c ****                     EMITE_WriteControlRegister(EMITE_ReadControlRegister() |
1497:.\Generated_Source\PSoC5/EMITE.c ****                                                           EMITE_CTRL_HD_SEND_BREAK);
1498:.\Generated_Source\PSoC5/EMITE.c ****                 #endif /* End EMITE_PARITY_TYPE != EMITE__B_UART__NONE_REVB  */
1499:.\Generated_Source\PSoC5/EMITE.c **** 
1500:.\Generated_Source\PSoC5/EMITE.c ****                 #if(EMITE_TXCLKGEN_DP)
1501:.\Generated_Source\PSoC5/EMITE.c ****                     txPeriod = EMITE_TXBITCLKTX_COMPLETE_REG;
1502:.\Generated_Source\PSoC5/EMITE.c ****                     EMITE_TXBITCLKTX_COMPLETE_REG = EMITE_TXBITCTR_BREAKBITS;
1503:.\Generated_Source\PSoC5/EMITE.c ****                 #else
1504:.\Generated_Source\PSoC5/EMITE.c ****                     txPeriod = EMITE_TXBITCTR_PERIOD_REG;
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 45


1505:.\Generated_Source\PSoC5/EMITE.c ****                     EMITE_TXBITCTR_PERIOD_REG = EMITE_TXBITCTR_BREAKBITS8X;
1506:.\Generated_Source\PSoC5/EMITE.c ****                 #endif /* End EMITE_TXCLKGEN_DP */
1507:.\Generated_Source\PSoC5/EMITE.c **** 
1508:.\Generated_Source\PSoC5/EMITE.c ****                 /* Send zeros */
1509:.\Generated_Source\PSoC5/EMITE.c ****                 EMITE_TXDATA_REG = 0u;
1510:.\Generated_Source\PSoC5/EMITE.c **** 
1511:.\Generated_Source\PSoC5/EMITE.c ****                 do /* Wait until transmit starts */
1512:.\Generated_Source\PSoC5/EMITE.c ****                 {
1513:.\Generated_Source\PSoC5/EMITE.c ****                     tmpStat = EMITE_TXSTATUS_REG;
1514:.\Generated_Source\PSoC5/EMITE.c ****                 }
1515:.\Generated_Source\PSoC5/EMITE.c ****                 while((tmpStat & EMITE_TX_STS_FIFO_EMPTY) != 0u);
1516:.\Generated_Source\PSoC5/EMITE.c ****             }
1517:.\Generated_Source\PSoC5/EMITE.c **** 
1518:.\Generated_Source\PSoC5/EMITE.c ****             if( (retMode == EMITE_WAIT_FOR_COMPLETE_REINIT) ||
1519:.\Generated_Source\PSoC5/EMITE.c ****                 (retMode == EMITE_SEND_WAIT_REINIT) )
1520:.\Generated_Source\PSoC5/EMITE.c ****             {
1521:.\Generated_Source\PSoC5/EMITE.c ****                 do /* Wait until transmit complete */
1522:.\Generated_Source\PSoC5/EMITE.c ****                 {
1523:.\Generated_Source\PSoC5/EMITE.c ****                     tmpStat = EMITE_TXSTATUS_REG;
1524:.\Generated_Source\PSoC5/EMITE.c ****                 }
1525:.\Generated_Source\PSoC5/EMITE.c ****                 while(((uint8)~tmpStat & EMITE_TX_STS_COMPLETE) != 0u);
1526:.\Generated_Source\PSoC5/EMITE.c ****             }
1527:.\Generated_Source\PSoC5/EMITE.c **** 
1528:.\Generated_Source\PSoC5/EMITE.c ****             if( (retMode == EMITE_WAIT_FOR_COMPLETE_REINIT) ||
1529:.\Generated_Source\PSoC5/EMITE.c ****                 (retMode == EMITE_REINIT) ||
1530:.\Generated_Source\PSoC5/EMITE.c ****                 (retMode == EMITE_SEND_WAIT_REINIT) )
1531:.\Generated_Source\PSoC5/EMITE.c ****             {
1532:.\Generated_Source\PSoC5/EMITE.c **** 
1533:.\Generated_Source\PSoC5/EMITE.c ****             #if(EMITE_TXCLKGEN_DP)
1534:.\Generated_Source\PSoC5/EMITE.c ****                 EMITE_TXBITCLKTX_COMPLETE_REG = txPeriod;
1535:.\Generated_Source\PSoC5/EMITE.c ****             #else
1536:.\Generated_Source\PSoC5/EMITE.c ****                 EMITE_TXBITCTR_PERIOD_REG = txPeriod;
1537:.\Generated_Source\PSoC5/EMITE.c ****             #endif /* End EMITE_TXCLKGEN_DP */
1538:.\Generated_Source\PSoC5/EMITE.c **** 
1539:.\Generated_Source\PSoC5/EMITE.c ****             #if( (EMITE_PARITY_TYPE != EMITE__B_UART__NONE_REVB) || \
1540:.\Generated_Source\PSoC5/EMITE.c ****                  (EMITE_PARITY_TYPE_SW != 0u) )
1541:.\Generated_Source\PSoC5/EMITE.c ****                 EMITE_WriteControlRegister(EMITE_ReadControlRegister() &
1542:.\Generated_Source\PSoC5/EMITE.c ****                                                       (uint8) ~EMITE_CTRL_HD_SEND_BREAK);
1543:.\Generated_Source\PSoC5/EMITE.c ****             #endif /* End EMITE_PARITY_TYPE != NONE */
1544:.\Generated_Source\PSoC5/EMITE.c ****             }
1545:.\Generated_Source\PSoC5/EMITE.c ****         #endif    /* End EMITE_HD_ENABLED */
1546:.\Generated_Source\PSoC5/EMITE.c ****         }
1547:.\Generated_Source\PSoC5/EMITE.c ****     }
1548:.\Generated_Source\PSoC5/EMITE.c **** 
1549:.\Generated_Source\PSoC5/EMITE.c **** 
1550:.\Generated_Source\PSoC5/EMITE.c ****     /*******************************************************************************
1551:.\Generated_Source\PSoC5/EMITE.c ****     * Function Name: EMITE_SetTxAddressMode
1552:.\Generated_Source\PSoC5/EMITE.c ****     ********************************************************************************
1553:.\Generated_Source\PSoC5/EMITE.c ****     *
1554:.\Generated_Source\PSoC5/EMITE.c ****     * Summary:
1555:.\Generated_Source\PSoC5/EMITE.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:.\Generated_Source\PSoC5/EMITE.c ****     *
1557:.\Generated_Source\PSoC5/EMITE.c ****     * Parameters:
1558:.\Generated_Source\PSoC5/EMITE.c ****     *  addressMode: 
1559:.\Generated_Source\PSoC5/EMITE.c ****     *       EMITE_SET_SPACE - Configure the transmitter to send the next
1560:.\Generated_Source\PSoC5/EMITE.c ****     *                                    byte as a data.
1561:.\Generated_Source\PSoC5/EMITE.c ****     *       EMITE_SET_MARK  - Configure the transmitter to send the next
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 46


1562:.\Generated_Source\PSoC5/EMITE.c ****     *                                    byte as an address.
1563:.\Generated_Source\PSoC5/EMITE.c ****     *
1564:.\Generated_Source\PSoC5/EMITE.c ****     * Return:
1565:.\Generated_Source\PSoC5/EMITE.c ****     *  None.
1566:.\Generated_Source\PSoC5/EMITE.c ****     *
1567:.\Generated_Source\PSoC5/EMITE.c ****     * Side Effects:
1568:.\Generated_Source\PSoC5/EMITE.c ****     *  This function sets and clears EMITE_CTRL_MARK bit in the Control
1569:.\Generated_Source\PSoC5/EMITE.c ****     *  register.
1570:.\Generated_Source\PSoC5/EMITE.c ****     *
1571:.\Generated_Source\PSoC5/EMITE.c ****     *******************************************************************************/
1572:.\Generated_Source\PSoC5/EMITE.c ****     void EMITE_SetTxAddressMode(uint8 addressMode) 
1573:.\Generated_Source\PSoC5/EMITE.c ****     {
 993              		.loc 1 1573 0
 994              		.cfi_startproc
 995              		@ args = 0, pretend = 0, frame = 0
 996              		@ frame_needed = 0, uses_anonymous_args = 0
 997              	.LVL69:
 998 0000 08B5     		push	{r3, lr}
 999              		.cfi_def_cfa_offset 8
 1000              		.cfi_offset 3, -8
 1001              		.cfi_offset 14, -4
1574:.\Generated_Source\PSoC5/EMITE.c ****         /* Mark/Space sending enable */
1575:.\Generated_Source\PSoC5/EMITE.c ****         if(addressMode != 0u)
 1002              		.loc 1 1575 0
 1003 0002 38B1     		cbz	r0, .L113
1576:.\Generated_Source\PSoC5/EMITE.c ****         {
1577:.\Generated_Source\PSoC5/EMITE.c ****         #if( EMITE_CONTROL_REG_REMOVED == 0u )
1578:.\Generated_Source\PSoC5/EMITE.c ****             EMITE_WriteControlRegister(EMITE_ReadControlRegister() |
 1004              		.loc 1 1578 0
 1005 0004 FFF7FEFF 		bl	EMITE_ReadControlRegister
 1006              	.LVL70:
 1007 0008 40F00400 		orr	r0, r0, #4
 1008 000c C0B2     		uxtb	r0, r0
 1009 000e FFF7FEFF 		bl	EMITE_WriteControlRegister
 1010              	.LVL71:
 1011 0012 08BD     		pop	{r3, pc}
 1012              	.LVL72:
 1013              	.L113:
1579:.\Generated_Source\PSoC5/EMITE.c ****                                                   EMITE_CTRL_MARK);
1580:.\Generated_Source\PSoC5/EMITE.c ****         #endif /* End EMITE_CONTROL_REG_REMOVED == 0u */
1581:.\Generated_Source\PSoC5/EMITE.c ****         }
1582:.\Generated_Source\PSoC5/EMITE.c ****         else
1583:.\Generated_Source\PSoC5/EMITE.c ****         {
1584:.\Generated_Source\PSoC5/EMITE.c ****         #if( EMITE_CONTROL_REG_REMOVED == 0u )
1585:.\Generated_Source\PSoC5/EMITE.c ****             EMITE_WriteControlRegister(EMITE_ReadControlRegister() &
 1014              		.loc 1 1585 0
 1015 0014 FFF7FEFF 		bl	EMITE_ReadControlRegister
 1016              	.LVL73:
 1017 0018 00F0FB00 		and	r0, r0, #251
 1018 001c FFF7FEFF 		bl	EMITE_WriteControlRegister
 1019              	.LVL74:
 1020 0020 08BD     		pop	{r3, pc}
 1021              		.cfi_endproc
 1022              	.LFE26:
 1023              		.size	EMITE_SetTxAddressMode, .-EMITE_SetTxAddressMode
 1024 0022 00BF     		.section	.text.EMITE_LoadRxConfig,"ax",%progbits
 1025              		.align	2
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 47


 1026              		.global	EMITE_LoadRxConfig
 1027              		.thumb
 1028              		.thumb_func
 1029              		.type	EMITE_LoadRxConfig, %function
 1030              	EMITE_LoadRxConfig:
 1031              	.LFB27:
1586:.\Generated_Source\PSoC5/EMITE.c ****                                                   (uint8) ~EMITE_CTRL_MARK);
1587:.\Generated_Source\PSoC5/EMITE.c ****         #endif /* End EMITE_CONTROL_REG_REMOVED == 0u */
1588:.\Generated_Source\PSoC5/EMITE.c ****         }
1589:.\Generated_Source\PSoC5/EMITE.c ****     }
1590:.\Generated_Source\PSoC5/EMITE.c **** 
1591:.\Generated_Source\PSoC5/EMITE.c **** #endif  /* EndEMITE_TX_ENABLED */
1592:.\Generated_Source\PSoC5/EMITE.c **** 
1593:.\Generated_Source\PSoC5/EMITE.c **** #if(EMITE_HD_ENABLED)
1594:.\Generated_Source\PSoC5/EMITE.c **** 
1595:.\Generated_Source\PSoC5/EMITE.c **** 
1596:.\Generated_Source\PSoC5/EMITE.c ****     /*******************************************************************************
1597:.\Generated_Source\PSoC5/EMITE.c ****     * Function Name: EMITE_LoadRxConfig
1598:.\Generated_Source\PSoC5/EMITE.c ****     ********************************************************************************
1599:.\Generated_Source\PSoC5/EMITE.c ****     *
1600:.\Generated_Source\PSoC5/EMITE.c ****     * Summary:
1601:.\Generated_Source\PSoC5/EMITE.c ****     *  Loads the receiver configuration in half duplex mode. After calling this
1602:.\Generated_Source\PSoC5/EMITE.c ****     *  function, the UART is ready to receive data.
1603:.\Generated_Source\PSoC5/EMITE.c ****     *
1604:.\Generated_Source\PSoC5/EMITE.c ****     * Parameters:
1605:.\Generated_Source\PSoC5/EMITE.c ****     *  None.
1606:.\Generated_Source\PSoC5/EMITE.c ****     *
1607:.\Generated_Source\PSoC5/EMITE.c ****     * Return:
1608:.\Generated_Source\PSoC5/EMITE.c ****     *  None.
1609:.\Generated_Source\PSoC5/EMITE.c ****     *
1610:.\Generated_Source\PSoC5/EMITE.c ****     * Side Effects:
1611:.\Generated_Source\PSoC5/EMITE.c ****     *  Valid only in half duplex mode. You must make sure that the previous
1612:.\Generated_Source\PSoC5/EMITE.c ****     *  transaction is complete and it is safe to unload the transmitter
1613:.\Generated_Source\PSoC5/EMITE.c ****     *  configuration.
1614:.\Generated_Source\PSoC5/EMITE.c ****     *
1615:.\Generated_Source\PSoC5/EMITE.c ****     *******************************************************************************/
1616:.\Generated_Source\PSoC5/EMITE.c ****     void EMITE_LoadRxConfig(void) 
1617:.\Generated_Source\PSoC5/EMITE.c ****     {
 1032              		.loc 1 1617 0
 1033              		.cfi_startproc
 1034              		@ args = 0, pretend = 0, frame = 0
 1035              		@ frame_needed = 0, uses_anonymous_args = 0
 1036 0000 08B5     		push	{r3, lr}
 1037              		.cfi_def_cfa_offset 8
 1038              		.cfi_offset 3, -8
 1039              		.cfi_offset 14, -4
1618:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_WriteControlRegister(EMITE_ReadControlRegister() &
 1040              		.loc 1 1618 0
 1041 0002 FFF7FEFF 		bl	EMITE_ReadControlRegister
 1042              	.LVL75:
 1043 0006 00F0FE00 		and	r0, r0, #254
 1044 000a FFF7FEFF 		bl	EMITE_WriteControlRegister
 1045              	.LVL76:
1619:.\Generated_Source\PSoC5/EMITE.c ****                                                 (uint8)~EMITE_CTRL_HD_SEND);
1620:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_RXBITCTR_PERIOD_REG = EMITE_HD_RXBITCTR_INIT;
 1046              		.loc 1 1620 0
 1047 000e 7222     		movs	r2, #114
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 48


 1048 0010 014B     		ldr	r3, .L118
 1049 0012 1A70     		strb	r2, [r3]
 1050 0014 08BD     		pop	{r3, pc}
 1051              	.L119:
 1052 0016 00BF     		.align	2
 1053              	.L118:
 1054 0018 87640040 		.word	1073767559
 1055              		.cfi_endproc
 1056              	.LFE27:
 1057              		.size	EMITE_LoadRxConfig, .-EMITE_LoadRxConfig
 1058              		.section	.text.EMITE_LoadTxConfig,"ax",%progbits
 1059              		.align	2
 1060              		.global	EMITE_LoadTxConfig
 1061              		.thumb
 1062              		.thumb_func
 1063              		.type	EMITE_LoadTxConfig, %function
 1064              	EMITE_LoadTxConfig:
 1065              	.LFB28:
1621:.\Generated_Source\PSoC5/EMITE.c **** 
1622:.\Generated_Source\PSoC5/EMITE.c ****     #if (EMITE_RX_INTERRUPT_ENABLED)
1623:.\Generated_Source\PSoC5/EMITE.c ****         /* Enable RX interrupt after set RX configuration */
1624:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_SetRxInterruptMode(EMITE_INIT_RX_INTERRUPTS_MASK);
1625:.\Generated_Source\PSoC5/EMITE.c ****     #endif /* (EMITE_RX_INTERRUPT_ENABLED) */
1626:.\Generated_Source\PSoC5/EMITE.c ****     }
1627:.\Generated_Source\PSoC5/EMITE.c **** 
1628:.\Generated_Source\PSoC5/EMITE.c **** 
1629:.\Generated_Source\PSoC5/EMITE.c ****     /*******************************************************************************
1630:.\Generated_Source\PSoC5/EMITE.c ****     * Function Name: EMITE_LoadTxConfig
1631:.\Generated_Source\PSoC5/EMITE.c ****     ********************************************************************************
1632:.\Generated_Source\PSoC5/EMITE.c ****     *
1633:.\Generated_Source\PSoC5/EMITE.c ****     * Summary:
1634:.\Generated_Source\PSoC5/EMITE.c ****     *  Loads the transmitter configuration in half duplex mode. After calling this
1635:.\Generated_Source\PSoC5/EMITE.c ****     *  function, the UART is ready to transmit data.
1636:.\Generated_Source\PSoC5/EMITE.c ****     *
1637:.\Generated_Source\PSoC5/EMITE.c ****     * Parameters:
1638:.\Generated_Source\PSoC5/EMITE.c ****     *  None.
1639:.\Generated_Source\PSoC5/EMITE.c ****     *
1640:.\Generated_Source\PSoC5/EMITE.c ****     * Return:
1641:.\Generated_Source\PSoC5/EMITE.c ****     *  None.
1642:.\Generated_Source\PSoC5/EMITE.c ****     *
1643:.\Generated_Source\PSoC5/EMITE.c ****     * Side Effects:
1644:.\Generated_Source\PSoC5/EMITE.c ****     *  Valid only in half duplex mode. You must make sure that the previous
1645:.\Generated_Source\PSoC5/EMITE.c ****     *  transaction is complete and it is safe to unload the receiver configuration.
1646:.\Generated_Source\PSoC5/EMITE.c ****     *
1647:.\Generated_Source\PSoC5/EMITE.c ****     *******************************************************************************/
1648:.\Generated_Source\PSoC5/EMITE.c ****     void EMITE_LoadTxConfig(void) 
1649:.\Generated_Source\PSoC5/EMITE.c ****     {
 1066              		.loc 1 1649 0
 1067              		.cfi_startproc
 1068              		@ args = 0, pretend = 0, frame = 0
 1069              		@ frame_needed = 0, uses_anonymous_args = 0
 1070 0000 08B5     		push	{r3, lr}
 1071              		.cfi_def_cfa_offset 8
 1072              		.cfi_offset 3, -8
 1073              		.cfi_offset 14, -4
1650:.\Generated_Source\PSoC5/EMITE.c ****     #if (EMITE_RX_INTERRUPT_ENABLED)
1651:.\Generated_Source\PSoC5/EMITE.c ****         /* Disable RX interrupts before set TX configuration */
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 49


1652:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_SetRxInterruptMode(0u);
1653:.\Generated_Source\PSoC5/EMITE.c ****     #endif /* (EMITE_RX_INTERRUPT_ENABLED) */
1654:.\Generated_Source\PSoC5/EMITE.c **** 
1655:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_WriteControlRegister(EMITE_ReadControlRegister() | EMITE_CTRL_HD_SEND);
 1074              		.loc 1 1655 0
 1075 0002 FFF7FEFF 		bl	EMITE_ReadControlRegister
 1076              	.LVL77:
 1077 0006 40F00100 		orr	r0, r0, #1
 1078 000a C0B2     		uxtb	r0, r0
 1079 000c FFF7FEFF 		bl	EMITE_WriteControlRegister
 1080              	.LVL78:
1656:.\Generated_Source\PSoC5/EMITE.c ****         EMITE_RXBITCTR_PERIOD_REG = EMITE_HD_TXBITCTR_INIT;
 1081              		.loc 1 1656 0
 1082 0010 6F22     		movs	r2, #111
 1083 0012 014B     		ldr	r3, .L122
 1084 0014 1A70     		strb	r2, [r3]
 1085 0016 08BD     		pop	{r3, pc}
 1086              	.L123:
 1087              		.align	2
 1088              	.L122:
 1089 0018 87640040 		.word	1073767559
 1090              		.cfi_endproc
 1091              	.LFE28:
 1092              		.size	EMITE_LoadTxConfig, .-EMITE_LoadTxConfig
 1093              		.global	EMITE_initVar
 1094              		.bss
 1095              		.set	.LANCHOR0,. + 0
 1096              		.type	EMITE_initVar, %object
 1097              		.size	EMITE_initVar, 1
 1098              	EMITE_initVar:
 1099 0000 00       		.space	1
 1100              		.text
 1101              	.Letext0:
 1102              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1103              		.file 3 ".\\Generated_Source\\PSoC5\\EMITE_IntClock.h"
 1104              		.file 4 ".\\Generated_Source\\PSoC5\\CyLib.h"
 1105              		.section	.debug_info,"",%progbits
 1106              	.Ldebug_info0:
 1107 0000 89060000 		.4byte	0x689
 1108 0004 0400     		.2byte	0x4
 1109 0006 00000000 		.4byte	.Ldebug_abbrev0
 1110 000a 04       		.byte	0x4
 1111 000b 01       		.uleb128 0x1
 1112 000c BF030000 		.4byte	.LASF62
 1113 0010 01       		.byte	0x1
 1114 0011 5E040000 		.4byte	.LASF63
 1115 0015 58000000 		.4byte	.LASF64
 1116 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1117 001d 00000000 		.4byte	0
 1118 0021 00000000 		.4byte	.Ldebug_line0
 1119 0025 02       		.uleb128 0x2
 1120 0026 01       		.byte	0x1
 1121 0027 06       		.byte	0x6
 1122 0028 1E010000 		.4byte	.LASF0
 1123 002c 02       		.uleb128 0x2
 1124 002d 01       		.byte	0x1
 1125 002e 08       		.byte	0x8
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 50


 1126 002f DF020000 		.4byte	.LASF1
 1127 0033 02       		.uleb128 0x2
 1128 0034 02       		.byte	0x2
 1129 0035 05       		.byte	0x5
 1130 0036 ED020000 		.4byte	.LASF2
 1131 003a 02       		.uleb128 0x2
 1132 003b 02       		.byte	0x2
 1133 003c 07       		.byte	0x7
 1134 003d F2010000 		.4byte	.LASF3
 1135 0041 02       		.uleb128 0x2
 1136 0042 04       		.byte	0x4
 1137 0043 05       		.byte	0x5
 1138 0044 4A010000 		.4byte	.LASF4
 1139 0048 02       		.uleb128 0x2
 1140 0049 04       		.byte	0x4
 1141 004a 07       		.byte	0x7
 1142 004b C8010000 		.4byte	.LASF5
 1143 004f 02       		.uleb128 0x2
 1144 0050 08       		.byte	0x8
 1145 0051 05       		.byte	0x5
 1146 0052 10010000 		.4byte	.LASF6
 1147 0056 02       		.uleb128 0x2
 1148 0057 08       		.byte	0x8
 1149 0058 07       		.byte	0x7
 1150 0059 D7000000 		.4byte	.LASF7
 1151 005d 03       		.uleb128 0x3
 1152 005e 04       		.byte	0x4
 1153 005f 05       		.byte	0x5
 1154 0060 696E7400 		.ascii	"int\000"
 1155 0064 02       		.uleb128 0x2
 1156 0065 04       		.byte	0x4
 1157 0066 07       		.byte	0x7
 1158 0067 BB010000 		.4byte	.LASF8
 1159 006b 04       		.uleb128 0x4
 1160 006c 53010000 		.4byte	.LASF9
 1161 0070 02       		.byte	0x2
 1162 0071 9201     		.2byte	0x192
 1163 0073 2C000000 		.4byte	0x2c
 1164 0077 04       		.uleb128 0x4
 1165 0078 0F000000 		.4byte	.LASF10
 1166 007c 02       		.byte	0x2
 1167 007d 9301     		.2byte	0x193
 1168 007f 3A000000 		.4byte	0x3a
 1169 0083 02       		.uleb128 0x2
 1170 0084 04       		.byte	0x4
 1171 0085 04       		.byte	0x4
 1172 0086 D4020000 		.4byte	.LASF11
 1173 008a 02       		.uleb128 0x2
 1174 008b 08       		.byte	0x8
 1175 008c 04       		.byte	0x4
 1176 008d 59010000 		.4byte	.LASF12
 1177 0091 04       		.uleb128 0x4
 1178 0092 7E030000 		.4byte	.LASF13
 1179 0096 02       		.byte	0x2
 1180 0097 A301     		.2byte	0x1a3
 1181 0099 9D000000 		.4byte	0x9d
 1182 009d 02       		.uleb128 0x2
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 51


 1183 009e 01       		.byte	0x1
 1184 009f 08       		.byte	0x8
 1185 00a0 79030000 		.4byte	.LASF14
 1186 00a4 04       		.uleb128 0x4
 1187 00a5 DA020000 		.4byte	.LASF15
 1188 00a9 02       		.byte	0x2
 1189 00aa 3C02     		.2byte	0x23c
 1190 00ac B0000000 		.4byte	0xb0
 1191 00b0 05       		.uleb128 0x5
 1192 00b1 6B000000 		.4byte	0x6b
 1193 00b5 02       		.uleb128 0x2
 1194 00b6 04       		.byte	0x4
 1195 00b7 07       		.byte	0x7
 1196 00b8 69020000 		.4byte	.LASF16
 1197 00bc 06       		.uleb128 0x6
 1198 00bd 0B030000 		.4byte	.LASF65
 1199 00c1 01       		.byte	0x1
 1200 00c2 6A       		.byte	0x6a
 1201 00c3 00000000 		.4byte	.LFB1
 1202 00c7 14000000 		.4byte	.LFE1-.LFB1
 1203 00cb 01       		.uleb128 0x1
 1204 00cc 9C       		.byte	0x9c
 1205 00cd 07       		.uleb128 0x7
 1206 00ce 2A010000 		.4byte	.LASF17
 1207 00d2 01       		.byte	0x1
 1208 00d3 B7       		.byte	0xb7
 1209 00d4 00000000 		.4byte	.LFB2
 1210 00d8 2C000000 		.4byte	.LFE2-.LFB2
 1211 00dc 01       		.uleb128 0x1
 1212 00dd 9C       		.byte	0x9c
 1213 00de 14010000 		.4byte	0x114
 1214 00e2 08       		.uleb128 0x8
 1215 00e3 A7030000 		.4byte	.LASF20
 1216 00e7 01       		.byte	0x1
 1217 00e8 B9       		.byte	0xb9
 1218 00e9 6B000000 		.4byte	0x6b
 1219 00ed 00000000 		.4byte	.LLST0
 1220 00f1 09       		.uleb128 0x9
 1221 00f2 06000000 		.4byte	.LVL0
 1222 00f6 62060000 		.4byte	0x662
 1223 00fa 09       		.uleb128 0x9
 1224 00fb 20000000 		.4byte	.LVL2
 1225 00ff 6D060000 		.4byte	0x66d
 1226 0103 0A       		.uleb128 0xa
 1227 0104 26000000 		.4byte	.LVL3
 1228 0108 74060000 		.4byte	0x674
 1229 010c 0B       		.uleb128 0xb
 1230 010d 01       		.uleb128 0x1
 1231 010e 50       		.byte	0x50
 1232 010f 02       		.uleb128 0x2
 1233 0110 74       		.byte	0x74
 1234 0111 00       		.sleb128 0
 1235 0112 00       		.byte	0
 1236 0113 00       		.byte	0
 1237 0114 07       		.uleb128 0x7
 1238 0115 7F040000 		.4byte	.LASF18
 1239 0119 01       		.byte	0x1
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 52


 1240 011a 4C       		.byte	0x4c
 1241 011b 00000000 		.4byte	.LFB0
 1242 011f 1C000000 		.4byte	.LFE0-.LFB0
 1243 0123 01       		.uleb128 0x1
 1244 0124 9C       		.byte	0x9c
 1245 0125 3C010000 		.4byte	0x13c
 1246 0129 09       		.uleb128 0x9
 1247 012a 0C000000 		.4byte	.LVL5
 1248 012e BC000000 		.4byte	0xbc
 1249 0132 09       		.uleb128 0x9
 1250 0133 16000000 		.4byte	.LVL6
 1251 0137 CD000000 		.4byte	0xcd
 1252 013b 00       		.byte	0
 1253 013c 07       		.uleb128 0x7
 1254 013d A8010000 		.4byte	.LASF19
 1255 0141 01       		.byte	0x1
 1256 0142 F0       		.byte	0xf0
 1257 0143 00000000 		.4byte	.LFB3
 1258 0147 30000000 		.4byte	.LFE3-.LFB3
 1259 014b 01       		.uleb128 0x1
 1260 014c 9C       		.byte	0x9c
 1261 014d 83010000 		.4byte	0x183
 1262 0151 08       		.uleb128 0x8
 1263 0152 A7030000 		.4byte	.LASF20
 1264 0156 01       		.byte	0x1
 1265 0157 F2       		.byte	0xf2
 1266 0158 6B000000 		.4byte	0x6b
 1267 015c 13000000 		.4byte	.LLST1
 1268 0160 09       		.uleb128 0x9
 1269 0161 06000000 		.4byte	.LVL7
 1270 0165 62060000 		.4byte	0x662
 1271 0169 09       		.uleb128 0x9
 1272 016a 16000000 		.4byte	.LVL9
 1273 016e 85060000 		.4byte	0x685
 1274 0172 0A       		.uleb128 0xa
 1275 0173 26000000 		.4byte	.LVL10
 1276 0177 74060000 		.4byte	0x674
 1277 017b 0B       		.uleb128 0xb
 1278 017c 01       		.uleb128 0x1
 1279 017d 50       		.byte	0x50
 1280 017e 02       		.uleb128 0x2
 1281 017f 74       		.byte	0x74
 1282 0180 00       		.sleb128 0
 1283 0181 00       		.byte	0
 1284 0182 00       		.byte	0
 1285 0183 0C       		.uleb128 0xc
 1286 0184 A5020000 		.4byte	.LASF43
 1287 0188 01       		.byte	0x1
 1288 0189 2701     		.2byte	0x127
 1289 018b 6B000000 		.4byte	0x6b
 1290 018f 00000000 		.4byte	.LFB4
 1291 0193 0C000000 		.4byte	.LFE4-.LFB4
 1292 0197 01       		.uleb128 0x1
 1293 0198 9C       		.byte	0x9c
 1294 0199 0D       		.uleb128 0xd
 1295 019a 45030000 		.4byte	.LASF21
 1296 019e 01       		.byte	0x1
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 53


 1297 019f 3F01     		.2byte	0x13f
 1298 01a1 00000000 		.4byte	.LFB5
 1299 01a5 0C000000 		.4byte	.LFE5-.LFB5
 1300 01a9 01       		.uleb128 0x1
 1301 01aa 9C       		.byte	0x9c
 1302 01ab BE010000 		.4byte	0x1be
 1303 01af 0E       		.uleb128 0xe
 1304 01b0 90010000 		.4byte	.LASF23
 1305 01b4 01       		.byte	0x1
 1306 01b5 3F01     		.2byte	0x13f
 1307 01b7 6B000000 		.4byte	0x6b
 1308 01bb 01       		.uleb128 0x1
 1309 01bc 50       		.byte	0x50
 1310 01bd 00       		.byte	0
 1311 01be 0D       		.uleb128 0xd
 1312 01bf 36020000 		.4byte	.LASF22
 1313 01c3 01       		.byte	0x1
 1314 01c4 6701     		.2byte	0x167
 1315 01c6 00000000 		.4byte	.LFB6
 1316 01ca 0C000000 		.4byte	.LFE6-.LFB6
 1317 01ce 01       		.uleb128 0x1
 1318 01cf 9C       		.byte	0x9c
 1319 01d0 E3010000 		.4byte	0x1e3
 1320 01d4 0E       		.uleb128 0xe
 1321 01d5 2F020000 		.4byte	.LASF24
 1322 01d9 01       		.byte	0x1
 1323 01da 6701     		.2byte	0x167
 1324 01dc 6B000000 		.4byte	0x6b
 1325 01e0 01       		.uleb128 0x1
 1326 01e1 50       		.byte	0x50
 1327 01e2 00       		.byte	0
 1328 01e3 0F       		.uleb128 0xf
 1329 01e4 4D040000 		.4byte	.LASF26
 1330 01e8 01       		.byte	0x1
 1331 01e9 8801     		.2byte	0x188
 1332 01eb 6B000000 		.4byte	0x6b
 1333 01ef 00000000 		.4byte	.LFB7
 1334 01f3 0C000000 		.4byte	.LFE7-.LFB7
 1335 01f7 01       		.uleb128 0x1
 1336 01f8 9C       		.byte	0x9c
 1337 01f9 0C020000 		.4byte	0x20c
 1338 01fd 10       		.uleb128 0x10
 1339 01fe 3E030000 		.4byte	.LASF25
 1340 0202 01       		.byte	0x1
 1341 0203 8A01     		.2byte	0x18a
 1342 0205 6B000000 		.4byte	0x6b
 1343 0209 01       		.uleb128 0x1
 1344 020a 50       		.byte	0x50
 1345 020b 00       		.byte	0
 1346 020c 0F       		.uleb128 0xf
 1347 020d 05020000 		.4byte	.LASF27
 1348 0211 01       		.byte	0x1
 1349 0212 E501     		.2byte	0x1e5
 1350 0214 6B000000 		.4byte	0x6b
 1351 0218 00000000 		.4byte	.LFB8
 1352 021c 10000000 		.4byte	.LFE8-.LFB8
 1353 0220 01       		.uleb128 0x1
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 54


 1354 0221 9C       		.byte	0x9c
 1355 0222 37020000 		.4byte	0x237
 1356 0226 11       		.uleb128 0x11
 1357 0227 B8030000 		.4byte	.LASF28
 1358 022b 01       		.byte	0x1
 1359 022c E701     		.2byte	0x1e7
 1360 022e 6B000000 		.4byte	0x6b
 1361 0232 26000000 		.4byte	.LLST2
 1362 0236 00       		.byte	0
 1363 0237 0F       		.uleb128 0xf
 1364 0238 29000000 		.4byte	.LASF29
 1365 023c 01       		.byte	0x1
 1366 023d 1402     		.2byte	0x214
 1367 023f 6B000000 		.4byte	0x6b
 1368 0243 00000000 		.4byte	.LFB9
 1369 0247 2C000000 		.4byte	.LFE9-.LFB9
 1370 024b 01       		.uleb128 0x1
 1371 024c 9C       		.byte	0x9c
 1372 024d 70020000 		.4byte	0x270
 1373 0251 11       		.uleb128 0x11
 1374 0252 3E030000 		.4byte	.LASF25
 1375 0256 01       		.byte	0x1
 1376 0257 1602     		.2byte	0x216
 1377 0259 6B000000 		.4byte	0x6b
 1378 025d 3E000000 		.4byte	.LLST3
 1379 0261 10       		.uleb128 0x10
 1380 0262 9C020000 		.4byte	.LASF30
 1381 0266 01       		.byte	0x1
 1382 0267 1702     		.2byte	0x217
 1383 0269 6B000000 		.4byte	0x6b
 1384 026d 01       		.uleb128 0x1
 1385 026e 53       		.byte	0x53
 1386 026f 00       		.byte	0
 1387 0270 0F       		.uleb128 0xf
 1388 0271 8E020000 		.4byte	.LASF31
 1389 0275 01       		.byte	0x1
 1390 0276 7A02     		.2byte	0x27a
 1391 0278 77000000 		.4byte	0x77
 1392 027c 00000000 		.4byte	.LFB10
 1393 0280 12000000 		.4byte	.LFE10-.LFB10
 1394 0284 01       		.uleb128 0x1
 1395 0285 9C       		.byte	0x9c
 1396 0286 9D020000 		.4byte	0x29d
 1397 028a 09       		.uleb128 0x9
 1398 028b 06000000 		.4byte	.LVL23
 1399 028f 0C020000 		.4byte	0x20c
 1400 0293 09       		.uleb128 0x9
 1401 0294 0C000000 		.4byte	.LVL24
 1402 0298 E3010000 		.4byte	0x1e3
 1403 029c 00       		.byte	0
 1404 029d 0F       		.uleb128 0xf
 1405 029e 7A010000 		.4byte	.LASF32
 1406 02a2 01       		.byte	0x1
 1407 02a3 AB02     		.2byte	0x2ab
 1408 02a5 6B000000 		.4byte	0x6b
 1409 02a9 00000000 		.4byte	.LFB11
 1410 02ad 18000000 		.4byte	.LFE11-.LFB11
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 55


 1411 02b1 01       		.uleb128 0x1
 1412 02b2 9C       		.byte	0x9c
 1413 02b3 C6020000 		.4byte	0x2c6
 1414 02b7 10       		.uleb128 0x10
 1415 02b8 ED010000 		.4byte	.LASF33
 1416 02bc 01       		.byte	0x1
 1417 02bd AE02     		.2byte	0x2ae
 1418 02bf 6B000000 		.4byte	0x6b
 1419 02c3 01       		.uleb128 0x1
 1420 02c4 50       		.byte	0x50
 1421 02c5 00       		.byte	0
 1422 02c6 0D       		.uleb128 0xd
 1423 02c7 FC000000 		.4byte	.LASF34
 1424 02cb 01       		.byte	0x1
 1425 02cc F502     		.2byte	0x2f5
 1426 02ce 00000000 		.4byte	.LFB12
 1427 02d2 24000000 		.4byte	.LFE12-.LFB12
 1428 02d6 01       		.uleb128 0x1
 1429 02d7 9C       		.byte	0x9c
 1430 02d8 FF020000 		.4byte	0x2ff
 1431 02dc 11       		.uleb128 0x11
 1432 02dd A7030000 		.4byte	.LASF20
 1433 02e1 01       		.byte	0x1
 1434 02e2 F702     		.2byte	0x2f7
 1435 02e4 6B000000 		.4byte	0x6b
 1436 02e8 74000000 		.4byte	.LLST4
 1437 02ec 09       		.uleb128 0x9
 1438 02ed 06000000 		.4byte	.LVL26
 1439 02f1 62060000 		.4byte	0x662
 1440 02f5 09       		.uleb128 0x9
 1441 02f6 1C000000 		.4byte	.LVL27
 1442 02fa 74060000 		.4byte	0x674
 1443 02fe 00       		.byte	0
 1444 02ff 0D       		.uleb128 0xd
 1445 0300 9B000000 		.4byte	.LASF35
 1446 0304 01       		.byte	0x1
 1447 0305 2D03     		.2byte	0x32d
 1448 0307 00000000 		.4byte	.LFB13
 1449 030b 02000000 		.4byte	.LFE13-.LFB13
 1450 030f 01       		.uleb128 0x1
 1451 0310 9C       		.byte	0x9c
 1452 0311 24030000 		.4byte	0x324
 1453 0315 0E       		.uleb128 0xe
 1454 0316 6E010000 		.4byte	.LASF36
 1455 031a 01       		.byte	0x1
 1456 031b 2D03     		.2byte	0x32d
 1457 031d 6B000000 		.4byte	0x6b
 1458 0321 01       		.uleb128 0x1
 1459 0322 50       		.byte	0x50
 1460 0323 00       		.byte	0
 1461 0324 0D       		.uleb128 0xd
 1462 0325 16030000 		.4byte	.LASF37
 1463 0329 01       		.byte	0x1
 1464 032a 5903     		.2byte	0x359
 1465 032c 00000000 		.4byte	.LFB14
 1466 0330 0C000000 		.4byte	.LFE14-.LFB14
 1467 0334 01       		.uleb128 0x1
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 56


 1468 0335 9C       		.byte	0x9c
 1469 0336 49030000 		.4byte	0x349
 1470 033a 0E       		.uleb128 0xe
 1471 033b 72020000 		.4byte	.LASF38
 1472 033f 01       		.byte	0x1
 1473 0340 5903     		.2byte	0x359
 1474 0342 6B000000 		.4byte	0x6b
 1475 0346 01       		.uleb128 0x1
 1476 0347 50       		.byte	0x50
 1477 0348 00       		.byte	0
 1478 0349 0D       		.uleb128 0xd
 1479 034a 2A030000 		.4byte	.LASF39
 1480 034e 01       		.byte	0x1
 1481 034f 6D03     		.2byte	0x36d
 1482 0351 00000000 		.4byte	.LFB15
 1483 0355 0C000000 		.4byte	.LFE15-.LFB15
 1484 0359 01       		.uleb128 0x1
 1485 035a 9C       		.byte	0x9c
 1486 035b 6E030000 		.4byte	0x36e
 1487 035f 0E       		.uleb128 0xe
 1488 0360 72020000 		.4byte	.LASF38
 1489 0364 01       		.byte	0x1
 1490 0365 6D03     		.2byte	0x36d
 1491 0367 6B000000 		.4byte	0x6b
 1492 036b 01       		.uleb128 0x1
 1493 036c 50       		.byte	0x50
 1494 036d 00       		.byte	0
 1495 036e 0D       		.uleb128 0xd
 1496 036f 60030000 		.4byte	.LASF40
 1497 0373 01       		.byte	0x1
 1498 0374 8C03     		.2byte	0x38c
 1499 0376 00000000 		.4byte	.LFB16
 1500 037a 0C000000 		.4byte	.LFE16-.LFB16
 1501 037e 01       		.uleb128 0x1
 1502 037f 9C       		.byte	0x9c
 1503 0380 93030000 		.4byte	0x393
 1504 0384 0E       		.uleb128 0xe
 1505 0385 2F020000 		.4byte	.LASF24
 1506 0389 01       		.byte	0x1
 1507 038a 8C03     		.2byte	0x38c
 1508 038c 6B000000 		.4byte	0x6b
 1509 0390 01       		.uleb128 0x1
 1510 0391 50       		.byte	0x50
 1511 0392 00       		.byte	0
 1512 0393 0D       		.uleb128 0xd
 1513 0394 4F020000 		.4byte	.LASF41
 1514 0398 01       		.byte	0x1
 1515 0399 AE03     		.2byte	0x3ae
 1516 039b 00000000 		.4byte	.LFB17
 1517 039f 14000000 		.4byte	.LFE17-.LFB17
 1518 03a3 01       		.uleb128 0x1
 1519 03a4 9C       		.byte	0x9c
 1520 03a5 B8030000 		.4byte	0x3b8
 1521 03a9 0E       		.uleb128 0xe
 1522 03aa 4D000000 		.4byte	.LASF42
 1523 03ae 01       		.byte	0x1
 1524 03af AE03     		.2byte	0x3ae
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 57


 1525 03b1 6B000000 		.4byte	0x6b
 1526 03b5 01       		.uleb128 0x1
 1527 03b6 50       		.byte	0x50
 1528 03b7 00       		.byte	0
 1529 03b8 0C       		.uleb128 0xc
 1530 03b9 84030000 		.4byte	.LASF44
 1531 03bd 01       		.byte	0x1
 1532 03be EB03     		.2byte	0x3eb
 1533 03c0 6B000000 		.4byte	0x6b
 1534 03c4 00000000 		.4byte	.LFB18
 1535 03c8 0C000000 		.4byte	.LFE18-.LFB18
 1536 03cc 01       		.uleb128 0x1
 1537 03cd 9C       		.byte	0x9c
 1538 03ce 0D       		.uleb128 0xd
 1539 03cf EE000000 		.4byte	.LASF45
 1540 03d3 01       		.byte	0x1
 1541 03d4 1104     		.2byte	0x411
 1542 03d6 00000000 		.4byte	.LFB19
 1543 03da 18000000 		.4byte	.LFE19-.LFB19
 1544 03de 01       		.uleb128 0x1
 1545 03df 9C       		.byte	0x9c
 1546 03e0 F3030000 		.4byte	0x3f3
 1547 03e4 0E       		.uleb128 0xe
 1548 03e5 4D000000 		.4byte	.LASF42
 1549 03e9 01       		.byte	0x1
 1550 03ea 1104     		.2byte	0x411
 1551 03ec 6B000000 		.4byte	0x6b
 1552 03f0 01       		.uleb128 0x1
 1553 03f1 50       		.byte	0x50
 1554 03f2 00       		.byte	0
 1555 03f3 0D       		.uleb128 0xd
 1556 03f4 97030000 		.4byte	.LASF46
 1557 03f8 01       		.byte	0x1
 1558 03f9 7904     		.2byte	0x479
 1559 03fb 00000000 		.4byte	.LFB20
 1560 03ff 24000000 		.4byte	.LFE20-.LFB20
 1561 0403 01       		.uleb128 0x1
 1562 0404 9C       		.byte	0x9c
 1563 0405 33040000 		.4byte	0x433
 1564 0409 12       		.uleb128 0x12
 1565 040a 94000000 		.4byte	.LASF47
 1566 040e 01       		.byte	0x1
 1567 040f 7904     		.2byte	0x479
 1568 0411 33040000 		.4byte	0x433
 1569 0415 87000000 		.4byte	.LLST5
 1570 0419 11       		.uleb128 0x11
 1571 041a DA010000 		.4byte	.LASF48
 1572 041e 01       		.byte	0x1
 1573 041f 7B04     		.2byte	0x47b
 1574 0421 77000000 		.4byte	0x77
 1575 0425 C9000000 		.4byte	.LLST6
 1576 0429 09       		.uleb128 0x9
 1577 042a 0E000000 		.4byte	.LVL37
 1578 042e CE030000 		.4byte	0x3ce
 1579 0432 00       		.byte	0
 1580 0433 13       		.uleb128 0x13
 1581 0434 04       		.byte	0x4
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 58


 1582 0435 39040000 		.4byte	0x439
 1583 0439 14       		.uleb128 0x14
 1584 043a 91000000 		.4byte	0x91
 1585 043e 0D       		.uleb128 0xd
 1586 043f 00000000 		.4byte	.LASF49
 1587 0443 01       		.byte	0x1
 1588 0444 A704     		.2byte	0x4a7
 1589 0446 00000000 		.4byte	.LFB21
 1590 044a 28000000 		.4byte	.LFE21-.LFB21
 1591 044e 01       		.uleb128 0x1
 1592 044f 9C       		.byte	0x9c
 1593 0450 8E040000 		.4byte	0x48e
 1594 0454 12       		.uleb128 0x12
 1595 0455 94000000 		.4byte	.LASF47
 1596 0459 01       		.byte	0x1
 1597 045a A704     		.2byte	0x4a7
 1598 045c 8E040000 		.4byte	0x48e
 1599 0460 0A010000 		.4byte	.LLST7
 1600 0464 12       		.uleb128 0x12
 1601 0465 E3010000 		.4byte	.LASF50
 1602 0469 01       		.byte	0x1
 1603 046a A704     		.2byte	0x4a7
 1604 046c 6B000000 		.4byte	0x6b
 1605 0470 4C010000 		.4byte	.LLST8
 1606 0474 11       		.uleb128 0x11
 1607 0475 DA010000 		.4byte	.LASF48
 1608 0479 01       		.byte	0x1
 1609 047a AA04     		.2byte	0x4aa
 1610 047c 6B000000 		.4byte	0x6b
 1611 0480 86010000 		.4byte	.LLST9
 1612 0484 09       		.uleb128 0x9
 1613 0485 0E000000 		.4byte	.LVL45
 1614 0489 CE030000 		.4byte	0x3ce
 1615 048d 00       		.byte	0
 1616 048e 13       		.uleb128 0x13
 1617 048f 04       		.byte	0x4
 1618 0490 94040000 		.4byte	0x494
 1619 0494 14       		.uleb128 0x14
 1620 0495 6B000000 		.4byte	0x6b
 1621 0499 0D       		.uleb128 0xd
 1622 049a 60010000 		.4byte	.LASF51
 1623 049e 01       		.byte	0x1
 1624 049f CE04     		.2byte	0x4ce
 1625 04a1 00000000 		.4byte	.LFB22
 1626 04a5 20000000 		.4byte	.LFE22-.LFB22
 1627 04a9 01       		.uleb128 0x1
 1628 04aa 9C       		.byte	0x9c
 1629 04ab EB040000 		.4byte	0x4eb
 1630 04af 12       		.uleb128 0x12
 1631 04b0 4D000000 		.4byte	.LASF42
 1632 04b4 01       		.byte	0x1
 1633 04b5 CE04     		.2byte	0x4ce
 1634 04b7 6B000000 		.4byte	0x6b
 1635 04bb C7010000 		.4byte	.LLST10
 1636 04bf 09       		.uleb128 0x9
 1637 04c0 0C000000 		.4byte	.LVL52
 1638 04c4 CE030000 		.4byte	0x3ce
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 59


 1639 04c8 15       		.uleb128 0x15
 1640 04c9 12000000 		.4byte	.LVL53
 1641 04cd CE030000 		.4byte	0x3ce
 1642 04d1 DB040000 		.4byte	0x4db
 1643 04d5 0B       		.uleb128 0xb
 1644 04d6 01       		.uleb128 0x1
 1645 04d7 50       		.byte	0x50
 1646 04d8 01       		.uleb128 0x1
 1647 04d9 3D       		.byte	0x3d
 1648 04da 00       		.byte	0
 1649 04db 0A       		.uleb128 0xa
 1650 04dc 18000000 		.4byte	.LVL54
 1651 04e0 CE030000 		.4byte	0x3ce
 1652 04e4 0B       		.uleb128 0xb
 1653 04e5 01       		.uleb128 0x1
 1654 04e6 50       		.byte	0x50
 1655 04e7 01       		.uleb128 0x1
 1656 04e8 3A       		.byte	0x3a
 1657 04e9 00       		.byte	0
 1658 04ea 00       		.byte	0
 1659 04eb 0F       		.uleb128 0xf
 1660 04ec 8B040000 		.4byte	.LASF52
 1661 04f0 01       		.byte	0x1
 1662 04f1 F904     		.2byte	0x4f9
 1663 04f3 6B000000 		.4byte	0x6b
 1664 04f7 00000000 		.4byte	.LFB23
 1665 04fb 24000000 		.4byte	.LFE23-.LFB23
 1666 04ff 01       		.uleb128 0x1
 1667 0500 9C       		.byte	0x9c
 1668 0501 16050000 		.4byte	0x516
 1669 0505 11       		.uleb128 0x11
 1670 0506 ED010000 		.4byte	.LASF33
 1671 050a 01       		.byte	0x1
 1672 050b FC04     		.2byte	0x4fc
 1673 050d 6B000000 		.4byte	0x6b
 1674 0511 E8010000 		.4byte	.LLST11
 1675 0515 00       		.byte	0
 1676 0516 0D       		.uleb128 0xd
 1677 0517 7A020000 		.4byte	.LASF53
 1678 051b 01       		.byte	0x1
 1679 051c 4A05     		.2byte	0x54a
 1680 051e 00000000 		.4byte	.LFB24
 1681 0522 24000000 		.4byte	.LFE24-.LFB24
 1682 0526 01       		.uleb128 0x1
 1683 0527 9C       		.byte	0x9c
 1684 0528 4F050000 		.4byte	0x54f
 1685 052c 11       		.uleb128 0x11
 1686 052d A7030000 		.4byte	.LASF20
 1687 0531 01       		.byte	0x1
 1688 0532 4C05     		.2byte	0x54c
 1689 0534 6B000000 		.4byte	0x6b
 1690 0538 06020000 		.4byte	.LLST12
 1691 053c 09       		.uleb128 0x9
 1692 053d 06000000 		.4byte	.LVL57
 1693 0541 62060000 		.4byte	0x662
 1694 0545 09       		.uleb128 0x9
 1695 0546 1C000000 		.4byte	.LVL58
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 60


 1696 054a 74060000 		.4byte	0x674
 1697 054e 00       		.byte	0
 1698 054f 0D       		.uleb128 0xd
 1699 0550 98010000 		.4byte	.LASF54
 1700 0554 01       		.byte	0x1
 1701 0555 A005     		.2byte	0x5a0
 1702 0557 00000000 		.4byte	.LFB25
 1703 055b 64000000 		.4byte	.LFE25-.LFB25
 1704 055f 01       		.uleb128 0x1
 1705 0560 9C       		.byte	0x9c
 1706 0561 B4050000 		.4byte	0x5b4
 1707 0565 12       		.uleb128 0x12
 1708 0566 B3010000 		.4byte	.LASF55
 1709 056a 01       		.byte	0x1
 1710 056b A005     		.2byte	0x5a0
 1711 056d 6B000000 		.4byte	0x6b
 1712 0571 19020000 		.4byte	.LLST13
 1713 0575 16       		.uleb128 0x16
 1714 0576 0A000000 		.4byte	.LBB2
 1715 057a 5A000000 		.4byte	.LBE2-.LBB2
 1716 057e 11       		.uleb128 0x11
 1717 057f 61020000 		.4byte	.LASF56
 1718 0583 01       		.byte	0x1
 1719 0584 A805     		.2byte	0x5a8
 1720 0586 6B000000 		.4byte	0x6b
 1721 058a 45020000 		.4byte	.LLST14
 1722 058e 09       		.uleb128 0x9
 1723 058f 14000000 		.4byte	.LVL60
 1724 0593 83010000 		.4byte	0x183
 1725 0597 09       		.uleb128 0x9
 1726 0598 1E000000 		.4byte	.LVL61
 1727 059c 99010000 		.4byte	0x199
 1728 05a0 09       		.uleb128 0x9
 1729 05a1 4C000000 		.4byte	.LVL66
 1730 05a5 83010000 		.4byte	0x183
 1731 05a9 09       		.uleb128 0x9
 1732 05aa 54000000 		.4byte	.LVL67
 1733 05ae 99010000 		.4byte	0x199
 1734 05b2 00       		.byte	0
 1735 05b3 00       		.byte	0
 1736 05b4 0D       		.uleb128 0xd
 1737 05b5 C0000000 		.4byte	.LASF57
 1738 05b9 01       		.byte	0x1
 1739 05ba 2406     		.2byte	0x624
 1740 05bc 00000000 		.4byte	.LFB26
 1741 05c0 22000000 		.4byte	.LFE26-.LFB26
 1742 05c4 01       		.uleb128 0x1
 1743 05c5 9C       		.byte	0x9c
 1744 05c6 FF050000 		.4byte	0x5ff
 1745 05ca 12       		.uleb128 0x12
 1746 05cb 6E010000 		.4byte	.LASF36
 1747 05cf 01       		.byte	0x1
 1748 05d0 2406     		.2byte	0x624
 1749 05d2 6B000000 		.4byte	0x6b
 1750 05d6 63020000 		.4byte	.LLST15
 1751 05da 09       		.uleb128 0x9
 1752 05db 08000000 		.4byte	.LVL70
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 61


 1753 05df 83010000 		.4byte	0x183
 1754 05e3 09       		.uleb128 0x9
 1755 05e4 12000000 		.4byte	.LVL71
 1756 05e8 99010000 		.4byte	0x199
 1757 05ec 09       		.uleb128 0x9
 1758 05ed 18000000 		.4byte	.LVL73
 1759 05f1 83010000 		.4byte	0x183
 1760 05f5 09       		.uleb128 0x9
 1761 05f6 20000000 		.4byte	.LVL74
 1762 05fa 99010000 		.4byte	0x199
 1763 05fe 00       		.byte	0
 1764 05ff 0D       		.uleb128 0xd
 1765 0600 16000000 		.4byte	.LASF58
 1766 0604 01       		.byte	0x1
 1767 0605 5006     		.2byte	0x650
 1768 0607 00000000 		.4byte	.LFB27
 1769 060b 1C000000 		.4byte	.LFE27-.LFB27
 1770 060f 01       		.uleb128 0x1
 1771 0610 9C       		.byte	0x9c
 1772 0611 28060000 		.4byte	0x628
 1773 0615 09       		.uleb128 0x9
 1774 0616 06000000 		.4byte	.LVL75
 1775 061a 83010000 		.4byte	0x183
 1776 061e 09       		.uleb128 0x9
 1777 061f 0E000000 		.4byte	.LVL76
 1778 0623 99010000 		.4byte	0x199
 1779 0627 00       		.byte	0
 1780 0628 0D       		.uleb128 0xd
 1781 0629 37010000 		.4byte	.LASF59
 1782 062d 01       		.byte	0x1
 1783 062e 7006     		.2byte	0x670
 1784 0630 00000000 		.4byte	.LFB28
 1785 0634 1C000000 		.4byte	.LFE28-.LFB28
 1786 0638 01       		.uleb128 0x1
 1787 0639 9C       		.byte	0x9c
 1788 063a 51060000 		.4byte	0x651
 1789 063e 09       		.uleb128 0x9
 1790 063f 06000000 		.4byte	.LVL77
 1791 0643 83010000 		.4byte	0x183
 1792 0647 09       		.uleb128 0x9
 1793 0648 10000000 		.4byte	.LVL78
 1794 064c 99010000 		.4byte	0x199
 1795 0650 00       		.byte	0
 1796 0651 17       		.uleb128 0x17
 1797 0652 B2000000 		.4byte	.LASF66
 1798 0656 01       		.byte	0x1
 1799 0657 1B       		.byte	0x1b
 1800 0658 6B000000 		.4byte	0x6b
 1801 065c 05       		.uleb128 0x5
 1802 065d 03       		.byte	0x3
 1803 065e 00000000 		.4byte	EMITE_initVar
 1804 0662 18       		.uleb128 0x18
 1805 0663 18020000 		.4byte	.LASF67
 1806 0667 04       		.byte	0x4
 1807 0668 7D       		.byte	0x7d
 1808 0669 6B000000 		.4byte	0x6b
 1809 066d 19       		.uleb128 0x19
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 62


 1810 066e BF020000 		.4byte	.LASF60
 1811 0672 03       		.byte	0x3
 1812 0673 27       		.byte	0x27
 1813 0674 1A       		.uleb128 0x1a
 1814 0675 37000000 		.4byte	.LASF68
 1815 0679 04       		.byte	0x4
 1816 067a 7E       		.byte	0x7e
 1817 067b 85060000 		.4byte	0x685
 1818 067f 1B       		.uleb128 0x1b
 1819 0680 6B000000 		.4byte	0x6b
 1820 0684 00       		.byte	0
 1821 0685 19       		.uleb128 0x19
 1822 0686 F7020000 		.4byte	.LASF61
 1823 068a 03       		.byte	0x3
 1824 068b 28       		.byte	0x28
 1825 068c 00       		.byte	0
 1826              		.section	.debug_abbrev,"",%progbits
 1827              	.Ldebug_abbrev0:
 1828 0000 01       		.uleb128 0x1
 1829 0001 11       		.uleb128 0x11
 1830 0002 01       		.byte	0x1
 1831 0003 25       		.uleb128 0x25
 1832 0004 0E       		.uleb128 0xe
 1833 0005 13       		.uleb128 0x13
 1834 0006 0B       		.uleb128 0xb
 1835 0007 03       		.uleb128 0x3
 1836 0008 0E       		.uleb128 0xe
 1837 0009 1B       		.uleb128 0x1b
 1838 000a 0E       		.uleb128 0xe
 1839 000b 55       		.uleb128 0x55
 1840 000c 17       		.uleb128 0x17
 1841 000d 11       		.uleb128 0x11
 1842 000e 01       		.uleb128 0x1
 1843 000f 10       		.uleb128 0x10
 1844 0010 17       		.uleb128 0x17
 1845 0011 00       		.byte	0
 1846 0012 00       		.byte	0
 1847 0013 02       		.uleb128 0x2
 1848 0014 24       		.uleb128 0x24
 1849 0015 00       		.byte	0
 1850 0016 0B       		.uleb128 0xb
 1851 0017 0B       		.uleb128 0xb
 1852 0018 3E       		.uleb128 0x3e
 1853 0019 0B       		.uleb128 0xb
 1854 001a 03       		.uleb128 0x3
 1855 001b 0E       		.uleb128 0xe
 1856 001c 00       		.byte	0
 1857 001d 00       		.byte	0
 1858 001e 03       		.uleb128 0x3
 1859 001f 24       		.uleb128 0x24
 1860 0020 00       		.byte	0
 1861 0021 0B       		.uleb128 0xb
 1862 0022 0B       		.uleb128 0xb
 1863 0023 3E       		.uleb128 0x3e
 1864 0024 0B       		.uleb128 0xb
 1865 0025 03       		.uleb128 0x3
 1866 0026 08       		.uleb128 0x8
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 63


 1867 0027 00       		.byte	0
 1868 0028 00       		.byte	0
 1869 0029 04       		.uleb128 0x4
 1870 002a 16       		.uleb128 0x16
 1871 002b 00       		.byte	0
 1872 002c 03       		.uleb128 0x3
 1873 002d 0E       		.uleb128 0xe
 1874 002e 3A       		.uleb128 0x3a
 1875 002f 0B       		.uleb128 0xb
 1876 0030 3B       		.uleb128 0x3b
 1877 0031 05       		.uleb128 0x5
 1878 0032 49       		.uleb128 0x49
 1879 0033 13       		.uleb128 0x13
 1880 0034 00       		.byte	0
 1881 0035 00       		.byte	0
 1882 0036 05       		.uleb128 0x5
 1883 0037 35       		.uleb128 0x35
 1884 0038 00       		.byte	0
 1885 0039 49       		.uleb128 0x49
 1886 003a 13       		.uleb128 0x13
 1887 003b 00       		.byte	0
 1888 003c 00       		.byte	0
 1889 003d 06       		.uleb128 0x6
 1890 003e 2E       		.uleb128 0x2e
 1891 003f 00       		.byte	0
 1892 0040 3F       		.uleb128 0x3f
 1893 0041 19       		.uleb128 0x19
 1894 0042 03       		.uleb128 0x3
 1895 0043 0E       		.uleb128 0xe
 1896 0044 3A       		.uleb128 0x3a
 1897 0045 0B       		.uleb128 0xb
 1898 0046 3B       		.uleb128 0x3b
 1899 0047 0B       		.uleb128 0xb
 1900 0048 27       		.uleb128 0x27
 1901 0049 19       		.uleb128 0x19
 1902 004a 11       		.uleb128 0x11
 1903 004b 01       		.uleb128 0x1
 1904 004c 12       		.uleb128 0x12
 1905 004d 06       		.uleb128 0x6
 1906 004e 40       		.uleb128 0x40
 1907 004f 18       		.uleb128 0x18
 1908 0050 9742     		.uleb128 0x2117
 1909 0052 19       		.uleb128 0x19
 1910 0053 00       		.byte	0
 1911 0054 00       		.byte	0
 1912 0055 07       		.uleb128 0x7
 1913 0056 2E       		.uleb128 0x2e
 1914 0057 01       		.byte	0x1
 1915 0058 3F       		.uleb128 0x3f
 1916 0059 19       		.uleb128 0x19
 1917 005a 03       		.uleb128 0x3
 1918 005b 0E       		.uleb128 0xe
 1919 005c 3A       		.uleb128 0x3a
 1920 005d 0B       		.uleb128 0xb
 1921 005e 3B       		.uleb128 0x3b
 1922 005f 0B       		.uleb128 0xb
 1923 0060 27       		.uleb128 0x27
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 64


 1924 0061 19       		.uleb128 0x19
 1925 0062 11       		.uleb128 0x11
 1926 0063 01       		.uleb128 0x1
 1927 0064 12       		.uleb128 0x12
 1928 0065 06       		.uleb128 0x6
 1929 0066 40       		.uleb128 0x40
 1930 0067 18       		.uleb128 0x18
 1931 0068 9742     		.uleb128 0x2117
 1932 006a 19       		.uleb128 0x19
 1933 006b 01       		.uleb128 0x1
 1934 006c 13       		.uleb128 0x13
 1935 006d 00       		.byte	0
 1936 006e 00       		.byte	0
 1937 006f 08       		.uleb128 0x8
 1938 0070 34       		.uleb128 0x34
 1939 0071 00       		.byte	0
 1940 0072 03       		.uleb128 0x3
 1941 0073 0E       		.uleb128 0xe
 1942 0074 3A       		.uleb128 0x3a
 1943 0075 0B       		.uleb128 0xb
 1944 0076 3B       		.uleb128 0x3b
 1945 0077 0B       		.uleb128 0xb
 1946 0078 49       		.uleb128 0x49
 1947 0079 13       		.uleb128 0x13
 1948 007a 02       		.uleb128 0x2
 1949 007b 17       		.uleb128 0x17
 1950 007c 00       		.byte	0
 1951 007d 00       		.byte	0
 1952 007e 09       		.uleb128 0x9
 1953 007f 898201   		.uleb128 0x4109
 1954 0082 00       		.byte	0
 1955 0083 11       		.uleb128 0x11
 1956 0084 01       		.uleb128 0x1
 1957 0085 31       		.uleb128 0x31
 1958 0086 13       		.uleb128 0x13
 1959 0087 00       		.byte	0
 1960 0088 00       		.byte	0
 1961 0089 0A       		.uleb128 0xa
 1962 008a 898201   		.uleb128 0x4109
 1963 008d 01       		.byte	0x1
 1964 008e 11       		.uleb128 0x11
 1965 008f 01       		.uleb128 0x1
 1966 0090 31       		.uleb128 0x31
 1967 0091 13       		.uleb128 0x13
 1968 0092 00       		.byte	0
 1969 0093 00       		.byte	0
 1970 0094 0B       		.uleb128 0xb
 1971 0095 8A8201   		.uleb128 0x410a
 1972 0098 00       		.byte	0
 1973 0099 02       		.uleb128 0x2
 1974 009a 18       		.uleb128 0x18
 1975 009b 9142     		.uleb128 0x2111
 1976 009d 18       		.uleb128 0x18
 1977 009e 00       		.byte	0
 1978 009f 00       		.byte	0
 1979 00a0 0C       		.uleb128 0xc
 1980 00a1 2E       		.uleb128 0x2e
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 65


 1981 00a2 00       		.byte	0
 1982 00a3 3F       		.uleb128 0x3f
 1983 00a4 19       		.uleb128 0x19
 1984 00a5 03       		.uleb128 0x3
 1985 00a6 0E       		.uleb128 0xe
 1986 00a7 3A       		.uleb128 0x3a
 1987 00a8 0B       		.uleb128 0xb
 1988 00a9 3B       		.uleb128 0x3b
 1989 00aa 05       		.uleb128 0x5
 1990 00ab 27       		.uleb128 0x27
 1991 00ac 19       		.uleb128 0x19
 1992 00ad 49       		.uleb128 0x49
 1993 00ae 13       		.uleb128 0x13
 1994 00af 11       		.uleb128 0x11
 1995 00b0 01       		.uleb128 0x1
 1996 00b1 12       		.uleb128 0x12
 1997 00b2 06       		.uleb128 0x6
 1998 00b3 40       		.uleb128 0x40
 1999 00b4 18       		.uleb128 0x18
 2000 00b5 9742     		.uleb128 0x2117
 2001 00b7 19       		.uleb128 0x19
 2002 00b8 00       		.byte	0
 2003 00b9 00       		.byte	0
 2004 00ba 0D       		.uleb128 0xd
 2005 00bb 2E       		.uleb128 0x2e
 2006 00bc 01       		.byte	0x1
 2007 00bd 3F       		.uleb128 0x3f
 2008 00be 19       		.uleb128 0x19
 2009 00bf 03       		.uleb128 0x3
 2010 00c0 0E       		.uleb128 0xe
 2011 00c1 3A       		.uleb128 0x3a
 2012 00c2 0B       		.uleb128 0xb
 2013 00c3 3B       		.uleb128 0x3b
 2014 00c4 05       		.uleb128 0x5
 2015 00c5 27       		.uleb128 0x27
 2016 00c6 19       		.uleb128 0x19
 2017 00c7 11       		.uleb128 0x11
 2018 00c8 01       		.uleb128 0x1
 2019 00c9 12       		.uleb128 0x12
 2020 00ca 06       		.uleb128 0x6
 2021 00cb 40       		.uleb128 0x40
 2022 00cc 18       		.uleb128 0x18
 2023 00cd 9742     		.uleb128 0x2117
 2024 00cf 19       		.uleb128 0x19
 2025 00d0 01       		.uleb128 0x1
 2026 00d1 13       		.uleb128 0x13
 2027 00d2 00       		.byte	0
 2028 00d3 00       		.byte	0
 2029 00d4 0E       		.uleb128 0xe
 2030 00d5 05       		.uleb128 0x5
 2031 00d6 00       		.byte	0
 2032 00d7 03       		.uleb128 0x3
 2033 00d8 0E       		.uleb128 0xe
 2034 00d9 3A       		.uleb128 0x3a
 2035 00da 0B       		.uleb128 0xb
 2036 00db 3B       		.uleb128 0x3b
 2037 00dc 05       		.uleb128 0x5
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 66


 2038 00dd 49       		.uleb128 0x49
 2039 00de 13       		.uleb128 0x13
 2040 00df 02       		.uleb128 0x2
 2041 00e0 18       		.uleb128 0x18
 2042 00e1 00       		.byte	0
 2043 00e2 00       		.byte	0
 2044 00e3 0F       		.uleb128 0xf
 2045 00e4 2E       		.uleb128 0x2e
 2046 00e5 01       		.byte	0x1
 2047 00e6 3F       		.uleb128 0x3f
 2048 00e7 19       		.uleb128 0x19
 2049 00e8 03       		.uleb128 0x3
 2050 00e9 0E       		.uleb128 0xe
 2051 00ea 3A       		.uleb128 0x3a
 2052 00eb 0B       		.uleb128 0xb
 2053 00ec 3B       		.uleb128 0x3b
 2054 00ed 05       		.uleb128 0x5
 2055 00ee 27       		.uleb128 0x27
 2056 00ef 19       		.uleb128 0x19
 2057 00f0 49       		.uleb128 0x49
 2058 00f1 13       		.uleb128 0x13
 2059 00f2 11       		.uleb128 0x11
 2060 00f3 01       		.uleb128 0x1
 2061 00f4 12       		.uleb128 0x12
 2062 00f5 06       		.uleb128 0x6
 2063 00f6 40       		.uleb128 0x40
 2064 00f7 18       		.uleb128 0x18
 2065 00f8 9742     		.uleb128 0x2117
 2066 00fa 19       		.uleb128 0x19
 2067 00fb 01       		.uleb128 0x1
 2068 00fc 13       		.uleb128 0x13
 2069 00fd 00       		.byte	0
 2070 00fe 00       		.byte	0
 2071 00ff 10       		.uleb128 0x10
 2072 0100 34       		.uleb128 0x34
 2073 0101 00       		.byte	0
 2074 0102 03       		.uleb128 0x3
 2075 0103 0E       		.uleb128 0xe
 2076 0104 3A       		.uleb128 0x3a
 2077 0105 0B       		.uleb128 0xb
 2078 0106 3B       		.uleb128 0x3b
 2079 0107 05       		.uleb128 0x5
 2080 0108 49       		.uleb128 0x49
 2081 0109 13       		.uleb128 0x13
 2082 010a 02       		.uleb128 0x2
 2083 010b 18       		.uleb128 0x18
 2084 010c 00       		.byte	0
 2085 010d 00       		.byte	0
 2086 010e 11       		.uleb128 0x11
 2087 010f 34       		.uleb128 0x34
 2088 0110 00       		.byte	0
 2089 0111 03       		.uleb128 0x3
 2090 0112 0E       		.uleb128 0xe
 2091 0113 3A       		.uleb128 0x3a
 2092 0114 0B       		.uleb128 0xb
 2093 0115 3B       		.uleb128 0x3b
 2094 0116 05       		.uleb128 0x5
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 67


 2095 0117 49       		.uleb128 0x49
 2096 0118 13       		.uleb128 0x13
 2097 0119 02       		.uleb128 0x2
 2098 011a 17       		.uleb128 0x17
 2099 011b 00       		.byte	0
 2100 011c 00       		.byte	0
 2101 011d 12       		.uleb128 0x12
 2102 011e 05       		.uleb128 0x5
 2103 011f 00       		.byte	0
 2104 0120 03       		.uleb128 0x3
 2105 0121 0E       		.uleb128 0xe
 2106 0122 3A       		.uleb128 0x3a
 2107 0123 0B       		.uleb128 0xb
 2108 0124 3B       		.uleb128 0x3b
 2109 0125 05       		.uleb128 0x5
 2110 0126 49       		.uleb128 0x49
 2111 0127 13       		.uleb128 0x13
 2112 0128 02       		.uleb128 0x2
 2113 0129 17       		.uleb128 0x17
 2114 012a 00       		.byte	0
 2115 012b 00       		.byte	0
 2116 012c 13       		.uleb128 0x13
 2117 012d 0F       		.uleb128 0xf
 2118 012e 00       		.byte	0
 2119 012f 0B       		.uleb128 0xb
 2120 0130 0B       		.uleb128 0xb
 2121 0131 49       		.uleb128 0x49
 2122 0132 13       		.uleb128 0x13
 2123 0133 00       		.byte	0
 2124 0134 00       		.byte	0
 2125 0135 14       		.uleb128 0x14
 2126 0136 26       		.uleb128 0x26
 2127 0137 00       		.byte	0
 2128 0138 49       		.uleb128 0x49
 2129 0139 13       		.uleb128 0x13
 2130 013a 00       		.byte	0
 2131 013b 00       		.byte	0
 2132 013c 15       		.uleb128 0x15
 2133 013d 898201   		.uleb128 0x4109
 2134 0140 01       		.byte	0x1
 2135 0141 11       		.uleb128 0x11
 2136 0142 01       		.uleb128 0x1
 2137 0143 31       		.uleb128 0x31
 2138 0144 13       		.uleb128 0x13
 2139 0145 01       		.uleb128 0x1
 2140 0146 13       		.uleb128 0x13
 2141 0147 00       		.byte	0
 2142 0148 00       		.byte	0
 2143 0149 16       		.uleb128 0x16
 2144 014a 0B       		.uleb128 0xb
 2145 014b 01       		.byte	0x1
 2146 014c 11       		.uleb128 0x11
 2147 014d 01       		.uleb128 0x1
 2148 014e 12       		.uleb128 0x12
 2149 014f 06       		.uleb128 0x6
 2150 0150 00       		.byte	0
 2151 0151 00       		.byte	0
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 68


 2152 0152 17       		.uleb128 0x17
 2153 0153 34       		.uleb128 0x34
 2154 0154 00       		.byte	0
 2155 0155 03       		.uleb128 0x3
 2156 0156 0E       		.uleb128 0xe
 2157 0157 3A       		.uleb128 0x3a
 2158 0158 0B       		.uleb128 0xb
 2159 0159 3B       		.uleb128 0x3b
 2160 015a 0B       		.uleb128 0xb
 2161 015b 49       		.uleb128 0x49
 2162 015c 13       		.uleb128 0x13
 2163 015d 3F       		.uleb128 0x3f
 2164 015e 19       		.uleb128 0x19
 2165 015f 02       		.uleb128 0x2
 2166 0160 18       		.uleb128 0x18
 2167 0161 00       		.byte	0
 2168 0162 00       		.byte	0
 2169 0163 18       		.uleb128 0x18
 2170 0164 2E       		.uleb128 0x2e
 2171 0165 00       		.byte	0
 2172 0166 3F       		.uleb128 0x3f
 2173 0167 19       		.uleb128 0x19
 2174 0168 03       		.uleb128 0x3
 2175 0169 0E       		.uleb128 0xe
 2176 016a 3A       		.uleb128 0x3a
 2177 016b 0B       		.uleb128 0xb
 2178 016c 3B       		.uleb128 0x3b
 2179 016d 0B       		.uleb128 0xb
 2180 016e 27       		.uleb128 0x27
 2181 016f 19       		.uleb128 0x19
 2182 0170 49       		.uleb128 0x49
 2183 0171 13       		.uleb128 0x13
 2184 0172 3C       		.uleb128 0x3c
 2185 0173 19       		.uleb128 0x19
 2186 0174 00       		.byte	0
 2187 0175 00       		.byte	0
 2188 0176 19       		.uleb128 0x19
 2189 0177 2E       		.uleb128 0x2e
 2190 0178 00       		.byte	0
 2191 0179 3F       		.uleb128 0x3f
 2192 017a 19       		.uleb128 0x19
 2193 017b 03       		.uleb128 0x3
 2194 017c 0E       		.uleb128 0xe
 2195 017d 3A       		.uleb128 0x3a
 2196 017e 0B       		.uleb128 0xb
 2197 017f 3B       		.uleb128 0x3b
 2198 0180 0B       		.uleb128 0xb
 2199 0181 27       		.uleb128 0x27
 2200 0182 19       		.uleb128 0x19
 2201 0183 3C       		.uleb128 0x3c
 2202 0184 19       		.uleb128 0x19
 2203 0185 00       		.byte	0
 2204 0186 00       		.byte	0
 2205 0187 1A       		.uleb128 0x1a
 2206 0188 2E       		.uleb128 0x2e
 2207 0189 01       		.byte	0x1
 2208 018a 3F       		.uleb128 0x3f
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 69


 2209 018b 19       		.uleb128 0x19
 2210 018c 03       		.uleb128 0x3
 2211 018d 0E       		.uleb128 0xe
 2212 018e 3A       		.uleb128 0x3a
 2213 018f 0B       		.uleb128 0xb
 2214 0190 3B       		.uleb128 0x3b
 2215 0191 0B       		.uleb128 0xb
 2216 0192 27       		.uleb128 0x27
 2217 0193 19       		.uleb128 0x19
 2218 0194 3C       		.uleb128 0x3c
 2219 0195 19       		.uleb128 0x19
 2220 0196 01       		.uleb128 0x1
 2221 0197 13       		.uleb128 0x13
 2222 0198 00       		.byte	0
 2223 0199 00       		.byte	0
 2224 019a 1B       		.uleb128 0x1b
 2225 019b 05       		.uleb128 0x5
 2226 019c 00       		.byte	0
 2227 019d 49       		.uleb128 0x49
 2228 019e 13       		.uleb128 0x13
 2229 019f 00       		.byte	0
 2230 01a0 00       		.byte	0
 2231 01a1 00       		.byte	0
 2232              		.section	.debug_loc,"",%progbits
 2233              	.Ldebug_loc0:
 2234              	.LLST0:
 2235 0000 08000000 		.4byte	.LVL1
 2236 0004 28000000 		.4byte	.LVL4
 2237 0008 0100     		.2byte	0x1
 2238 000a 54       		.byte	0x54
 2239 000b 00000000 		.4byte	0
 2240 000f 00000000 		.4byte	0
 2241              	.LLST1:
 2242 0013 08000000 		.4byte	.LVL8
 2243 0017 28000000 		.4byte	.LVL11
 2244 001b 0100     		.2byte	0x1
 2245 001d 54       		.byte	0x54
 2246 001e 00000000 		.4byte	0
 2247 0022 00000000 		.4byte	0
 2248              	.LLST2:
 2249 0026 04000000 		.4byte	.LVL15
 2250 002a 08000000 		.4byte	.LVL16
 2251 002e 0600     		.2byte	0x6
 2252 0030 70       		.byte	0x70
 2253 0031 00       		.sleb128 0
 2254 0032 08       		.byte	0x8
 2255 0033 7F       		.byte	0x7f
 2256 0034 1A       		.byte	0x1a
 2257 0035 9F       		.byte	0x9f
 2258 0036 00000000 		.4byte	0
 2259 003a 00000000 		.4byte	0
 2260              	.LLST3:
 2261 003e 00000000 		.4byte	.LVL17
 2262 0042 12000000 		.4byte	.LVL19
 2263 0046 0200     		.2byte	0x2
 2264 0048 30       		.byte	0x30
 2265 0049 9F       		.byte	0x9f
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 70


 2266 004a 12000000 		.4byte	.LVL19
 2267 004e 1A000000 		.4byte	.LVL20
 2268 0052 0100     		.2byte	0x1
 2269 0054 50       		.byte	0x50
 2270 0055 1A000000 		.4byte	.LVL20
 2271 0059 1E000000 		.4byte	.LVL21
 2272 005d 0200     		.2byte	0x2
 2273 005f 30       		.byte	0x30
 2274 0060 9F       		.byte	0x9f
 2275 0061 1E000000 		.4byte	.LVL21
 2276 0065 2C000000 		.4byte	.LFE9
 2277 0069 0100     		.2byte	0x1
 2278 006b 50       		.byte	0x50
 2279 006c 00000000 		.4byte	0
 2280 0070 00000000 		.4byte	0
 2281              	.LLST4:
 2282 0074 06000000 		.4byte	.LVL26
 2283 0078 1B000000 		.4byte	.LVL27-1
 2284 007c 0100     		.2byte	0x1
 2285 007e 50       		.byte	0x50
 2286 007f 00000000 		.4byte	0
 2287 0083 00000000 		.4byte	0
 2288              	.LLST5:
 2289 0087 00000000 		.4byte	.LVL34
 2290 008b 0A000000 		.4byte	.LVL36
 2291 008f 0100     		.2byte	0x1
 2292 0091 50       		.byte	0x50
 2293 0092 0A000000 		.4byte	.LVL36
 2294 0096 14000000 		.4byte	.LVL40
 2295 009a 0100     		.2byte	0x1
 2296 009c 55       		.byte	0x55
 2297 009d 14000000 		.4byte	.LVL40
 2298 00a1 18000000 		.4byte	.LVL41
 2299 00a5 0100     		.2byte	0x1
 2300 00a7 50       		.byte	0x50
 2301 00a8 18000000 		.4byte	.LVL41
 2302 00ac 20000000 		.4byte	.LVL42
 2303 00b0 0100     		.2byte	0x1
 2304 00b2 55       		.byte	0x55
 2305 00b3 20000000 		.4byte	.LVL42
 2306 00b7 24000000 		.4byte	.LFE20
 2307 00bb 0400     		.2byte	0x4
 2308 00bd F3       		.byte	0xf3
 2309 00be 01       		.uleb128 0x1
 2310 00bf 50       		.byte	0x50
 2311 00c0 9F       		.byte	0x9f
 2312 00c1 00000000 		.4byte	0
 2313 00c5 00000000 		.4byte	0
 2314              	.LLST6:
 2315 00c9 02000000 		.4byte	.LVL35
 2316 00cd 0A000000 		.4byte	.LVL36
 2317 00d1 0200     		.2byte	0x2
 2318 00d3 30       		.byte	0x30
 2319 00d4 9F       		.byte	0x9f
 2320 00d5 0A000000 		.4byte	.LVL36
 2321 00d9 10000000 		.4byte	.LVL38
 2322 00dd 0100     		.2byte	0x1
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 71


 2323 00df 54       		.byte	0x54
 2324 00e0 12000000 		.4byte	.LVL39
 2325 00e4 14000000 		.4byte	.LVL40
 2326 00e8 0100     		.2byte	0x1
 2327 00ea 54       		.byte	0x54
 2328 00eb 14000000 		.4byte	.LVL40
 2329 00ef 18000000 		.4byte	.LVL41
 2330 00f3 0200     		.2byte	0x2
 2331 00f5 30       		.byte	0x30
 2332 00f6 9F       		.byte	0x9f
 2333 00f7 18000000 		.4byte	.LVL41
 2334 00fb 20000000 		.4byte	.LVL42
 2335 00ff 0100     		.2byte	0x1
 2336 0101 54       		.byte	0x54
 2337 0102 00000000 		.4byte	0
 2338 0106 00000000 		.4byte	0
 2339              	.LLST7:
 2340 010a 00000000 		.4byte	.LVL43
 2341 010e 08000000 		.4byte	.LVL44
 2342 0112 0100     		.2byte	0x1
 2343 0114 50       		.byte	0x50
 2344 0115 08000000 		.4byte	.LVL44
 2345 0119 14000000 		.4byte	.LVL48
 2346 011d 0100     		.2byte	0x1
 2347 011f 56       		.byte	0x56
 2348 0120 14000000 		.4byte	.LVL48
 2349 0124 1C000000 		.4byte	.LVL49
 2350 0128 0100     		.2byte	0x1
 2351 012a 50       		.byte	0x50
 2352 012b 1C000000 		.4byte	.LVL49
 2353 012f 22000000 		.4byte	.LVL50
 2354 0133 0100     		.2byte	0x1
 2355 0135 56       		.byte	0x56
 2356 0136 22000000 		.4byte	.LVL50
 2357 013a 28000000 		.4byte	.LFE21
 2358 013e 0400     		.2byte	0x4
 2359 0140 F3       		.byte	0xf3
 2360 0141 01       		.uleb128 0x1
 2361 0142 50       		.byte	0x50
 2362 0143 9F       		.byte	0x9f
 2363 0144 00000000 		.4byte	0
 2364 0148 00000000 		.4byte	0
 2365              	.LLST8:
 2366 014c 00000000 		.4byte	.LVL43
 2367 0150 08000000 		.4byte	.LVL44
 2368 0154 0100     		.2byte	0x1
 2369 0156 51       		.byte	0x51
 2370 0157 08000000 		.4byte	.LVL44
 2371 015b 14000000 		.4byte	.LVL48
 2372 015f 0400     		.2byte	0x4
 2373 0161 F3       		.byte	0xf3
 2374 0162 01       		.uleb128 0x1
 2375 0163 51       		.byte	0x51
 2376 0164 9F       		.byte	0x9f
 2377 0165 14000000 		.4byte	.LVL48
 2378 0169 1C000000 		.4byte	.LVL49
 2379 016d 0100     		.2byte	0x1
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 72


 2380 016f 51       		.byte	0x51
 2381 0170 1C000000 		.4byte	.LVL49
 2382 0174 28000000 		.4byte	.LFE21
 2383 0178 0400     		.2byte	0x4
 2384 017a F3       		.byte	0xf3
 2385 017b 01       		.uleb128 0x1
 2386 017c 51       		.byte	0x51
 2387 017d 9F       		.byte	0x9f
 2388 017e 00000000 		.4byte	0
 2389 0182 00000000 		.4byte	0
 2390              	.LLST9:
 2391 0186 00000000 		.4byte	.LVL43
 2392 018a 08000000 		.4byte	.LVL44
 2393 018e 0200     		.2byte	0x2
 2394 0190 30       		.byte	0x30
 2395 0191 9F       		.byte	0x9f
 2396 0192 08000000 		.4byte	.LVL44
 2397 0196 10000000 		.4byte	.LVL46
 2398 019a 0100     		.2byte	0x1
 2399 019c 54       		.byte	0x54
 2400 019d 12000000 		.4byte	.LVL47
 2401 01a1 14000000 		.4byte	.LVL48
 2402 01a5 0100     		.2byte	0x1
 2403 01a7 54       		.byte	0x54
 2404 01a8 14000000 		.4byte	.LVL48
 2405 01ac 1C000000 		.4byte	.LVL49
 2406 01b0 0200     		.2byte	0x2
 2407 01b2 30       		.byte	0x30
 2408 01b3 9F       		.byte	0x9f
 2409 01b4 1C000000 		.4byte	.LVL49
 2410 01b8 22000000 		.4byte	.LVL50
 2411 01bc 0100     		.2byte	0x1
 2412 01be 54       		.byte	0x54
 2413 01bf 00000000 		.4byte	0
 2414 01c3 00000000 		.4byte	0
 2415              	.LLST10:
 2416 01c7 00000000 		.4byte	.LVL51
 2417 01cb 0B000000 		.4byte	.LVL52-1
 2418 01cf 0100     		.2byte	0x1
 2419 01d1 50       		.byte	0x50
 2420 01d2 0B000000 		.4byte	.LVL52-1
 2421 01d6 20000000 		.4byte	.LFE22
 2422 01da 0400     		.2byte	0x4
 2423 01dc F3       		.byte	0xf3
 2424 01dd 01       		.uleb128 0x1
 2425 01de 50       		.byte	0x50
 2426 01df 9F       		.byte	0x9f
 2427 01e0 00000000 		.4byte	0
 2428 01e4 00000000 		.4byte	0
 2429              	.LLST11:
 2430 01e8 06000000 		.4byte	.LVL55
 2431 01ec 1C000000 		.4byte	.LVL56
 2432 01f0 0100     		.2byte	0x1
 2433 01f2 53       		.byte	0x53
 2434 01f3 1C000000 		.4byte	.LVL56
 2435 01f7 24000000 		.4byte	.LFE23
 2436 01fb 0100     		.2byte	0x1
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 73


 2437 01fd 50       		.byte	0x50
 2438 01fe 00000000 		.4byte	0
 2439 0202 00000000 		.4byte	0
 2440              	.LLST12:
 2441 0206 06000000 		.4byte	.LVL57
 2442 020a 1B000000 		.4byte	.LVL58-1
 2443 020e 0100     		.2byte	0x1
 2444 0210 50       		.byte	0x50
 2445 0211 00000000 		.4byte	0
 2446 0215 00000000 		.4byte	0
 2447              	.LLST13:
 2448 0219 00000000 		.4byte	.LVL59
 2449 021d 13000000 		.4byte	.LVL60-1
 2450 0221 0100     		.2byte	0x1
 2451 0223 50       		.byte	0x50
 2452 0224 13000000 		.4byte	.LVL60-1
 2453 0228 56000000 		.4byte	.LVL68
 2454 022c 0400     		.2byte	0x4
 2455 022e F3       		.byte	0xf3
 2456 022f 01       		.uleb128 0x1
 2457 0230 50       		.byte	0x50
 2458 0231 9F       		.byte	0x9f
 2459 0232 56000000 		.4byte	.LVL68
 2460 0236 64000000 		.4byte	.LFE25
 2461 023a 0100     		.2byte	0x1
 2462 023c 50       		.byte	0x50
 2463 023d 00000000 		.4byte	0
 2464 0241 00000000 		.4byte	0
 2465              	.LLST14:
 2466 0245 28000000 		.4byte	.LVL62
 2467 0249 2E000000 		.4byte	.LVL63
 2468 024d 0100     		.2byte	0x1
 2469 024f 53       		.byte	0x53
 2470 0250 3A000000 		.4byte	.LVL64
 2471 0254 40000000 		.4byte	.LVL65
 2472 0258 0100     		.2byte	0x1
 2473 025a 53       		.byte	0x53
 2474 025b 00000000 		.4byte	0
 2475 025f 00000000 		.4byte	0
 2476              	.LLST15:
 2477 0263 00000000 		.4byte	.LVL69
 2478 0267 07000000 		.4byte	.LVL70-1
 2479 026b 0100     		.2byte	0x1
 2480 026d 50       		.byte	0x50
 2481 026e 07000000 		.4byte	.LVL70-1
 2482 0272 14000000 		.4byte	.LVL72
 2483 0276 0400     		.2byte	0x4
 2484 0278 F3       		.byte	0xf3
 2485 0279 01       		.uleb128 0x1
 2486 027a 50       		.byte	0x50
 2487 027b 9F       		.byte	0x9f
 2488 027c 14000000 		.4byte	.LVL72
 2489 0280 17000000 		.4byte	.LVL73-1
 2490 0284 0100     		.2byte	0x1
 2491 0286 50       		.byte	0x50
 2492 0287 17000000 		.4byte	.LVL73-1
 2493 028b 22000000 		.4byte	.LFE26
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 74


 2494 028f 0400     		.2byte	0x4
 2495 0291 F3       		.byte	0xf3
 2496 0292 01       		.uleb128 0x1
 2497 0293 50       		.byte	0x50
 2498 0294 9F       		.byte	0x9f
 2499 0295 00000000 		.4byte	0
 2500 0299 00000000 		.4byte	0
 2501              		.section	.debug_aranges,"",%progbits
 2502 0000 FC000000 		.4byte	0xfc
 2503 0004 0200     		.2byte	0x2
 2504 0006 00000000 		.4byte	.Ldebug_info0
 2505 000a 04       		.byte	0x4
 2506 000b 00       		.byte	0
 2507 000c 0000     		.2byte	0
 2508 000e 0000     		.2byte	0
 2509 0010 00000000 		.4byte	.LFB1
 2510 0014 14000000 		.4byte	.LFE1-.LFB1
 2511 0018 00000000 		.4byte	.LFB2
 2512 001c 2C000000 		.4byte	.LFE2-.LFB2
 2513 0020 00000000 		.4byte	.LFB0
 2514 0024 1C000000 		.4byte	.LFE0-.LFB0
 2515 0028 00000000 		.4byte	.LFB3
 2516 002c 30000000 		.4byte	.LFE3-.LFB3
 2517 0030 00000000 		.4byte	.LFB4
 2518 0034 0C000000 		.4byte	.LFE4-.LFB4
 2519 0038 00000000 		.4byte	.LFB5
 2520 003c 0C000000 		.4byte	.LFE5-.LFB5
 2521 0040 00000000 		.4byte	.LFB6
 2522 0044 0C000000 		.4byte	.LFE6-.LFB6
 2523 0048 00000000 		.4byte	.LFB7
 2524 004c 0C000000 		.4byte	.LFE7-.LFB7
 2525 0050 00000000 		.4byte	.LFB8
 2526 0054 10000000 		.4byte	.LFE8-.LFB8
 2527 0058 00000000 		.4byte	.LFB9
 2528 005c 2C000000 		.4byte	.LFE9-.LFB9
 2529 0060 00000000 		.4byte	.LFB10
 2530 0064 12000000 		.4byte	.LFE10-.LFB10
 2531 0068 00000000 		.4byte	.LFB11
 2532 006c 18000000 		.4byte	.LFE11-.LFB11
 2533 0070 00000000 		.4byte	.LFB12
 2534 0074 24000000 		.4byte	.LFE12-.LFB12
 2535 0078 00000000 		.4byte	.LFB13
 2536 007c 02000000 		.4byte	.LFE13-.LFB13
 2537 0080 00000000 		.4byte	.LFB14
 2538 0084 0C000000 		.4byte	.LFE14-.LFB14
 2539 0088 00000000 		.4byte	.LFB15
 2540 008c 0C000000 		.4byte	.LFE15-.LFB15
 2541 0090 00000000 		.4byte	.LFB16
 2542 0094 0C000000 		.4byte	.LFE16-.LFB16
 2543 0098 00000000 		.4byte	.LFB17
 2544 009c 14000000 		.4byte	.LFE17-.LFB17
 2545 00a0 00000000 		.4byte	.LFB18
 2546 00a4 0C000000 		.4byte	.LFE18-.LFB18
 2547 00a8 00000000 		.4byte	.LFB19
 2548 00ac 18000000 		.4byte	.LFE19-.LFB19
 2549 00b0 00000000 		.4byte	.LFB20
 2550 00b4 24000000 		.4byte	.LFE20-.LFB20
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 75


 2551 00b8 00000000 		.4byte	.LFB21
 2552 00bc 28000000 		.4byte	.LFE21-.LFB21
 2553 00c0 00000000 		.4byte	.LFB22
 2554 00c4 20000000 		.4byte	.LFE22-.LFB22
 2555 00c8 00000000 		.4byte	.LFB23
 2556 00cc 24000000 		.4byte	.LFE23-.LFB23
 2557 00d0 00000000 		.4byte	.LFB24
 2558 00d4 24000000 		.4byte	.LFE24-.LFB24
 2559 00d8 00000000 		.4byte	.LFB25
 2560 00dc 64000000 		.4byte	.LFE25-.LFB25
 2561 00e0 00000000 		.4byte	.LFB26
 2562 00e4 22000000 		.4byte	.LFE26-.LFB26
 2563 00e8 00000000 		.4byte	.LFB27
 2564 00ec 1C000000 		.4byte	.LFE27-.LFB27
 2565 00f0 00000000 		.4byte	.LFB28
 2566 00f4 1C000000 		.4byte	.LFE28-.LFB28
 2567 00f8 00000000 		.4byte	0
 2568 00fc 00000000 		.4byte	0
 2569              		.section	.debug_ranges,"",%progbits
 2570              	.Ldebug_ranges0:
 2571 0000 00000000 		.4byte	.LFB1
 2572 0004 14000000 		.4byte	.LFE1
 2573 0008 00000000 		.4byte	.LFB2
 2574 000c 2C000000 		.4byte	.LFE2
 2575 0010 00000000 		.4byte	.LFB0
 2576 0014 1C000000 		.4byte	.LFE0
 2577 0018 00000000 		.4byte	.LFB3
 2578 001c 30000000 		.4byte	.LFE3
 2579 0020 00000000 		.4byte	.LFB4
 2580 0024 0C000000 		.4byte	.LFE4
 2581 0028 00000000 		.4byte	.LFB5
 2582 002c 0C000000 		.4byte	.LFE5
 2583 0030 00000000 		.4byte	.LFB6
 2584 0034 0C000000 		.4byte	.LFE6
 2585 0038 00000000 		.4byte	.LFB7
 2586 003c 0C000000 		.4byte	.LFE7
 2587 0040 00000000 		.4byte	.LFB8
 2588 0044 10000000 		.4byte	.LFE8
 2589 0048 00000000 		.4byte	.LFB9
 2590 004c 2C000000 		.4byte	.LFE9
 2591 0050 00000000 		.4byte	.LFB10
 2592 0054 12000000 		.4byte	.LFE10
 2593 0058 00000000 		.4byte	.LFB11
 2594 005c 18000000 		.4byte	.LFE11
 2595 0060 00000000 		.4byte	.LFB12
 2596 0064 24000000 		.4byte	.LFE12
 2597 0068 00000000 		.4byte	.LFB13
 2598 006c 02000000 		.4byte	.LFE13
 2599 0070 00000000 		.4byte	.LFB14
 2600 0074 0C000000 		.4byte	.LFE14
 2601 0078 00000000 		.4byte	.LFB15
 2602 007c 0C000000 		.4byte	.LFE15
 2603 0080 00000000 		.4byte	.LFB16
 2604 0084 0C000000 		.4byte	.LFE16
 2605 0088 00000000 		.4byte	.LFB17
 2606 008c 14000000 		.4byte	.LFE17
 2607 0090 00000000 		.4byte	.LFB18
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 76


 2608 0094 0C000000 		.4byte	.LFE18
 2609 0098 00000000 		.4byte	.LFB19
 2610 009c 18000000 		.4byte	.LFE19
 2611 00a0 00000000 		.4byte	.LFB20
 2612 00a4 24000000 		.4byte	.LFE20
 2613 00a8 00000000 		.4byte	.LFB21
 2614 00ac 28000000 		.4byte	.LFE21
 2615 00b0 00000000 		.4byte	.LFB22
 2616 00b4 20000000 		.4byte	.LFE22
 2617 00b8 00000000 		.4byte	.LFB23
 2618 00bc 24000000 		.4byte	.LFE23
 2619 00c0 00000000 		.4byte	.LFB24
 2620 00c4 24000000 		.4byte	.LFE24
 2621 00c8 00000000 		.4byte	.LFB25
 2622 00cc 64000000 		.4byte	.LFE25
 2623 00d0 00000000 		.4byte	.LFB26
 2624 00d4 22000000 		.4byte	.LFE26
 2625 00d8 00000000 		.4byte	.LFB27
 2626 00dc 1C000000 		.4byte	.LFE27
 2627 00e0 00000000 		.4byte	.LFB28
 2628 00e4 1C000000 		.4byte	.LFE28
 2629 00e8 00000000 		.4byte	0
 2630 00ec 00000000 		.4byte	0
 2631              		.section	.debug_line,"",%progbits
 2632              	.Ldebug_line0:
 2633 0000 DC020000 		.section	.debug_str,"MS",%progbits,1
 2633      02006300 
 2633      00000201 
 2633      FB0E0D00 
 2633      01010101 
 2634              	.LASF49:
 2635 0000 454D4954 		.ascii	"EMITE_PutArray\000"
 2635      455F5075 
 2635      74417272 
 2635      617900
 2636              	.LASF10:
 2637 000f 75696E74 		.ascii	"uint16\000"
 2637      313600
 2638              	.LASF58:
 2639 0016 454D4954 		.ascii	"EMITE_LoadRxConfig\000"
 2639      455F4C6F 
 2639      61645278 
 2639      436F6E66 
 2639      696700
 2640              	.LASF29:
 2641 0029 454D4954 		.ascii	"EMITE_GetChar\000"
 2641      455F4765 
 2641      74436861 
 2641      7200
 2642              	.LASF68:
 2643 0037 43794578 		.ascii	"CyExitCriticalSection\000"
 2643      69744372 
 2643      69746963 
 2643      616C5365 
 2643      6374696F 
 2644              	.LASF42:
 2645 004d 74784461 		.ascii	"txDataByte\000"
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 77


 2645      74614279 
 2645      746500
 2646              	.LASF64:
 2647 0058 433A5C55 		.ascii	"C:\\Users\\Henry Alberto\\Desktop\\Protocolos\\Half"
 2647      73657273 
 2647      5C48656E 
 2647      72792041 
 2647      6C626572 
 2648 0086 5F4D6173 		.ascii	"_Master.cydsn\000"
 2648      7465722E 
 2648      63796473 
 2648      6E00
 2649              	.LASF47:
 2650 0094 73747269 		.ascii	"string\000"
 2650      6E6700
 2651              	.LASF35:
 2652 009b 454D4954 		.ascii	"EMITE_SetRxAddressMode\000"
 2652      455F5365 
 2652      74527841 
 2652      64647265 
 2652      73734D6F 
 2653              	.LASF66:
 2654 00b2 454D4954 		.ascii	"EMITE_initVar\000"
 2654      455F696E 
 2654      69745661 
 2654      7200
 2655              	.LASF57:
 2656 00c0 454D4954 		.ascii	"EMITE_SetTxAddressMode\000"
 2656      455F5365 
 2656      74547841 
 2656      64647265 
 2656      73734D6F 
 2657              	.LASF7:
 2658 00d7 6C6F6E67 		.ascii	"long long unsigned int\000"
 2658      206C6F6E 
 2658      6720756E 
 2658      7369676E 
 2658      65642069 
 2659              	.LASF45:
 2660 00ee 454D4954 		.ascii	"EMITE_PutChar\000"
 2660      455F5075 
 2660      74436861 
 2660      7200
 2661              	.LASF34:
 2662 00fc 454D4954 		.ascii	"EMITE_ClearRxBuffer\000"
 2662      455F436C 
 2662      65617252 
 2662      78427566 
 2662      66657200 
 2663              	.LASF6:
 2664 0110 6C6F6E67 		.ascii	"long long int\000"
 2664      206C6F6E 
 2664      6720696E 
 2664      7400
 2665              	.LASF0:
 2666 011e 7369676E 		.ascii	"signed char\000"
 2666      65642063 
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 78


 2666      68617200 
 2667              	.LASF17:
 2668 012a 454D4954 		.ascii	"EMITE_Enable\000"
 2668      455F456E 
 2668      61626C65 
 2668      00
 2669              	.LASF59:
 2670 0137 454D4954 		.ascii	"EMITE_LoadTxConfig\000"
 2670      455F4C6F 
 2670      61645478 
 2670      436F6E66 
 2670      696700
 2671              	.LASF4:
 2672 014a 6C6F6E67 		.ascii	"long int\000"
 2672      20696E74 
 2672      00
 2673              	.LASF9:
 2674 0153 75696E74 		.ascii	"uint8\000"
 2674      3800
 2675              	.LASF12:
 2676 0159 646F7562 		.ascii	"double\000"
 2676      6C6500
 2677              	.LASF51:
 2678 0160 454D4954 		.ascii	"EMITE_PutCRLF\000"
 2678      455F5075 
 2678      7443524C 
 2678      4600
 2679              	.LASF36:
 2680 016e 61646472 		.ascii	"addressMode\000"
 2680      6573734D 
 2680      6F646500 
 2681              	.LASF32:
 2682 017a 454D4954 		.ascii	"EMITE_GetRxBufferSize\000"
 2682      455F4765 
 2682      74527842 
 2682      75666665 
 2682      7253697A 
 2683              	.LASF23:
 2684 0190 636F6E74 		.ascii	"control\000"
 2684      726F6C00 
 2685              	.LASF54:
 2686 0198 454D4954 		.ascii	"EMITE_SendBreak\000"
 2686      455F5365 
 2686      6E644272 
 2686      65616B00 
 2687              	.LASF19:
 2688 01a8 454D4954 		.ascii	"EMITE_Stop\000"
 2688      455F5374 
 2688      6F7000
 2689              	.LASF55:
 2690 01b3 7265744D 		.ascii	"retMode\000"
 2690      6F646500 
 2691              	.LASF8:
 2692 01bb 756E7369 		.ascii	"unsigned int\000"
 2692      676E6564 
 2692      20696E74 
 2692      00
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 79


 2693              	.LASF5:
 2694 01c8 6C6F6E67 		.ascii	"long unsigned int\000"
 2694      20756E73 
 2694      69676E65 
 2694      6420696E 
 2694      7400
 2695              	.LASF48:
 2696 01da 62756649 		.ascii	"bufIndex\000"
 2696      6E646578 
 2696      00
 2697              	.LASF50:
 2698 01e3 62797465 		.ascii	"byteCount\000"
 2698      436F756E 
 2698      7400
 2699              	.LASF33:
 2700 01ed 73697A65 		.ascii	"size\000"
 2700      00
 2701              	.LASF3:
 2702 01f2 73686F72 		.ascii	"short unsigned int\000"
 2702      7420756E 
 2702      7369676E 
 2702      65642069 
 2702      6E7400
 2703              	.LASF27:
 2704 0205 454D4954 		.ascii	"EMITE_ReadRxStatus\000"
 2704      455F5265 
 2704      61645278 
 2704      53746174 
 2704      757300
 2705              	.LASF67:
 2706 0218 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2706      74657243 
 2706      72697469 
 2706      63616C53 
 2706      65637469 
 2707              	.LASF24:
 2708 022f 696E7453 		.ascii	"intSrc\000"
 2708      726300
 2709              	.LASF22:
 2710 0236 454D4954 		.ascii	"EMITE_SetRxInterruptMode\000"
 2710      455F5365 
 2710      74527849 
 2710      6E746572 
 2710      72757074 
 2711              	.LASF41:
 2712 024f 454D4954 		.ascii	"EMITE_WriteTxData\000"
 2712      455F5772 
 2712      69746554 
 2712      78446174 
 2712      6100
 2713              	.LASF56:
 2714 0261 746D7053 		.ascii	"tmpStat\000"
 2714      74617400 
 2715              	.LASF16:
 2716 0269 73697A65 		.ascii	"sizetype\000"
 2716      74797065 
 2716      00
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 80


 2717              	.LASF38:
 2718 0272 61646472 		.ascii	"address\000"
 2718      65737300 
 2719              	.LASF53:
 2720 027a 454D4954 		.ascii	"EMITE_ClearTxBuffer\000"
 2720      455F436C 
 2720      65617254 
 2720      78427566 
 2720      66657200 
 2721              	.LASF31:
 2722 028e 454D4954 		.ascii	"EMITE_GetByte\000"
 2722      455F4765 
 2722      74427974 
 2722      6500
 2723              	.LASF30:
 2724 029c 72785374 		.ascii	"rxStatus\000"
 2724      61747573 
 2724      00
 2725              	.LASF43:
 2726 02a5 454D4954 		.ascii	"EMITE_ReadControlRegister\000"
 2726      455F5265 
 2726      6164436F 
 2726      6E74726F 
 2726      6C526567 
 2727              	.LASF60:
 2728 02bf 454D4954 		.ascii	"EMITE_IntClock_Start\000"
 2728      455F496E 
 2728      74436C6F 
 2728      636B5F53 
 2728      74617274 
 2729              	.LASF11:
 2730 02d4 666C6F61 		.ascii	"float\000"
 2730      7400
 2731              	.LASF15:
 2732 02da 72656738 		.ascii	"reg8\000"
 2732      00
 2733              	.LASF1:
 2734 02df 756E7369 		.ascii	"unsigned char\000"
 2734      676E6564 
 2734      20636861 
 2734      7200
 2735              	.LASF2:
 2736 02ed 73686F72 		.ascii	"short int\000"
 2736      7420696E 
 2736      7400
 2737              	.LASF61:
 2738 02f7 454D4954 		.ascii	"EMITE_IntClock_Stop\000"
 2738      455F496E 
 2738      74436C6F 
 2738      636B5F53 
 2738      746F7000 
 2739              	.LASF65:
 2740 030b 454D4954 		.ascii	"EMITE_Init\000"
 2740      455F496E 
 2740      697400
 2741              	.LASF37:
 2742 0316 454D4954 		.ascii	"EMITE_SetRxAddress1\000"
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 81


 2742      455F5365 
 2742      74527841 
 2742      64647265 
 2742      73733100 
 2743              	.LASF39:
 2744 032a 454D4954 		.ascii	"EMITE_SetRxAddress2\000"
 2744      455F5365 
 2744      74527841 
 2744      64647265 
 2744      73733200 
 2745              	.LASF25:
 2746 033e 72784461 		.ascii	"rxData\000"
 2746      746100
 2747              	.LASF21:
 2748 0345 454D4954 		.ascii	"EMITE_WriteControlRegister\000"
 2748      455F5772 
 2748      69746543 
 2748      6F6E7472 
 2748      6F6C5265 
 2749              	.LASF40:
 2750 0360 454D4954 		.ascii	"EMITE_SetTxInterruptMode\000"
 2750      455F5365 
 2750      74547849 
 2750      6E746572 
 2750      72757074 
 2751              	.LASF14:
 2752 0379 63686172 		.ascii	"char\000"
 2752      00
 2753              	.LASF13:
 2754 037e 63686172 		.ascii	"char8\000"
 2754      3800
 2755              	.LASF44:
 2756 0384 454D4954 		.ascii	"EMITE_ReadTxStatus\000"
 2756      455F5265 
 2756      61645478 
 2756      53746174 
 2756      757300
 2757              	.LASF46:
 2758 0397 454D4954 		.ascii	"EMITE_PutString\000"
 2758      455F5075 
 2758      74537472 
 2758      696E6700 
 2759              	.LASF20:
 2760 03a7 656E6162 		.ascii	"enableInterrupts\000"
 2760      6C65496E 
 2760      74657272 
 2760      75707473 
 2760      00
 2761              	.LASF28:
 2762 03b8 73746174 		.ascii	"status\000"
 2762      757300
 2763              	.LASF62:
 2764 03bf 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2764      4320342E 
 2764      392E3320 
 2764      32303135 
 2764      30333033 
ARM GAS  C:\Users\HENRYA~1\AppData\Local\Temp\ccFFMLvl.s 			page 82


 2765 03f2 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2765      20726576 
 2765      6973696F 
 2765      6E203232 
 2765      31323230 
 2766 0425 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2766      66756E63 
 2766      74696F6E 
 2766      2D736563 
 2766      74696F6E 
 2767              	.LASF26:
 2768 044d 454D4954 		.ascii	"EMITE_ReadRxData\000"
 2768      455F5265 
 2768      61645278 
 2768      44617461 
 2768      00
 2769              	.LASF63:
 2770 045e 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\EMITE.c\000"
 2770      6E657261 
 2770      7465645F 
 2770      536F7572 
 2770      63655C50 
 2771              	.LASF18:
 2772 047f 454D4954 		.ascii	"EMITE_Start\000"
 2772      455F5374 
 2772      61727400 
 2773              	.LASF52:
 2774 048b 454D4954 		.ascii	"EMITE_GetTxBufferSize\000"
 2774      455F4765 
 2774      74547842 
 2774      75666665 
 2774      7253697A 
 2775              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
